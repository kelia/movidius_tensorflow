node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "global_step/read"
  input: "add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Assign"
  op: "Assign"
  input: "global_step"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "is_training"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4725
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 4725
          }
        }
        string_val: "../data/Training/Run_0001/images/frame_04058.png"
        string_val: "../data/Training/Run_0001/images/frame_00670.png"
        string_val: "../data/Training/Run_0001/images/frame_04071.png"
        string_val: "../data/Training/Run_0001/images/frame_04004.png"
        string_val: "../data/Training/Run_0001/images/frame_02895.png"
        string_val: "../data/Training/Run_0001/images/frame_03970.png"
        string_val: "../data/Training/Run_0001/images/frame_02194.png"
        string_val: "../data/Training/Run_0001/images/frame_01597.png"
        string_val: "../data/Training/Run_0001/images/frame_02692.png"
        string_val: "../data/Training/Run_0001/images/frame_00023.png"
        string_val: "../data/Training/Run_0001/images/frame_03768.png"
        string_val: "../data/Training/Run_0001/images/frame_01661.png"
        string_val: "../data/Training/Run_0001/images/frame_00613.png"
        string_val: "../data/Training/Run_0001/images/frame_03709.png"
        string_val: "../data/Training/Run_0001/images/frame_04540.png"
        string_val: "../data/Training/Run_0001/images/frame_02267.png"
        string_val: "../data/Training/Run_0001/images/frame_04376.png"
        string_val: "../data/Training/Run_0001/images/frame_03553.png"
        string_val: "../data/Training/Run_0001/images/frame_03130.png"
        string_val: "../data/Training/Run_0001/images/frame_02824.png"
        string_val: "../data/Training/Run_0001/images/frame_01006.png"
        string_val: "../data/Training/Run_0001/images/frame_04012.png"
        string_val: "../data/Training/Run_0001/images/frame_02460.png"
        string_val: "../data/Training/Run_0001/images/frame_02380.png"
        string_val: "../data/Training/Run_0001/images/frame_04039.png"
        string_val: "../data/Training/Run_0001/images/frame_04034.png"
        string_val: "../data/Training/Run_0001/images/frame_01796.png"
        string_val: "../data/Training/Run_0001/images/frame_02044.png"
        string_val: "../data/Training/Run_0001/images/frame_02443.png"
        string_val: "../data/Training/Run_0001/images/frame_01203.png"
        string_val: "../data/Training/Run_0001/images/frame_04667.png"
        string_val: "../data/Training/Run_0001/images/frame_00921.png"
        string_val: "../data/Training/Run_0001/images/frame_01379.png"
        string_val: "../data/Training/Run_0001/images/frame_03190.png"
        string_val: "../data/Training/Run_0001/images/frame_01647.png"
        string_val: "../data/Training/Run_0001/images/frame_01968.png"
        string_val: "../data/Training/Run_0001/images/frame_01108.png"
        string_val: "../data/Training/Run_0001/images/frame_01537.png"
        string_val: "../data/Training/Run_0001/images/frame_00404.png"
        string_val: "../data/Training/Run_0001/images/frame_01276.png"
        string_val: "../data/Training/Run_0001/images/frame_04275.png"
        string_val: "../data/Training/Run_0001/images/frame_01463.png"
        string_val: "../data/Training/Run_0001/images/frame_03208.png"
        string_val: "../data/Training/Run_0001/images/frame_04429.png"
        string_val: "../data/Training/Run_0001/images/frame_04293.png"
        string_val: "../data/Training/Run_0001/images/frame_02876.png"
        string_val: "../data/Training/Run_0001/images/frame_02783.png"
        string_val: "../data/Training/Run_0001/images/frame_00861.png"
        string_val: "../data/Training/Run_0001/images/frame_00274.png"
        string_val: "../data/Training/Run_0001/images/frame_01002.png"
        string_val: "../data/Training/Run_0001/images/frame_01836.png"
        string_val: "../data/Training/Run_0001/images/frame_00080.png"
        string_val: "../data/Training/Run_0001/images/frame_00554.png"
        string_val: "../data/Training/Run_0001/images/frame_02753.png"
        string_val: "../data/Training/Run_0001/images/frame_04544.png"
        string_val: "../data/Training/Run_0001/images/frame_01927.png"
        string_val: "../data/Training/Run_0001/images/frame_04683.png"
        string_val: "../data/Training/Run_0001/images/frame_00184.png"
        string_val: "../data/Training/Run_0001/images/frame_01550.png"
        string_val: "../data/Training/Run_0001/images/frame_01520.png"
        string_val: "../data/Training/Run_0001/images/frame_02333.png"
        string_val: "../data/Training/Run_0001/images/frame_03144.png"
        string_val: "../data/Training/Run_0001/images/frame_00668.png"
        string_val: "../data/Training/Run_0001/images/frame_01518.png"
        string_val: "../data/Training/Run_0001/images/frame_03296.png"
        string_val: "../data/Training/Run_0001/images/frame_03538.png"
        string_val: "../data/Training/Run_0001/images/frame_03575.png"
        string_val: "../data/Training/Run_0001/images/frame_01066.png"
        string_val: "../data/Training/Run_0001/images/frame_00467.png"
        string_val: "../data/Training/Run_0001/images/frame_02631.png"
        string_val: "../data/Training/Run_0001/images/frame_01677.png"
        string_val: "../data/Training/Run_0001/images/frame_04526.png"
        string_val: "../data/Training/Run_0001/images/frame_04404.png"
        string_val: "../data/Training/Run_0001/images/frame_03772.png"
        string_val: "../data/Training/Run_0001/images/frame_03390.png"
        string_val: "../data/Training/Run_0001/images/frame_01453.png"
        string_val: "../data/Training/Run_0001/images/frame_04386.png"
        string_val: "../data/Training/Run_0001/images/frame_03448.png"
        string_val: "../data/Training/Run_0001/images/frame_00489.png"
        string_val: "../data/Training/Run_0001/images/frame_03419.png"
        string_val: "../data/Training/Run_0001/images/frame_04377.png"
        string_val: "../data/Training/Run_0001/images/frame_02680.png"
        string_val: "../data/Training/Run_0001/images/frame_03224.png"
        string_val: "../data/Training/Run_0001/images/frame_03330.png"
        string_val: "../data/Training/Run_0001/images/frame_00700.png"
        string_val: "../data/Training/Run_0001/images/frame_00880.png"
        string_val: "../data/Training/Run_0001/images/frame_02133.png"
        string_val: "../data/Training/Run_0001/images/frame_03354.png"
        string_val: "../data/Training/Run_0001/images/frame_03491.png"
        string_val: "../data/Training/Run_0001/images/frame_03884.png"
        string_val: "../data/Training/Run_0001/images/frame_01992.png"
        string_val: "../data/Training/Run_0001/images/frame_01085.png"
        string_val: "../data/Training/Run_0001/images/frame_01708.png"
        string_val: "../data/Training/Run_0001/images/frame_00935.png"
        string_val: "../data/Training/Run_0001/images/frame_03986.png"
        string_val: "../data/Training/Run_0001/images/frame_01210.png"
        string_val: "../data/Training/Run_0001/images/frame_03486.png"
        string_val: "../data/Training/Run_0001/images/frame_02424.png"
        string_val: "../data/Training/Run_0001/images/frame_04191.png"
        string_val: "../data/Training/Run_0001/images/frame_00123.png"
        string_val: "../data/Training/Run_0001/images/frame_02255.png"
        string_val: "../data/Training/Run_0001/images/frame_03793.png"
        string_val: "../data/Training/Run_0001/images/frame_03151.png"
        string_val: "../data/Training/Run_0001/images/frame_03692.png"
        string_val: "../data/Training/Run_0001/images/frame_04356.png"
        string_val: "../data/Training/Run_0001/images/frame_01694.png"
        string_val: "../data/Training/Run_0001/images/frame_03177.png"
        string_val: "../data/Training/Run_0001/images/frame_01030.png"
        string_val: "../data/Training/Run_0001/images/frame_02416.png"
        string_val: "../data/Training/Run_0001/images/frame_01365.png"
        string_val: "../data/Training/Run_0001/images/frame_02469.png"
        string_val: "../data/Training/Run_0001/images/frame_01286.png"
        string_val: "../data/Training/Run_0001/images/frame_01767.png"
        string_val: "../data/Training/Run_0001/images/frame_00212.png"
        string_val: "../data/Training/Run_0001/images/frame_02264.png"
        string_val: "../data/Training/Run_0001/images/frame_04060.png"
        string_val: "../data/Training/Run_0001/images/frame_03461.png"
        string_val: "../data/Training/Run_0001/images/frame_03456.png"
        string_val: "../data/Training/Run_0001/images/frame_02862.png"
        string_val: "../data/Training/Run_0001/images/frame_02493.png"
        string_val: "../data/Training/Run_0001/images/frame_04101.png"
        string_val: "../data/Training/Run_0001/images/frame_04352.png"
        string_val: "../data/Training/Run_0001/images/frame_03145.png"
        string_val: "../data/Training/Run_0001/images/frame_00959.png"
        string_val: "../data/Training/Run_0001/images/frame_03659.png"
        string_val: "../data/Training/Run_0001/images/frame_01606.png"
        string_val: "../data/Training/Run_0001/images/frame_00894.png"
        string_val: "../data/Training/Run_0001/images/frame_00582.png"
        string_val: "../data/Training/Run_0001/images/frame_04635.png"
        string_val: "../data/Training/Run_0001/images/frame_03858.png"
        string_val: "../data/Training/Run_0001/images/frame_04131.png"
        string_val: "../data/Training/Run_0001/images/frame_04713.png"
        string_val: "../data/Training/Run_0001/images/frame_03916.png"
        string_val: "../data/Training/Run_0001/images/frame_03410.png"
        string_val: "../data/Training/Run_0001/images/frame_03714.png"
        string_val: "../data/Training/Run_0001/images/frame_02757.png"
        string_val: "../data/Training/Run_0001/images/frame_00026.png"
        string_val: "../data/Training/Run_0001/images/frame_03317.png"
        string_val: "../data/Training/Run_0001/images/frame_04543.png"
        string_val: "../data/Training/Run_0001/images/frame_03386.png"
        string_val: "../data/Training/Run_0001/images/frame_02841.png"
        string_val: "../data/Training/Run_0001/images/frame_01408.png"
        string_val: "../data/Training/Run_0001/images/frame_02694.png"
        string_val: "../data/Training/Run_0001/images/frame_01279.png"
        string_val: "../data/Training/Run_0001/images/frame_00809.png"
        string_val: "../data/Training/Run_0001/images/frame_03601.png"
        string_val: "../data/Training/Run_0001/images/frame_01805.png"
        string_val: "../data/Training/Run_0001/images/frame_00759.png"
        string_val: "../data/Training/Run_0001/images/frame_02322.png"
        string_val: "../data/Training/Run_0001/images/frame_01233.png"
        string_val: "../data/Training/Run_0001/images/frame_03082.png"
        string_val: "../data/Training/Run_0001/images/frame_02369.png"
        string_val: "../data/Training/Run_0001/images/frame_02808.png"
        string_val: "../data/Training/Run_0001/images/frame_01709.png"
        string_val: "../data/Training/Run_0001/images/frame_01564.png"
        string_val: "../data/Training/Run_0001/images/frame_02483.png"
        string_val: "../data/Training/Run_0001/images/frame_00924.png"
        string_val: "../data/Training/Run_0001/images/frame_03618.png"
        string_val: "../data/Training/Run_0001/images/frame_00203.png"
        string_val: "../data/Training/Run_0001/images/frame_00992.png"
        string_val: "../data/Training/Run_0001/images/frame_02605.png"
        string_val: "../data/Training/Run_0001/images/frame_03027.png"
        string_val: "../data/Training/Run_0001/images/frame_04530.png"
        string_val: "../data/Training/Run_0001/images/frame_00529.png"
        string_val: "../data/Training/Run_0001/images/frame_02869.png"
        string_val: "../data/Training/Run_0001/images/frame_00420.png"
        string_val: "../data/Training/Run_0001/images/frame_03935.png"
        string_val: "../data/Training/Run_0001/images/frame_00380.png"
        string_val: "../data/Training/Run_0001/images/frame_02014.png"
        string_val: "../data/Training/Run_0001/images/frame_00671.png"
        string_val: "../data/Training/Run_0001/images/frame_00943.png"
        string_val: "../data/Training/Run_0001/images/frame_01521.png"
        string_val: "../data/Training/Run_0001/images/frame_00588.png"
        string_val: "../data/Training/Run_0001/images/frame_04349.png"
        string_val: "../data/Training/Run_0001/images/frame_02921.png"
        string_val: "../data/Training/Run_0001/images/frame_02515.png"
        string_val: "../data/Training/Run_0001/images/frame_03684.png"
        string_val: "../data/Training/Run_0001/images/frame_03893.png"
        string_val: "../data/Training/Run_0001/images/frame_00832.png"
        string_val: "../data/Training/Run_0001/images/frame_00295.png"
        string_val: "../data/Training/Run_0001/images/frame_04679.png"
        string_val: "../data/Training/Run_0001/images/frame_01490.png"
        string_val: "../data/Training/Run_0001/images/frame_00308.png"
        string_val: "../data/Training/Run_0001/images/frame_02393.png"
        string_val: "../data/Training/Run_0001/images/frame_02568.png"
        string_val: "../data/Training/Run_0001/images/frame_02122.png"
        string_val: "../data/Training/Run_0001/images/frame_00526.png"
        string_val: "../data/Training/Run_0001/images/frame_03070.png"
        string_val: "../data/Training/Run_0001/images/frame_01189.png"
        string_val: "../data/Training/Run_0001/images/frame_00411.png"
        string_val: "../data/Training/Run_0001/images/frame_01284.png"
        string_val: "../data/Training/Run_0001/images/frame_02555.png"
        string_val: "../data/Training/Run_0001/images/frame_02254.png"
        string_val: "../data/Training/Run_0001/images/frame_00392.png"
        string_val: "../data/Training/Run_0001/images/frame_02528.png"
        string_val: "../data/Training/Run_0001/images/frame_01538.png"
        string_val: "../data/Training/Run_0001/images/frame_02301.png"
        string_val: "../data/Training/Run_0001/images/frame_02128.png"
        string_val: "../data/Training/Run_0001/images/frame_01936.png"
        string_val: "../data/Training/Run_0001/images/frame_02181.png"
        string_val: "../data/Training/Run_0001/images/frame_01256.png"
        string_val: "../data/Training/Run_0001/images/frame_04553.png"
        string_val: "../data/Training/Run_0001/images/frame_03878.png"
        string_val: "../data/Training/Run_0001/images/frame_01088.png"
        string_val: "../data/Training/Run_0001/images/frame_02457.png"
        string_val: "../data/Training/Run_0001/images/frame_04334.png"
        string_val: "../data/Training/Run_0001/images/frame_01316.png"
        string_val: "../data/Training/Run_0001/images/frame_02896.png"
        string_val: "../data/Training/Run_0001/images/frame_00298.png"
        string_val: "../data/Training/Run_0001/images/frame_04310.png"
        string_val: "../data/Training/Run_0001/images/frame_04057.png"
        string_val: "../data/Training/Run_0001/images/frame_01221.png"
        string_val: "../data/Training/Run_0001/images/frame_00156.png"
        string_val: "../data/Training/Run_0001/images/frame_01405.png"
        string_val: "../data/Training/Run_0001/images/frame_00814.png"
        string_val: "../data/Training/Run_0001/images/frame_02429.png"
        string_val: "../data/Training/Run_0001/images/frame_04609.png"
        string_val: "../data/Training/Run_0001/images/frame_03222.png"
        string_val: "../data/Training/Run_0001/images/frame_00250.png"
        string_val: "../data/Training/Run_0001/images/frame_00074.png"
        string_val: "../data/Training/Run_0001/images/frame_02937.png"
        string_val: "../data/Training/Run_0001/images/frame_04379.png"
        string_val: "../data/Training/Run_0001/images/frame_00436.png"
        string_val: "../data/Training/Run_0001/images/frame_02243.png"
        string_val: "../data/Training/Run_0001/images/frame_02059.png"
        string_val: "../data/Training/Run_0001/images/frame_03299.png"
        string_val: "../data/Training/Run_0001/images/frame_02982.png"
        string_val: "../data/Training/Run_0001/images/frame_03520.png"
        string_val: "../data/Training/Run_0001/images/frame_01037.png"
        string_val: "../data/Training/Run_0001/images/frame_03803.png"
        string_val: "../data/Training/Run_0001/images/frame_03861.png"
        string_val: "../data/Training/Run_0001/images/frame_02679.png"
        string_val: "../data/Training/Run_0001/images/frame_02068.png"
        string_val: "../data/Training/Run_0001/images/frame_00356.png"
        string_val: "../data/Training/Run_0001/images/frame_00725.png"
        string_val: "../data/Training/Run_0001/images/frame_04339.png"
        string_val: "../data/Training/Run_0001/images/frame_03436.png"
        string_val: "../data/Training/Run_0001/images/frame_02558.png"
        string_val: "../data/Training/Run_0001/images/frame_02196.png"
        string_val: "../data/Training/Run_0001/images/frame_00472.png"
        string_val: "../data/Training/Run_0001/images/frame_02146.png"
        string_val: "../data/Training/Run_0001/images/frame_01896.png"
        string_val: "../data/Training/Run_0001/images/frame_04138.png"
        string_val: "../data/Training/Run_0001/images/frame_02164.png"
        string_val: "../data/Training/Run_0001/images/frame_04415.png"
        string_val: "../data/Training/Run_0001/images/frame_03895.png"
        string_val: "../data/Training/Run_0001/images/frame_00354.png"
        string_val: "../data/Training/Run_0001/images/frame_03695.png"
        string_val: "../data/Training/Run_0001/images/frame_00260.png"
        string_val: "../data/Training/Run_0001/images/frame_02526.png"
        string_val: "../data/Training/Run_0001/images/frame_02274.png"
        string_val: "../data/Training/Run_0001/images/frame_00609.png"
        string_val: "../data/Training/Run_0001/images/frame_02988.png"
        string_val: "../data/Training/Run_0001/images/frame_00815.png"
        string_val: "../data/Training/Run_0001/images/frame_03394.png"
        string_val: "../data/Training/Run_0001/images/frame_04272.png"
        string_val: "../data/Training/Run_0001/images/frame_01151.png"
        string_val: "../data/Training/Run_0001/images/frame_01985.png"
        string_val: "../data/Training/Run_0001/images/frame_02446.png"
        string_val: "../data/Training/Run_0001/images/frame_04412.png"
        string_val: "../data/Training/Run_0001/images/frame_00973.png"
        string_val: "../data/Training/Run_0001/images/frame_04515.png"
        string_val: "../data/Training/Run_0001/images/frame_00580.png"
        string_val: "../data/Training/Run_0001/images/frame_01886.png"
        string_val: "../data/Training/Run_0001/images/frame_01200.png"
        string_val: "../data/Training/Run_0001/images/frame_00355.png"
        string_val: "../data/Training/Run_0001/images/frame_01347.png"
        string_val: "../data/Training/Run_0001/images/frame_01007.png"
        string_val: "../data/Training/Run_0001/images/frame_04567.png"
        string_val: "../data/Training/Run_0001/images/frame_00601.png"
        string_val: "../data/Training/Run_0001/images/frame_03476.png"
        string_val: "../data/Training/Run_0001/images/frame_00699.png"
        string_val: "../data/Training/Run_0001/images/frame_04661.png"
        string_val: "../data/Training/Run_0001/images/frame_01809.png"
        string_val: "../data/Training/Run_0001/images/frame_00798.png"
        string_val: "../data/Training/Run_0001/images/frame_03115.png"
        string_val: "../data/Training/Run_0001/images/frame_01766.png"
        string_val: "../data/Training/Run_0001/images/frame_03326.png"
        string_val: "../data/Training/Run_0001/images/frame_04106.png"
        string_val: "../data/Training/Run_0001/images/frame_01494.png"
        string_val: "../data/Training/Run_0001/images/frame_01358.png"
        string_val: "../data/Training/Run_0001/images/frame_01654.png"
        string_val: "../data/Training/Run_0001/images/frame_02073.png"
        string_val: "../data/Training/Run_0001/images/frame_01950.png"
        string_val: "../data/Training/Run_0001/images/frame_03069.png"
        string_val: "../data/Training/Run_0001/images/frame_02580.png"
        string_val: "../data/Training/Run_0001/images/frame_00569.png"
        string_val: "../data/Training/Run_0001/images/frame_01527.png"
        string_val: "../data/Training/Run_0001/images/frame_00979.png"
        string_val: "../data/Training/Run_0001/images/frame_01475.png"
        string_val: "../data/Training/Run_0001/images/frame_02784.png"
        string_val: "../data/Training/Run_0001/images/frame_03716.png"
        string_val: "../data/Training/Run_0001/images/frame_03504.png"
        string_val: "../data/Training/Run_0001/images/frame_03900.png"
        string_val: "../data/Training/Run_0001/images/frame_02233.png"
        string_val: "../data/Training/Run_0001/images/frame_00202.png"
        string_val: "../data/Training/Run_0001/images/frame_01338.png"
        string_val: "../data/Training/Run_0001/images/frame_01517.png"
        string_val: "../data/Training/Run_0001/images/frame_01961.png"
        string_val: "../data/Training/Run_0001/images/frame_03464.png"
        string_val: "../data/Training/Run_0001/images/frame_04436.png"
        string_val: "../data/Training/Run_0001/images/frame_03227.png"
        string_val: "../data/Training/Run_0001/images/frame_02067.png"
        string_val: "../data/Training/Run_0001/images/frame_02452.png"
        string_val: "../data/Training/Run_0001/images/frame_01402.png"
        string_val: "../data/Training/Run_0001/images/frame_01922.png"
        string_val: "../data/Training/Run_0001/images/frame_01214.png"
        string_val: "../data/Training/Run_0001/images/frame_00486.png"
        string_val: "../data/Training/Run_0001/images/frame_04699.png"
        string_val: "../data/Training/Run_0001/images/frame_02428.png"
        string_val: "../data/Training/Run_0001/images/frame_03818.png"
        string_val: "../data/Training/Run_0001/images/frame_01578.png"
        string_val: "../data/Training/Run_0001/images/frame_00413.png"
        string_val: "../data/Training/Run_0001/images/frame_00922.png"
        string_val: "../data/Training/Run_0001/images/frame_01737.png"
        string_val: "../data/Training/Run_0001/images/frame_03746.png"
        string_val: "../data/Training/Run_0001/images/frame_01980.png"
        string_val: "../data/Training/Run_0001/images/frame_01713.png"
        string_val: "../data/Training/Run_0001/images/frame_03959.png"
        string_val: "../data/Training/Run_0001/images/frame_00314.png"
        string_val: "../data/Training/Run_0001/images/frame_04516.png"
        string_val: "../data/Training/Run_0001/images/frame_00765.png"
        string_val: "../data/Training/Run_0001/images/frame_04040.png"
        string_val: "../data/Training/Run_0001/images/frame_01487.png"
        string_val: "../data/Training/Run_0001/images/frame_03428.png"
        string_val: "../data/Training/Run_0001/images/frame_01046.png"
        string_val: "../data/Training/Run_0001/images/frame_03978.png"
        string_val: "../data/Training/Run_0001/images/frame_03088.png"
        string_val: "../data/Training/Run_0001/images/frame_00397.png"
        string_val: "../data/Training/Run_0001/images/frame_04723.png"
        string_val: "../data/Training/Run_0001/images/frame_01472.png"
        string_val: "../data/Training/Run_0001/images/frame_00201.png"
        string_val: "../data/Training/Run_0001/images/frame_04074.png"
        string_val: "../data/Training/Run_0001/images/frame_03964.png"
        string_val: "../data/Training/Run_0001/images/frame_00793.png"
        string_val: "../data/Training/Run_0001/images/frame_01775.png"
        string_val: "../data/Training/Run_0001/images/frame_03648.png"
        string_val: "../data/Training/Run_0001/images/frame_01012.png"
        string_val: "../data/Training/Run_0001/images/frame_02083.png"
        string_val: "../data/Training/Run_0001/images/frame_02703.png"
        string_val: "../data/Training/Run_0001/images/frame_03192.png"
        string_val: "../data/Training/Run_0001/images/frame_01176.png"
        string_val: "../data/Training/Run_0001/images/frame_00015.png"
        string_val: "../data/Training/Run_0001/images/frame_01697.png"
        string_val: "../data/Training/Run_0001/images/frame_03248.png"
        string_val: "../data/Training/Run_0001/images/frame_02063.png"
        string_val: "../data/Training/Run_0001/images/frame_02399.png"
        string_val: "../data/Training/Run_0001/images/frame_00789.png"
        string_val: "../data/Training/Run_0001/images/frame_04249.png"
        string_val: "../data/Training/Run_0001/images/frame_01998.png"
        string_val: "../data/Training/Run_0001/images/frame_02507.png"
        string_val: "../data/Training/Run_0001/images/frame_00741.png"
        string_val: "../data/Training/Run_0001/images/frame_01272.png"
        string_val: "../data/Training/Run_0001/images/frame_04168.png"
        string_val: "../data/Training/Run_0001/images/frame_03093.png"
        string_val: "../data/Training/Run_0001/images/frame_02746.png"
        string_val: "../data/Training/Run_0001/images/frame_03527.png"
        string_val: "../data/Training/Run_0001/images/frame_00534.png"
        string_val: "../data/Training/Run_0001/images/frame_03550.png"
        string_val: "../data/Training/Run_0001/images/frame_00371.png"
        string_val: "../data/Training/Run_0001/images/frame_04519.png"
        string_val: "../data/Training/Run_0001/images/frame_00216.png"
        string_val: "../data/Training/Run_0001/images/frame_01053.png"
        string_val: "../data/Training/Run_0001/images/frame_01328.png"
        string_val: "../data/Training/Run_0001/images/frame_02681.png"
        string_val: "../data/Training/Run_0001/images/frame_01657.png"
        string_val: "../data/Training/Run_0001/images/frame_03017.png"
        string_val: "../data/Training/Run_0001/images/frame_02471.png"
        string_val: "../data/Training/Run_0001/images/frame_02990.png"
        string_val: "../data/Training/Run_0001/images/frame_01156.png"
        string_val: "../data/Training/Run_0001/images/frame_00928.png"
        string_val: "../data/Training/Run_0001/images/frame_00933.png"
        string_val: "../data/Training/Run_0001/images/frame_01544.png"
        string_val: "../data/Training/Run_0001/images/frame_04277.png"
        string_val: "../data/Training/Run_0001/images/frame_04705.png"
        string_val: "../data/Training/Run_0001/images/frame_02423.png"
        string_val: "../data/Training/Run_0001/images/frame_00179.png"
        string_val: "../data/Training/Run_0001/images/frame_02734.png"
        string_val: "../data/Training/Run_0001/images/frame_00459.png"
        string_val: "../data/Training/Run_0001/images/frame_00563.png"
        string_val: "../data/Training/Run_0001/images/frame_02898.png"
        string_val: "../data/Training/Run_0001/images/frame_04174.png"
        string_val: "../data/Training/Run_0001/images/frame_04038.png"
        string_val: "../data/Training/Run_0001/images/frame_02538.png"
        string_val: "../data/Training/Run_0001/images/frame_00077.png"
        string_val: "../data/Training/Run_0001/images/frame_01178.png"
        string_val: "../data/Training/Run_0001/images/frame_04235.png"
        string_val: "../data/Training/Run_0001/images/frame_04401.png"
        string_val: "../data/Training/Run_0001/images/frame_04456.png"
        string_val: "../data/Training/Run_0001/images/frame_00906.png"
        string_val: "../data/Training/Run_0001/images/frame_02886.png"
        string_val: "../data/Training/Run_0001/images/frame_01729.png"
        string_val: "../data/Training/Run_0001/images/frame_03418.png"
        string_val: "../data/Training/Run_0001/images/frame_03686.png"
        string_val: "../data/Training/Run_0001/images/frame_01248.png"
        string_val: "../data/Training/Run_0001/images/frame_00860.png"
        string_val: "../data/Training/Run_0001/images/frame_04048.png"
        string_val: "../data/Training/Run_0001/images/frame_02630.png"
        string_val: "../data/Training/Run_0001/images/frame_03245.png"
        string_val: "../data/Training/Run_0001/images/frame_02458.png"
        string_val: "../data/Training/Run_0001/images/frame_02028.png"
        string_val: "../data/Training/Run_0001/images/frame_02923.png"
        string_val: "../data/Training/Run_0001/images/frame_03644.png"
        string_val: "../data/Training/Run_0001/images/frame_04675.png"
        string_val: "../data/Training/Run_0001/images/frame_03269.png"
        string_val: "../data/Training/Run_0001/images/frame_04611.png"
        string_val: "../data/Training/Run_0001/images/frame_04157.png"
        string_val: "../data/Training/Run_0001/images/frame_00757.png"
        string_val: "../data/Training/Run_0001/images/frame_01413.png"
        string_val: "../data/Training/Run_0001/images/frame_02437.png"
        string_val: "../data/Training/Run_0001/images/frame_03275.png"
        string_val: "../data/Training/Run_0001/images/frame_04325.png"
        string_val: "../data/Training/Run_0001/images/frame_01744.png"
        string_val: "../data/Training/Run_0001/images/frame_04190.png"
        string_val: "../data/Training/Run_0001/images/frame_00445.png"
        string_val: "../data/Training/Run_0001/images/frame_00719.png"
        string_val: "../data/Training/Run_0001/images/frame_04636.png"
        string_val: "../data/Training/Run_0001/images/frame_00175.png"
        string_val: "../data/Training/Run_0001/images/frame_04067.png"
        string_val: "../data/Training/Run_0001/images/frame_04344.png"
        string_val: "../data/Training/Run_0001/images/frame_00360.png"
        string_val: "../data/Training/Run_0001/images/frame_01660.png"
        string_val: "../data/Training/Run_0001/images/frame_00521.png"
        string_val: "../data/Training/Run_0001/images/frame_02381.png"
        string_val: "../data/Training/Run_0001/images/frame_00451.png"
        string_val: "../data/Training/Run_0001/images/frame_01070.png"
        string_val: "../data/Training/Run_0001/images/frame_02539.png"
        string_val: "../data/Training/Run_0001/images/frame_03722.png"
        string_val: "../data/Training/Run_0001/images/frame_00362.png"
        string_val: "../data/Training/Run_0001/images/frame_03019.png"
        string_val: "../data/Training/Run_0001/images/frame_02597.png"
        string_val: "../data/Training/Run_0001/images/frame_02807.png"
        string_val: "../data/Training/Run_0001/images/frame_02600.png"
        string_val: "../data/Training/Run_0001/images/frame_01240.png"
        string_val: "../data/Training/Run_0001/images/frame_03465.png"
        string_val: "../data/Training/Run_0001/images/frame_01383.png"
        string_val: "../data/Training/Run_0001/images/frame_01722.png"
        string_val: "../data/Training/Run_0001/images/frame_01420.png"
        string_val: "../data/Training/Run_0001/images/frame_01587.png"
        string_val: "../data/Training/Run_0001/images/frame_01895.png"
        string_val: "../data/Training/Run_0001/images/frame_02546.png"
        string_val: "../data/Training/Run_0001/images/frame_03226.png"
        string_val: "../data/Training/Run_0001/images/frame_03111.png"
        string_val: "../data/Training/Run_0001/images/frame_03633.png"
        string_val: "../data/Training/Run_0001/images/frame_03931.png"
        string_val: "../data/Training/Run_0001/images/frame_01893.png"
        string_val: "../data/Training/Run_0001/images/frame_01921.png"
        string_val: "../data/Training/Run_0001/images/frame_02197.png"
        string_val: "../data/Training/Run_0001/images/frame_00133.png"
        string_val: "../data/Training/Run_0001/images/frame_03442.png"
        string_val: "../data/Training/Run_0001/images/frame_02415.png"
        string_val: "../data/Training/Run_0001/images/frame_03393.png"
        string_val: "../data/Training/Run_0001/images/frame_04561.png"
        string_val: "../data/Training/Run_0001/images/frame_02997.png"
        string_val: "../data/Training/Run_0001/images/frame_04361.png"
        string_val: "../data/Training/Run_0001/images/frame_00485.png"
        string_val: "../data/Training/Run_0001/images/frame_00989.png"
        string_val: "../data/Training/Run_0001/images/frame_03452.png"
        string_val: "../data/Training/Run_0001/images/frame_04330.png"
        string_val: "../data/Training/Run_0001/images/frame_00669.png"
        string_val: "../data/Training/Run_0001/images/frame_02368.png"
        string_val: "../data/Training/Run_0001/images/frame_02553.png"
        string_val: "../data/Training/Run_0001/images/frame_03013.png"
        string_val: "../data/Training/Run_0001/images/frame_00422.png"
        string_val: "../data/Training/Run_0001/images/frame_02730.png"
        string_val: "../data/Training/Run_0001/images/frame_01302.png"
        string_val: "../data/Training/Run_0001/images/frame_03193.png"
        string_val: "../data/Training/Run_0001/images/frame_00790.png"
        string_val: "../data/Training/Run_0001/images/frame_03753.png"
        string_val: "../data/Training/Run_0001/images/frame_03540.png"
        string_val: "../data/Training/Run_0001/images/frame_04492.png"
        string_val: "../data/Training/Run_0001/images/frame_02187.png"
        string_val: "../data/Training/Run_0001/images/frame_04237.png"
        string_val: "../data/Training/Run_0001/images/frame_01926.png"
        string_val: "../data/Training/Run_0001/images/frame_01471.png"
        string_val: "../data/Training/Run_0001/images/frame_01342.png"
        string_val: "../data/Training/Run_0001/images/frame_02775.png"
        string_val: "../data/Training/Run_0001/images/frame_03897.png"
        string_val: "../data/Training/Run_0001/images/frame_02566.png"
        string_val: "../data/Training/Run_0001/images/frame_03806.png"
        string_val: "../data/Training/Run_0001/images/frame_01894.png"
        string_val: "../data/Training/Run_0001/images/frame_01191.png"
        string_val: "../data/Training/Run_0001/images/frame_04593.png"
        string_val: "../data/Training/Run_0001/images/frame_02842.png"
        string_val: "../data/Training/Run_0001/images/frame_02854.png"
        string_val: "../data/Training/Run_0001/images/frame_00766.png"
        string_val: "../data/Training/Run_0001/images/frame_01983.png"
        string_val: "../data/Training/Run_0001/images/frame_03967.png"
        string_val: "../data/Training/Run_0001/images/frame_03006.png"
        string_val: "../data/Training/Run_0001/images/frame_03077.png"
        string_val: "../data/Training/Run_0001/images/frame_04551.png"
        string_val: "../data/Training/Run_0001/images/frame_02752.png"
        string_val: "../data/Training/Run_0001/images/frame_02652.png"
        string_val: "../data/Training/Run_0001/images/frame_01692.png"
        string_val: "../data/Training/Run_0001/images/frame_00622.png"
        string_val: "../data/Training/Run_0001/images/frame_00672.png"
        string_val: "../data/Training/Run_0001/images/frame_01398.png"
        string_val: "../data/Training/Run_0001/images/frame_00873.png"
        string_val: "../data/Training/Run_0001/images/frame_02124.png"
        string_val: "../data/Training/Run_0001/images/frame_03402.png"
        string_val: "../data/Training/Run_0001/images/frame_04420.png"
        string_val: "../data/Training/Run_0001/images/frame_03483.png"
        string_val: "../data/Training/Run_0001/images/frame_01169.png"
        string_val: "../data/Training/Run_0001/images/frame_00513.png"
        string_val: "../data/Training/Run_0001/images/frame_04056.png"
        string_val: "../data/Training/Run_0001/images/frame_04396.png"
        string_val: "../data/Training/Run_0001/images/frame_01350.png"
        string_val: "../data/Training/Run_0001/images/frame_00870.png"
        string_val: "../data/Training/Run_0001/images/frame_00441.png"
        string_val: "../data/Training/Run_0001/images/frame_00127.png"
        string_val: "../data/Training/Run_0001/images/frame_02071.png"
        string_val: "../data/Training/Run_0001/images/frame_02722.png"
        string_val: "../data/Training/Run_0001/images/frame_00386.png"
        string_val: "../data/Training/Run_0001/images/frame_00275.png"
        string_val: "../data/Training/Run_0001/images/frame_01361.png"
        string_val: "../data/Training/Run_0001/images/frame_00642.png"
        string_val: "../data/Training/Run_0001/images/frame_01909.png"
        string_val: "../data/Training/Run_0001/images/frame_00137.png"
        string_val: "../data/Training/Run_0001/images/frame_00357.png"
        string_val: "../data/Training/Run_0001/images/frame_03790.png"
        string_val: "../data/Training/Run_0001/images/frame_01310.png"
        string_val: "../data/Training/Run_0001/images/frame_01551.png"
        string_val: "../data/Training/Run_0001/images/frame_03647.png"
        string_val: "../data/Training/Run_0001/images/frame_01760.png"
        string_val: "../data/Training/Run_0001/images/frame_04424.png"
        string_val: "../data/Training/Run_0001/images/frame_02852.png"
        string_val: "../data/Training/Run_0001/images/frame_03610.png"
        string_val: "../data/Training/Run_0001/images/frame_02640.png"
        string_val: "../data/Training/Run_0001/images/frame_04545.png"
        string_val: "../data/Training/Run_0001/images/frame_00512.png"
        string_val: "../data/Training/Run_0001/images/frame_04020.png"
        string_val: "../data/Training/Run_0001/images/frame_03067.png"
        string_val: "../data/Training/Run_0001/images/frame_00750.png"
        string_val: "../data/Training/Run_0001/images/frame_01707.png"
        string_val: "../data/Training/Run_0001/images/frame_04073.png"
        string_val: "../data/Training/Run_0001/images/frame_00779.png"
        string_val: "../data/Training/Run_0001/images/frame_00153.png"
        string_val: "../data/Training/Run_0001/images/frame_00410.png"
        string_val: "../data/Training/Run_0001/images/frame_00925.png"
        string_val: "../data/Training/Run_0001/images/frame_00632.png"
        string_val: "../data/Training/Run_0001/images/frame_00192.png"
        string_val: "../data/Training/Run_0001/images/frame_02861.png"
        string_val: "../data/Training/Run_0001/images/frame_01426.png"
        string_val: "../data/Training/Run_0001/images/frame_04322.png"
        string_val: "../data/Training/Run_0001/images/frame_02477.png"
        string_val: "../data/Training/Run_0001/images/frame_04428.png"
        string_val: "../data/Training/Run_0001/images/frame_03446.png"
        string_val: "../data/Training/Run_0001/images/frame_00655.png"
        string_val: "../data/Training/Run_0001/images/frame_00891.png"
        string_val: "../data/Training/Run_0001/images/frame_00010.png"
        string_val: "../data/Training/Run_0001/images/frame_01329.png"
        string_val: "../data/Training/Run_0001/images/frame_00288.png"
        string_val: "../data/Training/Run_0001/images/frame_02210.png"
        string_val: "../data/Training/Run_0001/images/frame_00301.png"
        string_val: "../data/Training/Run_0001/images/frame_03662.png"
        string_val: "../data/Training/Run_0001/images/frame_02855.png"
        string_val: "../data/Training/Run_0001/images/frame_00211.png"
        string_val: "../data/Training/Run_0001/images/frame_02544.png"
        string_val: "../data/Training/Run_0001/images/frame_00555.png"
        string_val: "../data/Training/Run_0001/images/frame_00157.png"
        string_val: "../data/Training/Run_0001/images/frame_01636.png"
        string_val: "../data/Training/Run_0001/images/frame_00025.png"
        string_val: "../data/Training/Run_0001/images/frame_03315.png"
        string_val: "../data/Training/Run_0001/images/frame_02910.png"
        string_val: "../data/Training/Run_0001/images/frame_03694.png"
        string_val: "../data/Training/Run_0001/images/frame_04626.png"
        string_val: "../data/Training/Run_0001/images/frame_01252.png"
        string_val: "../data/Training/Run_0001/images/frame_00488.png"
        string_val: "../data/Training/Run_0001/images/frame_04146.png"
        string_val: "../data/Training/Run_0001/images/frame_03899.png"
        string_val: "../data/Training/Run_0001/images/frame_00095.png"
        string_val: "../data/Training/Run_0001/images/frame_03953.png"
        string_val: "../data/Training/Run_0001/images/frame_01993.png"
        string_val: "../data/Training/Run_0001/images/frame_03745.png"
        string_val: "../data/Training/Run_0001/images/frame_00952.png"
        string_val: "../data/Training/Run_0001/images/frame_03972.png"
        string_val: "../data/Training/Run_0001/images/frame_04117.png"
        string_val: "../data/Training/Run_0001/images/frame_03334.png"
        string_val: "../data/Training/Run_0001/images/frame_00499.png"
        string_val: "../data/Training/Run_0001/images/frame_03938.png"
        string_val: "../data/Training/Run_0001/images/frame_04614.png"
        string_val: "../data/Training/Run_0001/images/frame_01888.png"
        string_val: "../data/Training/Run_0001/images/frame_00697.png"
        string_val: "../data/Training/Run_0001/images/frame_04608.png"
        string_val: "../data/Training/Run_0001/images/frame_00532.png"
        string_val: "../data/Training/Run_0001/images/frame_01680.png"
        string_val: "../data/Training/Run_0001/images/frame_03707.png"
        string_val: "../data/Training/Run_0001/images/frame_00875.png"
        string_val: "../data/Training/Run_0001/images/frame_00673.png"
        string_val: "../data/Training/Run_0001/images/frame_02991.png"
        string_val: "../data/Training/Run_0001/images/frame_03050.png"
        string_val: "../data/Training/Run_0001/images/frame_00777.png"
        string_val: "../data/Training/Run_0001/images/frame_00165.png"
        string_val: "../data/Training/Run_0001/images/frame_02736.png"
        string_val: "../data/Training/Run_0001/images/frame_00963.png"
        string_val: "../data/Training/Run_0001/images/frame_01274.png"
        string_val: "../data/Training/Run_0001/images/frame_01949.png"
        string_val: "../data/Training/Run_0001/images/frame_03679.png"
        string_val: "../data/Training/Run_0001/images/frame_03194.png"
        string_val: "../data/Training/Run_0001/images/frame_00525.png"
        string_val: "../data/Training/Run_0001/images/frame_03497.png"
        string_val: "../data/Training/Run_0001/images/frame_03062.png"
        string_val: "../data/Training/Run_0001/images/frame_04696.png"
        string_val: "../data/Training/Run_0001/images/frame_03176.png"
        string_val: "../data/Training/Run_0001/images/frame_04370.png"
        string_val: "../data/Training/Run_0001/images/frame_00147.png"
        string_val: "../data/Training/Run_0001/images/frame_03581.png"
        string_val: "../data/Training/Run_0001/images/frame_00271.png"
        string_val: "../data/Training/Run_0001/images/frame_02593.png"
        string_val: "../data/Training/Run_0001/images/frame_00453.png"
        string_val: "../data/Training/Run_0001/images/frame_03588.png"
        string_val: "../data/Training/Run_0001/images/frame_01780.png"
        string_val: "../data/Training/Run_0001/images/frame_04219.png"
        string_val: "../data/Training/Run_0001/images/frame_00331.png"
        string_val: "../data/Training/Run_0001/images/frame_03881.png"
        string_val: "../data/Training/Run_0001/images/frame_00786.png"
        string_val: "../data/Training/Run_0001/images/frame_01739.png"
        string_val: "../data/Training/Run_0001/images/frame_03656.png"
        string_val: "../data/Training/Run_0001/images/frame_00907.png"
        string_val: "../data/Training/Run_0001/images/frame_00345.png"
        string_val: "../data/Training/Run_0001/images/frame_01832.png"
        string_val: "../data/Training/Run_0001/images/frame_04508.png"
        string_val: "../data/Training/Run_0001/images/frame_01360.png"
        string_val: "../data/Training/Run_0001/images/frame_01462.png"
        string_val: "../data/Training/Run_0001/images/frame_04678.png"
        string_val: "../data/Training/Run_0001/images/frame_04244.png"
        string_val: "../data/Training/Run_0001/images/frame_03726.png"
        string_val: "../data/Training/Run_0001/images/frame_03268.png"
        string_val: "../data/Training/Run_0001/images/frame_00902.png"
        string_val: "../data/Training/Run_0001/images/frame_00247.png"
        string_val: "../data/Training/Run_0001/images/frame_00395.png"
        string_val: "../data/Training/Run_0001/images/frame_02625.png"
        string_val: "../data/Training/Run_0001/images/frame_03104.png"
        string_val: "../data/Training/Run_0001/images/frame_03969.png"
        string_val: "../data/Training/Run_0001/images/frame_02710.png"
        string_val: "../data/Training/Run_0001/images/frame_02288.png"
        string_val: "../data/Training/Run_0001/images/frame_00586.png"
        string_val: "../data/Training/Run_0001/images/frame_00634.png"
        string_val: "../data/Training/Run_0001/images/frame_03361.png"
        string_val: "../data/Training/Run_0001/images/frame_00723.png"
        string_val: "../data/Training/Run_0001/images/frame_01052.png"
        string_val: "../data/Training/Run_0001/images/frame_03700.png"
        string_val: "../data/Training/Run_0001/images/frame_03381.png"
        string_val: "../data/Training/Run_0001/images/frame_00823.png"
        string_val: "../data/Training/Run_0001/images/frame_01561.png"
        string_val: "../data/Training/Run_0001/images/frame_02349.png"
        string_val: "../data/Training/Run_0001/images/frame_00043.png"
        string_val: "../data/Training/Run_0001/images/frame_02309.png"
        string_val: "../data/Training/Run_0001/images/frame_01970.png"
        string_val: "../data/Training/Run_0001/images/frame_02809.png"
        string_val: "../data/Training/Run_0001/images/frame_02502.png"
        string_val: "../data/Training/Run_0001/images/frame_00072.png"
        string_val: "../data/Training/Run_0001/images/frame_00478.png"
        string_val: "../data/Training/Run_0001/images/frame_02510.png"
        string_val: "../data/Training/Run_0001/images/frame_00877.png"
        string_val: "../data/Training/Run_0001/images/frame_02253.png"
        string_val: "../data/Training/Run_0001/images/frame_01736.png"
        string_val: "../data/Training/Run_0001/images/frame_03630.png"
        string_val: "../data/Training/Run_0001/images/frame_01984.png"
        string_val: "../data/Training/Run_0001/images/frame_03903.png"
        string_val: "../data/Training/Run_0001/images/frame_01740.png"
        string_val: "../data/Training/Run_0001/images/frame_00812.png"
        string_val: "../data/Training/Run_0001/images/frame_04563.png"
        string_val: "../data/Training/Run_0001/images/frame_04182.png"
        string_val: "../data/Training/Run_0001/images/frame_00249.png"
        string_val: "../data/Training/Run_0001/images/frame_01611.png"
        string_val: "../data/Training/Run_0001/images/frame_03433.png"
        string_val: "../data/Training/Run_0001/images/frame_04037.png"
        string_val: "../data/Training/Run_0001/images/frame_02250.png"
        string_val: "../data/Training/Run_0001/images/frame_01417.png"
        string_val: "../data/Training/Run_0001/images/frame_02977.png"
        string_val: "../data/Training/Run_0001/images/frame_00768.png"
        string_val: "../data/Training/Run_0001/images/frame_02496.png"
        string_val: "../data/Training/Run_0001/images/frame_01774.png"
        string_val: "../data/Training/Run_0001/images/frame_03568.png"
        string_val: "../data/Training/Run_0001/images/frame_00791.png"
        string_val: "../data/Training/Run_0001/images/frame_04247.png"
        string_val: "../data/Training/Run_0001/images/frame_01532.png"
        string_val: "../data/Training/Run_0001/images/frame_04462.png"
        string_val: "../data/Training/Run_0001/images/frame_04027.png"
        string_val: "../data/Training/Run_0001/images/frame_00806.png"
        string_val: "../data/Training/Run_0001/images/frame_03907.png"
        string_val: "../data/Training/Run_0001/images/frame_00328.png"
        string_val: "../data/Training/Run_0001/images/frame_01215.png"
        string_val: "../data/Training/Run_0001/images/frame_03781.png"
        string_val: "../data/Training/Run_0001/images/frame_04528.png"
        string_val: "../data/Training/Run_0001/images/frame_00258.png"
        string_val: "../data/Training/Run_0001/images/frame_02519.png"
        string_val: "../data/Training/Run_0001/images/frame_04668.png"
        string_val: "../data/Training/Run_0001/images/frame_00846.png"
        string_val: "../data/Training/Run_0001/images/frame_04416.png"
        string_val: "../data/Training/Run_0001/images/frame_02856.png"
        string_val: "../data/Training/Run_0001/images/frame_01545.png"
        string_val: "../data/Training/Run_0001/images/frame_00901.png"
        string_val: "../data/Training/Run_0001/images/frame_03273.png"
        string_val: "../data/Training/Run_0001/images/frame_03518.png"
        string_val: "../data/Training/Run_0001/images/frame_01542.png"
        string_val: "../data/Training/Run_0001/images/frame_00967.png"
        string_val: "../data/Training/Run_0001/images/frame_03743.png"
        string_val: "../data/Training/Run_0001/images/frame_01989.png"
        string_val: "../data/Training/Run_0001/images/frame_03814.png"
        string_val: "../data/Training/Run_0001/images/frame_02087.png"
        string_val: "../data/Training/Run_0001/images/frame_03276.png"
        string_val: "../data/Training/Run_0001/images/frame_03412.png"
        string_val: "../data/Training/Run_0001/images/frame_04486.png"
        string_val: "../data/Training/Run_0001/images/frame_00004.png"
        string_val: "../data/Training/Run_0001/images/frame_02780.png"
        string_val: "../data/Training/Run_0001/images/frame_02097.png"
        string_val: "../data/Training/Run_0001/images/frame_00263.png"
        string_val: "../data/Training/Run_0001/images/frame_02060.png"
        string_val: "../data/Training/Run_0001/images/frame_00507.png"
        string_val: "../data/Training/Run_0001/images/frame_03094.png"
        string_val: "../data/Training/Run_0001/images/frame_01287.png"
        string_val: "../data/Training/Run_0001/images/frame_03775.png"
        string_val: "../data/Training/Run_0001/images/frame_03482.png"
        string_val: "../data/Training/Run_0001/images/frame_00218.png"
        string_val: "../data/Training/Run_0001/images/frame_02738.png"
        string_val: "../data/Training/Run_0001/images/frame_04450.png"
        string_val: "../data/Training/Run_0001/images/frame_03319.png"
        string_val: "../data/Training/Run_0001/images/frame_02721.png"
        string_val: "../data/Training/Run_0001/images/frame_01640.png"
        string_val: "../data/Training/Run_0001/images/frame_02880.png"
        string_val: "../data/Training/Run_0001/images/frame_04002.png"
        string_val: "../data/Training/Run_0001/images/frame_04552.png"
        string_val: "../data/Training/Run_0001/images/frame_04693.png"
        string_val: "../data/Training/Run_0001/images/frame_04046.png"
        string_val: "../data/Training/Run_0001/images/frame_03789.png"
        string_val: "../data/Training/Run_0001/images/frame_02585.png"
        string_val: "../data/Training/Run_0001/images/frame_00475.png"
        string_val: "../data/Training/Run_0001/images/frame_01321.png"
        string_val: "../data/Training/Run_0001/images/frame_02327.png"
        string_val: "../data/Training/Run_0001/images/frame_02718.png"
        string_val: "../data/Training/Run_0001/images/frame_04096.png"
        string_val: "../data/Training/Run_0001/images/frame_01100.png"
        string_val: "../data/Training/Run_0001/images/frame_01386.png"
        string_val: "../data/Training/Run_0001/images/frame_02870.png"
        string_val: "../data/Training/Run_0001/images/frame_02230.png"
        string_val: "../data/Training/Run_0001/images/frame_04550.png"
        string_val: "../data/Training/Run_0001/images/frame_00665.png"
        string_val: "../data/Training/Run_0001/images/frame_01478.png"
        string_val: "../data/Training/Run_0001/images/frame_03249.png"
        string_val: "../data/Training/Run_0001/images/frame_02874.png"
        string_val: "../data/Training/Run_0001/images/frame_04555.png"
        string_val: "../data/Training/Run_0001/images/frame_03127.png"
        string_val: "../data/Training/Run_0001/images/frame_00226.png"
        string_val: "../data/Training/Run_0001/images/frame_02259.png"
        string_val: "../data/Training/Run_0001/images/frame_02833.png"
        string_val: "../data/Training/Run_0001/images/frame_03148.png"
        string_val: "../data/Training/Run_0001/images/frame_02351.png"
        string_val: "../data/Training/Run_0001/images/frame_00434.png"
        string_val: "../data/Training/Run_0001/images/frame_03665.png"
        string_val: "../data/Training/Run_0001/images/frame_01866.png"
        string_val: "../data/Training/Run_0001/images/frame_00689.png"
        string_val: "../data/Training/Run_0001/images/frame_04598.png"
        string_val: "../data/Training/Run_0001/images/frame_01319.png"
        string_val: "../data/Training/Run_0001/images/frame_02550.png"
        string_val: "../data/Training/Run_0001/images/frame_03808.png"
        string_val: "../data/Training/Run_0001/images/frame_01811.png"
        string_val: "../data/Training/Run_0001/images/frame_04196.png"
        string_val: "../data/Training/Run_0001/images/frame_02501.png"
        string_val: "../data/Training/Run_0001/images/frame_00270.png"
        string_val: "../data/Training/Run_0001/images/frame_03450.png"
        string_val: "../data/Training/Run_0001/images/frame_03265.png"
        string_val: "../data/Training/Run_0001/images/frame_02713.png"
        string_val: "../data/Training/Run_0001/images/frame_00391.png"
        string_val: "../data/Training/Run_0001/images/frame_01807.png"
        string_val: "../data/Training/Run_0001/images/frame_04148.png"
        string_val: "../data/Training/Run_0001/images/frame_04495.png"
        string_val: "../data/Training/Run_0001/images/frame_04181.png"
        string_val: "../data/Training/Run_0001/images/frame_00912.png"
        string_val: "../data/Training/Run_0001/images/frame_02615.png"
        string_val: "../data/Training/Run_0001/images/frame_00520.png"
        string_val: "../data/Training/Run_0001/images/frame_01202.png"
        string_val: "../data/Training/Run_0001/images/frame_03455.png"
        string_val: "../data/Training/Run_0001/images/frame_01585.png"
        string_val: "../data/Training/Run_0001/images/frame_04600.png"
        string_val: "../data/Training/Run_0001/images/frame_02482.png"
        string_val: "../data/Training/Run_0001/images/frame_00021.png"
        string_val: "../data/Training/Run_0001/images/frame_02620.png"
        string_val: "../data/Training/Run_0001/images/frame_00132.png"
        string_val: "../data/Training/Run_0001/images/frame_01788.png"
        string_val: "../data/Training/Run_0001/images/frame_03860.png"
        string_val: "../data/Training/Run_0001/images/frame_00698.png"
        string_val: "../data/Training/Run_0001/images/frame_02174.png"
        string_val: "../data/Training/Run_0001/images/frame_00913.png"
        string_val: "../data/Training/Run_0001/images/frame_01779.png"
        string_val: "../data/Training/Run_0001/images/frame_04690.png"
        string_val: "../data/Training/Run_0001/images/frame_03690.png"
        string_val: "../data/Training/Run_0001/images/frame_04473.png"
        string_val: "../data/Training/Run_0001/images/frame_03325.png"
        string_val: "../data/Training/Run_0001/images/frame_02836.png"
        string_val: "../data/Training/Run_0001/images/frame_00720.png"
        string_val: "../data/Training/Run_0001/images/frame_04570.png"
        string_val: "../data/Training/Run_0001/images/frame_03396.png"
        string_val: "../data/Training/Run_0001/images/frame_02409.png"
        string_val: "../data/Training/Run_0001/images/frame_01311.png"
        string_val: "../data/Training/Run_0001/images/frame_00125.png"
        string_val: "../data/Training/Run_0001/images/frame_03586.png"
        string_val: "../data/Training/Run_0001/images/frame_04204.png"
        string_val: "../data/Training/Run_0001/images/frame_02727.png"
        string_val: "../data/Training/Run_0001/images/frame_03309.png"
        string_val: "../data/Training/Run_0001/images/frame_00551.png"
        string_val: "../data/Training/Run_0001/images/frame_04480.png"
        string_val: "../data/Training/Run_0001/images/frame_00594.png"
        string_val: "../data/Training/Run_0001/images/frame_00558.png"
        string_val: "../data/Training/Run_0001/images/frame_02698.png"
        string_val: "../data/Training/Run_0001/images/frame_04575.png"
        string_val: "../data/Training/Run_0001/images/frame_01946.png"
        string_val: "../data/Training/Run_0001/images/frame_00945.png"
        string_val: "../data/Training/Run_0001/images/frame_03660.png"
        string_val: "../data/Training/Run_0001/images/frame_00568.png"
        string_val: "../data/Training/Run_0001/images/frame_01988.png"
        string_val: "../data/Training/Run_0001/images/frame_03312.png"
        string_val: "../data/Training/Run_0001/images/frame_03704.png"
        string_val: "../data/Training/Run_0001/images/frame_00749.png"
        string_val: "../data/Training/Run_0001/images/frame_01258.png"
        string_val: "../data/Training/Run_0001/images/frame_00375.png"
        string_val: "../data/Training/Run_0001/images/frame_02804.png"
        string_val: "../data/Training/Run_0001/images/frame_00242.png"
        string_val: "../data/Training/Run_0001/images/frame_03065.png"
        string_val: "../data/Training/Run_0001/images/frame_03215.png"
        string_val: "../data/Training/Run_0001/images/frame_04589.png"
        string_val: "../data/Training/Run_0001/images/frame_04165.png"
        string_val: "../data/Training/Run_0001/images/frame_03054.png"
        string_val: "../data/Training/Run_0001/images/frame_00075.png"
        string_val: "../data/Training/Run_0001/images/frame_01439.png"
        string_val: "../data/Training/Run_0001/images/frame_00402.png"
        string_val: "../data/Training/Run_0001/images/frame_01325.png"
        string_val: "../data/Training/Run_0001/images/frame_02108.png"
        string_val: "../data/Training/Run_0001/images/frame_01812.png"
        string_val: "../data/Training/Run_0001/images/frame_00940.png"
        string_val: "../data/Training/Run_0001/images/frame_03912.png"
        string_val: "../data/Training/Run_0001/images/frame_00626.png"
        string_val: "../data/Training/Run_0001/images/frame_01495.png"
        string_val: "../data/Training/Run_0001/images/frame_02345.png"
        string_val: "../data/Training/Run_0001/images/frame_00313.png"
        string_val: "../data/Training/Run_0001/images/frame_01483.png"
        string_val: "../data/Training/Run_0001/images/frame_03040.png"
        string_val: "../data/Training/Run_0001/images/frame_01566.png"
        string_val: "../data/Training/Run_0001/images/frame_01060.png"
        string_val: "../data/Training/Run_0001/images/frame_03186.png"
        string_val: "../data/Training/Run_0001/images/frame_01801.png"
        string_val: "../data/Training/Run_0001/images/frame_01380.png"
        string_val: "../data/Training/Run_0001/images/frame_04405.png"
        string_val: "../data/Training/Run_0001/images/frame_02165.png"
        string_val: "../data/Training/Run_0001/images/frame_02985.png"
        string_val: "../data/Training/Run_0001/images/frame_02845.png"
        string_val: "../data/Training/Run_0001/images/frame_01271.png"
        string_val: "../data/Training/Run_0001/images/frame_02857.png"
        string_val: "../data/Training/Run_0001/images/frame_03235.png"
        string_val: "../data/Training/Run_0001/images/frame_01830.png"
        string_val: "../data/Training/Run_0001/images/frame_00853.png"
        string_val: "../data/Training/Run_0001/images/frame_00159.png"
        string_val: "../data/Training/Run_0001/images/frame_01800.png"
        string_val: "../data/Training/Run_0001/images/frame_03654.png"
        string_val: "../data/Training/Run_0001/images/frame_02850.png"
        string_val: "../data/Training/Run_0001/images/frame_01848.png"
        string_val: "../data/Training/Run_0001/images/frame_01206.png"
        string_val: "../data/Training/Run_0001/images/frame_04269.png"
        string_val: "../data/Training/Run_0001/images/frame_04143.png"
        string_val: "../data/Training/Run_0001/images/frame_02454.png"
        string_val: "../data/Training/Run_0001/images/frame_02696.png"
        string_val: "../data/Training/Run_0001/images/frame_02689.png"
        string_val: "../data/Training/Run_0001/images/frame_02535.png"
        string_val: "../data/Training/Run_0001/images/frame_04314.png"
        string_val: "../data/Training/Run_0001/images/frame_00085.png"
        string_val: "../data/Training/Run_0001/images/frame_00046.png"
        string_val: "../data/Training/Run_0001/images/frame_03024.png"
        string_val: "../data/Training/Run_0001/images/frame_01257.png"
        string_val: "../data/Training/Run_0001/images/frame_02130.png"
        string_val: "../data/Training/Run_0001/images/frame_03636.png"
        string_val: "../data/Training/Run_0001/images/frame_03798.png"
        string_val: "../data/Training/Run_0001/images/frame_03817.png"
        string_val: "../data/Training/Run_0001/images/frame_04288.png"
        string_val: "../data/Training/Run_0001/images/frame_04094.png"
        string_val: "../data/Training/Run_0001/images/frame_01614.png"
        string_val: "../data/Training/Run_0001/images/frame_00299.png"
        string_val: "../data/Training/Run_0001/images/frame_04276.png"
        string_val: "../data/Training/Run_0001/images/frame_00764.png"
        string_val: "../data/Training/Run_0001/images/frame_00628.png"
        string_val: "../data/Training/Run_0001/images/frame_02050.png"
        string_val: "../data/Training/Run_0001/images/frame_01172.png"
        string_val: "../data/Training/Run_0001/images/frame_01120.png"
        string_val: "../data/Training/Run_0001/images/frame_02929.png"
        string_val: "../data/Training/Run_0001/images/frame_02425.png"
        string_val: "../data/Training/Run_0001/images/frame_02677.png"
        string_val: "../data/Training/Run_0001/images/frame_02396.png"
        string_val: "../data/Training/Run_0001/images/frame_03942.png"
        string_val: "../data/Training/Run_0001/images/frame_03671.png"
        string_val: "../data/Training/Run_0001/images/frame_01049.png"
        string_val: "../data/Training/Run_0001/images/frame_01011.png"
        string_val: "../data/Training/Run_0001/images/frame_02594.png"
        string_val: "../data/Training/Run_0001/images/frame_02782.png"
        string_val: "../data/Training/Run_0001/images/frame_04493.png"
        string_val: "../data/Training/Run_0001/images/frame_03742.png"
        string_val: "../data/Training/Run_0001/images/frame_02712.png"
        string_val: "../data/Training/Run_0001/images/frame_01150.png"
        string_val: "../data/Training/Run_0001/images/frame_00923.png"
        string_val: "../data/Training/Run_0001/images/frame_03411.png"
        string_val: "../data/Training/Run_0001/images/frame_00463.png"
        string_val: "../data/Training/Run_0001/images/frame_00412.png"
        string_val: "../data/Training/Run_0001/images/frame_03913.png"
        string_val: "../data/Training/Run_0001/images/frame_02248.png"
        string_val: "../data/Training/Run_0001/images/frame_00985.png"
        string_val: "../data/Training/Run_0001/images/frame_02634.png"
        string_val: "../data/Training/Run_0001/images/frame_01618.png"
        string_val: "../data/Training/Run_0001/images/frame_02334.png"
        string_val: "../data/Training/Run_0001/images/frame_02438.png"
        string_val: "../data/Training/Run_0001/images/frame_04494.png"
        string_val: "../data/Training/Run_0001/images/frame_01563.png"
        string_val: "../data/Training/Run_0001/images/frame_04715.png"
        string_val: "../data/Training/Run_0001/images/frame_04632.png"
        string_val: "../data/Training/Run_0001/images/frame_00841.png"
        string_val: "../data/Training/Run_0001/images/frame_02278.png"
        string_val: "../data/Training/Run_0001/images/frame_02622.png"
        string_val: "../data/Training/Run_0001/images/frame_00048.png"
        string_val: "../data/Training/Run_0001/images/frame_00550.png"
        string_val: "../data/Training/Run_0001/images/frame_00278.png"
        string_val: "../data/Training/Run_0001/images/frame_00148.png"
        string_val: "../data/Training/Run_0001/images/frame_04463.png"
        string_val: "../data/Training/Run_0001/images/frame_02390.png"
        string_val: "../data/Training/Run_0001/images/frame_00760.png"
        string_val: "../data/Training/Run_0001/images/frame_01326.png"
        string_val: "../data/Training/Run_0001/images/frame_02603.png"
        string_val: "../data/Training/Run_0001/images/frame_01028.png"
        string_val: "../data/Training/Run_0001/images/frame_01245.png"
        string_val: "../data/Training/Run_0001/images/frame_03189.png"
        string_val: "../data/Training/Run_0001/images/frame_04019.png"
        string_val: "../data/Training/Run_0001/images/frame_03960.png"
        string_val: "../data/Training/Run_0001/images/frame_03596.png"
        string_val: "../data/Training/Run_0001/images/frame_01964.png"
        string_val: "../data/Training/Run_0001/images/frame_01869.png"
        string_val: "../data/Training/Run_0001/images/frame_03733.png"
        string_val: "../data/Training/Run_0001/images/frame_00996.png"
        string_val: "../data/Training/Run_0001/images/frame_00872.png"
        string_val: "../data/Training/Run_0001/images/frame_03379.png"
        string_val: "../data/Training/Run_0001/images/frame_02036.png"
        string_val: "../data/Training/Run_0001/images/frame_02229.png"
        string_val: "../data/Training/Run_0001/images/frame_02136.png"
        string_val: "../data/Training/Run_0001/images/frame_01397.png"
        string_val: "../data/Training/Run_0001/images/frame_01864.png"
        string_val: "../data/Training/Run_0001/images/frame_01581.png"
        string_val: "../data/Training/Run_0001/images/frame_02470.png"
        string_val: "../data/Training/Run_0001/images/frame_00350.png"
        string_val: "../data/Training/Run_0001/images/frame_03934.png"
        string_val: "../data/Training/Run_0001/images/frame_03815.png"
        string_val: "../data/Training/Run_0001/images/frame_02201.png"
        string_val: "../data/Training/Run_0001/images/frame_01285.png"
        string_val: "../data/Training/Run_0001/images/frame_04132.png"
        string_val: "../data/Training/Run_0001/images/frame_03146.png"
        string_val: "../data/Training/Run_0001/images/frame_00231.png"
        string_val: "../data/Training/Run_0001/images/frame_01731.png"
        string_val: "../data/Training/Run_0001/images/frame_02522.png"
        string_val: "../data/Training/Run_0001/images/frame_00382.png"
        string_val: "../data/Training/Run_0001/images/frame_00241.png"
        string_val: "../data/Training/Run_0001/images/frame_01769.png"
        string_val: "../data/Training/Run_0001/images/frame_00104.png"
        string_val: "../data/Training/Run_0001/images/frame_04583.png"
        string_val: "../data/Training/Run_0001/images/frame_01345.png"
        string_val: "../data/Training/Run_0001/images/frame_01696.png"
        string_val: "../data/Training/Run_0001/images/frame_03849.png"
        string_val: "../data/Training/Run_0001/images/frame_03074.png"
        string_val: "../data/Training/Run_0001/images/frame_03262.png"
        string_val: "../data/Training/Run_0001/images/frame_01121.png"
        string_val: "../data/Training/Run_0001/images/frame_03306.png"
        string_val: "../data/Training/Run_0001/images/frame_02151.png"
        string_val: "../data/Training/Run_0001/images/frame_02754.png"
        string_val: "../data/Training/Run_0001/images/frame_00002.png"
        string_val: "../data/Training/Run_0001/images/frame_04153.png"
        string_val: "../data/Training/Run_0001/images/frame_00970.png"
        string_val: "../data/Training/Run_0001/images/frame_01091.png"
        string_val: "../data/Training/Run_0001/images/frame_01887.png"
        string_val: "../data/Training/Run_0001/images/frame_01194.png"
        string_val: "../data/Training/Run_0001/images/frame_04418.png"
        string_val: "../data/Training/Run_0001/images/frame_02885.png"
        string_val: "../data/Training/Run_0001/images/frame_01556.png"
        string_val: "../data/Training/Run_0001/images/frame_02813.png"
        string_val: "../data/Training/Run_0001/images/frame_01839.png"
        string_val: "../data/Training/Run_0001/images/frame_03543.png"
        string_val: "../data/Training/Run_0001/images/frame_02574.png"
        string_val: "../data/Training/Run_0001/images/frame_02945.png"
        string_val: "../data/Training/Run_0001/images/frame_04243.png"
        string_val: "../data/Training/Run_0001/images/frame_01424.png"
        string_val: "../data/Training/Run_0001/images/frame_02282.png"
        string_val: "../data/Training/Run_0001/images/frame_02084.png"
        string_val: "../data/Training/Run_0001/images/frame_02686.png"
        string_val: "../data/Training/Run_0001/images/frame_01403.png"
        string_val: "../data/Training/Run_0001/images/frame_00917.png"
        string_val: "../data/Training/Run_0001/images/frame_02932.png"
        string_val: "../data/Training/Run_0001/images/frame_02400.png"
        string_val: "../data/Training/Run_0001/images/frame_04009.png"
        string_val: "../data/Training/Run_0001/images/frame_04541.png"
        string_val: "../data/Training/Run_0001/images/frame_03585.png"
        string_val: "../data/Training/Run_0001/images/frame_02642.png"
        string_val: "../data/Training/Run_0001/images/frame_00094.png"
        string_val: "../data/Training/Run_0001/images/frame_01448.png"
        string_val: "../data/Training/Run_0001/images/frame_00611.png"
        string_val: "../data/Training/Run_0001/images/frame_00060.png"
        string_val: "../data/Training/Run_0001/images/frame_02099.png"
        string_val: "../data/Training/Run_0001/images/frame_02310.png"
        string_val: "../data/Training/Run_0001/images/frame_03380.png"
        string_val: "../data/Training/Run_0001/images/frame_00340.png"
        string_val: "../data/Training/Run_0001/images/frame_03616.png"
        string_val: "../data/Training/Run_0001/images/frame_02889.png"
        string_val: "../data/Training/Run_0001/images/frame_02047.png"
        string_val: "../data/Training/Run_0001/images/frame_04128.png"
        string_val: "../data/Training/Run_0001/images/frame_04338.png"
        string_val: "../data/Training/Run_0001/images/frame_03562.png"
        string_val: "../data/Training/Run_0001/images/frame_02171.png"
        string_val: "../data/Training/Run_0001/images/frame_02785.png"
        string_val: "../data/Training/Run_0001/images/frame_03921.png"
        string_val: "../data/Training/Run_0001/images/frame_00523.png"
        string_val: "../data/Training/Run_0001/images/frame_01372.png"
        string_val: "../data/Training/Run_0001/images/frame_00105.png"
        string_val: "../data/Training/Run_0001/images/frame_03606.png"
        string_val: "../data/Training/Run_0001/images/frame_03041.png"
        string_val: "../data/Training/Run_0001/images/frame_01450.png"
        string_val: "../data/Training/Run_0001/images/frame_03430.png"
        string_val: "../data/Training/Run_0001/images/frame_04007.png"
        string_val: "../data/Training/Run_0001/images/frame_02432.png"
        string_val: "../data/Training/Run_0001/images/frame_00406.png"
        string_val: "../data/Training/Run_0001/images/frame_03870.png"
        string_val: "../data/Training/Run_0001/images/frame_04245.png"
        string_val: "../data/Training/Run_0001/images/frame_02481.png"
        string_val: "../data/Training/Run_0001/images/frame_02942.png"
        string_val: "../data/Training/Run_0001/images/frame_01941.png"
        string_val: "../data/Training/Run_0001/images/frame_01054.png"
        string_val: "../data/Training/Run_0001/images/frame_00126.png"
        string_val: "../data/Training/Run_0001/images/frame_03615.png"
        string_val: "../data/Training/Run_0001/images/frame_00754.png"
        string_val: "../data/Training/Run_0001/images/frame_01122.png"
        string_val: "../data/Training/Run_0001/images/frame_02537.png"
        string_val: "../data/Training/Run_0001/images/frame_02161.png"
        string_val: "../data/Training/Run_0001/images/frame_02219.png"
        string_val: "../data/Training/Run_0001/images/frame_04533.png"
        string_val: "../data/Training/Run_0001/images/frame_04594.png"
        string_val: "../data/Training/Run_0001/images/frame_03720.png"
        string_val: "../data/Training/Run_0001/images/frame_04068.png"
        string_val: "../data/Training/Run_0001/images/frame_02384.png"
        string_val: "../data/Training/Run_0001/images/frame_03688.png"
        string_val: "../data/Training/Run_0001/images/frame_02061.png"
        string_val: "../data/Training/Run_0001/images/frame_03594.png"
        string_val: "../data/Training/Run_0001/images/frame_01690.png"
        string_val: "../data/Training/Run_0001/images/frame_00338.png"
        string_val: "../data/Training/Run_0001/images/frame_00282.png"
        string_val: "../data/Training/Run_0001/images/frame_01616.png"
        string_val: "../data/Training/Run_0001/images/frame_01748.png"
        string_val: "../data/Training/Run_0001/images/frame_02394.png"
        string_val: "../data/Training/Run_0001/images/frame_01076.png"
        string_val: "../data/Training/Run_0001/images/frame_04449.png"
        string_val: "../data/Training/Run_0001/images/frame_02466.png"
        string_val: "../data/Training/Run_0001/images/frame_00306.png"
        string_val: "../data/Training/Run_0001/images/frame_03073.png"
        string_val: "../data/Training/Run_0001/images/frame_00497.png"
        string_val: "../data/Training/Run_0001/images/frame_01663.png"
        string_val: "../data/Training/Run_0001/images/frame_04104.png"
        string_val: "../data/Training/Run_0001/images/frame_04142.png"
        string_val: "../data/Training/Run_0001/images/frame_04403.png"
        string_val: "../data/Training/Run_0001/images/frame_03856.png"
        string_val: "../data/Training/Run_0001/images/frame_00752.png"
        string_val: "../data/Training/Run_0001/images/frame_01268.png"
        string_val: "../data/Training/Run_0001/images/frame_03205.png"
        string_val: "../data/Training/Run_0001/images/frame_00951.png"
        string_val: "../data/Training/Run_0001/images/frame_00799.png"
        string_val: "../data/Training/Run_0001/images/frame_01436.png"
        string_val: "../data/Training/Run_0001/images/frame_00895.png"
        string_val: "../data/Training/Run_0001/images/frame_01010.png"
        string_val: "../data/Training/Run_0001/images/frame_02046.png"
        string_val: "../data/Training/Run_0001/images/frame_00531.png"
        string_val: "../data/Training/Run_0001/images/frame_02687.png"
        string_val: "../data/Training/Run_0001/images/frame_01418.png"
        string_val: "../data/Training/Run_0001/images/frame_00991.png"
        string_val: "../data/Training/Run_0001/images/frame_04630.png"
        string_val: "../data/Training/Run_0001/images/frame_02414.png"
        string_val: "../data/Training/Run_0001/images/frame_04689.png"
        string_val: "../data/Training/Run_0001/images/frame_04576.png"
        string_val: "../data/Training/Run_0001/images/frame_01493.png"
        string_val: "../data/Training/Run_0001/images/frame_01659.png"
        string_val: "../data/Training/Run_0001/images/frame_04286.png"
        string_val: "../data/Training/Run_0001/images/frame_02771.png"
        string_val: "../data/Training/Run_0001/images/frame_00221.png"
        string_val: "../data/Training/Run_0001/images/frame_02987.png"
        string_val: "../data/Training/Run_0001/images/frame_02026.png"
        string_val: "../data/Training/Run_0001/images/frame_03810.png"
        string_val: "../data/Training/Run_0001/images/frame_03360.png"
        string_val: "../data/Training/Run_0001/images/frame_03212.png"
        string_val: "../data/Training/Run_0001/images/frame_04199.png"
        string_val: "../data/Training/Run_0001/images/frame_04179.png"
        string_val: "../data/Training/Run_0001/images/frame_01865.png"
        string_val: "../data/Training/Run_0001/images/frame_00143.png"
        string_val: "../data/Training/Run_0001/images/frame_00446.png"
        string_val: "../data/Training/Run_0001/images/frame_04050.png"
        string_val: "../data/Training/Run_0001/images/frame_02599.png"
        string_val: "../data/Training/Run_0001/images/frame_00383.png"
        string_val: "../data/Training/Run_0001/images/frame_00545.png"
        string_val: "../data/Training/Run_0001/images/frame_03294.png"
        string_val: "../data/Training/Run_0001/images/frame_03480.png"
        string_val: "../data/Training/Run_0001/images/frame_00599.png"
        string_val: "../data/Training/Run_0001/images/frame_02840.png"
        string_val: "../data/Training/Run_0001/images/frame_02655.png"
        string_val: "../data/Training/Run_0001/images/frame_00966.png"
        string_val: "../data/Training/Run_0001/images/frame_03871.png"
        string_val: "../data/Training/Run_0001/images/frame_03524.png"
        string_val: "../data/Training/Run_0001/images/frame_03096.png"
        string_val: "../data/Training/Run_0001/images/frame_04342.png"
        string_val: "../data/Training/Run_0001/images/frame_01945.png"
        string_val: "../data/Training/Run_0001/images/frame_03920.png"
        string_val: "../data/Training/Run_0001/images/frame_01443.png"
        string_val: "../data/Training/Run_0001/images/frame_00537.png"
        string_val: "../data/Training/Run_0001/images/frame_04400.png"
        string_val: "../data/Training/Run_0001/images/frame_04259.png"
        string_val: "../data/Training/Run_0001/images/frame_03395.png"
        string_val: "../data/Training/Run_0001/images/frame_01131.png"
        string_val: "../data/Training/Run_0001/images/frame_04539.png"
        string_val: "../data/Training/Run_0001/images/frame_02004.png"
        string_val: "../data/Training/Run_0001/images/frame_00603.png"
        string_val: "../data/Training/Run_0001/images/frame_03981.png"
        string_val: "../data/Training/Run_0001/images/frame_04708.png"
        string_val: "../data/Training/Run_0001/images/frame_03635.png"
        string_val: "../data/Training/Run_0001/images/frame_02447.png"
        string_val: "../data/Training/Run_0001/images/frame_02361.png"
        string_val: "../data/Training/Run_0001/images/frame_04329.png"
        string_val: "../data/Training/Run_0001/images/frame_00266.png"
        string_val: "../data/Training/Run_0001/images/frame_03612.png"
        string_val: "../data/Training/Run_0001/images/frame_02263.png"
        string_val: "../data/Training/Run_0001/images/frame_03131.png"
        string_val: "../data/Training/Run_0001/images/frame_03125.png"
        string_val: "../data/Training/Run_0001/images/frame_01235.png"
        string_val: "../data/Training/Run_0001/images/frame_03889.png"
        string_val: "../data/Training/Run_0001/images/frame_03595.png"
        string_val: "../data/Training/Run_0001/images/frame_01437.png"
        string_val: "../data/Training/Run_0001/images/frame_04326.png"
        string_val: "../data/Training/Run_0001/images/frame_04613.png"
        string_val: "../data/Training/Run_0001/images/frame_04092.png"
        string_val: "../data/Training/Run_0001/images/frame_03063.png"
        string_val: "../data/Training/Run_0001/images/frame_03195.png"
        string_val: "../data/Training/Run_0001/images/frame_00381.png"
        string_val: "../data/Training/Run_0001/images/frame_00336.png"
        string_val: "../data/Training/Run_0001/images/frame_00491.png"
        string_val: "../data/Training/Run_0001/images/frame_04371.png"
        string_val: "../data/Training/Run_0001/images/frame_00492.png"
        string_val: "../data/Training/Run_0001/images/frame_03230.png"
        string_val: "../data/Training/Run_0001/images/frame_01041.png"
        string_val: "../data/Training/Run_0001/images/frame_04399.png"
        string_val: "../data/Training/Run_0001/images/frame_01118.png"
        string_val: "../data/Training/Run_0001/images/frame_00476.png"
        string_val: "../data/Training/Run_0001/images/frame_03825.png"
        string_val: "../data/Training/Run_0001/images/frame_03471.png"
        string_val: "../data/Training/Run_0001/images/frame_04599.png"
        string_val: "../data/Training/Run_0001/images/frame_02297.png"
        string_val: "../data/Training/Run_0001/images/frame_01841.png"
        string_val: "../data/Training/Run_0001/images/frame_04692.png"
        string_val: "../data/Training/Run_0001/images/frame_03546.png"
        string_val: "../data/Training/Run_0001/images/frame_03658.png"
        string_val: "../data/Training/Run_0001/images/frame_01473.png"
        string_val: "../data/Training/Run_0001/images/frame_04220.png"
        string_val: "../data/Training/Run_0001/images/frame_00006.png"
        string_val: "../data/Training/Run_0001/images/frame_03266.png"
        string_val: "../data/Training/Run_0001/images/frame_01904.png"
        string_val: "../data/Training/Run_0001/images/frame_03368.png"
        string_val: "../data/Training/Run_0001/images/frame_01498.png"
        string_val: "../data/Training/Run_0001/images/frame_04279.png"
        string_val: "../data/Training/Run_0001/images/frame_03252.png"
        string_val: "../data/Training/Run_0001/images/frame_02185.png"
        string_val: "../data/Training/Run_0001/images/frame_01955.png"
        string_val: "../data/Training/Run_0001/images/frame_01177.png"
        string_val: "../data/Training/Run_0001/images/frame_04225.png"
        string_val: "../data/Training/Run_0001/images/frame_01022.png"
        string_val: "../data/Training/Run_0001/images/frame_03974.png"
        string_val: "../data/Training/Run_0001/images/frame_03113.png"
        string_val: "../data/Training/Run_0001/images/frame_02671.png"
        string_val: "../data/Training/Run_0001/images/frame_03838.png"
        string_val: "../data/Training/Run_0001/images/frame_01102.png"
        string_val: "../data/Training/Run_0001/images/frame_01142.png"
        string_val: "../data/Training/Run_0001/images/frame_01447.png"
        string_val: "../data/Training/Run_0001/images/frame_03729.png"
        string_val: "../data/Training/Run_0001/images/frame_03435.png"
        string_val: "../data/Training/Run_0001/images/frame_04518.png"
        string_val: "../data/Training/Run_0001/images/frame_03300.png"
        string_val: "../data/Training/Run_0001/images/frame_04323.png"
        string_val: "../data/Training/Run_0001/images/frame_01867.png"
        string_val: "../data/Training/Run_0001/images/frame_03046.png"
        string_val: "../data/Training/Run_0001/images/frame_00625.png"
        string_val: "../data/Training/Run_0001/images/frame_02984.png"
        string_val: "../data/Training/Run_0001/images/frame_00518.png"
        string_val: "../data/Training/Run_0001/images/frame_00753.png"
        string_val: "../data/Training/Run_0001/images/frame_02156.png"
        string_val: "../data/Training/Run_0001/images/frame_03890.png"
        string_val: "../data/Training/Run_0001/images/frame_03708.png"
        string_val: "../data/Training/Run_0001/images/frame_01114.png"
        string_val: "../data/Training/Run_0001/images/frame_01923.png"
        string_val: "../data/Training/Run_0001/images/frame_02714.png"
        string_val: "../data/Training/Run_0001/images/frame_02994.png"
        string_val: "../data/Training/Run_0001/images/frame_01948.png"
        string_val: "../data/Training/Run_0001/images/frame_03939.png"
        string_val: "../data/Training/Run_0001/images/frame_02793.png"
        string_val: "../data/Training/Run_0001/images/frame_00174.png"
        string_val: "../data/Training/Run_0001/images/frame_01835.png"
        string_val: "../data/Training/Run_0001/images/frame_02715.png"
        string_val: "../data/Training/Run_0001/images/frame_04298.png"
        string_val: "../data/Training/Run_0001/images/frame_00954.png"
        string_val: "../data/Training/Run_0001/images/frame_01596.png"
        string_val: "../data/Training/Run_0001/images/frame_03052.png"
        string_val: "../data/Training/Run_0001/images/frame_02750.png"
        string_val: "../data/Training/Run_0001/images/frame_01237.png"
        string_val: "../data/Training/Run_0001/images/frame_02584.png"
        string_val: "../data/Training/Run_0001/images/frame_01883.png"
        string_val: "../data/Training/Run_0001/images/frame_01856.png"
        string_val: "../data/Training/Run_0001/images/frame_03057.png"
        string_val: "../data/Training/Run_0001/images/frame_04591.png"
        string_val: "../data/Training/Run_0001/images/frame_04627.png"
        string_val: "../data/Training/Run_0001/images/frame_02498.png"
        string_val: "../data/Training/Run_0001/images/frame_02433.png"
        string_val: "../data/Training/Run_0001/images/frame_00116.png"
        string_val: "../data/Training/Run_0001/images/frame_03280.png"
        string_val: "../data/Training/Run_0001/images/frame_04490.png"
        string_val: "../data/Training/Run_0001/images/frame_03170.png"
        string_val: "../data/Training/Run_0001/images/frame_02879.png"
        string_val: "../data/Training/Run_0001/images/frame_01312.png"
        string_val: "../data/Training/Run_0001/images/frame_03014.png"
        string_val: "../data/Training/Run_0001/images/frame_01063.png"
        string_val: "../data/Training/Run_0001/images/frame_01251.png"
        string_val: "../data/Training/Run_0001/images/frame_01962.png"
        string_val: "../data/Training/Run_0001/images/frame_04644.png"
        string_val: "../data/Training/Run_0001/images/frame_00946.png"
        string_val: "../data/Training/Run_0001/images/frame_03398.png"
        string_val: "../data/Training/Run_0001/images/frame_00862.png"
        string_val: "../data/Training/Run_0001/images/frame_02139.png"
        string_val: "../data/Training/Run_0001/images/frame_01644.png"
        string_val: "../data/Training/Run_0001/images/frame_00363.png"
        string_val: "../data/Training/Run_0001/images/frame_00855.png"
        string_val: "../data/Training/Run_0001/images/frame_02404.png"
        string_val: "../data/Training/Run_0001/images/frame_02706.png"
        string_val: "../data/Training/Run_0001/images/frame_02453.png"
        string_val: "../data/Training/Run_0001/images/frame_04299.png"
        string_val: "../data/Training/Run_0001/images/frame_03290.png"
        string_val: "../data/Training/Run_0001/images/frame_00600.png"
        string_val: "../data/Training/Run_0001/images/frame_02296.png"
        string_val: "../data/Training/Run_0001/images/frame_02106.png"
        string_val: "../data/Training/Run_0001/images/frame_03060.png"
        string_val: "../data/Training/Run_0001/images/frame_04498.png"
        string_val: "../data/Training/Run_0001/images/frame_01860.png"
        string_val: "../data/Training/Run_0001/images/frame_02271.png"
        string_val: "../data/Training/Run_0001/images/frame_01986.png"
        string_val: "../data/Training/Run_0001/images/frame_04001.png"
        string_val: "../data/Training/Run_0001/images/frame_00342.png"
        string_val: "../data/Training/Run_0001/images/frame_03279.png"
        string_val: "../data/Training/Run_0001/images/frame_02228.png"
        string_val: "../data/Training/Run_0001/images/frame_03370.png"
        string_val: "../data/Training/Run_0001/images/frame_01488.png"
        string_val: "../data/Training/Run_0001/images/frame_01861.png"
        string_val: "../data/Training/Run_0001/images/frame_04080.png"
        string_val: "../data/Training/Run_0001/images/frame_01136.png"
        string_val: "../data/Training/Run_0001/images/frame_01815.png"
        string_val: "../data/Training/Run_0001/images/frame_04229.png"
        string_val: "../data/Training/Run_0001/images/frame_02231.png"
        string_val: "../data/Training/Run_0001/images/frame_02132.png"
        string_val: "../data/Training/Run_0001/images/frame_03948.png"
        string_val: "../data/Training/Run_0001/images/frame_01730.png"
        string_val: "../data/Training/Run_0001/images/frame_03502.png"
        string_val: "../data/Training/Run_0001/images/frame_01181.png"
        string_val: "../data/Training/Run_0001/images/frame_03391.png"
        string_val: "../data/Training/Run_0001/images/frame_02906.png"
        string_val: "../data/Training/Run_0001/images/frame_04303.png"
        string_val: "../data/Training/Run_0001/images/frame_03979.png"
        string_val: "../data/Training/Run_0001/images/frame_00964.png"
        string_val: "../data/Training/Run_0001/images/frame_03774.png"
        string_val: "../data/Training/Run_0001/images/frame_02062.png"
        string_val: "../data/Training/Run_0001/images/frame_02980.png"
        string_val: "../data/Training/Run_0001/images/frame_04078.png"
        string_val: "../data/Training/Run_0001/images/frame_02619.png"
        string_val: "../data/Training/Run_0001/images/frame_00502.png"
        string_val: "../data/Training/Run_0001/images/frame_03846.png"
        string_val: "../data/Training/Run_0001/images/frame_03985.png"
        string_val: "../data/Training/Run_0001/images/frame_03123.png"
        string_val: "../data/Training/Run_0001/images/frame_03388.png"
        string_val: "../data/Training/Run_0001/images/frame_00528.png"
        string_val: "../data/Training/Run_0001/images/frame_01336.png"
        string_val: "../data/Training/Run_0001/images/frame_00708.png"
        string_val: "../data/Training/Run_0001/images/frame_03613.png"
        string_val: "../data/Training/Run_0001/images/frame_01754.png"
        string_val: "../data/Training/Run_0001/images/frame_00089.png"
        string_val: "../data/Training/Run_0001/images/frame_03823.png"
        string_val: "../data/Training/Run_0001/images/frame_01330.png"
        string_val: "../data/Training/Run_0001/images/frame_02638.png"
        string_val: "../data/Training/Run_0001/images/frame_04266.png"
        string_val: "../data/Training/Run_0001/images/frame_00327.png"
        string_val: "../data/Training/Run_0001/images/frame_00863.png"
        string_val: "../data/Training/Run_0001/images/frame_03673.png"
        string_val: "../data/Training/Run_0001/images/frame_04253.png"
        string_val: "../data/Training/Run_0001/images/frame_02805.png"
        string_val: "../data/Training/Run_0001/images/frame_02986.png"
        string_val: "../data/Training/Run_0001/images/frame_04189.png"
        string_val: "../data/Training/Run_0001/images/frame_04365.png"
        string_val: "../data/Training/Run_0001/images/frame_04596.png"
        string_val: "../data/Training/Run_0001/images/frame_02347.png"
        string_val: "../data/Training/Run_0001/images/frame_03420.png"
        string_val: "../data/Training/Run_0001/images/frame_03625.png"
        string_val: "../data/Training/Run_0001/images/frame_03441.png"
        string_val: "../data/Training/Run_0001/images/frame_04502.png"
        string_val: "../data/Training/Run_0001/images/frame_04287.png"
        string_val: "../data/Training/Run_0001/images/frame_03254.png"
        string_val: "../data/Training/Run_0001/images/frame_04580.png"
        string_val: "../data/Training/Run_0001/images/frame_03809.png"
        string_val: "../data/Training/Run_0001/images/frame_01786.png"
        string_val: "../data/Training/Run_0001/images/frame_00919.png"
        string_val: "../data/Training/Run_0001/images/frame_04210.png"
        string_val: "../data/Training/Run_0001/images/frame_00287.png"
        string_val: "../data/Training/Run_0001/images/frame_01540.png"
        string_val: "../data/Training/Run_0001/images/frame_02283.png"
        string_val: "../data/Training/Run_0001/images/frame_04419.png"
        string_val: "../data/Training/Run_0001/images/frame_01047.png"
        string_val: "../data/Training/Run_0001/images/frame_00748.png"
        string_val: "../data/Training/Run_0001/images/frame_04304.png"
        string_val: "../data/Training/Run_0001/images/frame_02676.png"
        string_val: "../data/Training/Run_0001/images/frame_01746.png"
        string_val: "../data/Training/Run_0001/images/frame_03556.png"
        string_val: "../data/Training/Run_0001/images/frame_01404.png"
        string_val: "../data/Training/Run_0001/images/frame_01843.png"
        string_val: "../data/Training/Run_0001/images/frame_02200.png"
        string_val: "../data/Training/Run_0001/images/frame_02604.png"
        string_val: "../data/Training/Run_0001/images/frame_04671.png"
        string_val: "../data/Training/Run_0001/images/frame_00656.png"
        string_val: "../data/Training/Run_0001/images/frame_04724.png"
        string_val: "../data/Training/Run_0001/images/frame_00168.png"
        string_val: "../data/Training/Run_0001/images/frame_03075.png"
        string_val: "../data/Training/Run_0001/images/frame_01388.png"
        string_val: "../data/Training/Run_0001/images/frame_02525.png"
        string_val: "../data/Training/Run_0001/images/frame_01273.png"
        string_val: "../data/Training/Run_0001/images/frame_01759.png"
        string_val: "../data/Training/Run_0001/images/frame_02513.png"
        string_val: "../data/Training/Run_0001/images/frame_01589.png"
        string_val: "../data/Training/Run_0001/images/frame_02795.png"
        string_val: "../data/Training/Run_0001/images/frame_00761.png"
        string_val: "../data/Training/Run_0001/images/frame_01523.png"
        string_val: "../data/Training/Run_0001/images/frame_03936.png"
        string_val: "../data/Training/Run_0001/images/frame_00144.png"
        string_val: "../data/Training/Run_0001/images/frame_02503.png"
        string_val: "../data/Training/Run_0001/images/frame_03734.png"
        string_val: "../data/Training/Run_0001/images/frame_00727.png"
        string_val: "../data/Training/Run_0001/images/frame_01725.png"
        string_val: "../data/Training/Run_0001/images/frame_02395.png"
        string_val: "../data/Training/Run_0001/images/frame_02740.png"
        string_val: "../data/Training/Run_0001/images/frame_04398.png"
        string_val: "../data/Training/Run_0001/images/frame_04043.png"
        string_val: "../data/Training/Run_0001/images/frame_01778.png"
        string_val: "../data/Training/Run_0001/images/frame_03494.png"
        string_val: "../data/Training/Run_0001/images/frame_04407.png"
        string_val: "../data/Training/Run_0001/images/frame_01431.png"
        string_val: "../data/Training/Run_0001/images/frame_02673.png"
        string_val: "../data/Training/Run_0001/images/frame_00353.png"
        string_val: "../data/Training/Run_0001/images/frame_04500.png"
        string_val: "../data/Training/Run_0001/images/frame_00438.png"
        string_val: "../data/Training/Run_0001/images/frame_02212.png"
        string_val: "../data/Training/Run_0001/images/frame_01726.png"
        string_val: "../data/Training/Run_0001/images/frame_02660.png"
        string_val: "../data/Training/Run_0001/images/frame_01320.png"
        string_val: "../data/Training/Run_0001/images/frame_01140.png"
        string_val: "../data/Training/Run_0001/images/frame_01357.png"
        string_val: "../data/Training/Run_0001/images/frame_03305.png"
        string_val: "../data/Training/Run_0001/images/frame_01458.png"
        string_val: "../data/Training/Run_0001/images/frame_02801.png"
        string_val: "../data/Training/Run_0001/images/frame_03872.png"
        string_val: "../data/Training/Run_0001/images/frame_00017.png"
        string_val: "../data/Training/Run_0001/images/frame_04141.png"
        string_val: "../data/Training/Run_0001/images/frame_00390.png"
        string_val: "../data/Training/Run_0001/images/frame_03055.png"
        string_val: "../data/Training/Run_0001/images/frame_02996.png"
        string_val: "../data/Training/Run_0001/images/frame_04139.png"
        string_val: "../data/Training/Run_0001/images/frame_03583.png"
        string_val: "../data/Training/Run_0001/images/frame_00889.png"
        string_val: "../data/Training/Run_0001/images/frame_01013.png"
        string_val: "../data/Training/Run_0001/images/frame_03827.png"
        string_val: "../data/Training/Run_0001/images/frame_00208.png"
        string_val: "../data/Training/Run_0001/images/frame_04233.png"
        string_val: "../data/Training/Run_0001/images/frame_01727.png"
        string_val: "../data/Training/Run_0001/images/frame_04714.png"
        string_val: "../data/Training/Run_0001/images/frame_04573.png"
        string_val: "../data/Training/Run_0001/images/frame_02946.png"
        string_val: "../data/Training/Run_0001/images/frame_04451.png"
        string_val: "../data/Training/Run_0001/images/frame_03371.png"
        string_val: "../data/Training/Run_0001/images/frame_03261.png"
        string_val: "../data/Training/Run_0001/images/frame_03844.png"
        string_val: "../data/Training/Run_0001/images/frame_01822.png"
        string_val: "../data/Training/Run_0001/images/frame_03129.png"
        string_val: "../data/Training/Run_0001/images/frame_00462.png"
        string_val: "../data/Training/Run_0001/images/frame_01153.png"
        string_val: "../data/Training/Run_0001/images/frame_03591.png"
        string_val: "../data/Training/Run_0001/images/frame_04520.png"
        string_val: "../data/Training/Run_0001/images/frame_04290.png"
        string_val: "../data/Training/Run_0001/images/frame_02919.png"
        string_val: "../data/Training/Run_0001/images/frame_03905.png"
        string_val: "../data/Training/Run_0001/images/frame_00801.png"
        string_val: "../data/Training/Run_0001/images/frame_04194.png"
        string_val: "../data/Training/Run_0001/images/frame_01016.png"
        string_val: "../data/Training/Run_0001/images/frame_00657.png"
        string_val: "../data/Training/Run_0001/images/frame_01825.png"
        string_val: "../data/Training/Run_0001/images/frame_03318.png"
        string_val: "../data/Training/Run_0001/images/frame_00972.png"
        string_val: "../data/Training/Run_0001/images/frame_02144.png"
        string_val: "../data/Training/Run_0001/images/frame_01863.png"
        string_val: "../data/Training/Run_0001/images/frame_03576.png"
        string_val: "../data/Training/Run_0001/images/frame_00953.png"
        string_val: "../data/Training/Run_0001/images/frame_02521.png"
        string_val: "../data/Training/Run_0001/images/frame_04410.png"
        string_val: "../data/Training/Run_0001/images/frame_01599.png"
        string_val: "../data/Training/Run_0001/images/frame_00083.png"
        string_val: "../data/Training/Run_0001/images/frame_03778.png"
        string_val: "../data/Training/Run_0001/images/frame_01615.png"
        string_val: "../data/Training/Run_0001/images/frame_01045.png"
        string_val: "../data/Training/Run_0001/images/frame_04560.png"
        string_val: "../data/Training/Run_0001/images/frame_04509.png"
        string_val: "../data/Training/Run_0001/images/frame_02238.png"
        string_val: "../data/Training/Run_0001/images/frame_01762.png"
        string_val: "../data/Training/Run_0001/images/frame_04041.png"
        string_val: "../data/Training/Run_0001/images/frame_01874.png"
        string_val: "../data/Training/Run_0001/images/frame_02329.png"
        string_val: "../data/Training/Run_0001/images/frame_00763.png"
        string_val: "../data/Training/Run_0001/images/frame_02601.png"
        string_val: "../data/Training/Run_0001/images/frame_00822.png"
        string_val: "../data/Training/Run_0001/images/frame_04125.png"
        string_val: "../data/Training/Run_0001/images/frame_01270.png"
        string_val: "../data/Training/Run_0001/images/frame_03405.png"
        string_val: "../data/Training/Run_0001/images/frame_02311.png"
        string_val: "../data/Training/Run_0001/images/frame_03554.png"
        string_val: "../data/Training/Run_0001/images/frame_03106.png"
        string_val: "../data/Training/Run_0001/images/frame_01101.png"
        string_val: "../data/Training/Run_0001/images/frame_02170.png"
        string_val: "../data/Training/Run_0001/images/frame_00198.png"
        string_val: "../data/Training/Run_0001/images/frame_01849.png"
        string_val: "../data/Training/Run_0001/images/frame_02198.png"
        string_val: "../data/Training/Run_0001/images/frame_02018.png"
        string_val: "../data/Training/Run_0001/images/frame_02376.png"
        string_val: "../data/Training/Run_0001/images/frame_02005.png"
        string_val: "../data/Training/Run_0001/images/frame_03549.png"
        string_val: "../data/Training/Run_0001/images/frame_04251.png"
        string_val: "../data/Training/Run_0001/images/frame_04169.png"
        string_val: "../data/Training/Run_0001/images/frame_01885.png"
        string_val: "../data/Training/Run_0001/images/frame_01406.png"
        string_val: "../data/Training/Run_0001/images/frame_00259.png"
        string_val: "../data/Training/Run_0001/images/frame_00999.png"
        string_val: "../data/Training/Run_0001/images/frame_02647.png"
        string_val: "../data/Training/Run_0001/images/frame_01094.png"
        string_val: "../data/Training/Run_0001/images/frame_02054.png"
        string_val: "../data/Training/Run_0001/images/frame_03349.png"
        string_val: "../data/Training/Run_0001/images/frame_03988.png"
        string_val: "../data/Training/Run_0001/images/frame_03592.png"
        string_val: "../data/Training/Run_0001/images/frame_03626.png"
        string_val: "../data/Training/Run_0001/images/frame_00044.png"
        string_val: "../data/Training/Run_0001/images/frame_01567.png"
        string_val: "../data/Training/Run_0001/images/frame_00542.png"
        string_val: "../data/Training/Run_0001/images/frame_01250.png"
        string_val: "../data/Training/Run_0001/images/frame_02191.png"
        string_val: "../data/Training/Run_0001/images/frame_01015.png"
        string_val: "../data/Training/Run_0001/images/frame_00244.png"
        string_val: "../data/Training/Run_0001/images/frame_03786.png"
        string_val: "../data/Training/Run_0001/images/frame_01817.png"
        string_val: "../data/Training/Run_0001/images/frame_04477.png"
        string_val: "../data/Training/Run_0001/images/frame_04604.png"
        string_val: "../data/Training/Run_0001/images/frame_01850.png"
        string_val: "../data/Training/Run_0001/images/frame_01400.png"
        string_val: "../data/Training/Run_0001/images/frame_03962.png"
        string_val: "../data/Training/Run_0001/images/frame_00585.png"
        string_val: "../data/Training/Run_0001/images/frame_02495.png"
        string_val: "../data/Training/Run_0001/images/frame_04261.png"
        string_val: "../data/Training/Run_0001/images/frame_04606.png"
        string_val: "../data/Training/Run_0001/images/frame_04209.png"
        string_val: "../data/Training/Run_0001/images/frame_03413.png"
        string_val: "../data/Training/Run_0001/images/frame_03632.png"
        string_val: "../data/Training/Run_0001/images/frame_04677.png"
        string_val: "../data/Training/Run_0001/images/frame_01212.png"
        string_val: "../data/Training/Run_0001/images/frame_00312.png"
        string_val: "../data/Training/Run_0001/images/frame_03160.png"
        string_val: "../data/Training/Run_0001/images/frame_04694.png"
        string_val: "../data/Training/Run_0001/images/frame_00162.png"
        string_val: "../data/Training/Run_0001/images/frame_03008.png"
        string_val: "../data/Training/Run_0001/images/frame_00030.png"
        string_val: "../data/Training/Run_0001/images/frame_03365.png"
        string_val: "../data/Training/Run_0001/images/frame_01083.png"
        string_val: "../data/Training/Run_0001/images/frame_02887.png"
        string_val: "../data/Training/Run_0001/images/frame_04256.png"
        string_val: "../data/Training/Run_0001/images/frame_00983.png"
        string_val: "../data/Training/Run_0001/images/frame_04207.png"
        string_val: "../data/Training/Run_0001/images/frame_01678.png"
        string_val: "../data/Training/Run_0001/images/frame_01259.png"
        string_val: "../data/Training/Run_0001/images/frame_00068.png"
        string_val: "../data/Training/Run_0001/images/frame_00739.png"
        string_val: "../data/Training/Run_0001/images/frame_01669.png"
        string_val: "../data/Training/Run_0001/images/frame_03526.png"
        string_val: "../data/Training/Run_0001/images/frame_02169.png"
        string_val: "../data/Training/Run_0001/images/frame_02598.png"
        string_val: "../data/Training/Run_0001/images/frame_03219.png"
        string_val: "../data/Training/Run_0001/images/frame_01154.png"
        string_val: "../data/Training/Run_0001/images/frame_02884.png"
        string_val: "../data/Training/Run_0001/images/frame_01536.png"
        string_val: "../data/Training/Run_0001/images/frame_02913.png"
        string_val: "../data/Training/Run_0001/images/frame_01530.png"
        string_val: "../data/Training/Run_0001/images/frame_01583.png"
        string_val: "../data/Training/Run_0001/images/frame_03244.png"
        string_val: "../data/Training/Run_0001/images/frame_03541.png"
        string_val: "../data/Training/Run_0001/images/frame_01147.png"
        string_val: "../data/Training/Run_0001/images/frame_04213.png"
        string_val: "../data/Training/Run_0001/images/frame_00885.png"
        string_val: "../data/Training/Run_0001/images/frame_02914.png"
        string_val: "../data/Training/Run_0001/images/frame_04597.png"
        string_val: "../data/Training/Run_0001/images/frame_02578.png"
        string_val: "../data/Training/Run_0001/images/frame_03076.png"
        string_val: "../data/Training/Run_0001/images/frame_02199.png"
        string_val: "../data/Training/Run_0001/images/frame_01947.png"
        string_val: "../data/Training/Run_0001/images/frame_04496.png"
        string_val: "../data/Training/Run_0001/images/frame_04109.png"
        string_val: "../data/Training/Run_0001/images/frame_00787.png"
        string_val: "../data/Training/Run_0001/images/frame_03209.png"
        string_val: "../data/Training/Run_0001/images/frame_04343.png"
        string_val: "../data/Training/Run_0001/images/frame_00347.png"
        string_val: "../data/Training/Run_0001/images/frame_04089.png"
        string_val: "../data/Training/Run_0001/images/frame_04217.png"
        string_val: "../data/Training/Run_0001/images/frame_01129.png"
        string_val: "../data/Training/Run_0001/images/frame_04308.png"
        string_val: "../data/Training/Run_0001/images/frame_04023.png"
        string_val: "../data/Training/Run_0001/images/frame_00944.png"
        string_val: "../data/Training/Run_0001/images/frame_02789.png"
        string_val: "../data/Training/Run_0001/images/frame_03025.png"
        string_val: "../data/Training/Run_0001/images/frame_02708.png"
        string_val: "../data/Training/Run_0001/images/frame_02366.png"
        string_val: "../data/Training/Run_0001/images/frame_02086.png"
        string_val: "../data/Training/Run_0001/images/frame_00865.png"
        string_val: "../data/Training/Run_0001/images/frame_01449.png"
        string_val: "../data/Training/Run_0001/images/frame_03744.png"
        string_val: "../data/Training/Run_0001/images/frame_04556.png"
        string_val: "../data/Training/Run_0001/images/frame_01482.png"
        string_val: "../data/Training/Run_0001/images/frame_01873.png"
        string_val: "../data/Training/Run_0001/images/frame_00276.png"
        string_val: "../data/Training/Run_0001/images/frame_01394.png"
        string_val: "../data/Training/Run_0001/images/frame_02644.png"
        string_val: "../data/Training/Run_0001/images/frame_01470.png"
        string_val: "../data/Training/Run_0001/images/frame_00487.png"
        string_val: "../data/Training/Run_0001/images/frame_01377.png"
        string_val: "../data/Training/Run_0001/images/frame_04124.png"
        string_val: "../data/Training/Run_0001/images/frame_01208.png"
        string_val: "../data/Training/Run_0001/images/frame_03403.png"
        string_val: "../data/Training/Run_0001/images/frame_04296.png"
        string_val: "../data/Training/Run_0001/images/frame_00947.png"
        string_val: "../data/Training/Run_0001/images/frame_00826.png"
        string_val: "../data/Training/Run_0001/images/frame_01633.png"
        string_val: "../data/Training/Run_0001/images/frame_02410.png"
        string_val: "../data/Training/Run_0001/images/frame_02011.png"
        string_val: "../data/Training/Run_0001/images/frame_02745.png"
        string_val: "../data/Training/Run_0001/images/frame_03498.png"
        string_val: "../data/Training/Run_0001/images/frame_03784.png"
        string_val: "../data/Training/Run_0001/images/frame_02000.png"
        string_val: "../data/Training/Run_0001/images/frame_04388.png"
        string_val: "../data/Training/Run_0001/images/frame_01219.png"
        string_val: "../data/Training/Run_0001/images/frame_04434.png"
        string_val: "../data/Training/Run_0001/images/frame_00941.png"
        string_val: "../data/Training/Run_0001/images/frame_03478.png"
        string_val: "../data/Training/Run_0001/images/frame_04053.png"
        string_val: "../data/Training/Run_0001/images/frame_00651.png"
        string_val: "../data/Training/Run_0001/images/frame_02120.png"
        string_val: "../data/Training/Run_0001/images/frame_00303.png"
        string_val: "../data/Training/Run_0001/images/frame_00937.png"
        string_val: "../data/Training/Run_0001/images/frame_04417.png"
        string_val: "../data/Training/Run_0001/images/frame_02517.png"
        string_val: "../data/Training/Run_0001/images/frame_00361.png"
        string_val: "../data/Training/Run_0001/images/frame_00429.png"
        string_val: "../data/Training/Run_0001/images/frame_01366.png"
        string_val: "../data/Training/Run_0001/images/frame_01294.png"
        string_val: "../data/Training/Run_0001/images/frame_02360.png"
        string_val: "../data/Training/Run_0001/images/frame_01370.png"
        string_val: "../data/Training/Run_0001/images/frame_02465.png"
        string_val: "../data/Training/Run_0001/images/frame_02667.png"
        string_val: "../data/Training/Run_0001/images/frame_03845.png"
        string_val: "../data/Training/Run_0001/images/frame_03835.png"
        string_val: "../data/Training/Run_0001/images/frame_00223.png"
        string_val: "../data/Training/Run_0001/images/frame_01429.png"
        string_val: "../data/Training/Run_0001/images/frame_04273.png"
        string_val: "../data/Training/Run_0001/images/frame_01613.png"
        string_val: "../data/Training/Run_0001/images/frame_04049.png"
        string_val: "../data/Training/Run_0001/images/frame_01479.png"
        string_val: "../data/Training/Run_0001/images/frame_04264.png"
        string_val: "../data/Training/Run_0001/images/frame_00200.png"
        string_val: "../data/Training/Run_0001/images/frame_01902.png"
        string_val: "../data/Training/Run_0001/images/frame_01395.png"
        string_val: "../data/Training/Run_0001/images/frame_02478.png"
        string_val: "../data/Training/Run_0001/images/frame_02533.png"
        string_val: "../data/Training/Run_0001/images/frame_00035.png"
        string_val: "../data/Training/Run_0001/images/frame_01584.png"
        string_val: "../data/Training/Run_0001/images/frame_02260.png"
        string_val: "../data/Training/Run_0001/images/frame_01236.png"
        string_val: "../data/Training/Run_0001/images/frame_03971.png"
        string_val: "../data/Training/Run_0001/images/frame_03533.png"
        string_val: "../data/Training/Run_0001/images/frame_00581.png"
        string_val: "../data/Training/Run_0001/images/frame_00804.png"
        string_val: "../data/Training/Run_0001/images/frame_03044.png"
        string_val: "../data/Training/Run_0001/images/frame_02554.png"
        string_val: "../data/Training/Run_0001/images/frame_04465.png"
        string_val: "../data/Training/Run_0001/images/frame_00615.png"
        string_val: "../data/Training/Run_0001/images/frame_03653.png"
        string_val: "../data/Training/Run_0001/images/frame_03879.png"
        string_val: "../data/Training/Run_0001/images/frame_01354.png"
        string_val: "../data/Training/Run_0001/images/frame_04711.png"
        string_val: "../data/Training/Run_0001/images/frame_02325.png"
        string_val: "../data/Training/Run_0001/images/frame_04620.png"
        string_val: "../data/Training/Run_0001/images/frame_04254.png"
        string_val: "../data/Training/Run_0001/images/frame_04238.png"
        string_val: "../data/Training/Run_0001/images/frame_03005.png"
        string_val: "../data/Training/Run_0001/images/frame_03258.png"
        string_val: "../data/Training/Run_0001/images/frame_01362.png"
        string_val: "../data/Training/Run_0001/images/frame_00107.png"
        string_val: "../data/Training/Run_0001/images/frame_03944.png"
        string_val: "../data/Training/Run_0001/images/frame_00960.png"
        string_val: "../data/Training/Run_0001/images/frame_02154.png"
        string_val: "../data/Training/Run_0001/images/frame_03217.png"
        string_val: "../data/Training/Run_0001/images/frame_03181.png"
        string_val: "../data/Training/Run_0001/images/frame_01612.png"
        string_val: "../data/Training/Run_0001/images/frame_02157.png"
        string_val: "../data/Training/Run_0001/images/frame_03853.png"
        string_val: "../data/Training/Run_0001/images/frame_01831.png"
        string_val: "../data/Training/Run_0001/images/frame_01281.png"
        string_val: "../data/Training/Run_0001/images/frame_03957.png"
        string_val: "../data/Training/Run_0001/images/frame_03108.png"
        string_val: "../data/Training/Run_0001/images/frame_01489.png"
        string_val: "../data/Training/Run_0001/images/frame_02487.png"
        string_val: "../data/Training/Run_0001/images/frame_04033.png"
        string_val: "../data/Training/Run_0001/images/frame_00679.png"
        string_val: "../data/Training/Run_0001/images/frame_01050.png"
        string_val: "../data/Training/Run_0001/images/frame_01974.png"
        string_val: "../data/Training/Run_0001/images/frame_04135.png"
        string_val: "../data/Training/Run_0001/images/frame_01117.png"
        string_val: "../data/Training/Run_0001/images/frame_03748.png"
        string_val: "../data/Training/Run_0001/images/frame_03030.png"
        string_val: "../data/Training/Run_0001/images/frame_03185.png"
        string_val: "../data/Training/Run_0001/images/frame_02728.png"
        string_val: "../data/Training/Run_0001/images/frame_01803.png"
        string_val: "../data/Training/Run_0001/images/frame_00742.png"
        string_val: "../data/Training/Run_0001/images/frame_01674.png"
        string_val: "../data/Training/Run_0001/images/frame_00053.png"
        string_val: "../data/Training/Run_0001/images/frame_02475.png"
        string_val: "../data/Training/Run_0001/images/frame_04510.png"
        string_val: "../data/Training/Run_0001/images/frame_04676.png"
        string_val: "../data/Training/Run_0001/images/frame_03201.png"
        string_val: "../data/Training/Run_0001/images/frame_00773.png"
        string_val: "../data/Training/Run_0001/images/frame_00150.png"
        string_val: "../data/Training/Run_0001/images/frame_03058.png"
        string_val: "../data/Training/Run_0001/images/frame_04227.png"
        string_val: "../data/Training/Run_0001/images/frame_03649.png"
        string_val: "../data/Training/Run_0001/images/frame_04435.png"
        string_val: "../data/Training/Run_0001/images/frame_03196.png"
        string_val: "../data/Training/Run_0001/images/frame_00900.png"
        string_val: "../data/Training/Run_0001/images/frame_03426.png"
        string_val: "../data/Training/Run_0001/images/frame_02871.png"
        string_val: "../data/Training/Run_0001/images/frame_02307.png"
        string_val: "../data/Training/Run_0001/images/frame_03701.png"
        string_val: "../data/Training/Run_0001/images/frame_02766.png"
        string_val: "../data/Training/Run_0001/images/frame_02823.png"
        string_val: "../data/Training/Run_0001/images/frame_04195.png"
        string_val: "../data/Training/Run_0001/images/frame_02551.png"
        string_val: "../data/Training/Run_0001/images/frame_01605.png"
        string_val: "../data/Training/Run_0001/images/frame_03332.png"
        string_val: "../data/Training/Run_0001/images/frame_00368.png"
        string_val: "../data/Training/Run_0001/images/frame_04615.png"
        string_val: "../data/Training/Run_0001/images/frame_02110.png"
        string_val: "../data/Training/Run_0001/images/frame_04557.png"
        string_val: "../data/Training/Run_0001/images/frame_00443.png"
        string_val: "../data/Training/Run_0001/images/frame_00932.png"
        string_val: "../data/Training/Run_0001/images/frame_01607.png"
        string_val: "../data/Training/Run_0001/images/frame_02716.png"
        string_val: "../data/Training/Run_0001/images/frame_04221.png"
        string_val: "../data/Training/Run_0001/images/frame_00842.png"
        string_val: "../data/Training/Run_0001/images/frame_03915.png"
        string_val: "../data/Training/Run_0001/images/frame_02205.png"
        string_val: "../data/Training/Run_0001/images/frame_04232.png"
        string_val: "../data/Training/Run_0001/images/frame_02853.png"
        string_val: "../data/Training/Run_0001/images/frame_00261.png"
        string_val: "../data/Training/Run_0001/images/frame_03545.png"
        string_val: "../data/Training/Run_0001/images/frame_01269.png"
        string_val: "../data/Training/Run_0001/images/frame_02704.png"
        string_val: "../data/Training/Run_0001/images/frame_02700.png"
        string_val: "../data/Training/Run_0001/images/frame_02058.png"
        string_val: "../data/Training/Run_0001/images/frame_02610.png"
        string_val: "../data/Training/Run_0001/images/frame_00014.png"
        string_val: "../data/Training/Run_0001/images/frame_00802.png"
        string_val: "../data/Training/Run_0001/images/frame_01787.png"
        string_val: "../data/Training/Run_0001/images/frame_00825.png"
        string_val: "../data/Training/Run_0001/images/frame_01580.png"
        string_val: "../data/Training/Run_0001/images/frame_04255.png"
        string_val: "../data/Training/Run_0001/images/frame_01594.png"
        string_val: "../data/Training/Run_0001/images/frame_02779.png"
        string_val: "../data/Training/Run_0001/images/frame_02520.png"
        string_val: "../data/Training/Run_0001/images/frame_02375.png"
        string_val: "../data/Training/Run_0001/images/frame_03416.png"
        string_val: "../data/Training/Run_0001/images/frame_00464.png"
        string_val: "../data/Training/Run_0001/images/frame_02474.png"
        string_val: "../data/Training/Run_0001/images/frame_03764.png"
        string_val: "../data/Training/Run_0001/images/frame_03353.png"
        string_val: "../data/Training/Run_0001/images/frame_04487.png"
        string_val: "../data/Training/Run_0001/images/frame_03277.png"
        string_val: "../data/Training/Run_0001/images/frame_02388.png"
        string_val: "../data/Training/Run_0001/images/frame_04458.png"
        string_val: "../data/Training/Run_0001/images/frame_00595.png"
        string_val: "../data/Training/Run_0001/images/frame_03272.png"
        string_val: "../data/Training/Run_0001/images/frame_04250.png"
        string_val: "../data/Training/Run_0001/images/frame_02907.png"
        string_val: "../data/Training/Run_0001/images/frame_02556.png"
        string_val: "../data/Training/Run_0001/images/frame_01862.png"
        string_val: "../data/Training/Run_0001/images/frame_03492.png"
        string_val: "../data/Training/Run_0001/images/frame_03020.png"
        string_val: "../data/Training/Run_0001/images/frame_03079.png"
        string_val: "../data/Training/Run_0001/images/frame_02019.png"
        string_val: "../data/Training/Run_0001/images/frame_00399.png"
        string_val: "../data/Training/Run_0001/images/frame_01999.png"
        string_val: "../data/Training/Run_0001/images/frame_01368.png"
        string_val: "../data/Training/Run_0001/images/frame_03477.png"
        string_val: "../data/Training/Run_0001/images/frame_03343.png"
        string_val: "../data/Training/Run_0001/images/frame_00878.png"
        string_val: "../data/Training/Run_0001/images/frame_03508.png"
        string_val: "../data/Training/Run_0001/images/frame_00519.png"
        string_val: "../data/Training/Run_0001/images/frame_00189.png"
        string_val: "../data/Training/Run_0001/images/frame_03086.png"
        string_val: "../data/Training/Run_0001/images/frame_04175.png"
        string_val: "../data/Training/Run_0001/images/frame_02678.png"
        string_val: "../data/Training/Run_0001/images/frame_01304.png"
        string_val: "../data/Training/Run_0001/images/frame_04701.png"
        string_val: "../data/Training/Run_0001/images/frame_01446.png"
        string_val: "../data/Training/Run_0001/images/frame_04236.png"
        string_val: "../data/Training/Run_0001/images/frame_03645.png"
        string_val: "../data/Training/Run_0001/images/frame_03100.png"
        string_val: "../data/Training/Run_0001/images/frame_03467.png"
        string_val: "../data/Training/Run_0001/images/frame_00229.png"
        string_val: "../data/Training/Run_0001/images/frame_03829.png"
        string_val: "../data/Training/Run_0001/images/frame_04680.png"
        string_val: "../data/Training/Run_0001/images/frame_02315.png"
        string_val: "../data/Training/Run_0001/images/frame_01891.png"
        string_val: "../data/Training/Run_0001/images/frame_02153.png"
        string_val: "../data/Training/Run_0001/images/frame_03469.png"
        string_val: "../data/Training/Run_0001/images/frame_02773.png"
        string_val: "../data/Training/Run_0001/images/frame_02954.png"
        string_val: "../data/Training/Run_0001/images/frame_02289.png"
        string_val: "../data/Training/Run_0001/images/frame_00730.png"
        string_val: "../data/Training/Run_0001/images/frame_01854.png"
        string_val: "../data/Training/Run_0001/images/frame_00028.png"
        string_val: "../data/Training/Run_0001/images/frame_01166.png"
        string_val: "../data/Training/Run_0001/images/frame_00193.png"
        string_val: "../data/Training/Run_0001/images/frame_00396.png"
        string_val: "../data/Training/Run_0001/images/frame_02168.png"
        string_val: "../data/Training/Run_0001/images/frame_03351.png"
        string_val: "../data/Training/Run_0001/images/frame_02900.png"
        string_val: "../data/Training/Run_0001/images/frame_01704.png"
        string_val: "../data/Training/Run_0001/images/frame_02015.png"
        string_val: "../data/Training/Run_0001/images/frame_01798.png"
        string_val: "../data/Training/Run_0001/images/frame_03141.png"
        string_val: "../data/Training/Run_0001/images/frame_02008.png"
        string_val: "../data/Training/Run_0001/images/frame_01799.png"
        string_val: "../data/Training/Run_0001/images/frame_02963.png"
        string_val: "../data/Training/Run_0001/images/frame_02386.png"
        string_val: "../data/Training/Run_0001/images/frame_00124.png"
        string_val: "../data/Training/Run_0001/images/frame_03813.png"
        string_val: "../data/Training/Run_0001/images/frame_00772.png"
        string_val: "../data/Training/Run_0001/images/frame_03730.png"
        string_val: "../data/Training/Run_0001/images/frame_01334.png"
        string_val: "../data/Training/Run_0001/images/frame_02398.png"
        string_val: "../data/Training/Run_0001/images/frame_01872.png"
        string_val: "../data/Training/Run_0001/images/frame_03071.png"
        string_val: "../data/Training/Run_0001/images/frame_02101.png"
        string_val: "../data/Training/Run_0001/images/frame_02023.png"
        string_val: "../data/Training/Run_0001/images/frame_00346.png"
        string_val: "../data/Training/Run_0001/images/frame_02934.png"
        string_val: "../data/Training/Run_0001/images/frame_03287.png"
        string_val: "../data/Training/Run_0001/images/frame_01511.png"
        string_val: "../data/Training/Run_0001/images/frame_04134.png"
        string_val: "../data/Training/Run_0001/images/frame_00063.png"
        string_val: "../data/Training/Run_0001/images/frame_04294.png"
        string_val: "../data/Training/Run_0001/images/frame_04312.png"
        string_val: "../data/Training/Run_0001/images/frame_03993.png"
        string_val: "../data/Training/Run_0001/images/frame_04208.png"
        string_val: "../data/Training/Run_0001/images/frame_03975.png"
        string_val: "../data/Training/Run_0001/images/frame_04446.png"
        string_val: "../data/Training/Run_0001/images/frame_01700.png"
        string_val: "../data/Training/Run_0001/images/frame_03414.png"
        string_val: "../data/Training/Run_0001/images/frame_00627.png"
        string_val: "../data/Training/Run_0001/images/frame_01283.png"
        string_val: "../data/Training/Run_0001/images/frame_01821.png"
        string_val: "../data/Training/Run_0001/images/frame_02293.png"
        string_val: "../data/Training/Run_0001/images/frame_03680.png"
        string_val: "../data/Training/Run_0001/images/frame_01290.png"
        string_val: "../data/Training/Run_0001/images/frame_02342.png"
        string_val: "../data/Training/Run_0001/images/frame_01391.png"
        string_val: "../data/Training/Run_0001/images/frame_01882.png"
        string_val: "../data/Training/Run_0001/images/frame_03765.png"
        string_val: "../data/Training/Run_0001/images/frame_00712.png"
        string_val: "../data/Training/Run_0001/images/frame_01808.png"
        string_val: "../data/Training/Run_0001/images/frame_02431.png"
        string_val: "../data/Training/Run_0001/images/frame_03372.png"
        string_val: "../data/Training/Run_0001/images/frame_02709.png"
        string_val: "../data/Training/Run_0001/images/frame_01415.png"
        string_val: "../data/Training/Run_0001/images/frame_00868.png"
        string_val: "../data/Training/Run_0001/images/frame_04650.png"
        string_val: "../data/Training/Run_0001/images/frame_00858.png"
        string_val: "../data/Training/Run_0001/images/frame_01907.png"
        string_val: "../data/Training/Run_0001/images/frame_02777.png"
        string_val: "../data/Training/Run_0001/images/frame_00538.png"
        string_val: "../data/Training/Run_0001/images/frame_03459.png"
        string_val: "../data/Training/Run_0001/images/frame_03037.png"
        string_val: "../data/Training/Run_0001/images/frame_04340.png"
        string_val: "../data/Training/Run_0001/images/frame_01681.png"
        string_val: "../data/Training/Run_0001/images/frame_03777.png"
        string_val: "../data/Training/Run_0001/images/frame_02074.png"
        string_val: "../data/Training/Run_0001/images/frame_04176.png"
        string_val: "../data/Training/Run_0001/images/frame_02957.png"
        string_val: "../data/Training/Run_0001/images/frame_01658.png"
        string_val: "../data/Training/Run_0001/images/frame_00957.png"
        string_val: "../data/Training/Run_0001/images/frame_04585.png"
        string_val: "../data/Training/Run_0001/images/frame_01218.png"
        string_val: "../data/Training/Run_0001/images/frame_02683.png"
        string_val: "../data/Training/Run_0001/images/frame_01627.png"
        string_val: "../data/Training/Run_0001/images/frame_03179.png"
        string_val: "../data/Training/Run_0001/images/frame_01745.png"
        string_val: "../data/Training/Run_0001/images/frame_00744.png"
        string_val: "../data/Training/Run_0001/images/frame_02971.png"
        string_val: "../data/Training/Run_0001/images/frame_03590.png"
        string_val: "../data/Training/Run_0001/images/frame_00291.png"
        string_val: "../data/Training/Run_0001/images/frame_02119.png"
        string_val: "../data/Training/Run_0001/images/frame_02422.png"
        string_val: "../data/Training/Run_0001/images/frame_02492.png"
        string_val: "../data/Training/Run_0001/images/frame_00684.png"
        string_val: "../data/Training/Run_0001/images/frame_00135.png"
        string_val: "../data/Training/Run_0001/images/frame_00605.png"
        string_val: "../data/Training/Run_0001/images/frame_00658.png"
        string_val: "../data/Training/Run_0001/images/frame_03003.png"
        string_val: "../data/Training/Run_0001/images/frame_03173.png"
        string_val: "../data/Training/Run_0001/images/frame_04332.png"
        string_val: "../data/Training/Run_0001/images/frame_03911.png"
        string_val: "../data/Training/Run_0001/images/frame_02216.png"
        string_val: "../data/Training/Run_0001/images/frame_02564.png"
        string_val: "../data/Training/Run_0001/images/frame_02794.png"
        string_val: "../data/Training/Run_0001/images/frame_00640.png"
        string_val: "../data/Training/Run_0001/images/frame_02684.png"
        string_val: "../data/Training/Run_0001/images/frame_04022.png"
        string_val: "../data/Training/Run_0001/images/frame_04718.png"
        string_val: "../data/Training/Run_0001/images/frame_02213.png"
        string_val: "../data/Training/Run_0001/images/frame_02402.png"
        string_val: "../data/Training/Run_0001/images/frame_03966.png"
        string_val: "../data/Training/Run_0001/images/frame_01702.png"
        string_val: "../data/Training/Run_0001/images/frame_03364.png"
        string_val: "../data/Training/Run_0001/images/frame_01716.png"
        string_val: "../data/Training/Run_0001/images/frame_00714.png"
        string_val: "../data/Training/Run_0001/images/frame_00866.png"
        string_val: "../data/Training/Run_0001/images/frame_00631.png"
        string_val: "../data/Training/Run_0001/images/frame_00374.png"
        string_val: "../data/Training/Run_0001/images/frame_04192.png"
        string_val: "../data/Training/Run_0001/images/frame_01146.png"
        string_val: "../data/Training/Run_0001/images/frame_01246.png"
        string_val: "../data/Training/Run_0001/images/frame_02611.png"
        string_val: "../data/Training/Run_0001/images/frame_01913.png"
        string_val: "../data/Training/Run_0001/images/frame_02098.png"
        string_val: "../data/Training/Run_0001/images/frame_01938.png"
        string_val: "../data/Training/Run_0001/images/frame_04218.png"
        string_val: "../data/Training/Run_0001/images/frame_01364.png"
        string_val: "../data/Training/Run_0001/images/frame_01295.png"
        string_val: "../data/Training/Run_0001/images/frame_02094.png"
        string_val: "../data/Training/Run_0001/images/frame_00561.png"
        string_val: "../data/Training/Run_0001/images/frame_03321.png"
        string_val: "../data/Training/Run_0001/images/frame_02562.png"
        string_val: "../data/Training/Run_0001/images/frame_00543.png"
        string_val: "../data/Training/Run_0001/images/frame_01352.png"
        string_val: "../data/Training/Run_0001/images/frame_02082.png"
        string_val: "../data/Training/Run_0001/images/frame_02893.png"
        string_val: "../data/Training/Run_0001/images/frame_02173.png"
        string_val: "../data/Training/Run_0001/images/frame_01782.png"
        string_val: "../data/Training/Run_0001/images/frame_03517.png"
        string_val: "../data/Training/Run_0001/images/frame_02819.png"
        string_val: "../data/Training/Run_0001/images/frame_02648.png"
        string_val: "../data/Training/Run_0001/images/frame_03038.png"
        string_val: "../data/Training/Run_0001/images/frame_03358.png"
        string_val: "../data/Training/Run_0001/images/frame_02076.png"
        string_val: "../data/Training/Run_0001/images/frame_00686.png"
        string_val: "../data/Training/Run_0001/images/frame_00110.png"
        string_val: "../data/Training/Run_0001/images/frame_03523.png"
        string_val: "../data/Training/Run_0001/images/frame_01609.png"
        string_val: "../data/Training/Run_0001/images/frame_01966.png"
        string_val: "../data/Training/Run_0001/images/frame_03444.png"
        string_val: "../data/Training/Run_0001/images/frame_03559.png"
        string_val: "../data/Training/Run_0001/images/frame_01427.png"
        string_val: "../data/Training/Run_0001/images/frame_01068.png"
        string_val: "../data/Training/Run_0001/images/frame_01723.png"
        string_val: "../data/Training/Run_0001/images/frame_01331.png"
        string_val: "../data/Training/Run_0001/images/frame_03661.png"
        string_val: "../data/Training/Run_0001/images/frame_04246.png"
        string_val: "../data/Training/Run_0001/images/frame_01019.png"
        string_val: "../data/Training/Run_0001/images/frame_04302.png"
        string_val: "../data/Training/Run_0001/images/frame_02527.png"
        string_val: "../data/Training/Run_0001/images/frame_04673.png"
        string_val: "../data/Training/Run_0001/images/frame_01242.png"
        string_val: "../data/Training/Run_0001/images/frame_03555.png"
        string_val: "../data/Training/Run_0001/images/frame_03991.png"
        string_val: "../data/Training/Run_0001/images/frame_02031.png"
        string_val: "../data/Training/Run_0001/images/frame_01267.png"
        string_val: "../data/Training/Run_0001/images/frame_03908.png"
        string_val: "../data/Training/Run_0001/images/frame_03525.png"
        string_val: "../data/Training/Run_0001/images/frame_00171.png"
        string_val: "../data/Training/Run_0001/images/frame_02995.png"
        string_val: "../data/Training/Run_0001/images/frame_00653.png"
        string_val: "../data/Training/Run_0001/images/frame_01099.png"
        string_val: "../data/Training/Run_0001/images/frame_00874.png"
        string_val: "../data/Training/Run_0001/images/frame_00466.png"
        string_val: "../data/Training/Run_0001/images/frame_03691.png"
        string_val: "../data/Training/Run_0001/images/frame_04085.png"
        string_val: "../data/Training/Run_0001/images/frame_00771.png"
        string_val: "../data/Training/Run_0001/images/frame_01092.png"
        string_val: "../data/Training/Run_0001/images/frame_02552.png"
        string_val: "../data/Training/Run_0001/images/frame_04423.png"
        string_val: "../data/Training/Run_0001/images/frame_01001.png"
        string_val: "../data/Training/Run_0001/images/frame_02802.png"
        string_val: "../data/Training/Run_0001/images/frame_04452.png"
        string_val: "../data/Training/Run_0001/images/frame_03898.png"
        string_val: "../data/Training/Run_0001/images/frame_04378.png"
        string_val: "../data/Training/Run_0001/images/frame_00843.png"
        string_val: "../data/Training/Run_0001/images/frame_00119.png"
        string_val: "../data/Training/Run_0001/images/frame_00641.png"
        string_val: "../data/Training/Run_0001/images/frame_00740.png"
        string_val: "../data/Training/Run_0001/images/frame_02408.png"
        string_val: "../data/Training/Run_0001/images/frame_04564.png"
        string_val: "../data/Training/Run_0001/images/frame_03796.png"
        string_val: "../data/Training/Run_0001/images/frame_03864.png"
        string_val: "../data/Training/Run_0001/images/frame_03977.png"
        string_val: "../data/Training/Run_0001/images/frame_04506.png"
        string_val: "../data/Training/Run_0001/images/frame_00706.png"
        string_val: "../data/Training/Run_0001/images/frame_03617.png"
        string_val: "../data/Training/Run_0001/images/frame_00145.png"
        string_val: "../data/Training/Run_0001/images/frame_01496.png"
        string_val: "../data/Training/Run_0001/images/frame_03297.png"
        string_val: "../data/Training/Run_0001/images/frame_03826.png"
        string_val: "../data/Training/Run_0001/images/frame_01795.png"
        string_val: "../data/Training/Run_0001/images/frame_00776.png"
        string_val: "../data/Training/Run_0001/images/frame_04634.png"
        string_val: "../data/Training/Run_0001/images/frame_02975.png"
        string_val: "../data/Training/Run_0001/images/frame_02285.png"
        string_val: "../data/Training/Run_0001/images/frame_02118.png"
        string_val: "../data/Training/Run_0001/images/frame_00817.png"
        string_val: "../data/Training/Run_0001/images/frame_00058.png"
        string_val: "../data/Training/Run_0001/images/frame_04445.png"
        string_val: "../data/Training/Run_0001/images/frame_01467.png"
        string_val: "../data/Training/Run_0001/images/frame_03557.png"
        string_val: "../data/Training/Run_0001/images/frame_00490.png"
        string_val: "../data/Training/Run_0001/images/frame_01840.png"
        string_val: "../data/Training/Run_0001/images/frame_02579.png"
        string_val: "../data/Training/Run_0001/images/frame_04347.png"
        string_val: "../data/Training/Run_0001/images/frame_03267.png"
        string_val: "../data/Training/Run_0001/images/frame_04234.png"
        string_val: "../data/Training/Run_0001/images/frame_00452.png"
        string_val: "../data/Training/Run_0001/images/frame_03558.png"
        string_val: "../data/Training/Run_0001/images/frame_02276.png"
        string_val: "../data/Training/Run_0001/images/frame_00876.png"
        string_val: "../data/Training/Run_0001/images/frame_01266.png"
        string_val: "../data/Training/Run_0001/images/frame_04112.png"
        string_val: "../data/Training/Run_0001/images/frame_00170.png"
        string_val: "../data/Training/Run_0001/images/frame_01650.png"
        string_val: "../data/Training/Run_0001/images/frame_04070.png"
        string_val: "../data/Training/Run_0001/images/frame_00516.png"
        string_val: "../data/Training/Run_0001/images/frame_02711.png"
        string_val: "../data/Training/Run_0001/images/frame_03490.png"
        string_val: "../data/Training/Run_0001/images/frame_01555.png"
        string_val: "../data/Training/Run_0001/images/frame_04721.png"
        string_val: "../data/Training/Run_0001/images/frame_00428.png"
        string_val: "../data/Training/Run_0001/images/frame_04666.png"
        string_val: "../data/Training/Run_0001/images/frame_03537.png"
        string_val: "../data/Training/Run_0001/images/frame_01549.png"
        string_val: "../data/Training/Run_0001/images/frame_02659.png"
        string_val: "../data/Training/Run_0001/images/frame_04442.png"
        string_val: "../data/Training/Run_0001/images/frame_02323.png"
        string_val: "../data/Training/Run_0001/images/frame_03646.png"
        string_val: "../data/Training/Run_0001/images/frame_04149.png"
        string_val: "../data/Training/Run_0001/images/frame_04439.png"
        string_val: "../data/Training/Run_0001/images/frame_03760.png"
        string_val: "../data/Training/Run_0001/images/frame_02639.png"
        string_val: "../data/Training/Run_0001/images/frame_04383.png"
        string_val: "../data/Training/Run_0001/images/frame_00480.png"
        string_val: "../data/Training/Run_0001/images/frame_03721.png"
        string_val: "../data/Training/Run_0001/images/frame_00207.png"
        string_val: "../data/Training/Run_0001/images/frame_04374.png"
        string_val: "../data/Training/Run_0001/images/frame_02116.png"
        string_val: "../data/Training/Run_0001/images/frame_01939.png"
        string_val: "../data/Training/Run_0001/images/frame_04224.png"
        string_val: "../data/Training/Run_0001/images/frame_03855.png"
        string_val: "../data/Training/Run_0001/images/frame_00477.png"
        string_val: "../data/Training/Run_0001/images/frame_00034.png"
        string_val: "../data/Training/Run_0001/images/frame_03689.png"
        string_val: "../data/Training/Run_0001/images/frame_04691.png"
        string_val: "../data/Training/Run_0001/images/frame_02951.png"
        string_val: "../data/Training/Run_0001/images/frame_03362.png"
        string_val: "../data/Training/Run_0001/images/frame_01547.png"
        string_val: "../data/Training/Run_0001/images/frame_04324.png"
        string_val: "../data/Training/Run_0001/images/frame_03499.png"
        string_val: "../data/Training/Run_0001/images/frame_02491.png"
        string_val: "../data/Training/Run_0001/images/frame_00210.png"
        string_val: "../data/Training/Run_0001/images/frame_00958.png"
        string_val: "../data/Training/Run_0001/images/frame_04355.png"
        string_val: "../data/Training/Run_0001/images/frame_04391.png"
        string_val: "../data/Training/Run_0001/images/frame_04536.png"
        string_val: "../data/Training/Run_0001/images/frame_01217.png"
        string_val: "../data/Training/Run_0001/images/frame_02308.png"
        string_val: "../data/Training/Run_0001/images/frame_02915.png"
        string_val: "../data/Training/Run_0001/images/frame_01020.png"
        string_val: "../data/Training/Run_0001/images/frame_04504.png"
        string_val: "../data/Training/Run_0001/images/frame_02269.png"
        string_val: "../data/Training/Run_0001/images/frame_00927.png"
        string_val: "../data/Training/Run_0001/images/frame_00493.png"
        string_val: "../data/Training/Run_0001/images/frame_00055.png"
        string_val: "../data/Training/Run_0001/images/frame_04641.png"
        string_val: "../data/Training/Run_0001/images/frame_00942.png"
        string_val: "../data/Training/Run_0001/images/frame_03841.png"
        string_val: "../data/Training/Run_0001/images/frame_01670.png"
        string_val: "../data/Training/Run_0001/images/frame_01901.png"
        string_val: "../data/Training/Run_0001/images/frame_03118.png"
        string_val: "../data/Training/Run_0001/images/frame_01042.png"
        string_val: "../data/Training/Run_0001/images/frame_02034.png"
        string_val: "../data/Training/Run_0001/images/frame_00196.png"
        string_val: "../data/Training/Run_0001/images/frame_02518.png"
        string_val: "../data/Training/Run_0001/images/frame_01292.png"
        string_val: "../data/Training/Run_0001/images/frame_02967.png"
        string_val: "../data/Training/Run_0001/images/frame_00984.png"
        string_val: "../data/Training/Run_0001/images/frame_00645.png"
        string_val: "../data/Training/Run_0001/images/frame_01535.png"
        string_val: "../data/Training/Run_0001/images/frame_01505.png"
        string_val: "../data/Training/Run_0001/images/frame_03628.png"
        string_val: "../data/Training/Run_0001/images/frame_00548.png"
        string_val: "../data/Training/Run_0001/images/frame_00161.png"
        string_val: "../data/Training/Run_0001/images/frame_00319.png"
        string_val: "../data/Training/Run_0001/images/frame_00049.png"
        string_val: "../data/Training/Run_0001/images/frame_02155.png"
        string_val: "../data/Training/Run_0001/images/frame_02532.png"
        string_val: "../data/Training/Run_0001/images/frame_03346.png"
        string_val: "../data/Training/Run_0001/images/frame_01036.png"
        string_val: "../data/Training/Run_0001/images/frame_02377.png"
        string_val: "../data/Training/Run_0001/images/frame_03431.png"
        string_val: "../data/Training/Run_0001/images/frame_02299.png"
        string_val: "../data/Training/Run_0001/images/frame_03919.png"
        string_val: "../data/Training/Run_0001/images/frame_04647.png"
        string_val: "../data/Training/Run_0001/images/frame_04360.png"
        string_val: "../data/Training/Run_0001/images/frame_03657.png"
        string_val: "../data/Training/Run_0001/images/frame_03460.png"
        string_val: "../data/Training/Run_0001/images/frame_01572.png"
        string_val: "../data/Training/Run_0001/images/frame_01996.png"
        string_val: "../data/Training/Run_0001/images/frame_04231.png"
        string_val: "../data/Training/Run_0001/images/frame_03780.png"
        string_val: "../data/Training/Run_0001/images/frame_02543.png"
        string_val: "../data/Training/Run_0001/images/frame_00215.png"
        string_val: "../data/Training/Run_0001/images/frame_00408.png"
        string_val: "../data/Training/Run_0001/images/frame_03783.png"
        string_val: "../data/Training/Run_0001/images/frame_04538.png"
        string_val: "../data/Training/Run_0001/images/frame_00680.png"
        string_val: "../data/Training/Run_0001/images/frame_03578.png"
        string_val: "../data/Training/Run_0001/images/frame_00117.png"
        string_val: "../data/Training/Run_0001/images/frame_01216.png"
        string_val: "../data/Training/Run_0001/images/frame_03137.png"
        string_val: "../data/Training/Run_0001/images/frame_04260.png"
        string_val: "../data/Training/Run_0001/images/frame_01254.png"
        string_val: "../data/Training/Run_0001/images/frame_04643.png"
        string_val: "../data/Training/Run_0001/images/frame_04091.png"
        string_val: "../data/Training/Run_0001/images/frame_00980.png"
        string_val: "../data/Training/Run_0001/images/frame_02270.png"
        string_val: "../data/Training/Run_0001/images/frame_02956.png"
        string_val: "../data/Training/Run_0001/images/frame_01997.png"
        string_val: "../data/Training/Run_0001/images/frame_00283.png"
        string_val: "../data/Training/Run_0001/images/frame_04052.png"
        string_val: "../data/Training/Run_0001/images/frame_02081.png"
        string_val: "../data/Training/Run_0001/images/frame_00977.png"
        string_val: "../data/Training/Run_0001/images/frame_04464.png"
        string_val: "../data/Training/Run_0001/images/frame_00001.png"
        string_val: "../data/Training/Run_0001/images/frame_03240.png"
        string_val: "../data/Training/Run_0001/images/frame_00419.png"
        string_val: "../data/Training/Run_0001/images/frame_04476.png"
        string_val: "../data/Training/Run_0001/images/frame_01438.png"
        string_val: "../data/Training/Run_0001/images/frame_01806.png"
        string_val: "../data/Training/Run_0001/images/frame_00484.png"
        string_val: "../data/Training/Run_0001/images/frame_02815.png"
        string_val: "../data/Training/Run_0001/images/frame_01503.png"
        string_val: "../data/Training/Run_0001/images/frame_02851.png"
        string_val: "../data/Training/Run_0001/images/frame_02561.png"
        string_val: "../data/Training/Run_0001/images/frame_03737.png"
        string_val: "../data/Training/Run_0001/images/frame_03799.png"
        string_val: "../data/Training/Run_0001/images/frame_00369.png"
        string_val: "../data/Training/Run_0001/images/frame_02992.png"
        string_val: "../data/Training/Run_0001/images/frame_00926.png"
        string_val: "../data/Training/Run_0001/images/frame_01734.png"
        string_val: "../data/Training/Run_0001/images/frame_02623.png"
        string_val: "../data/Training/Run_0001/images/frame_01164.png"
        string_val: "../data/Training/Run_0001/images/frame_04686.png"
        string_val: "../data/Training/Run_0001/images/frame_03619.png"
        string_val: "../data/Training/Run_0001/images/frame_03034.png"
        string_val: "../data/Training/Run_0001/images/frame_03329.png"
        string_val: "../data/Training/Run_0001/images/frame_01929.png"
        string_val: "../data/Training/Run_0001/images/frame_00857.png"
        string_val: "../data/Training/Run_0001/images/frame_03980.png"
        string_val: "../data/Training/Run_0001/images/frame_02461.png"
        string_val: "../data/Training/Run_0001/images/frame_02912.png"
        string_val: "../data/Training/Run_0001/images/frame_04475.png"
        string_val: "../data/Training/Run_0001/images/frame_00433.png"
        string_val: "../data/Training/Run_0001/images/frame_04077.png"
        string_val: "../data/Training/Run_0001/images/frame_02791.png"
        string_val: "../data/Training/Run_0001/images/frame_02421.png"
        string_val: "../data/Training/Run_0001/images/frame_01928.png"
        string_val: "../data/Training/Run_0001/images/frame_01445.png"
        string_val: "../data/Training/Run_0001/images/frame_02252.png"
        string_val: "../data/Training/Run_0001/images/frame_02849.png"
        string_val: "../data/Training/Run_0001/images/frame_02227.png"
        string_val: "../data/Training/Run_0001/images/frame_02292.png"
        string_val: "../data/Training/Run_0001/images/frame_03251.png"
        string_val: "../data/Training/Run_0001/images/frame_01382.png"
        string_val: "../data/Training/Run_0001/images/frame_01721.png"
        string_val: "../data/Training/Run_0001/images/frame_02273.png"
        string_val: "../data/Training/Run_0001/images/frame_01648.png"
        string_val: "../data/Training/Run_0001/images/frame_04031.png"
        string_val: "../data/Training/Run_0001/images/frame_00608.png"
        string_val: "../data/Training/Run_0001/images/frame_04017.png"
        string_val: "../data/Training/Run_0001/images/frame_04709.png"
        string_val: "../data/Training/Run_0001/images/frame_01485.png"
        string_val: "../data/Training/Run_0001/images/frame_00384.png"
        string_val: "../data/Training/Run_0001/images/frame_01247.png"
        string_val: "../data/Training/Run_0001/images/frame_01183.png"
        string_val: "../data/Training/Run_0001/images/frame_00473.png"
        string_val: "../data/Training/Run_0001/images/frame_01390.png"
        string_val: "../data/Training/Run_0001/images/frame_03116.png"
        string_val: "../data/Training/Run_0001/images/frame_04485.png"
        string_val: "../data/Training/Run_0001/images/frame_03869.png"
        string_val: "../data/Training/Run_0001/images/frame_00820.png"
        string_val: "../data/Training/Run_0001/images/frame_04656.png"
        string_val: "../data/Training/Run_0001/images/frame_01253.png"
        string_val: "../data/Training/Run_0001/images/frame_01979.png"
        string_val: "../data/Training/Run_0001/images/frame_03468.png"
        string_val: "../data/Training/Run_0001/images/frame_02825.png"
        string_val: "../data/Training/Run_0001/images/frame_00173.png"
        string_val: "../data/Training/Run_0001/images/frame_04665.png"
        string_val: "../data/Training/Run_0001/images/frame_03439.png"
        string_val: "../data/Training/Run_0001/images/frame_03717.png"
        string_val: "../data/Training/Run_0001/images/frame_00376.png"
        string_val: "../data/Training/Run_0001/images/frame_00607.png"
        string_val: "../data/Training/Run_0001/images/frame_02070.png"
        string_val: "../data/Training/Run_0001/images/frame_01592.png"
        string_val: "../data/Training/Run_0001/images/frame_04008.png"
        string_val: "../data/Training/Run_0001/images/frame_04658.png"
        string_val: "../data/Training/Run_0001/images/frame_00722.png"
        string_val: "../data/Training/Run_0001/images/frame_02203.png"
        string_val: "../data/Training/Run_0001/images/frame_03639.png"
        string_val: "../data/Training/Run_0001/images/frame_04317.png"
        string_val: "../data/Training/Run_0001/images/frame_04440.png"
        string_val: "../data/Training/Run_0001/images/frame_04433.png"
        string_val: "../data/Training/Run_0001/images/frame_00416.png"
        string_val: "../data/Training/Run_0001/images/frame_02100.png"
        string_val: "../data/Training/Run_0001/images/frame_02827.png"
        string_val: "../data/Training/Run_0001/images/frame_02053.png"
        string_val: "../data/Training/Run_0001/images/frame_02385.png"
        string_val: "../data/Training/Run_0001/images/frame_04316.png"
        string_val: "../data/Training/Run_0001/images/frame_01263.png"
        string_val: "../data/Training/Run_0001/images/frame_04099.png"
        string_val: "../data/Training/Run_0001/images/frame_04622.png"
        string_val: "../data/Training/Run_0001/images/frame_00112.png"
        string_val: "../data/Training/Run_0001/images/frame_02960.png"
        string_val: "../data/Training/Run_0001/images/frame_03400.png"
        string_val: "../data/Training/Run_0001/images/frame_02588.png"
        string_val: "../data/Training/Run_0001/images/frame_00898.png"
        string_val: "../data/Training/Run_0001/images/frame_01384.png"
        string_val: "../data/Training/Run_0001/images/frame_00535.png"
        string_val: "../data/Training/Run_0001/images/frame_03345.png"
        string_val: "../data/Training/Run_0001/images/frame_04479.png"
        string_val: "../data/Training/Run_0001/images/frame_03940.png"
        string_val: "../data/Training/Run_0001/images/frame_01842.png"
        string_val: "../data/Training/Run_0001/images/frame_01595.png"
        string_val: "../data/Training/Run_0001/images/frame_02949.png"
        string_val: "../data/Training/Run_0001/images/frame_02121.png"
        string_val: "../data/Training/Run_0001/images/frame_02186.png"
        string_val: "../data/Training/Run_0001/images/frame_01672.png"
        string_val: "../data/Training/Run_0001/images/frame_01139.png"
        string_val: "../data/Training/Run_0001/images/frame_04025.png"
        string_val: "../data/Training/Run_0001/images/frame_04281.png"
        string_val: "../data/Training/Run_0001/images/frame_00871.png"
        string_val: "../data/Training/Run_0001/images/frame_02877.png"
        string_val: "../data/Training/Run_0001/images/frame_02494.png"
        string_val: "../data/Training/Run_0001/images/frame_04197.png"
        string_val: "../data/Training/Run_0001/images/frame_01628.png"
        string_val: "../data/Training/Run_0001/images/frame_01908.png"
        string_val: "../data/Training/Run_0001/images/frame_00639.png"
        string_val: "../data/Training/Run_0001/images/frame_04066.png"
        string_val: "../data/Training/Run_0001/images/frame_02969.png"
        string_val: "../data/Training/Run_0001/images/frame_04321.png"
        string_val: "../data/Training/Run_0001/images/frame_02968.png"
        string_val: "../data/Training/Run_0001/images/frame_01451.png"
        string_val: "../data/Training/Run_0001/images/frame_01683.png"
        string_val: "../data/Training/Run_0001/images/frame_01508.png"
        string_val: "../data/Training/Run_0001/images/frame_04432.png"
        string_val: "../data/Training/Run_0001/images/frame_01838.png"
        string_val: "../data/Training/Run_0001/images/frame_01127.png"
        string_val: "../data/Training/Run_0001/images/frame_03214.png"
        string_val: "../data/Training/Run_0001/images/frame_04524.png"
        string_val: "../data/Training/Run_0001/images/frame_01818.png"
        string_val: "../data/Training/Run_0001/images/frame_00169.png"
        string_val: "../data/Training/Run_0001/images/frame_03503.png"
        string_val: "../data/Training/Run_0001/images/frame_03663.png"
        string_val: "../data/Training/Run_0001/images/frame_04268.png"
        string_val: "../data/Training/Run_0001/images/frame_00559.png"
        string_val: "../data/Training/Run_0001/images/frame_02364.png"
        string_val: "../data/Training/Run_0001/images/frame_03304.png"
        string_val: "../data/Training/Run_0001/images/frame_01043.png"
        string_val: "../data/Training/Run_0001/images/frame_03941.png"
        string_val: "../data/Training/Run_0001/images/frame_00253.png"
        string_val: "../data/Training/Run_0001/images/frame_04257.png"
        string_val: "../data/Training/Run_0001/images/frame_01646.png"
        string_val: "../data/Training/Run_0001/images/frame_00481.png"
        string_val: "../data/Training/Run_0001/images/frame_02001.png"
        string_val: "../data/Training/Run_0001/images/frame_00676.png"
        string_val: "../data/Training/Run_0001/images/frame_02830.png"
        string_val: "../data/Training/Run_0001/images/frame_01846.png"
        string_val: "../data/Training/Run_0001/images/frame_01340.png"
        string_val: "../data/Training/Run_0001/images/frame_00401.png"
        string_val: "../data/Training/Run_0001/images/frame_03231.png"
        string_val: "../data/Training/Run_0001/images/frame_01307.png"
        string_val: "../data/Training/Run_0001/images/frame_02113.png"
        string_val: "../data/Training/Run_0001/images/frame_00596.png"
        string_val: "../data/Training/Run_0001/images/frame_03536.png"
        string_val: "../data/Training/Run_0001/images/frame_02105.png"
        string_val: "../data/Training/Run_0001/images/frame_02897.png"
        string_val: "../data/Training/Run_0001/images/frame_00591.png"
        string_val: "../data/Training/Run_0001/images/frame_00437.png"
        string_val: "../data/Training/Run_0001/images/frame_01876.png"
        string_val: "../data/Training/Run_0001/images/frame_02338.png"
        string_val: "../data/Training/Run_0001/images/frame_01035.png"
        string_val: "../data/Training/Run_0001/images/frame_02821.png"
        string_val: "../data/Training/Run_0001/images/frame_00120.png"
        string_val: "../data/Training/Run_0001/images/frame_00552.png"
        string_val: "../data/Training/Run_0001/images/frame_00849.png"
        string_val: "../data/Training/Run_0001/images/frame_01341.png"
        string_val: "../data/Training/Run_0001/images/frame_02800.png"
        string_val: "../data/Training/Run_0001/images/frame_02570.png"
        string_val: "../data/Training/Run_0001/images/frame_03033.png"
        string_val: "../data/Training/Run_0001/images/frame_00794.png"
        string_val: "../data/Training/Run_0001/images/frame_04685.png"
        string_val: "../data/Training/Run_0001/images/frame_03407.png"
        string_val: "../data/Training/Run_0001/images/frame_00047.png"
        string_val: "../data/Training/Run_0001/images/frame_01185.png"
        string_val: "../data/Training/Run_0001/images/frame_02065.png"
        string_val: "../data/Training/Run_0001/images/frame_03283.png"
        string_val: "../data/Training/Run_0001/images/frame_03147.png"
        string_val: "../data/Training/Run_0001/images/frame_01230.png"
        string_val: "../data/Training/Run_0001/images/frame_04248.png"
        string_val: "../data/Training/Run_0001/images/frame_03012.png"
        string_val: "../data/Training/Run_0001/images/frame_02220.png"
        string_val: "../data/Training/Run_0001/images/frame_04362.png"
        string_val: "../data/Training/Run_0001/images/frame_01457.png"
        string_val: "../data/Training/Run_0001/images/frame_01305.png"
        string_val: "../data/Training/Run_0001/images/frame_00965.png"
        string_val: "../data/Training/Run_0001/images/frame_01309.png"
        string_val: "../data/Training/Run_0001/images/frame_03963.png"
        string_val: "../data/Training/Run_0001/images/frame_02812.png"
        string_val: "../data/Training/Run_0001/images/frame_02450.png"
        string_val: "../data/Training/Run_0001/images/frame_01024.png"
        string_val: "../data/Training/Run_0001/images/frame_00711.png"
        string_val: "../data/Training/Run_0001/images/frame_01591.png"
        string_val: "../data/Training/Run_0001/images/frame_04351.png"
        string_val: "../data/Training/Run_0001/images/frame_04063.png"
        string_val: "../data/Training/Run_0001/images/frame_00293.png"
        string_val: "../data/Training/Run_0001/images/frame_03535.png"
        string_val: "../data/Training/Run_0001/images/frame_00948.png"
        string_val: "../data/Training/Run_0001/images/frame_01143.png"
        string_val: "../data/Training/Run_0001/images/frame_01014.png"
        string_val: "../data/Training/Run_0001/images/frame_02284.png"
        string_val: "../data/Training/Run_0001/images/frame_04186.png"
        string_val: "../data/Training/Run_0001/images/frame_01714.png"
        string_val: "../data/Training/Run_0001/images/frame_03631.png"
        string_val: "../data/Training/Run_0001/images/frame_02751.png"
        string_val: "../data/Training/Run_0001/images/frame_03998.png"
        string_val: "../data/Training/Run_0001/images/frame_00099.png"
        string_val: "../data/Training/Run_0001/images/frame_02313.png"
        string_val: "../data/Training/Run_0001/images/frame_02744.png"
        string_val: "../data/Training/Run_0001/images/frame_04421.png"
        string_val: "../data/Training/Run_0001/images/frame_01772.png"
        string_val: "../data/Training/Run_0001/images/frame_03929.png"
        string_val: "../data/Training/Run_0001/images/frame_00352.png"
        string_val: "../data/Training/Run_0001/images/frame_01401.png"
        string_val: "../data/Training/Run_0001/images/frame_04166.png"
        string_val: "../data/Training/Run_0001/images/frame_01877.png"
        string_val: "../data/Training/Run_0001/images/frame_04274.png"
        string_val: "../data/Training/Run_0001/images/frame_00474.png"
        string_val: "../data/Training/Run_0001/images/frame_04640.png"
        string_val: "../data/Training/Run_0001/images/frame_01491.png"
        string_val: "../data/Training/Run_0001/images/frame_01735.png"
        string_val: "../data/Training/Run_0001/images/frame_00514.png"
        string_val: "../data/Training/Run_0001/images/frame_02359.png"
        string_val: "../data/Training/Run_0001/images/frame_03877.png"
        string_val: "../data/Training/Run_0001/images/frame_00003.png"
        string_val: "../data/Training/Run_0001/images/frame_03611.png"
        string_val: "../data/Training/Run_0001/images/frame_01158.png"
        string_val: "../data/Training/Run_0001/images/frame_00732.png"
        string_val: "../data/Training/Run_0001/images/frame_03816.png"
        string_val: "../data/Training/Run_0001/images/frame_03997.png"
        string_val: "../data/Training/Run_0001/images/frame_00624.png"
        string_val: "../data/Training/Run_0001/images/frame_00069.png"
        string_val: "../data/Training/Run_0001/images/frame_00251.png"
        string_val: "../data/Training/Run_0001/images/frame_03377.png"
        string_val: "../data/Training/Run_0001/images/frame_01932.png"
        string_val: "../data/Training/Run_0001/images/frame_02321.png"
        string_val: "../data/Training/Run_0001/images/frame_00219.png"
        string_val: "../data/Training/Run_0001/images/frame_04270.png"
        string_val: "../data/Training/Run_0001/images/frame_01931.png"
        string_val: "../data/Training/Run_0001/images/frame_01133.png"
        string_val: "../data/Training/Run_0001/images/frame_03724.png"
        string_val: "../data/Training/Run_0001/images/frame_00245.png"
        string_val: "../data/Training/Run_0001/images/frame_00129.png"
        string_val: "../data/Training/Run_0001/images/frame_02864.png"
        string_val: "../data/Training/Run_0001/images/frame_00234.png"
        string_val: "../data/Training/Run_0001/images/frame_04205.png"
        string_val: "../data/Training/Run_0001/images/frame_02883.png"
        string_val: "../data/Training/Run_0001/images/frame_03769.png"
        string_val: "../data/Training/Run_0001/images/frame_03697.png"
        string_val: "../data/Training/Run_0001/images/frame_03551.png"
        string_val: "../data/Training/Run_0001/images/frame_02504.png"
        string_val: "../data/Training/Run_0001/images/frame_02003.png"
        string_val: "../data/Training/Run_0001/images/frame_01223.png"
        string_val: "../data/Training/Run_0001/images/frame_03470.png"
        string_val: "../data/Training/Run_0001/images/frame_00800.png"
        string_val: "../data/Training/Run_0001/images/frame_03298.png"
        string_val: "../data/Training/Run_0001/images/frame_03018.png"
        string_val: "../data/Training/Run_0001/images/frame_01193.png"
        string_val: "../data/Training/Run_0001/images/frame_01072.png"
        string_val: "../data/Training/Run_0001/images/frame_03255.png"
        string_val: "../data/Training/Run_0001/images/frame_03126.png"
        string_val: "../data/Training/Run_0001/images/frame_00920.png"
        string_val: "../data/Training/Run_0001/images/frame_03738.png"
        string_val: "../data/Training/Run_0001/images/frame_04413.png"
        string_val: "../data/Training/Run_0001/images/frame_00387.png"
        string_val: "../data/Training/Run_0001/images/frame_01719.png"
        string_val: "../data/Training/Run_0001/images/frame_03763.png"
        string_val: "../data/Training/Run_0001/images/frame_02013.png"
        string_val: "../data/Training/Run_0001/images/frame_02117.png"
        string_val: "../data/Training/Run_0001/images/frame_02904.png"
        string_val: "../data/Training/Run_0001/images/frame_03521.png"
        string_val: "../data/Training/Run_0001/images/frame_01553.png"
        string_val: "../data/Training/Run_0001/images/frame_03712.png"
        string_val: "../data/Training/Run_0001/images/frame_02123.png"
        string_val: "../data/Training/Run_0001/images/frame_01634.png"
        string_val: "../data/Training/Run_0001/images/frame_02705.png"
        string_val: "../data/Training/Run_0001/images/frame_02379.png"
        string_val: "../data/Training/Run_0001/images/frame_01676.png"
        string_val: "../data/Training/Run_0001/images/frame_04704.png"
        string_val: "../data/Training/Run_0001/images/frame_03949.png"
        string_val: "../data/Training/Run_0001/images/frame_00398.png"
        string_val: "../data/Training/Run_0001/images/frame_01513.png"
        string_val: "../data/Training/Run_0001/images/frame_02179.png"
        string_val: "../data/Training/Run_0001/images/frame_02654.png"
        string_val: "../data/Training/Run_0001/images/frame_00707.png"
        string_val: "../data/Training/Run_0001/images/frame_03609.png"
        string_val: "../data/Training/Run_0001/images/frame_00726.png"
        string_val: "../data/Training/Run_0001/images/frame_02148.png"
        string_val: "../data/Training/Run_0001/images/frame_02006.png"
        string_val: "../data/Training/Run_0001/images/frame_03994.png"
        string_val: "../data/Training/Run_0001/images/frame_02731.png"
        string_val: "../data/Training/Run_0001/images/frame_00460.png"
        string_val: "../data/Training/Run_0001/images/frame_00990.png"
        string_val: "../data/Training/Run_0001/images/frame_01570.png"
        string_val: "../data/Training/Run_0001/images/frame_04716.png"
        string_val: "../data/Training/Run_0001/images/frame_00522.png"
        string_val: "../data/Training/Run_0001/images/frame_04240.png"
        string_val: "../data/Training/Run_0001/images/frame_01112.png"
        string_val: "../data/Training/Run_0001/images/frame_00616.png"
        string_val: "../data/Training/Run_0001/images/frame_04380.png"
        string_val: "../data/Training/Run_0001/images/frame_04645.png"
        string_val: "../data/Training/Run_0001/images/frame_00647.png"
        string_val: "../data/Training/Run_0001/images/frame_01452.png"
        string_val: "../data/Training/Run_0001/images/frame_00867.png"
        string_val: "../data/Training/Run_0001/images/frame_00409.png"
        string_val: "../data/Training/Run_0001/images/frame_01333.png"
        string_val: "../data/Training/Run_0001/images/frame_01293.png"
        string_val: "../data/Training/Run_0001/images/frame_04717.png"
        string_val: "../data/Training/Run_0001/images/frame_00334.png"
        string_val: "../data/Training/Run_0001/images/frame_02272.png"
        string_val: "../data/Training/Run_0001/images/frame_01058.png"
        string_val: "../data/Training/Run_0001/images/frame_02305.png"
        string_val: "../data/Training/Run_0001/images/frame_03584.png"
        string_val: "../data/Training/Run_0001/images/frame_01111.png"
        string_val: "../data/Training/Run_0001/images/frame_01917.png"
        string_val: "../data/Training/Run_0001/images/frame_02038.png"
        string_val: "../data/Training/Run_0001/images/frame_00598.png"
        string_val: "../data/Training/Run_0001/images/frame_00024.png"
        string_val: "../data/Training/Run_0001/images/frame_03801.png"
        string_val: "../data/Training/Run_0001/images/frame_01682.png"
        string_val: "../data/Training/Run_0001/images/frame_00364.png"
        string_val: "../data/Training/Run_0001/images/frame_00093.png"
        string_val: "../data/Training/Run_0001/images/frame_03009.png"
        string_val: "../data/Training/Run_0001/images/frame_02846.png"
        string_val: "../data/Training/Run_0001/images/frame_01531.png"
        string_val: "../data/Training/Run_0001/images/frame_04549.png"
        string_val: "../data/Training/Run_0001/images/frame_01119.png"
        string_val: "../data/Training/Run_0001/images/frame_03463.png"
        string_val: "../data/Training/Run_0001/images/frame_02236.png"
        string_val: "../data/Training/Run_0001/images/frame_04381.png"
        string_val: "../data/Training/Run_0001/images/frame_01433.png"
        string_val: "../data/Training/Run_0001/images/frame_00177.png"
        string_val: "../data/Training/Run_0001/images/frame_00284.png"
        string_val: "../data/Training/Run_0001/images/frame_00593.png"
        string_val: "../data/Training/Run_0001/images/frame_02464.png"
        string_val: "../data/Training/Run_0001/images/frame_00577.png"
        string_val: "../data/Training/Run_0001/images/frame_03833.png"
        string_val: "../data/Training/Run_0001/images/frame_04200.png"
        string_val: "../data/Training/Run_0001/images/frame_02567.png"
        string_val: "../data/Training/Run_0001/images/frame_03951.png"
        string_val: "../data/Training/Run_0001/images/frame_02045.png"
        string_val: "../data/Training/Run_0001/images/frame_03242.png"
        string_val: "../data/Training/Run_0001/images/frame_01220.png"
        string_val: "../data/Training/Run_0001/images/frame_00553.png"
        string_val: "../data/Training/Run_0001/images/frame_00098.png"
        string_val: "../data/Training/Run_0001/images/frame_01732.png"
        string_val: "../data/Training/Run_0001/images/frame_03821.png"
        string_val: "../data/Training/Run_0001/images/frame_04447.png"
        string_val: "../data/Training/Run_0001/images/frame_02091.png"
        string_val: "../data/Training/Run_0001/images/frame_01814.png"
        string_val: "../data/Training/Run_0001/images/frame_03566.png"
        string_val: "../data/Training/Run_0001/images/frame_03755.png"
        string_val: "../data/Training/Run_0001/images/frame_00592.png"
        string_val: "../data/Training/Run_0001/images/frame_01816.png"
        string_val: "../data/Training/Run_0001/images/frame_04084.png"
        string_val: "../data/Training/Run_0001/images/frame_01582.png"
        string_val: "../data/Training/Run_0001/images/frame_02114.png"
        string_val: "../data/Training/Run_0001/images/frame_02330.png"
        string_val: "../data/Training/Run_0001/images/frame_02613.png"
        string_val: "../data/Training/Run_0001/images/frame_04706.png"
        string_val: "../data/Training/Run_0001/images/frame_00103.png"
        string_val: "../data/Training/Run_0001/images/frame_00602.png"
        string_val: "../data/Training/Run_0001/images/frame_01434.png"
        string_val: "../data/Training/Run_0001/images/frame_02911.png"
        string_val: "../data/Training/Run_0001/images/frame_02976.png"
        string_val: "../data/Training/Run_0001/images/frame_02488.png"
        string_val: "../data/Training/Run_0001/images/frame_03837.png"
        string_val: "../data/Training/Run_0001/images/frame_02160.png"
        string_val: "../data/Training/Run_0001/images/frame_00808.png"
        string_val: "../data/Training/Run_0001/images/frame_02725.png"
        string_val: "../data/Training/Run_0001/images/frame_03140.png"
        string_val: "../data/Training/Run_0001/images/frame_01021.png"
        string_val: "../data/Training/Run_0001/images/frame_01884.png"
        string_val: "../data/Training/Run_0001/images/frame_00482.png"
        string_val: "../data/Training/Run_0001/images/frame_04702.png"
        string_val: "../data/Training/Run_0001/images/frame_00883.png"
        string_val: "../data/Training/Run_0001/images/frame_03355.png"
        string_val: "../data/Training/Run_0001/images/frame_02401.png"
        string_val: "../data/Training/Run_0001/images/frame_03794.png"
        string_val: "../data/Training/Run_0001/images/frame_01755.png"
        string_val: "../data/Training/Run_0001/images/frame_04000.png"
        string_val: "../data/Training/Run_0001/images/frame_03422.png"
        string_val: "../data/Training/Run_0001/images/frame_00975.png"
        string_val: "../data/Training/Run_0001/images/frame_04201.png"
        string_val: "../data/Training/Run_0001/images/frame_04363.png"
        string_val: "../data/Training/Run_0001/images/frame_03681.png"
        string_val: "../data/Training/Run_0001/images/frame_04145.png"
        string_val: "../data/Training/Run_0001/images/frame_01507.png"
        string_val: "../data/Training/Run_0001/images/frame_01995.png"
        string_val: "../data/Training/Run_0001/images/frame_00447.png"
        string_val: "../data/Training/Run_0001/images/frame_02206.png"
        string_val: "../data/Training/Run_0001/images/frame_02500.png"
        string_val: "../data/Training/Run_0001/images/frame_01973.png"
        string_val: "../data/Training/Run_0001/images/frame_01374.png"
        string_val: "../data/Training/Run_0001/images/frame_00903.png"
        string_val: "../data/Training/Run_0001/images/frame_00062.png"
        string_val: "../data/Training/Run_0001/images/frame_02545.png"
        string_val: "../data/Training/Run_0001/images/frame_00204.png"
        string_val: "../data/Training/Run_0001/images/frame_01084.png"
        string_val: "../data/Training/Run_0001/images/frame_01301.png"
        string_val: "../data/Training/Run_0001/images/frame_04216.png"
        string_val: "../data/Training/Run_0001/images/frame_04414.png"
        string_val: "../data/Training/Run_0001/images/frame_01761.png"
        string_val: "../data/Training/Run_0001/images/frame_03256.png"
        string_val: "../data/Training/Run_0001/images/frame_02232.png"
        string_val: "../data/Training/Run_0001/images/frame_03387.png"
        string_val: "../data/Training/Run_0001/images/frame_02010.png"
        string_val: "../data/Training/Run_0001/images/frame_02547.png"
        string_val: "../data/Training/Run_0001/images/frame_00079.png"
        string_val: "../data/Training/Run_0001/images/frame_02499.png"
        string_val: "../data/Training/Run_0001/images/frame_03824.png"
        string_val: "../data/Training/Run_0001/images/frame_02354.png"
        string_val: "../data/Training/Run_0001/images/frame_03598.png"
        string_val: "../data/Training/Run_0001/images/frame_00693.png"
        string_val: "../data/Training/Run_0001/images/frame_00106.png"
        string_val: "../data/Training/Run_0001/images/frame_02192.png"
        string_val: "../data/Training/Run_0001/images/frame_03243.png"
        string_val: "../data/Training/Run_0001/images/frame_02629.png"
        string_val: "../data/Training/Run_0001/images/frame_03804.png"
        string_val: "../data/Training/Run_0001/images/frame_00426.png"
        string_val: "../data/Training/Run_0001/images/frame_00108.png"
        string_val: "../data/Training/Run_0001/images/frame_01244.png"
        string_val: "../data/Training/Run_0001/images/frame_02268.png"
        string_val: "../data/Training/Run_0001/images/frame_04047.png"
        string_val: "../data/Training/Run_0001/images/frame_00339.png"
        string_val: "../data/Training/Run_0001/images/frame_01077.png"
        string_val: "../data/Training/Run_0001/images/frame_02158.png"
        string_val: "../data/Training/Run_0001/images/frame_01018.png"
        string_val: "../data/Training/Run_0001/images/frame_00449.png"
        string_val: "../data/Training/Run_0001/images/frame_01568.png"
        string_val: "../data/Training/Run_0001/images/frame_04118.png"
        string_val: "../data/Training/Run_0001/images/frame_01056.png"
        string_val: "../data/Training/Run_0001/images/frame_00633.png"
        string_val: "../data/Training/Run_0001/images/frame_03880.png"
        string_val: "../data/Training/Run_0001/images/frame_03602.png"
        string_val: "../data/Training/Run_0001/images/frame_01880.png"
        string_val: "../data/Training/Run_0001/images/frame_04525.png"
        string_val: "../data/Training/Run_0001/images/frame_03427.png"
        string_val: "../data/Training/Run_0001/images/frame_01724.png"
        string_val: "../data/Training/Run_0001/images/frame_00191.png"
        string_val: "../data/Training/Run_0001/images/frame_04625.png"
        string_val: "../data/Training/Run_0001/images/frame_04443.png"
        string_val: "../data/Training/Run_0001/images/frame_03168.png"
        string_val: "../data/Training/Run_0001/images/frame_00851.png"
        string_val: "../data/Training/Run_0001/images/frame_02331.png"
        string_val: "../data/Training/Run_0001/images/frame_00916.png"
        string_val: "../data/Training/Run_0001/images/frame_02486.png"
        string_val: "../data/Training/Run_0001/images/frame_02575.png"
        string_val: "../data/Training/Run_0001/images/frame_01577.png"
        string_val: "../data/Training/Run_0001/images/frame_01029.png"
        string_val: "../data/Training/Run_0001/images/frame_04239.png"
        string_val: "../data/Training/Run_0001/images/frame_02999.png"
        string_val: "../data/Training/Run_0001/images/frame_01355.png"
        string_val: "../data/Training/Run_0001/images/frame_01105.png"
        string_val: "../data/Training/Run_0001/images/frame_00831.png"
        string_val: "../data/Training/Run_0001/images/frame_02778.png"
        string_val: "../data/Training/Run_0001/images/frame_01152.png"
        string_val: "../data/Training/Run_0001/images/frame_01889.png"
        string_val: "../data/Training/Run_0001/images/frame_03522.png"
        string_val: "../data/Training/Run_0001/images/frame_01776.png"
        string_val: "../data/Training/Run_0001/images/frame_01297.png"
        string_val: "../data/Training/Run_0001/images/frame_00097.png"
        string_val: "../data/Training/Run_0001/images/frame_02244.png"
        string_val: "../data/Training/Run_0001/images/frame_00206.png"
        string_val: "../data/Training/Run_0001/images/frame_02025.png"
        string_val: "../data/Training/Run_0001/images/frame_04177.png"
        string_val: "../data/Training/Run_0001/images/frame_01853.png"
        string_val: "../data/Training/Run_0001/images/frame_02442.png"
        string_val: "../data/Training/Run_0001/images/frame_03883.png"
        string_val: "../data/Training/Run_0001/images/frame_00227.png"
        string_val: "../data/Training/Run_0001/images/frame_01954.png"
        string_val: "../data/Training/Run_0001/images/frame_02459.png"
        string_val: "../data/Training/Run_0001/images/frame_01689.png"
        string_val: "../data/Training/Run_0001/images/frame_01227.png"
        string_val: "../data/Training/Run_0001/images/frame_01486.png"
        string_val: "../data/Training/Run_0001/images/frame_00703.png"
        string_val: "../data/Training/Run_0001/images/frame_00675.png"
        string_val: "../data/Training/Run_0001/images/frame_03157.png"
        string_val: "../data/Training/Run_0001/images/frame_00510.png"
        string_val: "../data/Training/Run_0001/images/frame_03443.png"
        string_val: "../data/Training/Run_0001/images/frame_01296.png"
        string_val: "../data/Training/Run_0001/images/frame_01534.png"
        string_val: "../data/Training/Run_0001/images/frame_00187.png"
        string_val: "../data/Training/Run_0001/images/frame_01924.png"
        string_val: "../data/Training/Run_0001/images/frame_03191.png"
        string_val: "../data/Training/Run_0001/images/frame_04162.png"
        string_val: "../data/Training/Run_0001/images/frame_03132.png"
        string_val: "../data/Training/Run_0001/images/frame_00296.png"
        string_val: "../data/Training/Run_0001/images/frame_02743.png"
        string_val: "../data/Training/Run_0001/images/frame_03995.png"
        string_val: "../data/Training/Run_0001/images/frame_02078.png"
        string_val: "../data/Training/Run_0001/images/frame_02726.png"
        string_val: "../data/Training/Run_0001/images/frame_00130.png"
        string_val: "../data/Training/Run_0001/images/frame_01919.png"
        string_val: "../data/Training/Run_0001/images/frame_00570.png"
        string_val: "../data/Training/Run_0001/images/frame_00113.png"
        string_val: "../data/Training/Run_0001/images/frame_03198.png"
        string_val: "../data/Training/Run_0001/images/frame_04511.png"
        string_val: "../data/Training/Run_0001/images/frame_00414.png"
        string_val: "../data/Training/Run_0001/images/frame_04090.png"
        string_val: "../data/Training/Run_0001/images/frame_04669.png"
        string_val: "../data/Training/Run_0001/images/frame_03180.png"
        string_val: "../data/Training/Run_0001/images/frame_01460.png"
        string_val: "../data/Training/Run_0001/images/frame_01965.png"
        string_val: "../data/Training/Run_0001/images/frame_03571.png"
        string_val: "../data/Training/Run_0001/images/frame_04029.png"
        string_val: "../data/Training/Run_0001/images/frame_00359.png"
        string_val: "../data/Training/Run_0001/images/frame_01571.png"
        string_val: "../data/Training/Run_0001/images/frame_03183.png"
        string_val: "../data/Training/Run_0001/images/frame_00141.png"
        string_val: "../data/Training/Run_0001/images/frame_04582.png"
        string_val: "../data/Training/Run_0001/images/frame_00604.png"
        string_val: "../data/Training/Run_0001/images/frame_04469.png"
        string_val: "../data/Training/Run_0001/images/frame_00859.png"
        string_val: "../data/Training/Run_0001/images/frame_03725.png"
        string_val: "../data/Training/Run_0001/images/frame_02024.png"
        string_val: "../data/Training/Run_0001/images/frame_01666.png"
        string_val: "../data/Training/Run_0001/images/frame_01743.png"
        string_val: "../data/Training/Run_0001/images/frame_01608.png"
        string_val: "../data/Training/Run_0001/images/frame_02891.png"
        string_val: "../data/Training/Run_0001/images/frame_02653.png"
        string_val: "../data/Training/Run_0001/images/frame_03028.png"
        string_val: "../data/Training/Run_0001/images/frame_01603.png"
        string_val: "../data/Training/Run_0001/images/frame_01757.png"
        string_val: "../data/Training/Run_0001/images/frame_02958.png"
        string_val: "../data/Training/Run_0001/images/frame_02719.png"
        string_val: "../data/Training/Run_0001/images/frame_03904.png"
        string_val: "../data/Training/Run_0001/images/frame_00643.png"
        string_val: "../data/Training/Run_0001/images/frame_02530.png"
        string_val: "../data/Training/Run_0001/images/frame_01569.png"
        string_val: "../data/Training/Run_0001/images/frame_04581.png"
        string_val: "../data/Training/Run_0001/images/frame_00217.png"
        string_val: "../data/Training/Run_0001/images/frame_01222.png"
        string_val: "../data/Training/Run_0001/images/frame_01971.png"
        string_val: "../data/Training/Run_0001/images/frame_00549.png"
        string_val: "../data/Training/Run_0001/images/frame_04484.png"
        string_val: "../data/Training/Run_0001/images/frame_01858.png"
        string_val: "../data/Training/Run_0001/images/frame_00664.png"
        string_val: "../data/Training/Run_0001/images/frame_02748.png"
        string_val: "../data/Training/Run_0001/images/frame_04126.png"
        string_val: "../data/Training/Run_0001/images/frame_01359.png"
        string_val: "../data/Training/Run_0001/images/frame_02776.png"
        string_val: "../data/Training/Run_0001/images/frame_04285.png"
        string_val: "../data/Training/Run_0001/images/frame_01631.png"
        string_val: "../data/Training/Run_0001/images/frame_02266.png"
        string_val: "../data/Training/Run_0001/images/frame_03852.png"
        string_val: "../data/Training/Run_0001/images/frame_02048.png"
        string_val: "../data/Training/Run_0001/images/frame_01579.png"
        string_val: "../data/Training/Run_0001/images/frame_01982.png"
        string_val: "../data/Training/Run_0001/images/frame_03264.png"
        string_val: "../data/Training/Run_0001/images/frame_01148.png"
        string_val: "../data/Training/Run_0001/images/frame_02571.png"
        string_val: "../data/Training/Run_0001/images/frame_03335.png"
        string_val: "../data/Training/Run_0001/images/frame_03792.png"
        string_val: "../data/Training/Run_0001/images/frame_03434.png"
        string_val: "../data/Training/Run_0001/images/frame_00998.png"
        string_val: "../data/Training/Run_0001/images/frame_04565.png"
        string_val: "../data/Training/Run_0001/images/frame_01733.png"
        string_val: "../data/Training/Run_0001/images/frame_02563.png"
        string_val: "../data/Training/Run_0001/images/frame_01407.png"
        string_val: "../data/Training/Run_0001/images/frame_00084.png"
        string_val: "../data/Training/Run_0001/images/frame_02286.png"
        string_val: "../data/Training/Run_0001/images/frame_03542.png"
        string_val: "../data/Training/Run_0001/images/frame_02918.png"
        string_val: "../data/Training/Run_0001/images/frame_02127.png"
        string_val: "../data/Training/Run_0001/images/frame_02964.png"
        string_val: "../data/Training/Run_0001/images/frame_04114.png"
        string_val: "../data/Training/Run_0001/images/frame_00612.png"
        string_val: "../data/Training/Run_0001/images/frame_00311.png"
        string_val: "../data/Training/Run_0001/images/frame_02645.png"
        string_val: "../data/Training/Run_0001/images/frame_02126.png"
        string_val: "../data/Training/Run_0001/images/frame_02925.png"
        string_val: "../data/Training/Run_0001/images/frame_03206.png"
        string_val: "../data/Training/Run_0001/images/frame_02820.png"
        string_val: "../data/Training/Run_0001/images/frame_03207.png"
        string_val: "../data/Training/Run_0001/images/frame_02627.png"
        string_val: "../data/Training/Run_0001/images/frame_00694.png"
        string_val: "../data/Training/Run_0001/images/frame_03184.png"
        string_val: "../data/Training/Run_0001/images/frame_00378.png"
        string_val: "../data/Training/Run_0001/images/frame_02651.png"
        string_val: "../data/Training/Run_0001/images/frame_01324.png"
        string_val: "../data/Training/Run_0001/images/frame_00617.png"
        string_val: "../data/Training/Run_0001/images/frame_04171.png"
        string_val: "../data/Training/Run_0001/images/frame_04590.png"
        string_val: "../data/Training/Run_0001/images/frame_02720.png"
        string_val: "../data/Training/Run_0001/images/frame_03937.png"
        string_val: "../data/Training/Run_0001/images/frame_04111.png"
        string_val: "../data/Training/Run_0001/images/frame_02177.png"
        string_val: "../data/Training/Run_0001/images/frame_04202.png"
        string_val: "../data/Training/Run_0001/images/frame_02195.png"
        string_val: "../data/Training/Run_0001/images/frame_00729.png"
        string_val: "../data/Training/Run_0001/images/frame_02420.png"
        string_val: "../data/Training/Run_0001/images/frame_02378.png"
        string_val: "../data/Training/Run_0001/images/frame_01378.png"
        string_val: "../data/Training/Run_0001/images/frame_02983.png"
        string_val: "../data/Training/Run_0001/images/frame_04129.png"
        string_val: "../data/Training/Run_0001/images/frame_02295.png"
        string_val: "../data/Training/Run_0001/images/frame_00033.png"
        string_val: "../data/Training/Run_0001/images/frame_03487.png"
        string_val: "../data/Training/Run_0001/images/frame_00811.png"
        string_val: "../data/Training/Run_0001/images/frame_02739.png"
        string_val: "../data/Training/Run_0001/images/frame_00243.png"
        string_val: "../data/Training/Run_0001/images/frame_03843.png"
        string_val: "../data/Training/Run_0001/images/frame_00134.png"
        string_val: "../data/Training/Run_0001/images/frame_00638.png"
        string_val: "../data/Training/Run_0001/images/frame_04662.png"
        string_val: "../data/Training/Run_0001/images/frame_04566.png"
        string_val: "../data/Training/Run_0001/images/frame_03791.png"
        string_val: "../data/Training/Run_0001/images/frame_04481.png"
        string_val: "../data/Training/Run_0001/images/frame_01516.png"
        string_val: "../data/Training/Run_0001/images/frame_00324.png"
        string_val: "../data/Training/Run_0001/images/frame_00541.png"
        string_val: "../data/Training/Run_0001/images/frame_04187.png"
        string_val: "../data/Training/Run_0001/images/frame_01175.png"
        string_val: "../data/Training/Run_0001/images/frame_03643.png"
        string_val: "../data/Training/Run_0001/images/frame_03677.png"
        string_val: "../data/Training/Run_0001/images/frame_02614.png"
        string_val: "../data/Training/Run_0001/images/frame_00285.png"
        string_val: "../data/Training/Run_0001/images/frame_02382.png"
        string_val: "../data/Training/Run_0001/images/frame_00220.png"
        string_val: "../data/Training/Run_0001/images/frame_03425.png"
        string_val: "../data/Training/Run_0001/images/frame_03002.png"
        string_val: "../data/Training/Run_0001/images/frame_03987.png"
        string_val: "../data/Training/Run_0001/images/frame_01096.png"
        string_val: "../data/Training/Run_0001/images/frame_02209.png"
        string_val: "../data/Training/Run_0001/images/frame_04311.png"
        string_val: "../data/Training/Run_0001/images/frame_01385.png"
        string_val: "../data/Training/Run_0001/images/frame_00938.png"
        string_val: "../data/Training/Run_0001/images/frame_00186.png"
        string_val: "../data/Training/Run_0001/images/frame_02768.png"
        string_val: "../data/Training/Run_0001/images/frame_02878.png"
        string_val: "../data/Training/Run_0001/images/frame_03000.png"
        string_val: "../data/Training/Run_0001/images/frame_03376.png"
        string_val: "../data/Training/Run_0001/images/frame_02353.png"
        string_val: "../data/Training/Run_0001/images/frame_04542.png"
        string_val: "../data/Training/Run_0001/images/frame_03087.png"
        string_val: "../data/Training/Run_0001/images/frame_02320.png"
        string_val: "../data/Training/Run_0001/images/frame_01802.png"
        string_val: "../data/Training/Run_0001/images/frame_01652.png"
        string_val: "../data/Training/Run_0001/images/frame_04113.png"
        string_val: "../data/Training/Run_0001/images/frame_03454.png"
        string_val: "../data/Training/Run_0001/images/frame_03015.png"
        string_val: "../data/Training/Run_0001/images/frame_03968.png"
        string_val: "../data/Training/Run_0001/images/frame_02931.png"
        string_val: "../data/Training/Run_0001/images/frame_04064.png"
        string_val: "../data/Training/Run_0001/images/frame_02162.png"
        string_val: "../data/Training/Run_0001/images/frame_00101.png"
        string_val: "../data/Training/Run_0001/images/frame_03188.png"
        string_val: "../data/Training/Run_0001/images/frame_01770.png"
        string_val: "../data/Training/Run_0001/images/frame_03710.png"
        string_val: "../data/Training/Run_0001/images/frame_03507.png"
        string_val: "../data/Training/Run_0001/images/frame_01930.png"
        string_val: "../data/Training/Run_0001/images/frame_03401.png"
        string_val: "../data/Training/Run_0001/images/frame_02149.png"
        string_val: "../data/Training/Run_0001/images/frame_01829.png"
        string_val: "../data/Training/Run_0001/images/frame_00305.png"
        string_val: "../data/Training/Run_0001/images/frame_00279.png"
        string_val: "../data/Training/Run_0001/images/frame_02572.png"
        string_val: "../data/Training/Run_0001/images/frame_03943.png"
        string_val: "../data/Training/Run_0001/images/frame_03136.png"
        string_val: "../data/Training/Run_0001/images/frame_00114.png"
        string_val: "../data/Training/Run_0001/images/frame_01991.png"
        string_val: "../data/Training/Run_0001/images/frame_04284.png"
        string_val: "../data/Training/Run_0001/images/frame_00254.png"
        string_val: "../data/Training/Run_0001/images/frame_01834.png"
        string_val: "../data/Training/Run_0001/images/frame_00810.png"
        string_val: "../data/Training/Run_0001/images/frame_01492.png"
        string_val: "../data/Training/Run_0001/images/frame_01396.png"
        string_val: "../data/Training/Run_0001/images/frame_00118.png"
        string_val: "../data/Training/Run_0001/images/frame_04610.png"
        string_val: "../data/Training/Run_0001/images/frame_03759.png"
        string_val: "../data/Training/Run_0001/images/frame_00322.png"
        string_val: "../data/Training/Run_0001/images/frame_04278.png"
        string_val: "../data/Training/Run_0001/images/frame_03582.png"
        string_val: "../data/Training/Run_0001/images/frame_02109.png"
        string_val: "../data/Training/Run_0001/images/frame_02901.png"
        string_val: "../data/Training/Run_0001/images/frame_02672.png"
        string_val: "../data/Training/Run_0001/images/frame_03154.png"
        string_val: "../data/Training/Run_0001/images/frame_04059.png"
        string_val: "../data/Training/Run_0001/images/frame_03061.png"
        string_val: "../data/Training/Run_0001/images/frame_01205.png"
        string_val: "../data/Training/Run_0001/images/frame_00504.png"
        string_val: "../data/Training/Run_0001/images/frame_00914.png"
        string_val: "../data/Training/Run_0001/images/frame_03234.png"
        string_val: "../data/Training/Run_0001/images/frame_01632.png"
        string_val: "../data/Training/Run_0001/images/frame_04654.png"
        string_val: "../data/Training/Run_0001/images/frame_01497.png"
        string_val: "../data/Training/Run_0001/images/frame_04331.png"
        string_val: "../data/Training/Run_0001/images/frame_00222.png"
        string_val: "../data/Training/Run_0001/images/frame_03458.png"
        string_val: "../data/Training/Run_0001/images/frame_04616.png"
        string_val: "../data/Training/Run_0001/images/frame_03253.png"
        string_val: "../data/Training/Run_0001/images/frame_02796.png"
        string_val: "../data/Training/Run_0001/images/frame_01371.png"
        string_val: "../data/Training/Run_0001/images/frame_03600.png"
        string_val: "../data/Training/Run_0001/images/frame_02953.png"
        string_val: "../data/Training/Run_0001/images/frame_04427.png"
        string_val: "../data/Training/Run_0001/images/frame_03098.png"
        string_val: "../data/Training/Run_0001/images/frame_00575.png"
        string_val: "../data/Training/Run_0001/images/frame_02670.png"
        string_val: "../data/Training/Run_0001/images/frame_04121.png"
        string_val: "../data/Training/Run_0001/images/frame_01935.png"
        string_val: "../data/Training/Run_0001/images/frame_02371.png"
        string_val: "../data/Training/Run_0001/images/frame_02467.png"
        string_val: "../data/Training/Run_0001/images/frame_02542.png"
        string_val: "../data/Training/Run_0001/images/frame_00341.png"
        string_val: "../data/Training/Run_0001/images/frame_04648.png"
        string_val: "../data/Training/Run_0001/images/frame_04309.png"
        string_val: "../data/Training/Run_0001/images/frame_02287.png"
        string_val: "../data/Training/Run_0001/images/frame_02523.png"
        string_val: "../data/Training/Run_0001/images/frame_00304.png"
        string_val: "../data/Training/Run_0001/images/frame_03339.png"
        string_val: "../data/Training/Run_0001/images/frame_00073.png"
        string_val: "../data/Training/Run_0001/images/frame_00370.png"
        string_val: "../data/Training/Run_0001/images/frame_00146.png"
        string_val: "../data/Training/Run_0001/images/frame_03167.png"
        string_val: "../data/Training/Run_0001/images/frame_00066.png"
        string_val: "../data/Training/Run_0001/images/frame_03101.png"
        string_val: "../data/Training/Run_0001/images/frame_01785.png"
        string_val: "../data/Training/Run_0001/images/frame_01000.png"
        string_val: "../data/Training/Run_0001/images/frame_03762.png"
        string_val: "../data/Training/Run_0001/images/frame_02770.png"
        string_val: "../data/Training/Run_0001/images/frame_00950.png"
        string_val: "../data/Training/Run_0001/images/frame_02633.png"
        string_val: "../data/Training/Run_0001/images/frame_04406.png"
        string_val: "../data/Training/Run_0001/images/frame_00737.png"
        string_val: "../data/Training/Run_0001/images/frame_02881.png"
        string_val: "../data/Training/Run_0001/images/frame_02407.png"
        string_val: "../data/Training/Run_0001/images/frame_02697.png"
        string_val: "../data/Training/Run_0001/images/frame_04574.png"
        string_val: "../data/Training/Run_0001/images/frame_00160.png"
        string_val: "../data/Training/Run_0001/images/frame_02202.png"
        string_val: "../data/Training/Run_0001/images/frame_02033.png"
        string_val: "../data/Training/Run_0001/images/frame_02339.png"
        string_val: "../data/Training/Run_0001/images/frame_00758.png"
        string_val: "../data/Training/Run_0001/images/frame_03292.png"
        string_val: "../data/Training/Run_0001/images/frame_04393.png"
        string_val: "../data/Training/Run_0001/images/frame_01562.png"
        string_val: "../data/Training/Run_0001/images/frame_02834.png"
        string_val: "../data/Training/Run_0001/images/frame_02405.png"
        string_val: "../data/Training/Run_0001/images/frame_03622.png"
        string_val: "../data/Training/Run_0001/images/frame_03719.png"
        string_val: "../data/Training/Run_0001/images/frame_02948.png"
        string_val: "../data/Training/Run_0001/images/frame_03228.png"
        string_val: "../data/Training/Run_0001/images/frame_03328.png"
        string_val: "../data/Training/Run_0001/images/frame_04116.png"
        string_val: "../data/Training/Run_0001/images/frame_03406.png"
        string_val: "../data/Training/Run_0001/images/frame_03342.png"
        string_val: "../data/Training/Run_0001/images/frame_03417.png"
        string_val: "../data/Training/Run_0001/images/frame_02790.png"
        string_val: "../data/Training/Run_0001/images/frame_02936.png"
        string_val: "../data/Training/Run_0001/images/frame_03832.png"
        string_val: "../data/Training/Run_0001/images/frame_03982.png"
        string_val: "../data/Training/Run_0001/images/frame_04158.png"
        string_val: "../data/Training/Run_0001/images/frame_01752.png"
        string_val: "../data/Training/Run_0001/images/frame_04320.png"
        string_val: "../data/Training/Run_0001/images/frame_03868.png"
        string_val: "../data/Training/Run_0001/images/frame_02863.png"
        string_val: "../data/Training/Run_0001/images/frame_01643.png"
        string_val: "../data/Training/Run_0001/images/frame_04700.png"
        string_val: "../data/Training/Run_0001/images/frame_02591.png"
        string_val: "../data/Training/Run_0001/images/frame_04602.png"
        string_val: "../data/Training/Run_0001/images/frame_03505.png"
        string_val: "../data/Training/Run_0001/images/frame_02557.png"
        string_val: "../data/Training/Run_0001/images/frame_01190.png"
        string_val: "../data/Training/Run_0001/images/frame_02007.png"
        string_val: "../data/Training/Run_0001/images/frame_00557.png"
        string_val: "../data/Training/Run_0001/images/frame_03696.png"
        string_val: "../data/Training/Run_0001/images/frame_03867.png"
        string_val: "../data/Training/Run_0001/images/frame_03327.png"
        string_val: "../data/Training/Run_0001/images/frame_03874.png"
        string_val: "../data/Training/Run_0001/images/frame_01557.png"
        string_val: "../data/Training/Run_0001/images/frame_03011.png"
        string_val: "../data/Training/Run_0001/images/frame_04335.png"
        string_val: "../data/Training/Run_0001/images/frame_00041.png"
        string_val: "../data/Training/Run_0001/images/frame_02358.png"
        string_val: "../data/Training/Run_0001/images/frame_03811.png"
        string_val: "../data/Training/Run_0001/images/frame_04448.png"
        string_val: "../data/Training/Run_0001/images/frame_03153.png"
        string_val: "../data/Training/Run_0001/images/frame_00556.png"
        string_val: "../data/Training/Run_0001/images/frame_02441.png"
        string_val: "../data/Training/Run_0001/images/frame_00571.png"
        string_val: "../data/Training/Run_0001/images/frame_04282.png"
        string_val: "../data/Training/Run_0001/images/frame_01602.png"
        string_val: "../data/Training/Run_0001/images/frame_01432.png"
        string_val: "../data/Training/Run_0001/images/frame_02256.png"
        string_val: "../data/Training/Run_0001/images/frame_01953.png"
        string_val: "../data/Training/Run_0001/images/frame_01509.png"
        string_val: "../data/Training/Run_0001/images/frame_01225.png"
        string_val: "../data/Training/Run_0001/images/frame_04010.png"
        string_val: "../data/Training/Run_0001/images/frame_04720.png"
        string_val: "../data/Training/Run_0001/images/frame_03735.png"
        string_val: "../data/Training/Run_0001/images/frame_01416.png"
        string_val: "../data/Training/Run_0001/images/frame_00717.png"
        string_val: "../data/Training/Run_0001/images/frame_01642.png"
        string_val: "../data/Training/Run_0001/images/frame_00746.png"
        string_val: "../data/Training/Run_0001/images/frame_03466.png"
        string_val: "../data/Training/Run_0001/images/frame_03637.png"
        string_val: "../data/Training/Run_0001/images/frame_02875.png"
        string_val: "../data/Training/Run_0001/images/frame_02922.png"
        string_val: "../data/Training/Run_0001/images/frame_03250.png"
        string_val: "../data/Training/Run_0001/images/frame_03990.png"
        string_val: "../data/Training/Run_0001/images/frame_04395.png"
        string_val: "../data/Training/Run_0001/images/frame_00052.png"
        string_val: "../data/Training/Run_0001/images/frame_03739.png"
        string_val: "../data/Training/Run_0001/images/frame_03515.png"
        string_val: "../data/Training/Run_0001/images/frame_03547.png"
        string_val: "../data/Training/Run_0001/images/frame_03958.png"
        string_val: "../data/Training/Run_0001/images/frame_00618.png"
        string_val: "../data/Training/Run_0001/images/frame_03187.png"
        string_val: "../data/Training/Run_0001/images/frame_01956.png"
        string_val: "../data/Training/Run_0001/images/frame_02695.png"
        string_val: "../data/Training/Run_0001/images/frame_02298.png"
        string_val: "../data/Training/Run_0001/images/frame_00929.png"
        string_val: "../data/Training/Run_0001/images/frame_02057.png"
        string_val: "../data/Training/Run_0001/images/frame_01688.png"
        string_val: "../data/Training/Run_0001/images/frame_04514.png"
        string_val: "../data/Training/Run_0001/images/frame_00280.png"
        string_val: "../data/Training/Run_0001/images/frame_02955.png"
        string_val: "../data/Training/Run_0001/images/frame_02509.png"
        string_val: "../data/Training/Run_0001/images/frame_00310.png"
        string_val: "../data/Training/Run_0001/images/frame_03282.png"
        string_val: "../data/Training/Run_0001/images/frame_01768.png"
        string_val: "../data/Training/Run_0001/images/frame_03316.png"
        string_val: "../data/Training/Run_0001/images/frame_01573.png"
        string_val: "../data/Training/Run_0001/images/frame_03314.png"
        string_val: "../data/Training/Run_0001/images/frame_03834.png"
        string_val: "../data/Training/Run_0001/images/frame_00417.png"
        string_val: "../data/Training/Run_0001/images/frame_03669.png"
        string_val: "../data/Training/Run_0001/images/frame_04097.png"
        string_val: "../data/Training/Run_0001/images/frame_03457.png"
        string_val: "../data/Training/Run_0001/images/frame_01317.png"
        string_val: "../data/Training/Run_0001/images/frame_04357.png"
        string_val: "../data/Training/Run_0001/images/frame_01038.png"
        string_val: "../data/Training/Run_0001/images/frame_04409.png"
        string_val: "../data/Training/Run_0001/images/frame_00839.png"
        string_val: "../data/Training/Run_0001/images/frame_00458.png"
        string_val: "../data/Training/Run_0001/images/frame_00096.png"
        string_val: "../data/Training/Run_0001/images/frame_01428.png"
        string_val: "../data/Training/Run_0001/images/frame_01412.png"
        string_val: "../data/Training/Run_0001/images/frame_04489.png"
        string_val: "../data/Training/Run_0001/images/frame_00205.png"
        string_val: "../data/Training/Run_0001/images/frame_01137.png"
        string_val: "../data/Training/Run_0001/images/frame_04161.png"
        string_val: "../data/Training/Run_0001/images/frame_03363.png"
        string_val: "../data/Training/Run_0001/images/frame_00955.png"
        string_val: "../data/Training/Run_0001/images/frame_01828.png"
        string_val: "../data/Training/Run_0001/images/frame_01911.png"
        string_val: "../data/Training/Run_0001/images/frame_01641.png"
        string_val: "../data/Training/Run_0001/images/frame_02763.png"
        string_val: "../data/Training/Run_0001/images/frame_04327.png"
        string_val: "../data/Training/Run_0001/images/frame_02733.png"
        string_val: "../data/Training/Run_0001/images/frame_00442.png"
        string_val: "../data/Training/Run_0001/images/frame_00358.png"
        string_val: "../data/Training/Run_0001/images/frame_02512.png"
        string_val: "../data/Training/Run_0001/images/frame_03311.png"
        string_val: "../data/Training/Run_0001/images/frame_03580.png"
        string_val: "../data/Training/Run_0001/images/frame_03830.png"
        string_val: "../data/Training/Run_0001/images/frame_04252.png"
        string_val: "../data/Training/Run_0001/images/frame_03961.png"
        string_val: "../data/Training/Run_0001/images/frame_01826.png"
        string_val: "../data/Training/Run_0001/images/frame_01934.png"
        string_val: "../data/Training/Run_0001/images/frame_04559.png"
        string_val: "../data/Training/Run_0001/images/frame_03894.png"
        string_val: "../data/Training/Run_0001/images/frame_00479.png"
        string_val: "../data/Training/Run_0001/images/frame_04617.png"
        string_val: "../data/Training/Run_0001/images/frame_03260.png"
        string_val: "../data/Training/Run_0001/images/frame_01231.png"
        string_val: "../data/Training/Run_0001/images/frame_01526.png"
        string_val: "../data/Training/Run_0001/images/frame_04710.png"
        string_val: "../data/Training/Run_0001/images/frame_03788.png"
        string_val: "../data/Training/Run_0001/images/frame_02341.png"
        string_val: "../data/Training/Run_0001/images/frame_02920.png"
        string_val: "../data/Training/Run_0001/images/frame_03257.png"
        string_val: "../data/Training/Run_0001/images/frame_01506.png"
        string_val: "../data/Training/Run_0001/images/frame_03952.png"
        string_val: "../data/Training/Run_0001/images/frame_00246.png"
        string_val: "../data/Training/Run_0001/images/frame_03715.png"
        string_val: "../data/Training/Run_0001/images/frame_03642.png"
        string_val: "../data/Training/Run_0001/images/frame_02131.png"
        string_val: "../data/Training/Run_0001/images/frame_02847.png"
        string_val: "../data/Training/Run_0001/images/frame_00344.png"
        string_val: "../data/Training/Run_0001/images/frame_01040.png"
        string_val: "../data/Training/Run_0001/images/frame_04291.png"
        string_val: "../data/Training/Run_0001/images/frame_00190.png"
        string_val: "../data/Training/Run_0001/images/frame_01171.png"
        string_val: "../data/Training/Run_0001/images/frame_00578.png"
        string_val: "../data/Training/Run_0001/images/frame_02052.png"
        string_val: "../data/Training/Run_0001/images/frame_03274.png"
        string_val: "../data/Training/Run_0001/images/frame_02973.png"
        string_val: "../data/Training/Run_0001/images/frame_04628.png"
        string_val: "../data/Training/Run_0001/images/frame_02844.png"
        string_val: "../data/Training/Run_0001/images/frame_03285.png"
        string_val: "../data/Training/Run_0001/images/frame_01720.png"
        string_val: "../data/Training/Run_0001/images/frame_00027.png"
        string_val: "../data/Training/Run_0001/images/frame_01213.png"
        string_val: "../data/Training/Run_0001/images/frame_00300.png"
        string_val: "../data/Training/Run_0001/images/frame_00767.png"
        string_val: "../data/Training/Run_0001/images/frame_01742.png"
        string_val: "../data/Training/Run_0001/images/frame_01280.png"
        string_val: "../data/Training/Run_0001/images/frame_00562.png"
        string_val: "../data/Training/Run_0001/images/frame_02865.png"
        string_val: "../data/Training/Run_0001/images/frame_01847.png"
        string_val: "../data/Training/Run_0001/images/frame_01004.png"
        string_val: "../data/Training/Run_0001/images/frame_02027.png"
        string_val: "../data/Training/Run_0001/images/frame_02391.png"
        string_val: "../data/Training/Run_0001/images/frame_01192.png"
        string_val: "../data/Training/Run_0001/images/frame_02737.png"
        string_val: "../data/Training/Run_0001/images/frame_04488.png"
        string_val: "../data/Training/Run_0001/images/frame_03384.png"
        string_val: "../data/Training/Run_0001/images/frame_02451.png"
        string_val: "../data/Training/Run_0001/images/frame_00827.png"
        string_val: "../data/Training/Run_0001/images/frame_04655.png"
        string_val: "../data/Training/Run_0001/images/frame_02142.png"
        string_val: "../data/Training/Run_0001/images/frame_04295.png"
        string_val: "../data/Training/Run_0001/images/frame_02998.png"
        string_val: "../data/Training/Run_0001/images/frame_02511.png"
        string_val: "../data/Training/Run_0001/images/frame_00649.png"
        string_val: "../data/Training/Run_0001/images/frame_03992.png"
        string_val: "../data/Training/Run_0001/images/frame_02480.png"
        string_val: "../data/Training/Run_0001/images/frame_01124.png"
        string_val: "../data/Training/Run_0001/images/frame_03608.png"
        string_val: "../data/Training/Run_0001/images/frame_04119.png"
        string_val: "../data/Training/Run_0001/images/frame_00050.png"
        string_val: "../data/Training/Run_0001/images/frame_02217.png"
        string_val: "../data/Training/Run_0001/images/frame_01668.png"
        string_val: "../data/Training/Run_0001/images/frame_03023.png"
        string_val: "../data/Training/Run_0001/images/frame_00886.png"
        string_val: "../data/Training/Run_0001/images/frame_03481.png"
        string_val: "../data/Training/Run_0001/images/frame_02866.png"
        string_val: "../data/Training/Run_0001/images/frame_00176.png"
        string_val: "../data/Training/Run_0001/images/frame_00774.png"
        string_val: "../data/Training/Run_0001/images/frame_01198.png"
        string_val: "../data/Training/Run_0001/images/frame_03713.png"
        string_val: "../data/Training/Run_0001/images/frame_04215.png"
        string_val: "../data/Training/Run_0001/images/frame_03675.png"
        string_val: "../data/Training/Run_0001/images/frame_02701.png"
        string_val: "../data/Training/Run_0001/images/frame_02085.png"
        string_val: "../data/Training/Run_0001/images/frame_00501.png"
        string_val: "../data/Training/Run_0001/images/frame_01363.png"
        string_val: "../data/Training/Run_0001/images/frame_03241.png"
        string_val: "../data/Training/Run_0001/images/frame_00816.png"
        string_val: "../data/Training/Run_0001/images/frame_00372.png"
        string_val: "../data/Training/Run_0001/images/frame_03766.png"
        string_val: "../data/Training/Run_0001/images/frame_03996.png"
        string_val: "../data/Training/Run_0001/images/frame_03374.png"
        string_val: "../data/Training/Run_0001/images/frame_02211.png"
        string_val: "../data/Training/Run_0001/images/frame_00755.png"
        string_val: "../data/Training/Run_0001/images/frame_00335.png"
        string_val: "../data/Training/Run_0001/images/frame_00660.png"
        string_val: "../data/Training/Run_0001/images/frame_01576.png"
        string_val: "../data/Training/Run_0001/images/frame_02104.png"
        string_val: "../data/Training/Run_0001/images/frame_02372.png"
        string_val: "../data/Training/Run_0001/images/frame_00939.png"
        string_val: "../data/Training/Run_0001/images/frame_04095.png"
        string_val: "../data/Training/Run_0001/images/frame_00018.png"
        string_val: "../data/Training/Run_0001/images/frame_03473.png"
        string_val: "../data/Training/Run_0001/images/frame_01653.png"
        string_val: "../data/Training/Run_0001/images/frame_03010.png"
        string_val: "../data/Training/Run_0001/images/frame_02317.png"
        string_val: "../data/Training/Run_0001/images/frame_02207.png"
        string_val: "../data/Training/Run_0001/images/frame_00899.png"
        string_val: "../data/Training/Run_0001/images/frame_04088.png"
        string_val: "../data/Training/Run_0001/images/frame_02536.png"
        string_val: "../data/Training/Run_0001/images/frame_03840.png"
        string_val: "../data/Training/Run_0001/images/frame_02803.png"
        string_val: "../data/Training/Run_0001/images/frame_00713.png"
        string_val: "../data/Training/Run_0001/images/frame_03485.png"
        string_val: "../data/Training/Run_0001/images/frame_03225.png"
        string_val: "../data/Training/Run_0001/images/frame_03667.png"
        string_val: "../data/Training/Run_0001/images/frame_04482.png"
        string_val: "../data/Training/Run_0001/images/frame_01145.png"
        string_val: "../data/Training/Run_0001/images/frame_03683.png"
        string_val: "../data/Training/Run_0001/images/frame_03039.png"
        string_val: "../data/Training/Run_0001/images/frame_04105.png"
        string_val: "../data/Training/Run_0001/images/frame_01393.png"
        string_val: "../data/Training/Run_0001/images/frame_03333.png"
        string_val: "../data/Training/Run_0001/images/frame_01706.png"
        string_val: "../data/Training/Run_0001/images/frame_01701.png"
        string_val: "../data/Training/Run_0001/images/frame_01291.png"
        string_val: "../data/Training/Run_0001/images/frame_03906.png"
        string_val: "../data/Training/Run_0001/images/frame_03139.png"
        string_val: "../data/Training/Run_0001/images/frame_01637.png"
        string_val: "../data/Training/Run_0001/images/frame_04263.png"
        string_val: "../data/Training/Run_0001/images/frame_02183.png"
        string_val: "../data/Training/Run_0001/images/frame_04394.png"
        string_val: "../data/Training/Run_0001/images/frame_02903.png"
        string_val: "../data/Training/Run_0001/images/frame_01574.png"
        string_val: "../data/Training/Run_0001/images/frame_01182.png"
        string_val: "../data/Training/Run_0001/images/frame_03512.png"
        string_val: "../data/Training/Run_0001/images/frame_03432.png"
        string_val: "../data/Training/Run_0001/images/frame_00821.png"
        string_val: "../data/Training/Run_0001/images/frame_04055.png"
        string_val: "../data/Training/Run_0001/images/frame_01794.png"
        string_val: "../data/Training/Run_0001/images/frame_00583.png"
        string_val: "../data/Training/Run_0001/images/frame_01855.png"
        string_val: "../data/Training/Run_0001/images/frame_03289.png"
        string_val: "../data/Training/Run_0001/images/frame_04214.png"
        string_val: "../data/Training/Run_0001/images/frame_00151.png"
        string_val: "../data/Training/Run_0001/images/frame_04532.png"
        string_val: "../data/Training/Run_0001/images/frame_01048.png"
        string_val: "../data/Training/Run_0001/images/frame_03105.png"
        string_val: "../data/Training/Run_0001/images/frame_03489.png"
        string_val: "../data/Training/Run_0001/images/frame_04086.png"
        string_val: "../data/Training/Run_0001/images/frame_00796.png"
        string_val: "../data/Training/Run_0001/images/frame_00195.png"
        string_val: "../data/Training/Run_0001/images/frame_00325.png"
        string_val: "../data/Training/Run_0001/images/frame_02822.png"
        string_val: "../data/Training/Run_0001/images/frame_03099.png"
        string_val: "../data/Training/Run_0001/images/frame_04152.png"
        string_val: "../data/Training/Run_0001/images/frame_04491.png"
        string_val: "../data/Training/Run_0001/images/frame_01827.png"
        string_val: "../data/Training/Run_0001/images/frame_01074.png"
        string_val: "../data/Training/Run_0001/images/frame_03604.png"
        string_val: "../data/Training/Run_0001/images/frame_03914.png"
        string_val: "../data/Training/Run_0001/images/frame_03437.png"
        string_val: "../data/Training/Run_0001/images/frame_01575.png"
        string_val: "../data/Training/Run_0001/images/frame_01559.png"
        string_val: "../data/Training/Run_0001/images/frame_01375.png"
        string_val: "../data/Training/Run_0001/images/frame_02742.png"
        string_val: "../data/Training/Run_0001/images/frame_01792.png"
        string_val: "../data/Training/Run_0001/images/frame_03202.png"
        string_val: "../data/Training/Run_0001/images/frame_02032.png"
        string_val: "../data/Training/Run_0001/images/frame_01870.png"
        string_val: "../data/Training/Run_0001/images/frame_04079.png"
        string_val: "../data/Training/Run_0001/images/frame_03831.png"
        string_val: "../data/Training/Run_0001/images/frame_02224.png"
        string_val: "../data/Training/Run_0001/images/frame_00214.png"
        string_val: "../data/Training/Run_0001/images/frame_03389.png"
        string_val: "../data/Training/Run_0001/images/frame_01165.png"
        string_val: "../data/Training/Run_0001/images/frame_01211.png"
        string_val: "../data/Training/Run_0001/images/frame_02569.png"
        string_val: "../data/Training/Run_0001/images/frame_03750.png"
        string_val: "../data/Training/Run_0001/images/frame_01243.png"
        string_val: "../data/Training/Run_0001/images/frame_00180.png"
        string_val: "../data/Training/Run_0001/images/frame_01662.png"
        string_val: "../data/Training/Run_0001/images/frame_01978.png"
        string_val: "../data/Training/Run_0001/images/frame_01623.png"
        string_val: "../data/Training/Run_0001/images/frame_04517.png"
        string_val: "../data/Training/Run_0001/images/frame_03513.png"
        string_val: "../data/Training/Run_0001/images/frame_04554.png"
        string_val: "../data/Training/Run_0001/images/frame_00807.png"
        string_val: "../data/Training/Run_0001/images/frame_01064.png"
        string_val: "../data/Training/Run_0001/images/frame_02531.png"
        string_val: "../data/Training/Run_0001/images/frame_00248.png"
        string_val: "../data/Training/Run_0001/images/frame_00081.png"
        string_val: "../data/Training/Run_0001/images/frame_03886.png"
        string_val: "../data/Training/Run_0001/images/frame_00042.png"
        string_val: "../data/Training/Run_0001/images/frame_02872.png"
        string_val: "../data/Training/Run_0001/images/frame_04102.png"
        string_val: "../data/Training/Run_0001/images/frame_03310.png"
        string_val: "../data/Training/Run_0001/images/frame_00277.png"
        string_val: "../data/Training/Run_0001/images/frame_00587.png"
        string_val: "../data/Training/Run_0001/images/frame_02656.png"
        string_val: "../data/Training/Run_0001/images/frame_00572.png"
        string_val: "../data/Training/Run_0001/images/frame_00674.png"
        string_val: "../data/Training/Run_0001/images/frame_04382.png"
        string_val: "../data/Training/Run_0001/images/frame_00683.png"
        string_val: "../data/Training/Run_0001/images/frame_03064.png"
        string_val: "../data/Training/Run_0001/images/frame_03068.png"
        string_val: "../data/Training/Run_0001/images/frame_02899.png"
        string_val: "../data/Training/Run_0001/images/frame_00235.png"
        string_val: "../data/Training/Run_0001/images/frame_02858.png"
        string_val: "../data/Training/Run_0001/images/frame_04366.png"
        string_val: "../data/Training/Run_0001/images/frame_01890.png"
        string_val: "../data/Training/Run_0001/images/frame_03891.png"
        string_val: "../data/Training/Run_0001/images/frame_00949.png"
        string_val: "../data/Training/Run_0001/images/frame_03382.png"
        string_val: "../data/Training/Run_0001/images/frame_03032.png"
        string_val: "../data/Training/Run_0001/images/frame_03945.png"
        string_val: "../data/Training/Run_0001/images/frame_02472.png"
        string_val: "../data/Training/Run_0001/images/frame_01548.png"
        string_val: "../data/Training/Run_0001/images/frame_00775.png"
        string_val: "../data/Training/Run_0001/images/frame_01234.png"
        string_val: "../data/Training/Run_0001/images/frame_03965.png"
        string_val: "../data/Training/Run_0001/images/frame_02383.png"
        string_val: "../data/Training/Run_0001/images/frame_03797.png"
        string_val: "../data/Training/Run_0001/images/frame_01455.png"
        string_val: "../data/Training/Run_0001/images/frame_04459.png"
        string_val: "../data/Training/Run_0001/images/frame_00567.png"
        string_val: "../data/Training/Run_0001/images/frame_03091.png"
        string_val: "../data/Training/Run_0001/images/frame_00784.png"
        string_val: "../data/Training/Run_0001/images/frame_02797.png"
        string_val: "../data/Training/Run_0001/images/frame_00718.png"
        string_val: "../data/Training/Run_0001/images/frame_00286.png"
        string_val: "../data/Training/Run_0001/images/frame_00661.png"
        string_val: "../data/Training/Run_0001/images/frame_03923.png"
        string_val: "../data/Training/Run_0001/images/frame_03322.png"
        string_val: "../data/Training/Run_0001/images/frame_00071.png"
        string_val: "../data/Training/Run_0001/images/frame_00188.png"
        string_val: "../data/Training/Run_0001/images/frame_03397.png"
        string_val: "../data/Training/Run_0001/images/frame_00908.png"
        string_val: "../data/Training/Run_0001/images/frame_01718.png"
        string_val: "../data/Training/Run_0001/images/frame_01738.png"
        string_val: "../data/Training/Run_0001/images/frame_03528.png"
        string_val: "../data/Training/Run_0001/images/frame_04164.png"
        string_val: "../data/Training/Run_0001/images/frame_01226.png"
        string_val: "../data/Training/Run_0001/images/frame_03572.png"
        string_val: "../data/Training/Run_0001/images/frame_01665.png"
        string_val: "../data/Training/Run_0001/images/frame_01187.png"
        string_val: "../data/Training/Run_0001/images/frame_00388.png"
        string_val: "../data/Training/Run_0001/images/frame_02848.png"
        string_val: "../data/Training/Run_0001/images/frame_00994.png"
        string_val: "../data/Training/Run_0001/images/frame_03149.png"
        string_val: "../data/Training/Run_0001/images/frame_01777.png"
        string_val: "../data/Training/Run_0001/images/frame_00294.png"
        string_val: "../data/Training/Run_0001/images/frame_01604.png"
        string_val: "../data/Training/Run_0001/images/frame_00778.png"
        string_val: "../data/Training/Run_0001/images/frame_04271.png"
        string_val: "../data/Training/Run_0001/images/frame_03134.png"
        string_val: "../data/Training/Run_0001/images/frame_04358.png"
        string_val: "../data/Training/Run_0001/images/frame_02978.png"
        string_val: "../data/Training/Run_0001/images/frame_00997.png"
        string_val: "../data/Training/Run_0001/images/frame_01308.png"
        string_val: "../data/Training/Run_0001/images/frame_01469.png"
        string_val: "../data/Training/Run_0001/images/frame_03367.png"
        string_val: "../data/Training/Run_0001/images/frame_03678.png"
        string_val: "../data/Training/Run_0001/images/frame_04586.png"
        string_val: "../data/Training/Run_0001/images/frame_01528.png"
        string_val: "../data/Training/Run_0001/images/frame_03865.png"
        string_val: "../data/Training/Run_0001/images/frame_02030.png"
        string_val: "../data/Training/Run_0001/images/frame_00070.png"
        string_val: "../data/Training/Run_0001/images/frame_01123.png"
        string_val: "../data/Training/Run_0001/images/frame_00685.png"
        string_val: "../data/Training/Run_0001/images/frame_04333.png"
        string_val: "../data/Training/Run_0001/images/frame_02134.png"
        string_val: "../data/Training/Run_0001/images/frame_00425.png"
        string_val: "../data/Training/Run_0001/images/frame_04082.png"
        string_val: "../data/Training/Run_0001/images/frame_00181.png"
        string_val: "../data/Training/Run_0001/images/frame_00448.png"
        string_val: "../data/Training/Run_0001/images/frame_00678.png"
        string_val: "../data/Training/Run_0001/images/frame_00884.png"
        string_val: "../data/Training/Run_0001/images/frame_01617.png"
        string_val: "../data/Training/Run_0001/images/frame_03472.png"
        string_val: "../data/Training/Run_0001/images/frame_00797.png"
        string_val: "../data/Training/Run_0001/images/frame_03650.png"
        string_val: "../data/Training/Run_0001/images/frame_00262.png"
        string_val: "../data/Training/Run_0001/images/frame_02412.png"
        string_val: "../data/Training/Run_0001/images/frame_03597.png"
        string_val: "../data/Training/Run_0001/images/frame_01239.png"
        string_val: "../data/Training/Run_0001/images/frame_01477.png"
        string_val: "../data/Training/Run_0001/images/frame_03021.png"
        string_val: "../data/Training/Run_0001/images/frame_00427.png"
        string_val: "../data/Training/Run_0001/images/frame_04637.png"
        string_val: "../data/Training/Run_0001/images/frame_01289.png"
        string_val: "../data/Training/Run_0001/images/frame_03651.png"
        string_val: "../data/Training/Run_0001/images/frame_01474.png"
        string_val: "../data/Training/Run_0001/images/frame_01348.png"
        string_val: "../data/Training/Run_0001/images/frame_00852.png"
        string_val: "../data/Training/Run_0001/images/frame_02756.png"
        string_val: "../data/Training/Run_0001/images/frame_01351.png"
        string_val: "../data/Training/Run_0001/images/frame_04592.png"
        string_val: "../data/Training/Run_0001/images/frame_04688.png"
        string_val: "../data/Training/Run_0001/images/frame_02979.png"
        string_val: "../data/Training/Run_0001/images/frame_02952.png"
        string_val: "../data/Training/Run_0001/images/frame_00496.png"
        string_val: "../data/Training/Run_0001/images/frame_02867.png"
        string_val: "../data/Training/Run_0001/images/frame_03271.png"
        string_val: "../data/Training/Run_0001/images/frame_00830.png"
        string_val: "../data/Training/Run_0001/images/frame_00149.png"
        string_val: "../data/Training/Run_0001/images/frame_02159.png"
        string_val: "../data/Training/Run_0001/images/frame_01306.png"
        string_val: "../data/Training/Run_0001/images/frame_00012.png"
        string_val: "../data/Training/Run_0001/images/frame_04588.png"
        string_val: "../data/Training/Run_0001/images/frame_02079.png"
        string_val: "../data/Training/Run_0001/images/frame_01327.png"
        string_val: "../data/Training/Run_0001/images/frame_01126.png"
        string_val: "../data/Training/Run_0001/images/frame_01903.png"
        string_val: "../data/Training/Run_0001/images/frame_03599.png"
        string_val: "../data/Training/Run_0001/images/frame_00824.png"
        string_val: "../data/Training/Run_0001/images/frame_02456.png"
        string_val: "../data/Training/Run_0001/images/frame_03918.png"
        string_val: "../data/Training/Run_0001/images/frame_00082.png"
        string_val: "../data/Training/Run_0001/images/frame_04621.png"
        string_val: "../data/Training/Run_0001/images/frame_00614.png"
        string_val: "../data/Training/Run_0001/images/frame_03862.png"
        string_val: "../data/Training/Run_0001/images/frame_01684.png"
        string_val: "../data/Training/Run_0001/images/frame_04674.png"
        string_val: "../data/Training/Run_0001/images/frame_02049.png"
        string_val: "../data/Training/Run_0001/images/frame_03888.png"
        string_val: "../data/Training/Run_0001/images/frame_01558.png"
        string_val: "../data/Training/Run_0001/images/frame_04660.png"
        string_val: "../data/Training/Run_0001/images/frame_01097.png"
        string_val: "../data/Training/Run_0001/images/frame_03822.png"
        string_val: "../data/Training/Run_0001/images/frame_04461.png"
        string_val: "../data/Training/Run_0001/images/frame_01476.png"
        string_val: "../data/Training/Run_0001/images/frame_00309.png"
        string_val: "../data/Training/Run_0001/images/frame_03375.png"
        string_val: "../data/Training/Run_0001/images/frame_00636.png"
        string_val: "../data/Training/Run_0001/images/frame_01915.png"
        string_val: "../data/Training/Run_0001/images/frame_03216.png"
        string_val: "../data/Training/Run_0001/images/frame_01900.png"
        string_val: "../data/Training/Run_0001/images/frame_04172.png"
        string_val: "../data/Training/Run_0001/images/frame_00059.png"
        string_val: "../data/Training/Run_0001/images/frame_02167.png"
        string_val: "../data/Training/Run_0001/images/frame_03510.png"
        string_val: "../data/Training/Run_0001/images/frame_00909.png"
        string_val: "../data/Training/Run_0001/images/frame_02337.png"
        string_val: "../data/Training/Run_0001/images/frame_03438.png"
        string_val: "../data/Training/Run_0001/images/frame_01095.png"
        string_val: "../data/Training/Run_0001/images/frame_04408.png"
        string_val: "../data/Training/Run_0001/images/frame_00936.png"
        string_val: "../data/Training/Run_0001/images/frame_00838.png"
        string_val: "../data/Training/Run_0001/images/frame_04093.png"
        string_val: "../data/Training/Run_0001/images/frame_02974.png"
        string_val: "../data/Training/Run_0001/images/frame_04653.png"
        string_val: "../data/Training/Run_0001/images/frame_02413.png"
        string_val: "../data/Training/Run_0001/images/frame_00515.png"
        string_val: "../data/Training/Run_0001/images/frame_03159.png"
        string_val: "../data/Training/Run_0001/images/frame_04341.png"
        string_val: "../data/Training/Run_0001/images/frame_04028.png"
        string_val: "../data/Training/Run_0001/images/frame_04466.png"
        string_val: "../data/Training/Run_0001/images/frame_01461.png"
        string_val: "../data/Training/Run_0001/images/frame_02064.png"
        string_val: "../data/Training/Run_0001/images/frame_03286.png"
        string_val: "../data/Training/Run_0001/images/frame_04198.png"
        string_val: "../data/Training/Run_0001/images/frame_02476.png"
        string_val: "../data/Training/Run_0001/images/frame_02749.png"
        string_val: "../data/Training/Run_0001/images/frame_00544.png"
        string_val: "../data/Training/Run_0001/images/frame_03121.png"
        string_val: "../data/Training/Run_0001/images/frame_00869.png"
        string_val: "../data/Training/Run_0001/images/frame_04072.png"
        string_val: "../data/Training/Run_0001/images/frame_03323.png"
        string_val: "../data/Training/Run_0001/images/frame_01322.png"
        string_val: "../data/Training/Run_0001/images/frame_01504.png"
        string_val: "../data/Training/Run_0001/images/frame_04471.png"
        string_val: "../data/Training/Run_0001/images/frame_02962.png"
        string_val: "../data/Training/Run_0001/images/frame_01367.png"
        string_val: "../data/Training/Run_0001/images/frame_00733.png"
        string_val: "../data/Training/Run_0001/images/frame_01763.png"
        string_val: "../data/Training/Run_0001/images/frame_03049.png"
        string_val: "../data/Training/Run_0001/images/frame_00533.png"
        string_val: "../data/Training/Run_0001/images/frame_00421.png"
        string_val: "../data/Training/Run_0001/images/frame_04426.png"
        string_val: "../data/Training/Run_0001/images/frame_04185.png"
        string_val: "../data/Training/Run_0001/images/frame_04301.png"
        string_val: "../data/Training/Run_0001/images/frame_01878.png"
        string_val: "../data/Training/Run_0001/images/frame_04651.png"
        string_val: "../data/Training/Run_0001/images/frame_04455.png"
        string_val: "../data/Training/Run_0001/images/frame_01958.png"
        string_val: "../data/Training/Run_0001/images/frame_02632.png"
        string_val: "../data/Training/Run_0001/images/frame_04444.png"
        string_val: "../data/Training/Run_0001/images/frame_04061.png"
        string_val: "../data/Training/Run_0001/images/frame_02637.png"
        string_val: "../data/Training/Run_0001/images/frame_02350.png"
        string_val: "../data/Training/Run_0001/images/frame_04437.png"
        string_val: "../data/Training/Run_0001/images/frame_00836.png"
        string_val: "../data/Training/Run_0001/images/frame_01539.png"
        string_val: "../data/Training/Run_0001/images/frame_00546.png"
        string_val: "../data/Training/Run_0001/images/frame_03731.png"
        string_val: "../data/Training/Run_0001/images/frame_01299.png"
        string_val: "../data/Training/Run_0001/images/frame_00172.png"
        string_val: "../data/Training/Run_0001/images/frame_03560.png"
        string_val: "../data/Training/Run_0001/images/frame_02226.png"
        string_val: "../data/Training/Run_0001/images/frame_03754.png"
        string_val: "../data/Training/Run_0001/images/frame_02245.png"
        string_val: "../data/Training/Run_0001/images/frame_01626.png"
        string_val: "../data/Training/Run_0001/images/frame_01282.png"
        string_val: "../data/Training/Run_0001/images/frame_00848.png"
        string_val: "../data/Training/Run_0001/images/frame_01943.png"
        string_val: "../data/Training/Run_0001/images/frame_01747.png"
        string_val: "../data/Training/Run_0001/images/frame_01790.png"
        string_val: "../data/Training/Run_0001/images/frame_00918.png"
        string_val: "../data/Training/Run_0001/images/frame_03620.png"
        string_val: "../data/Training/Run_0001/images/frame_03493.png"
        string_val: "../data/Training/Run_0001/images/frame_02693.png"
        string_val: "../data/Training/Run_0001/images/frame_02837.png"
        string_val: "../data/Training/Run_0001/images/frame_04584.png"
        string_val: "../data/Training/Run_0001/images/frame_01389.png"
        string_val: "../data/Training/Run_0001/images/frame_03288.png"
        string_val: "../data/Training/Run_0001/images/frame_04558.png"
        string_val: "../data/Training/Run_0001/images/frame_00606.png"
        string_val: "../data/Training/Run_0001/images/frame_02732.png"
        string_val: "../data/Training/Run_0001/images/frame_04024.png"
        string_val: "../data/Training/Run_0001/images/frame_04571.png"
        string_val: "../data/Training/Run_0001/images/frame_03511.png"
        string_val: "../data/Training/Run_0001/images/frame_01027.png"
        string_val: "../data/Training/Run_0001/images/frame_00100.png"
        string_val: "../data/Training/Run_0001/images/frame_04018.png"
        string_val: "../data/Training/Run_0001/images/frame_00020.png"
        string_val: "../data/Training/Run_0001/images/frame_00405.png"
        string_val: "../data/Training/Run_0001/images/frame_00511.png"
        string_val: "../data/Training/Run_0001/images/frame_04523.png"
        string_val: "../data/Training/Run_0001/images/frame_03539.png"
        string_val: "../data/Training/Run_0001/images/frame_03152.png"
        string_val: "../data/Training/Run_0001/images/frame_00471.png"
        string_val: "../data/Training/Run_0001/images/frame_02175.png"
        string_val: "../data/Training/Run_0001/images/frame_00702.png"
        string_val: "../data/Training/Run_0001/images/frame_00803.png"
        string_val: "../data/Training/Run_0001/images/frame_02300.png"
        string_val: "../data/Training/Run_0001/images/frame_03199.png"
        string_val: "../data/Training/Run_0001/images/frame_01197.png"
        string_val: "../data/Training/Run_0001/images/frame_02799.png"
        string_val: "../data/Training/Run_0001/images/frame_04422.png"
        string_val: "../data/Training/Run_0001/images/frame_04173.png"
        string_val: "../data/Training/Run_0001/images/frame_03247.png"
        string_val: "../data/Training/Run_0001/images/frame_00142.png"
        string_val: "../data/Training/Run_0001/images/frame_00268.png"
        string_val: "../data/Training/Run_0001/images/frame_00770.png"
        string_val: "../data/Training/Run_0001/images/frame_04397.png"
        string_val: "../data/Training/Run_0001/images/frame_02356.png"
        string_val: "../data/Training/Run_0001/images/frame_03066.png"
        string_val: "../data/Training/Run_0001/images/frame_01344.png"
        string_val: "../data/Training/Run_0001/images/frame_02234.png"
        string_val: "../data/Training/Run_0001/images/frame_03169.png"
        string_val: "../data/Training/Run_0001/images/frame_04499.png"
        string_val: "../data/Training/Run_0001/images/frame_00701.png"
        string_val: "../data/Training/Run_0001/images/frame_02440.png"
        string_val: "../data/Training/Run_0001/images/frame_02135.png"
        string_val: "../data/Training/Run_0001/images/frame_00584.png"
        string_val: "../data/Training/Run_0001/images/frame_01868.png"
        string_val: "../data/Training/Run_0001/images/frame_03007.png"
        string_val: "../data/Training/Run_0001/images/frame_00038.png"
        string_val: "../data/Training/Run_0001/images/frame_02012.png"
        string_val: "../data/Training/Run_0001/images/frame_03090.png"
        string_val: "../data/Training/Run_0001/images/frame_01967.png"
        string_val: "../data/Training/Run_0001/images/frame_02261.png"
        string_val: "../data/Training/Run_0001/images/frame_02150.png"
        string_val: "../data/Training/Run_0001/images/frame_02107.png"
        string_val: "../data/Training/Run_0001/images/frame_00769.png"
        string_val: "../data/Training/Run_0001/images/frame_01262.png"
        string_val: "../data/Training/Run_0001/images/frame_02397.png"
        string_val: "../data/Training/Run_0001/images/frame_01500.png"
        string_val: "../data/Training/Run_0001/images/frame_00576.png"
        string_val: "../data/Training/Run_0001/images/frame_01109.png"
        string_val: "../data/Training/Run_0001/images/frame_00840.png"
        string_val: "../data/Training/Run_0001/images/frame_03320.png"
        string_val: "../data/Training/Run_0001/images/frame_04011.png"
        string_val: "../data/Training/Run_0001/images/frame_04649.png"
        string_val: "../data/Training/Run_0001/images/frame_00747.png"
        string_val: "../data/Training/Run_0001/images/frame_03331.png"
        string_val: "../data/Training/Run_0001/images/frame_01039.png"
        string_val: "../data/Training/Run_0001/images/frame_00620.png"
        string_val: "../data/Training/Run_0001/images/frame_02682.png"
        string_val: "../data/Training/Run_0001/images/frame_01533.png"
        string_val: "../data/Training/Run_0001/images/frame_01023.png"
        string_val: "../data/Training/Run_0001/images/frame_03341.png"
        string_val: "../data/Training/Run_0001/images/frame_00430.png"
        string_val: "../data/Training/Run_0001/images/frame_02225.png"
        string_val: "../data/Training/Run_0001/images/frame_01017.png"
        string_val: "../data/Training/Run_0001/images/frame_03500.png"
        string_val: "../data/Training/Run_0001/images/frame_00065.png"
        string_val: "../data/Training/Run_0001/images/frame_02873.png"
        string_val: "../data/Training/Run_0001/images/frame_04373.png"
        string_val: "../data/Training/Run_0001/images/frame_01675.png"
        string_val: "../data/Training/Run_0001/images/frame_02817.png"
        string_val: "../data/Training/Run_0001/images/frame_02769.png"
        string_val: "../data/Training/Run_0001/images/frame_02583.png"
        string_val: "../data/Training/Run_0001/images/frame_03210.png"
        string_val: "../data/Training/Run_0001/images/frame_03614.png"
        string_val: "../data/Training/Run_0001/images/frame_03042.png"
        string_val: "../data/Training/Run_0001/images/frame_04115.png"
        string_val: "../data/Training/Run_0001/images/frame_01686.png"
        string_val: "../data/Training/Run_0001/images/frame_01638.png"
        string_val: "../data/Training/Run_0001/images/frame_03404.png"
        string_val: "../data/Training/Run_0001/images/frame_02943.png"
        string_val: "../data/Training/Run_0001/images/frame_02573.png"
        string_val: "../data/Training/Run_0001/images/frame_02792.png"
        string_val: "../data/Training/Run_0001/images/frame_02939.png"
        string_val: "../data/Training/Run_0001/images/frame_02905.png"
        string_val: "../data/Training/Run_0001/images/frame_00969.png"
        string_val: "../data/Training/Run_0001/images/frame_04682.png"
        string_val: "../data/Training/Run_0001/images/frame_03758.png"
        string_val: "../data/Training/Run_0001/images/frame_04242.png"
        string_val: "../data/Training/Run_0001/images/frame_01044.png"
        string_val: "../data/Training/Run_0001/images/frame_02826.png"
        string_val: "../data/Training/Run_0001/images/frame_02596.png"
        string_val: "../data/Training/Run_0001/images/frame_03563.png"
        string_val: "../data/Training/Run_0001/images/frame_02080.png"
        string_val: "../data/Training/Run_0001/images/frame_01977.png"
        string_val: "../data/Training/Run_0001/images/frame_04228.png"
        string_val: "../data/Training/Run_0001/images/frame_00199.png"
        string_val: "../data/Training/Run_0001/images/frame_04431.png"
        string_val: "../data/Training/Run_0001/images/frame_03638.png"
        string_val: "../data/Training/Run_0001/images/frame_03203.png"
        string_val: "../data/Training/Run_0001/images/frame_03204.png"
        string_val: "../data/Training/Run_0001/images/frame_01820.png"
        string_val: "../data/Training/Run_0001/images/frame_03174.png"
        string_val: "../data/Training/Run_0001/images/frame_03162.png"
        string_val: "../data/Training/Run_0001/images/frame_02735.png"
        string_val: "../data/Training/Run_0001/images/frame_01810.png"
        string_val: "../data/Training/Run_0001/images/frame_03866.png"
        string_val: "../data/Training/Run_0001/images/frame_04130.png"
        string_val: "../data/Training/Run_0001/images/frame_04646.png"
        string_val: "../data/Training/Run_0001/images/frame_02786.png"
        string_val: "../data/Training/Run_0001/images/frame_02102.png"
        string_val: "../data/Training/Run_0001/images/frame_00565.png"
        string_val: "../data/Training/Run_0001/images/frame_01630.png"
        string_val: "../data/Training/Run_0001/images/frame_00087.png"
        string_val: "../data/Training/Run_0001/images/frame_02787.png"
        string_val: "../data/Training/Run_0001/images/frame_04698.png"
        string_val: "../data/Training/Run_0001/images/frame_01026.png"
        string_val: "../data/Training/Run_0001/images/frame_03747.png"
        string_val: "../data/Training/Run_0001/images/frame_01399.png"
        string_val: "../data/Training/Run_0001/images/frame_02129.png"
        string_val: "../data/Training/Run_0001/images/frame_03570.png"
        string_val: "../data/Training/Run_0001/images/frame_02621.png"
        string_val: "../data/Training/Run_0001/images/frame_02258.png"
        string_val: "../data/Training/Run_0001/images/frame_00818.png"
        string_val: "../data/Training/Run_0001/images/frame_01484.png"
        string_val: "../data/Training/Run_0001/images/frame_03197.png"
        string_val: "../data/Training/Run_0001/images/frame_03859.png"
        string_val: "../data/Training/Run_0001/images/frame_03882.png"
        string_val: "../data/Training/Run_0001/images/frame_01833.png"
        string_val: "../data/Training/Run_0001/images/frame_03110.png"
        string_val: "../data/Training/Run_0001/images/frame_00508.png"
        string_val: "../data/Training/Run_0001/images/frame_03213.png"
        string_val: "../data/Training/Run_0001/images/frame_03509.png"
        string_val: "../data/Training/Run_0001/images/frame_03449.png"
        string_val: "../data/Training/Run_0001/images/frame_00240.png"
        string_val: "../data/Training/Run_0001/images/frame_02685.png"
        string_val: "../data/Training/Run_0001/images/frame_03103.png"
        string_val: "../data/Training/Run_0001/images/frame_02506.png"
        string_val: "../data/Training/Run_0001/images/frame_03530.png"
        string_val: "../data/Training/Run_0001/images/frame_00418.png"
        string_val: "../data/Training/Run_0001/images/frame_01844.png"
        string_val: "../data/Training/Run_0001/images/frame_01260.png"
        string_val: "../data/Training/Run_0001/images/frame_03782.png"
        string_val: "../data/Training/Run_0001/images/frame_02077.png"
        string_val: "../data/Training/Run_0001/images/frame_04319.png"
        string_val: "../data/Training/Run_0001/images/frame_03779.png"
        string_val: "../data/Training/Run_0001/images/frame_00351.png"
        string_val: "../data/Training/Run_0001/images/frame_00734.png"
        string_val: "../data/Training/Run_0001/images/frame_01059.png"
        string_val: "../data/Training/Run_0001/images/frame_03036.png"
        string_val: "../data/Training/Run_0001/images/frame_00792.png"
        string_val: "../data/Training/Run_0001/images/frame_00039.png"
        string_val: "../data/Training/Run_0001/images/frame_03026.png"
        string_val: "../data/Training/Run_0001/images/frame_04579.png"
        string_val: "../data/Training/Run_0001/images/frame_04223.png"
        string_val: "../data/Training/Run_0001/images/frame_04305.png"
        string_val: "../data/Training/Run_0001/images/frame_01116.png"
        string_val: "../data/Training/Run_0001/images/frame_04306.png"
        string_val: "../data/Training/Run_0001/images/frame_04659.png"
        string_val: "../data/Training/Run_0001/images/frame_00320.png"
        string_val: "../data/Training/Run_0001/images/frame_04159.png"
        string_val: "../data/Training/Run_0001/images/frame_02363.png"
        string_val: "../data/Training/Run_0001/images/frame_01238.png"
        string_val: "../data/Training/Run_0001/images/frame_03947.png"
        string_val: "../data/Training/Run_0001/images/frame_00623.png"
        string_val: "../data/Training/Run_0001/images/frame_00904.png"
        string_val: "../data/Training/Run_0001/images/frame_03429.png"
        string_val: "../data/Training/Run_0001/images/frame_03233.png"
        string_val: "../data/Training/Run_0001/images/frame_03749.png"
        string_val: "../data/Training/Run_0001/images/frame_02239.png"
        string_val: "../data/Training/Run_0001/images/frame_04258.png"
        string_val: "../data/Training/Run_0001/images/frame_00834.png"
        string_val: "../data/Training/Run_0001/images/frame_01392.png"
        string_val: "../data/Training/Run_0001/images/frame_02675.png"
        string_val: "../data/Training/Run_0001/images/frame_00498.png"
        string_val: "../data/Training/Run_0001/images/frame_02947.png"
        string_val: "../data/Training/Run_0001/images/frame_01232.png"
        string_val: "../data/Training/Run_0001/images/frame_01975.png"
        string_val: "../data/Training/Run_0001/images/frame_00315.png"
        string_val: "../data/Training/Run_0001/images/frame_04103.png"
        string_val: "../data/Training/Run_0001/images/frame_00092.png"
        string_val: "../data/Training/Run_0001/images/frame_02888.png"
        string_val: "../data/Training/Run_0001/images/frame_00435.png"
        string_val: "../data/Training/Run_0001/images/frame_00307.png"
        string_val: "../data/Training/Run_0001/images/frame_04457.png"
        string_val: "../data/Training/Run_0001/images/frame_04470.png"
        string_val: "../data/Training/Run_0001/images/frame_00102.png"
        string_val: "../data/Training/Run_0001/images/frame_01025.png"
        string_val: "../data/Training/Run_0001/images/frame_02249.png"
        string_val: "../data/Training/Run_0001/images/frame_01051.png"
        string_val: "../data/Training/Run_0001/images/frame_01275.png"
        string_val: "../data/Training/Run_0001/images/frame_01170.png"
        string_val: "../data/Training/Run_0001/images/frame_01590.png"
        string_val: "../data/Training/Run_0001/images/frame_03805.png"
        string_val: "../data/Training/Run_0001/images/frame_00847.png"
        string_val: "../data/Training/Run_0001/images/frame_01228.png"
        string_val: "../data/Training/Run_0001/images/frame_02944.png"
        string_val: "../data/Training/Run_0001/images/frame_04546.png"
        string_val: "../data/Training/Run_0001/images/frame_02370.png"
        string_val: "../data/Training/Run_0001/images/frame_00091.png"
        string_val: "../data/Training/Run_0001/images/frame_02798.png"
        string_val: "../data/Training/Run_0001/images/frame_00333.png"
        string_val: "../data/Training/Run_0001/images/frame_02152.png"
        string_val: "../data/Training/Run_0001/images/frame_03732.png"
        string_val: "../data/Training/Run_0001/images/frame_00540.png"
        string_val: "../data/Training/Run_0001/images/frame_03896.png"
        string_val: "../data/Training/Run_0001/images/frame_00432.png"
        string_val: "../data/Training/Run_0001/images/frame_03447.png"
        string_val: "../data/Training/Run_0001/images/frame_01061.png"
        string_val: "../data/Training/Run_0001/images/frame_00005.png"
        string_val: "../data/Training/Run_0001/images/frame_01621.png"
        string_val: "../data/Training/Run_0001/images/frame_03842.png"
        string_val: "../data/Training/Run_0001/images/frame_01554.png"
        string_val: "../data/Training/Run_0001/images/frame_02246.png"
        string_val: "../data/Training/Run_0001/images/frame_02294.png"
        string_val: "../data/Training/Run_0001/images/frame_04624.png"
        string_val: "../data/Training/Run_0001/images/frame_02970.png"
        string_val: "../data/Training/Run_0001/images/frame_04712.png"
        string_val: "../data/Training/Run_0001/images/frame_03954.png"
        string_val: "../data/Training/Run_0001/images/frame_03423.png"
        string_val: "../data/Training/Run_0001/images/frame_02473.png"
        string_val: "../data/Training/Run_0001/images/frame_00239.png"
        string_val: "../data/Training/Run_0001/images/frame_00610.png"
        string_val: "../data/Training/Run_0001/images/frame_03605.png"
        string_val: "../data/Training/Run_0001/images/frame_01773.png"
        string_val: "../data/Training/Run_0001/images/frame_00506.png"
        string_val: "../data/Training/Run_0001/images/frame_02690.png"
        string_val: "../data/Training/Run_0001/images/frame_01079.png"
        string_val: "../data/Training/Run_0001/images/frame_02989.png"
        string_val: "../data/Training/Run_0001/images/frame_02935.png"
        string_val: "../data/Training/Run_0001/images/frame_04183.png"
        string_val: "../data/Training/Run_0001/images/frame_03892.png"
        string_val: "../data/Training/Run_0001/images/frame_02868.png"
        string_val: "../data/Training/Run_0001/images/frame_03875.png"
        string_val: "../data/Training/Run_0001/images/frame_00431.png"
        string_val: "../data/Training/Run_0001/images/frame_00403.png"
        string_val: "../data/Training/Run_0001/images/frame_04722.png"
        string_val: "../data/Training/Run_0001/images/frame_02281.png"
        string_val: "../data/Training/Run_0001/images/frame_01387.png"
        string_val: "../data/Training/Run_0001/images/frame_02188.png"
        string_val: "../data/Training/Run_0001/images/frame_02607.png"
        string_val: "../data/Training/Run_0001/images/frame_00505.png"
        string_val: "../data/Training/Run_0001/images/frame_01813.png"
        string_val: "../data/Training/Run_0001/images/frame_00956.png"
        string_val: "../data/Training/Run_0001/images/frame_00934.png"
        string_val: "../data/Training/Run_0001/images/frame_00109.png"
        string_val: "../data/Training/Run_0001/images/frame_03589.png"
        string_val: "../data/Training/Run_0001/images/frame_01065.png"
        string_val: "../data/Training/Run_0001/images/frame_02894.png"
        string_val: "../data/Training/Run_0001/images/frame_04315.png"
        string_val: "../data/Training/Run_0001/images/frame_00224.png"
        string_val: "../data/Training/Run_0001/images/frame_03336.png"
        string_val: "../data/Training/Run_0001/images/frame_02367.png"
        string_val: "../data/Training/Run_0001/images/frame_03736.png"
        string_val: "../data/Training/Run_0001/images/frame_02993.png"
        string_val: "../data/Training/Run_0001/images/frame_03095.png"
        string_val: "../data/Training/Run_0001/images/frame_03246.png"
        string_val: "../data/Training/Run_0001/images/frame_01168.png"
        string_val: "../data/Training/Run_0001/images/frame_01823.png"
        string_val: "../data/Training/Run_0001/images/frame_01819.png"
        string_val: "../data/Training/Run_0001/images/frame_01959.png"
        string_val: "../data/Training/Run_0001/images/frame_04372.png"
        string_val: "../data/Training/Run_0001/images/frame_04411.png"
        string_val: "../data/Training/Run_0001/images/frame_02066.png"
        string_val: "../data/Training/Run_0001/images/frame_02352.png"
        string_val: "../data/Training/Run_0001/images/frame_01857.png"
        string_val: "../data/Training/Run_0001/images/frame_00635.png"
        string_val: "../data/Training/Run_0001/images/frame_02009.png"
        string_val: "../data/Training/Run_0001/images/frame_04478.png"
        string_val: "../data/Training/Run_0001/images/frame_01910.png"
        string_val: "../data/Training/Run_0001/images/frame_02112.png"
        string_val: "../data/Training/Run_0001/images/frame_03932.png"
        string_val: "../data/Training/Run_0001/images/frame_02497.png"
        string_val: "../data/Training/Run_0001/images/frame_02318.png"
        string_val: "../data/Training/Run_0001/images/frame_01987.png"
        string_val: "../data/Training/Run_0001/images/frame_01933.png"
        string_val: "../data/Training/Run_0001/images/frame_02242.png"
        string_val: "../data/Training/Run_0001/images/frame_04150.png"
        string_val: "../data/Training/Run_0001/images/frame_00560.png"
        string_val: "../data/Training/Run_0001/images/frame_02723.png"
        string_val: "../data/Training/Run_0001/images/frame_02143.png"
        string_val: "../data/Training/Run_0001/images/frame_04497.png"
        string_val: "../data/Training/Run_0001/images/frame_01601.png"
        string_val: "../data/Training/Run_0001/images/frame_00833.png"
        string_val: "../data/Training/Run_0001/images/frame_01925.png"
        string_val: "../data/Training/Run_0001/images/frame_02221.png"
        string_val: "../data/Training/Run_0001/images/frame_04548.png"
        string_val: "../data/Training/Run_0001/images/frame_02663.png"
        string_val: "../data/Training/Run_0001/images/frame_04313.png"
        string_val: "../data/Training/Run_0001/images/frame_02950.png"
        string_val: "../data/Training/Run_0001/images/frame_03519.png"
        string_val: "../data/Training/Run_0001/images/frame_02040.png"
        string_val: "../data/Training/Run_0001/images/frame_03352.png"
        string_val: "../data/Training/Run_0001/images/frame_04618.png"
        string_val: "../data/Training/Run_0001/images/frame_04021.png"
        string_val: "../data/Training/Run_0001/images/frame_01741.png"
        string_val: "../data/Training/Run_0001/images/frame_02831.png"
        string_val: "../data/Training/Run_0001/images/frame_02190.png"
        string_val: "../data/Training/Run_0001/images/frame_00962.png"
        string_val: "../data/Training/Run_0001/images/frame_01442.png"
        string_val: "../data/Training/Run_0001/images/frame_00273.png"
        string_val: "../data/Training/Run_0001/images/frame_03703.png"
        string_val: "../data/Training/Run_0001/images/frame_02021.png"
        string_val: "../data/Training/Run_0001/images/frame_04318.png"
        string_val: "../data/Training/Run_0001/images/frame_00393.png"
        string_val: "../data/Training/Run_0001/images/frame_01797.png"
        string_val: "../data/Training/Run_0001/images/frame_02092.png"
        string_val: "../data/Training/Run_0001/images/frame_01952.png"
        string_val: "../data/Training/Run_0001/images/frame_01155.png"
        string_val: "../data/Training/Run_0001/images/frame_00225.png"
        string_val: "../data/Training/Run_0001/images/frame_03001.png"
        string_val: "../data/Training/Run_0001/images/frame_03925.png"
        string_val: "../data/Training/Run_0001/images/frame_02265.png"
        string_val: "../data/Training/Run_0001/images/frame_02041.png"
        string_val: "../data/Training/Run_0001/images/frame_03640.png"
        string_val: "../data/Training/Run_0001/images/frame_00317.png"
        string_val: "../data/Training/Run_0001/images/frame_01940.png"
        string_val: "../data/Training/Run_0001/images/frame_04601.png"
        string_val: "../data/Training/Run_0001/images/frame_01033.png"
        string_val: "../data/Training/Run_0001/images/frame_03133.png"
        string_val: "../data/Training/Run_0001/images/frame_03097.png"
        string_val: "../data/Training/Run_0001/images/frame_01104.png"
        string_val: "../data/Training/Run_0001/images/frame_00662.png"
        string_val: "../data/Training/Run_0001/images/frame_02340.png"
        string_val: "../data/Training/Run_0001/images/frame_00256.png"
        string_val: "../data/Training/Run_0001/images/frame_00724.png"
        string_val: "../data/Training/Run_0001/images/frame_03142.png"
        string_val: "../data/Training/Run_0001/images/frame_03514.png"
        string_val: "../data/Training/Run_0001/images/frame_03155.png"
        string_val: "../data/Training/Run_0001/images/frame_01031.png"
        string_val: "../data/Training/Run_0001/images/frame_00090.png"
        string_val: "../data/Training/Run_0001/images/frame_03770.png"
        string_val: "../data/Training/Run_0001/images/frame_01003.png"
        string_val: "../data/Training/Run_0001/images/frame_01783.png"
        string_val: "../data/Training/Run_0001/images/frame_03081.png"
        string_val: "../data/Training/Run_0001/images/frame_03029.png"
        string_val: "../data/Training/Run_0001/images/frame_04014.png"
        string_val: "../data/Training/Run_0001/images/frame_02839.png"
        string_val: "../data/Training/Run_0001/images/frame_01005.png"
        string_val: "../data/Training/Run_0001/images/frame_01188.png"
        string_val: "../data/Training/Run_0001/images/frame_04032.png"
        string_val: "../data/Training/Run_0001/images/frame_04687.png"
        string_val: "../data/Training/Run_0001/images/frame_00547.png"
        string_val: "../data/Training/Run_0001/images/frame_00780.png"
        string_val: "../data/Training/Run_0001/images/frame_02589.png"
        string_val: "../data/Training/Run_0001/images/frame_01976.png"
        string_val: "../data/Training/Run_0001/images/frame_01032.png"
        string_val: "../data/Training/Run_0001/images/frame_02490.png"
        string_val: "../data/Training/Run_0001/images/frame_02829.png"
        string_val: "../data/Training/Run_0001/images/frame_03756.png"
        string_val: "../data/Training/Run_0001/images/frame_03848.png"
        string_val: "../data/Training/Run_0001/images/frame_00692.png"
        string_val: "../data/Training/Run_0001/images/frame_00892.png"
        string_val: "../data/Training/Run_0001/images/frame_03926.png"
        string_val: "../data/Training/Run_0001/images/frame_03873.png"
        string_val: "../data/Training/Run_0001/images/frame_01444.png"
        string_val: "../data/Training/Run_0001/images/frame_04107.png"
        string_val: "../data/Training/Run_0001/images/frame_00731.png"
        string_val: "../data/Training/Run_0001/images/frame_03910.png"
        string_val: "../data/Training/Run_0001/images/frame_00439.png"
        string_val: "../data/Training/Run_0001/images/frame_03107.png"
        string_val: "../data/Training/Run_0001/images/frame_02103.png"
        string_val: "../data/Training/Run_0001/images/frame_02961.png"
        string_val: "../data/Training/Run_0001/images/frame_04065.png"
        string_val: "../data/Training/Run_0001/images/frame_01128.png"
        string_val: "../data/Training/Run_0001/images/frame_04503.png"
        string_val: "../data/Training/Run_0001/images/frame_02374.png"
        string_val: "../data/Training/Run_0001/images/frame_00495.png"
        string_val: "../data/Training/Run_0001/images/frame_03927.png"
        string_val: "../data/Training/Run_0001/images/frame_01090.png"
        string_val: "../data/Training/Run_0001/images/frame_02204.png"
        string_val: "../data/Training/Run_0001/images/frame_01881.png"
        string_val: "../data/Training/Run_0001/images/frame_00659.png"
        string_val: "../data/Training/Run_0001/images/frame_02534.png"
        string_val: "../data/Training/Run_0001/images/frame_04603.png"
        string_val: "../data/Training/Run_0001/images/frame_04154.png"
        string_val: "../data/Training/Run_0001/images/frame_02747.png"
        string_val: "../data/Training/Run_0001/images/frame_03415.png"
        string_val: "../data/Training/Run_0001/images/frame_01711.png"
        string_val: "../data/Training/Run_0001/images/frame_02439.png"
        string_val: "../data/Training/Run_0001/images/frame_01157.png"
        string_val: "../data/Training/Run_0001/images/frame_04026.png"
        string_val: "../data/Training/Run_0001/images/frame_02774.png"
        string_val: "../data/Training/Run_0001/images/frame_02314.png"
        string_val: "../data/Training/Run_0001/images/frame_04348.png"
        string_val: "../data/Training/Run_0001/images/frame_03218.png"
        string_val: "../data/Training/Run_0001/images/frame_01186.png"
        string_val: "../data/Training/Run_0001/images/frame_01651.png"
        string_val: "../data/Training/Run_0001/images/frame_03102.png"
        string_val: "../data/Training/Run_0001/images/frame_00854.png"
        string_val: "../data/Training/Run_0001/images/frame_04054.png"
        string_val: "../data/Training/Run_0001/images/frame_00813.png"
        string_val: "../data/Training/Run_0001/images/frame_03565.png"
        string_val: "../data/Training/Run_0001/images/frame_00407.png"
        string_val: "../data/Training/Run_0001/images/frame_00468.png"
        string_val: "../data/Training/Run_0001/images/frame_04083.png"
        string_val: "../data/Training/Run_0001/images/frame_03983.png"
        string_val: "../data/Training/Run_0001/images/frame_02417.png"
        string_val: "../data/Training/Run_0001/images/frame_00995.png"
        string_val: "../data/Training/Run_0001/images/frame_04151.png"
        string_val: "../data/Training/Run_0001/images/frame_01421.png"
        string_val: "../data/Training/Run_0001/images/frame_03047.png"
        string_val: "../data/Training/Run_0001/images/frame_03917.png"
        string_val: "../data/Training/Run_0001/images/frame_03232.png"
        string_val: "../data/Training/Run_0001/images/frame_04513.png"
        string_val: "../data/Training/Run_0001/images/frame_03999.png"
        string_val: "../data/Training/Run_0001/images/frame_01062.png"
        string_val: "../data/Training/Run_0001/images/frame_00687.png"
        string_val: "../data/Training/Run_0001/images/frame_03876.png"
        string_val: "../data/Training/Run_0001/images/frame_01951.png"
        string_val: "../data/Training/Run_0001/images/frame_00911.png"
        string_val: "../data/Training/Run_0001/images/frame_04062.png"
        string_val: "../data/Training/Run_0001/images/frame_03795.png"
        string_val: "../data/Training/Run_0001/images/frame_04016.png"
        string_val: "../data/Training/Run_0001/images/frame_01069.png"
        string_val: "../data/Training/Run_0001/images/frame_00781.png"
        string_val: "../data/Training/Run_0001/images/frame_01081.png"
        string_val: "../data/Training/Run_0001/images/frame_01899.png"
        string_val: "../data/Training/Run_0001/images/frame_01619.png"
        string_val: "../data/Training/Run_0001/images/frame_02882.png"
        string_val: "../data/Training/Run_0001/images/frame_02699.png"
        string_val: "../data/Training/Run_0001/images/frame_00828.png"
        string_val: "../data/Training/Run_0001/images/frame_02668.png"
        string_val: "../data/Training/Run_0001/images/frame_01852.png"
        string_val: "../data/Training/Run_0001/images/frame_02291.png"
        string_val: "../data/Training/Run_0001/images/frame_03120.png"
        string_val: "../data/Training/Run_0001/images/frame_03324.png"
        string_val: "../data/Training/Run_0001/images/frame_01510.png"
        string_val: "../data/Training/Run_0001/images/frame_04572.png"
        string_val: "../data/Training/Run_0001/images/frame_01990.png"
        string_val: "../data/Training/Run_0001/images/frame_00696.png"
        string_val: "../data/Training/Run_0001/images/frame_03295.png"
        string_val: "../data/Training/Run_0001/images/frame_01454.png"
        string_val: "../data/Training/Run_0001/images/frame_03496.png"
        string_val: "../data/Training/Run_0001/images/frame_00122.png"
        string_val: "../data/Training/Run_0001/images/frame_00978.png"
        string_val: "../data/Training/Run_0001/images/frame_01456.png"
        string_val: "../data/Training/Run_0001/images/frame_02549.png"
        string_val: "../data/Training/Run_0001/images/frame_02665.png"
        string_val: "../data/Training/Run_0001/images/frame_04108.png"
        string_val: "../data/Training/Run_0001/images/frame_02772.png"
        string_val: "../data/Training/Run_0001/images/frame_01837.png"
        string_val: "../data/Training/Run_0001/images/frame_02336.png"
        string_val: "../data/Training/Run_0001/images/frame_01008.png"
        string_val: "../data/Training/Run_0001/images/frame_04639.png"
        string_val: "../data/Training/Run_0001/images/frame_01339.png"
        string_val: "../data/Training/Run_0001/images/frame_01897.png"
        string_val: "../data/Training/Run_0001/images/frame_01824.png"
        string_val: "../data/Training/Run_0001/images/frame_03303.png"
        string_val: "../data/Training/Run_0001/images/frame_04505.png"
        string_val: "../data/Training/Run_0001/images/frame_01698.png"
        string_val: "../data/Training/Run_0001/images/frame_00450.png"
        string_val: "../data/Training/Run_0001/images/frame_02938.png"
        string_val: "../data/Training/Run_0001/images/frame_00051.png"
        string_val: "../data/Training/Run_0001/images/frame_00517.png"
        string_val: "../data/Training/Run_0001/images/frame_01160.png"
        string_val: "../data/Training/Run_0001/images/frame_02765.png"
        string_val: "../data/Training/Run_0001/images/frame_01343.png"
        string_val: "../data/Training/Run_0001/images/frame_03238.png"
        string_val: "../data/Training/Run_0001/images/frame_01465.png"
        string_val: "../data/Training/Run_0001/images/frame_01184.png"
        string_val: "../data/Training/Run_0001/images/frame_03740.png"
        string_val: "../data/Training/Run_0001/images/frame_01425.png"
        string_val: "../data/Training/Run_0001/images/frame_02516.png"
        string_val: "../data/Training/Run_0001/images/frame_00971.png"
        string_val: "../data/Training/Run_0001/images/frame_03178.png"
        string_val: "../data/Training/Run_0001/images/frame_04120.png"
        string_val: "../data/Training/Run_0001/images/frame_04623.png"
        string_val: "../data/Training/Run_0001/images/frame_04577.png"
        string_val: "../data/Training/Run_0001/images/frame_01914.png"
        string_val: "../data/Training/Run_0001/images/frame_00136.png"
        string_val: "../data/Training/Run_0001/images/frame_04670.png"
        string_val: "../data/Training/Run_0001/images/frame_02941.png"
        string_val: "../data/Training/Run_0001/images/frame_04345.png"
        string_val: "../data/Training/Run_0001/images/frame_00500.png"
        string_val: "../data/Training/Run_0001/images/frame_04453.png"
        string_val: "../data/Training/Run_0001/images/frame_04300.png"
        string_val: "../data/Training/Run_0001/images/frame_04230.png"
        string_val: "../data/Training/Run_0001/images/frame_00138.png"
        string_val: "../data/Training/Run_0001/images/frame_02609.png"
        string_val: "../data/Training/Run_0001/images/frame_02056.png"
        string_val: "../data/Training/Run_0001/images/frame_02324.png"
        string_val: "../data/Training/Run_0001/images/frame_00844.png"
        string_val: "../data/Training/Run_0001/images/frame_01373.png"
        string_val: "../data/Training/Run_0001/images/frame_01499.png"
        string_val: "../data/Training/Run_0001/images/frame_01937.png"
        string_val: "../data/Training/Run_0001/images/frame_02729.png"
        string_val: "../data/Training/Run_0001/images/frame_03479.png"
        string_val: "../data/Training/Run_0001/images/frame_02348.png"
        string_val: "../data/Training/Run_0001/images/frame_02089.png"
        string_val: "../data/Training/Run_0001/images/frame_03409.png"
        string_val: "../data/Training/Run_0001/images/frame_00461.png"
        string_val: "../data/Training/Run_0001/images/frame_00728.png"
        string_val: "../data/Training/Run_0001/images/frame_00976.png"
        string_val: "../data/Training/Run_0001/images/frame_03347.png"
        string_val: "../data/Training/Run_0001/images/frame_00691.png"
        string_val: "../data/Training/Run_0001/images/frame_02541.png"
        string_val: "../data/Training/Run_0001/images/frame_02959.png"
        string_val: "../data/Training/Run_0001/images/frame_00394.png"
        string_val: "../data/Training/Run_0001/images/frame_03338.png"
        string_val: "../data/Training/Run_0001/images/frame_02724.png"
        string_val: "../data/Training/Run_0001/images/frame_00931.png"
        string_val: "../data/Training/Run_0001/images/frame_03607.png"
        string_val: "../data/Training/Run_0001/images/frame_01635.png"
        string_val: "../data/Training/Run_0001/images/frame_00265.png"
        string_val: "../data/Training/Run_0001/images/frame_00536.png"
        string_val: "../data/Training/Run_0001/images/frame_00743.png"
        string_val: "../data/Training/Run_0001/images/frame_01318.png"
        string_val: "../data/Training/Run_0001/images/frame_00590.png"
        string_val: "../data/Training/Run_0001/images/frame_01771.png"
        string_val: "../data/Training/Run_0001/images/frame_03587.png"
        string_val: "../data/Training/Run_0001/images/frame_03641.png"
        string_val: "../data/Training/Run_0001/images/frame_00690.png"
        string_val: "../data/Training/Run_0001/images/frame_01957.png"
        string_val: "../data/Training/Run_0001/images/frame_00890.png"
        string_val: "../data/Training/Run_0001/images/frame_02241.png"
        string_val: "../data/Training/Run_0001/images/frame_00688.png"
        string_val: "../data/Training/Run_0001/images/frame_03564.png"
        string_val: "../data/Training/Run_0001/images/frame_03163.png"
        string_val: "../data/Training/Run_0001/images/frame_00257.png"
        string_val: "../data/Training/Run_0001/images/frame_04328.png"
        string_val: "../data/Training/Run_0001/images/frame_02387.png"
        string_val: "../data/Training/Run_0001/images/frame_04015.png"
        string_val: "../data/Training/Run_0001/images/frame_01207.png"
        string_val: "../data/Training/Run_0001/images/frame_00111.png"
        string_val: "../data/Training/Run_0001/images/frame_04045.png"
        string_val: "../data/Training/Run_0001/images/frame_04522.png"
        string_val: "../data/Training/Run_0001/images/frame_01765.png"
        string_val: "../data/Training/Run_0001/images/frame_02434.png"
        string_val: "../data/Training/Run_0001/images/frame_00155.png"
        string_val: "../data/Training/Run_0001/images/frame_01515.png"
        string_val: "../data/Training/Run_0001/images/frame_04512.png"
        string_val: "../data/Training/Run_0001/images/frame_02602.png"
        string_val: "../data/Training/Run_0001/images/frame_01303.png"
        string_val: "../data/Training/Run_0001/images/frame_03741.png"
        string_val: "../data/Training/Run_0001/images/frame_02595.png"
        string_val: "../data/Training/Run_0001/images/frame_03239.png"
        string_val: "../data/Training/Run_0001/images/frame_04472.png"
        string_val: "../data/Training/Run_0001/images/frame_03574.png"
        string_val: "../data/Training/Run_0001/images/frame_04353.png"
        string_val: "../data/Training/Run_0001/images/frame_03728.png"
        string_val: "../data/Training/Run_0001/images/frame_02608.png"
        string_val: "../data/Training/Run_0001/images/frame_01209.png"
        string_val: "../data/Training/Run_0001/images/frame_02559.png"
        string_val: "../data/Training/Run_0001/images/frame_00183.png"
        string_val: "../data/Training/Run_0001/images/frame_04441.png"
        string_val: "../data/Training/Run_0001/images/frame_01667.png"
        string_val: "../data/Training/Run_0001/images/frame_04629.png"
        string_val: "../data/Training/Run_0001/images/frame_01981.png"
        string_val: "../data/Training/Run_0001/images/frame_01588.png"
        string_val: "../data/Training/Run_0001/images/frame_02617.png"
        string_val: "../data/Training/Run_0001/images/frame_00574.png"
        string_val: "../data/Training/Run_0001/images/frame_00864.png"
        string_val: "../data/Training/Run_0001/images/frame_02448.png"
        string_val: "../data/Training/Run_0001/images/frame_03711.png"
        string_val: "../data/Training/Run_0001/images/frame_02707.png"
        string_val: "../data/Training/Run_0001/images/frame_02508.png"
        string_val: "../data/Training/Run_0001/images/frame_00879.png"
        string_val: "../data/Training/Run_0001/images/frame_03544.png"
        string_val: "../data/Training/Run_0001/images/frame_03928.png"
        string_val: "../data/Training/Run_0001/images/frame_01369.png"
        string_val: "../data/Training/Run_0001/images/frame_03366.png"
        string_val: "../data/Training/Run_0001/images/frame_04642.png"
        string_val: "../data/Training/Run_0001/images/frame_03373.png"
        string_val: "../data/Training/Run_0001/images/frame_00264.png"
        string_val: "../data/Training/Run_0001/images/frame_03623.png"
        string_val: "../data/Training/Run_0001/images/frame_00644.png"
        string_val: "../data/Training/Run_0001/images/frame_01514.png"
        string_val: "../data/Training/Run_0001/images/frame_00166.png"
        string_val: "../data/Training/Run_0001/images/frame_00348.png"
        string_val: "../data/Training/Run_0001/images/frame_03802.png"
        string_val: "../data/Training/Run_0001/images/frame_01411.png"
        string_val: "../data/Training/Run_0001/images/frame_00705.png"
        string_val: "../data/Training/Run_0001/images/frame_01905.png"
        string_val: "../data/Training/Run_0001/images/frame_04568.png"
        string_val: "../data/Training/Run_0001/images/frame_02688.png"
        string_val: "../data/Training/Run_0001/images/frame_04607.png"
        string_val: "../data/Training/Run_0001/images/frame_01625.png"
        string_val: "../data/Training/Run_0001/images/frame_04167.png"
        string_val: "../data/Training/Run_0001/images/frame_02075.png"
        string_val: "../data/Training/Run_0001/images/frame_03408.png"
        string_val: "../data/Training/Run_0001/images/frame_00326.png"
        string_val: "../data/Training/Run_0001/images/frame_03085.png"
        string_val: "../data/Training/Run_0001/images/frame_02643.png"
        string_val: "../data/Training/Run_0001/images/frame_00131.png"
        string_val: "../data/Training/Run_0001/images/frame_04369.png"
        string_val: "../data/Training/Run_0001/images/frame_03621.png"
        string_val: "../data/Training/Run_0001/images/frame_04707.png"
        string_val: "../data/Training/Run_0001/images/frame_03552.png"
        string_val: "../data/Training/Run_0001/images/frame_01629.png"
        string_val: "../data/Training/Run_0001/images/frame_01703.png"
        string_val: "../data/Training/Run_0001/images/frame_03761.png"
        string_val: "../data/Training/Run_0001/images/frame_02290.png"
        string_val: "../data/Training/Run_0001/images/frame_03624.png"
        string_val: "../data/Training/Run_0001/images/frame_02418.png"
        string_val: "../data/Training/Run_0001/images/frame_02702.png"
        string_val: "../data/Training/Run_0001/images/frame_04337.png"
        string_val: "../data/Training/Run_0001/images/frame_02208.png"
        string_val: "../data/Training/Run_0001/images/frame_02818.png"
        string_val: "../data/Training/Run_0001/images/frame_04527.png"
        string_val: "../data/Training/Run_0001/images/frame_00316.png"
        string_val: "../data/Training/Run_0001/images/frame_02184.png"
        string_val: "../data/Training/Run_0001/images/frame_00167.png"
        string_val: "../data/Training/Run_0001/images/frame_03484.png"
        string_val: "../data/Training/Run_0001/images/frame_00710.png"
        string_val: "../data/Training/Run_0001/images/frame_01241.png"
        string_val: "../data/Training/Run_0001/images/frame_02365.png"
        string_val: "../data/Training/Run_0001/images/frame_02275.png"
        string_val: "../data/Training/Run_0001/images/frame_03655.png"
        string_val: "../data/Training/Run_0001/images/frame_03474.png"
        string_val: "../data/Training/Run_0001/images/frame_02335.png"
        string_val: "../data/Training/Run_0001/images/frame_03004.png"
        string_val: "../data/Training/Run_0001/images/frame_03687.png"
        string_val: "../data/Training/Run_0001/images/frame_03035.png"
        string_val: "../data/Training/Run_0001/images/frame_03807.png"
        string_val: "../data/Training/Run_0001/images/frame_04226.png"
        string_val: "../data/Training/Run_0001/images/frame_00589.png"
        string_val: "../data/Training/Run_0001/images/frame_00893.png"
        string_val: "../data/Training/Run_0001/images/frame_00735.png"
        string_val: "../data/Training/Run_0001/images/frame_01519.png"
        string_val: "../data/Training/Run_0001/images/frame_02758.png"
        string_val: "../data/Training/Run_0001/images/frame_04035.png"
        string_val: "../data/Training/Run_0001/images/frame_01906.png"
        string_val: "../data/Training/Run_0001/images/frame_03850.png"
        string_val: "../data/Training/Run_0001/images/frame_04501.png"
        string_val: "../data/Training/Run_0001/images/frame_00897.png"
        string_val: "../data/Training/Run_0001/images/frame_02832.png"
        string_val: "../data/Training/Run_0001/images/frame_01480.png"
        string_val: "../data/Training/Run_0001/images/frame_00982.png"
        string_val: "../data/Training/Run_0001/images/frame_00016.png"
        string_val: "../data/Training/Run_0001/images/frame_04587.png"
        string_val: "../data/Training/Run_0001/images/frame_01624.png"
        string_val: "../data/Training/Run_0001/images/frame_00456.png"
        string_val: "../data/Training/Run_0001/images/frame_03693.png"
        string_val: "../data/Training/Run_0001/images/frame_03727.png"
        string_val: "../data/Training/Run_0001/images/frame_01323.png"
        string_val: "../data/Training/Run_0001/images/frame_02141.png"
        string_val: "../data/Training/Run_0001/images/frame_04003.png"
        string_val: "../data/Training/Run_0001/images/frame_01135.png"
        string_val: "../data/Training/Run_0001/images/frame_03383.png"
        string_val: "../data/Training/Run_0001/images/frame_02237.png"
        string_val: "../data/Training/Run_0001/images/frame_03302.png"
        string_val: "../data/Training/Run_0001/images/frame_01693.png"
        string_val: "../data/Training/Run_0001/images/frame_01332.png"
        string_val: "../data/Training/Run_0001/images/frame_01009.png"
        string_val: "../data/Training/Run_0001/images/frame_01082.png"
        string_val: "../data/Training/Run_0001/images/frame_02759.png"
        string_val: "../data/Training/Run_0001/images/frame_00140.png"
        string_val: "../data/Training/Run_0001/images/frame_00905.png"
        string_val: "../data/Training/Run_0001/images/frame_03378.png"
        string_val: "../data/Training/Run_0001/images/frame_04569.png"
        string_val: "../data/Training/Run_0001/images/frame_02455.png"
        string_val: "../data/Training/Run_0001/images/frame_01089.png"
        string_val: "../data/Training/Run_0001/images/frame_01715.png"
        string_val: "../data/Training/Run_0001/images/frame_02257.png"
        string_val: "../data/Training/Run_0001/images/frame_00530.png"
        string_val: "../data/Training/Run_0001/images/frame_00232.png"
        string_val: "../data/Training/Run_0001/images/frame_02042.png"
        string_val: "../data/Training/Run_0001/images/frame_01141.png"
        string_val: "../data/Training/Run_0001/images/frame_02781.png"
        string_val: "../data/Training/Run_0001/images/frame_03670.png"
        string_val: "../data/Training/Run_0001/images/frame_01195.png"
        string_val: "../data/Training/Run_0001/images/frame_00910.png"
        string_val: "../data/Training/Run_0001/images/frame_03083.png"
        string_val: "../data/Training/Run_0001/images/frame_01622.png"
        string_val: "../data/Training/Run_0001/images/frame_01335.png"
        string_val: "../data/Training/Run_0001/images/frame_01113.png"
        string_val: "../data/Training/Run_0001/images/frame_00158.png"
        string_val: "../data/Training/Run_0001/images/frame_03161.png"
        string_val: "../data/Training/Run_0001/images/frame_01695.png"
        string_val: "../data/Training/Run_0001/images/frame_00197.png"
        string_val: "../data/Training/Run_0001/images/frame_04283.png"
        string_val: "../data/Training/Run_0001/images/frame_00987.png"
        string_val: "../data/Training/Run_0001/images/frame_02916.png"
        string_val: "../data/Training/Run_0001/images/frame_01381.png"
        string_val: "../data/Training/Run_0001/images/frame_01468.png"
        string_val: "../data/Training/Run_0001/images/frame_04178.png"
        string_val: "../data/Training/Run_0001/images/frame_02022.png"
        string_val: "../data/Training/Run_0001/images/frame_00182.png"
        string_val: "../data/Training/Run_0001/images/frame_01598.png"
        string_val: "../data/Training/Run_0001/images/frame_03022.png"
        string_val: "../data/Training/Run_0001/images/frame_04368.png"
        string_val: "../data/Training/Run_0001/images/frame_00915.png"
        string_val: "../data/Training/Run_0001/images/frame_00968.png"
        string_val: "../data/Training/Run_0001/images/frame_03385.png"
        string_val: "../data/Training/Run_0001/images/frame_02666.png"
        string_val: "../data/Training/Run_0001/images/frame_00716.png"
        string_val: "../data/Training/Run_0001/images/frame_02180.png"
        string_val: "../data/Training/Run_0001/images/frame_02182.png"
        string_val: "../data/Training/Run_0001/images/frame_02485.png"
        string_val: "../data/Training/Run_0001/images/frame_02262.png"
        string_val: "../data/Training/Run_0001/images/frame_04684.png"
        string_val: "../data/Training/Run_0001/images/frame_03237.png"
        string_val: "../data/Training/Run_0001/images/frame_00785.png"
        string_val: "../data/Training/Run_0001/images/frame_01419.png"
        string_val: "../data/Training/Run_0001/images/frame_00373.png"
        string_val: "../data/Training/Run_0001/images/frame_03112.png"
        string_val: "../data/Training/Run_0001/images/frame_02137.png"
        string_val: "../data/Training/Run_0001/images/frame_01552.png"
        string_val: "../data/Training/Run_0001/images/frame_04697.png"
        string_val: "../data/Training/Run_0001/images/frame_03976.png"
        string_val: "../data/Training/Run_0001/images/frame_01546.png"
        string_val: "../data/Training/Run_0001/images/frame_01353.png"
        string_val: "../data/Training/Run_0001/images/frame_02463.png"
        string_val: "../data/Training/Run_0001/images/frame_03424.png"
        string_val: "../data/Training/Run_0001/images/frame_01167.png"
        string_val: "../data/Training/Run_0001/images/frame_02548.png"
        string_val: "../data/Training/Run_0001/images/frame_00057.png"
        string_val: "../data/Training/Run_0001/images/frame_03236.png"
        string_val: "../data/Training/Run_0001/images/frame_03676.png"
        string_val: "../data/Training/Run_0001/images/frame_04044.png"
        string_val: "../data/Training/Run_0001/images/frame_03278.png"
        string_val: "../data/Training/Run_0001/images/frame_03117.png"
        string_val: "../data/Training/Run_0001/images/frame_00400.png"
        string_val: "../data/Training/Run_0001/images/frame_02138.png"
        string_val: "../data/Training/Run_0001/images/frame_02928.png"
        string_val: "../data/Training/Run_0001/images/frame_04100.png"
        string_val: "../data/Training/Run_0001/images/frame_00993.png"
        string_val: "../data/Training/Run_0001/images/frame_03031.png"
        string_val: "../data/Training/Run_0001/images/frame_03672.png"
        string_val: "../data/Training/Run_0001/images/frame_04387.png"
        string_val: "../data/Training/Run_0001/images/frame_00013.png"
        string_val: "../data/Training/Run_0001/images/frame_00255.png"
        string_val: "../data/Training/Run_0001/images/frame_01422.png"
        string_val: "../data/Training/Run_0001/images/frame_03165.png"
        string_val: "../data/Training/Run_0001/images/frame_03718.png"
        string_val: "../data/Training/Run_0001/images/frame_04483.png"
        string_val: "../data/Training/Run_0001/images/frame_03092.png"
        string_val: "../data/Training/Run_0001/images/frame_00036.png"
        string_val: "../data/Training/Run_0001/images/frame_01264.png"
        string_val: "../data/Training/Run_0001/images/frame_03603.png"
        string_val: "../data/Training/Run_0001/images/frame_00629.png"
        string_val: "../data/Training/Run_0001/images/frame_03773.png"
        string_val: "../data/Training/Run_0001/images/frame_02811.png"
        string_val: "../data/Training/Run_0001/images/frame_03902.png"
        string_val: "../data/Training/Run_0001/images/frame_01204.png"
        string_val: "../data/Training/Run_0001/images/frame_03453.png"
        string_val: "../data/Training/Run_0001/images/frame_02346.png"
        string_val: "../data/Training/Run_0001/images/frame_04719.png"
        string_val: "../data/Training/Run_0001/images/frame_00465.png"
        string_val: "../data/Training/Run_0001/images/frame_01300.png"
        string_val: "../data/Training/Run_0001/images/frame_00029.png"
        string_val: "../data/Training/Run_0001/images/frame_00652.png"
        string_val: "../data/Training/Run_0001/images/frame_02810.png"
        string_val: "../data/Training/Run_0001/images/frame_03922.png"
        string_val: "../data/Training/Run_0001/images/frame_02890.png"
        string_val: "../data/Training/Run_0001/images/frame_02193.png"
        string_val: "../data/Training/Run_0001/images/frame_02641.png"
        string_val: "../data/Training/Run_0001/images/frame_00032.png"
        string_val: "../data/Training/Run_0001/images/frame_03284.png"
        string_val: "../data/Training/Run_0001/images/frame_04467.png"
        string_val: "../data/Training/Run_0001/images/frame_02445.png"
        string_val: "../data/Training/Run_0001/images/frame_02029.png"
        string_val: "../data/Training/Run_0001/images/frame_03752.png"
        string_val: "../data/Training/Run_0001/images/frame_01159.png"
        string_val: "../data/Training/Run_0001/images/frame_04280.png"
        string_val: "../data/Training/Run_0001/images/frame_02096.png"
        string_val: "../data/Training/Run_0001/images/frame_02616.png"
        string_val: "../data/Training/Run_0001/images/frame_04531.png"
        string_val: "../data/Training/Run_0001/images/frame_04657.png"
        string_val: "../data/Training/Run_0001/images/frame_02306.png"
        string_val: "../data/Training/Run_0001/images/frame_03059.png"
        string_val: "../data/Training/Run_0001/images/frame_03475.png"
        string_val: "../data/Training/Run_0001/images/frame_03048.png"
        string_val: "../data/Training/Run_0001/images/frame_04005.png"
        string_val: "../data/Training/Run_0001/images/frame_01298.png"
        string_val: "../data/Training/Run_0001/images/frame_03399.png"
        string_val: "../data/Training/Run_0001/images/frame_00709.png"
        string_val: "../data/Training/Run_0001/images/frame_00061.png"
        string_val: "../data/Training/Run_0001/images/frame_00164.png"
        string_val: "../data/Training/Run_0001/images/frame_02343.png"
        string_val: "../data/Training/Run_0001/images/frame_02444.png"
        string_val: "../data/Training/Run_0001/images/frame_02924.png"
        string_val: "../data/Training/Run_0001/images/frame_01229.png"
        string_val: "../data/Training/Run_0001/images/frame_02560.png"
        string_val: "../data/Training/Run_0001/images/frame_01645.png"
        string_val: "../data/Training/Run_0001/images/frame_03569.png"
        string_val: "../data/Training/Run_0001/images/frame_00385.png"
        string_val: "../data/Training/Run_0001/images/frame_03122.png"
        string_val: "../data/Training/Run_0001/images/frame_03506.png"
        string_val: "../data/Training/Run_0001/images/frame_03229.png"
        string_val: "../data/Training/Run_0001/images/frame_02178.png"
        string_val: "../data/Training/Run_0001/images/frame_02540.png"
        string_val: "../data/Training/Run_0001/images/frame_02145.png"
        string_val: "../data/Training/Run_0001/images/frame_02435.png"
        string_val: "../data/Training/Run_0001/images/frame_04384.png"
        string_val: "../data/Training/Run_0001/images/frame_02332.png"
        string_val: "../data/Training/Run_0001/images/frame_01502.png"
        string_val: "../data/Training/Run_0001/images/frame_00455.png"
        string_val: "../data/Training/Run_0001/images/frame_02279.png"
        string_val: "../data/Training/Run_0001/images/frame_04521.png"
        string_val: "../data/Training/Run_0001/images/frame_02344.png"
        string_val: "../data/Training/Run_0001/images/frame_01087.png"
        string_val: "../data/Training/Run_0001/images/frame_00988.png"
        string_val: "../data/Training/Run_0001/images/frame_02051.png"
        string_val: "../data/Training/Run_0001/images/frame_03357.png"
        string_val: "../data/Training/Run_0001/images/frame_04375.png"
        string_val: "../data/Training/Run_0001/images/frame_02835.png"
        string_val: "../data/Training/Run_0001/images/frame_03857.png"
        string_val: "../data/Training/Run_0001/images/frame_04212.png"
        string_val: "../data/Training/Run_0001/images/frame_01512.png"
        string_val: "../data/Training/Run_0001/images/frame_01522.png"
        string_val: "../data/Training/Run_0001/images/frame_03666.png"
        string_val: "../data/Training/Run_0001/images/frame_03124.png"
        string_val: "../data/Training/Run_0001/images/frame_02430.png"
        string_val: "../data/Training/Run_0001/images/frame_02529.png"
        string_val: "../data/Training/Run_0001/images/frame_04633.png"
        string_val: "../data/Training/Run_0001/images/frame_04163.png"
        string_val: "../data/Training/Run_0001/images/frame_04087.png"
        string_val: "../data/Training/Run_0001/images/frame_02326.png"
        string_val: "../data/Training/Run_0001/images/frame_00788.png"
        string_val: "../data/Training/Run_0001/images/frame_00154.png"
        string_val: "../data/Training/Run_0001/images/frame_00509.png"
        string_val: "../data/Training/Run_0001/images/frame_02017.png"
        string_val: "../data/Training/Run_0001/images/frame_03369.png"
        string_val: "../data/Training/Run_0001/images/frame_00078.png"
        string_val: "../data/Training/Run_0001/images/frame_03548.png"
        string_val: "../data/Training/Run_0001/images/frame_01430.png"
        string_val: "../data/Training/Run_0001/images/frame_01944.png"
        string_val: "../data/Training/Run_0001/images/frame_01758.png"
        string_val: "../data/Training/Run_0001/images/frame_02362.png"
        string_val: "../data/Training/Run_0001/images/frame_04507.png"
        string_val: "../data/Training/Run_0001/images/frame_03348.png"
        string_val: "../data/Training/Run_0001/images/frame_03767.png"
        string_val: "../data/Training/Run_0001/images/frame_02247.png"
        string_val: "../data/Training/Run_0001/images/frame_04188.png"
        string_val: "../data/Training/Run_0001/images/frame_04346.png"
        string_val: "../data/Training/Run_0001/images/frame_03053.png"
        string_val: "../data/Training/Run_0001/images/frame_01174.png"
        string_val: "../data/Training/Run_0001/images/frame_01459.png"
        string_val: "../data/Training/Run_0001/images/frame_01851.png"
        string_val: "../data/Training/Run_0001/images/frame_00267.png"
        string_val: "../data/Training/Run_0001/images/frame_00845.png"
        string_val: "../data/Training/Run_0001/images/frame_02636.png"
        string_val: "../data/Training/Run_0001/images/frame_03989.png"
        string_val: "../data/Training/Run_0001/images/frame_01073.png"
        string_val: "../data/Training/Run_0001/images/frame_03702.png"
        string_val: "../data/Training/Run_0001/images/frame_03812.png"
        string_val: "../data/Training/Run_0001/images/frame_00252.png"
        string_val: "../data/Training/Run_0001/images/frame_01541.png"
        string_val: "../data/Training/Run_0001/images/frame_03166.png"
        string_val: "../data/Training/Run_0001/images/frame_02484.png"
        string_val: "../data/Training/Run_0001/images/frame_03109.png"
        string_val: "../data/Training/Run_0001/images/frame_01093.png"
        string_val: "../data/Training/Run_0001/images/frame_04402.png"
        string_val: "../data/Training/Run_0001/images/frame_01565.png"
        string_val: "../data/Training/Run_0001/images/frame_01423.png"
        string_val: "../data/Training/Run_0001/images/frame_01349.png"
        string_val: "../data/Training/Run_0001/images/frame_02674.png"
        string_val: "../data/Training/Run_0001/images/frame_02319.png"
        string_val: "../data/Training/Run_0001/images/frame_04578.png"
        string_val: "../data/Training/Run_0001/images/frame_03138.png"
        string_val: "../data/Training/Run_0001/images/frame_04036.png"
        string_val: "../data/Training/Run_0001/images/frame_00290.png"
        string_val: "../data/Training/Run_0001/images/frame_03281.png"
        string_val: "../data/Training/Run_0001/images/frame_02449.png"
        string_val: "../data/Training/Run_0001/images/frame_01639.png"
        string_val: "../data/Training/Run_0001/images/frame_04385.png"
        string_val: "../data/Training/Run_0001/images/frame_00236.png"
        string_val: "../data/Training/Run_0001/images/frame_04081.png"
        string_val: "../data/Training/Run_0001/images/frame_02125.png"
        string_val: "../data/Training/Run_0001/images/frame_00882.png"
        string_val: "../data/Training/Run_0001/images/frame_03043.png"
        string_val: "../data/Training/Run_0001/images/frame_02235.png"
        string_val: "../data/Training/Run_0001/images/frame_02926.png"
        string_val: "../data/Training/Run_0001/images/frame_02303.png"
        string_val: "../data/Training/Run_0001/images/frame_02069.png"
        string_val: "../data/Training/Run_0001/images/frame_03293.png"
        string_val: "../data/Training/Run_0001/images/frame_01376.png"
        string_val: "../data/Training/Run_0001/images/frame_03462.png"
        string_val: "../data/Training/Run_0001/images/frame_02043.png"
        string_val: "../data/Training/Run_0001/images/frame_00008.png"
        string_val: "../data/Training/Run_0001/images/frame_04389.png"
        string_val: "../data/Training/Run_0001/images/frame_03567.png"
        string_val: "../data/Training/Run_0001/images/frame_03984.png"
        string_val: "../data/Training/Run_0001/images/frame_02917.png"
        string_val: "../data/Training/Run_0001/images/frame_01756.png"
        string_val: "../data/Training/Run_0001/images/frame_04307.png"
        string_val: "../data/Training/Run_0001/images/frame_03084.png"
        string_val: "../data/Training/Run_0001/images/frame_03220.png"
        string_val: "../data/Training/Run_0001/images/frame_03946.png"
        string_val: "../data/Training/Run_0001/images/frame_02972.png"
        string_val: "../data/Training/Run_0001/images/frame_03573.png"
        string_val: "../data/Training/Run_0001/images/frame_02806.png"
        string_val: "../data/Training/Run_0001/images/frame_02755.png"
        string_val: "../data/Training/Run_0001/images/frame_01144.png"
        string_val: "../data/Training/Run_0001/images/frame_00292.png"
        string_val: "../data/Training/Run_0001/images/frame_03051.png"
        string_val: "../data/Training/Run_0001/images/frame_02940.png"
        string_val: "../data/Training/Run_0001/images/frame_03776.png"
        string_val: "../data/Training/Run_0001/images/frame_01804.png"
        string_val: "../data/Training/Run_0001/images/frame_04098.png"
        string_val: "../data/Training/Run_0001/images/frame_02037.png"
        string_val: "../data/Training/Run_0001/images/frame_02462.png"
        string_val: "../data/Training/Run_0001/images/frame_01916.png"
        string_val: "../data/Training/Run_0001/images/frame_01529.png"
        string_val: "../data/Training/Run_0001/images/frame_01265.png"
        string_val: "../data/Training/Run_0001/images/frame_00856.png"
        string_val: "../data/Training/Run_0001/images/frame_01288.png"
        string_val: "../data/Training/Run_0001/images/frame_04144.png"
        string_val: "../data/Training/Run_0001/images/frame_01501.png"
        string_val: "../data/Training/Run_0001/images/frame_00423.png"
        string_val: "../data/Training/Run_0001/images/frame_03308.png"
        string_val: "../data/Training/Run_0001/images/frame_01898.png"
        string_val: "../data/Training/Run_0001/images/frame_02908.png"
        string_val: "../data/Training/Run_0001/images/frame_00330.png"
        string_val: "../data/Training/Run_0001/images/frame_01845.png"
        string_val: "../data/Training/Run_0001/images/frame_03114.png"
        string_val: "../data/Training/Run_0001/images/frame_01685.png"
        string_val: "../data/Training/Run_0001/images/frame_02312.png"
        string_val: "../data/Training/Run_0001/images/frame_03501.png"
        string_val: "../data/Training/Run_0001/images/frame_01664.png"
        string_val: "../data/Training/Run_0001/images/frame_00454.png"
        string_val: "../data/Training/Run_0001/images/frame_01277.png"
        string_val: "../data/Training/Run_0001/images/frame_00566.png"
        string_val: "../data/Training/Run_0001/images/frame_04681.png"
        string_val: "../data/Training/Run_0001/images/frame_04042.png"
        string_val: "../data/Training/Run_0001/images/frame_01163.png"
        string_val: "../data/Training/Run_0001/images/frame_04529.png"
        string_val: "../data/Training/Run_0001/images/frame_03356.png"
        string_val: "../data/Training/Run_0001/images/frame_04631.png"
        string_val: "../data/Training/Run_0001/images/frame_00000.png"
        string_val: "../data/Training/Run_0001/images/frame_02090.png"
        string_val: "../data/Training/Run_0001/images/frame_03887.png"
        string_val: "../data/Training/Run_0001/images/frame_00715.png"
        string_val: "../data/Training/Run_0001/images/frame_04638.png"
        string_val: "../data/Training/Run_0001/images/frame_01466.png"
        string_val: "../data/Training/Run_0001/images/frame_01892.png"
        string_val: "../data/Training/Run_0001/images/frame_03771.png"
        string_val: "../data/Training/Run_0001/images/frame_02002.png"
        string_val: "../data/Training/Run_0001/images/frame_00056.png"
        string_val: "../data/Training/Run_0001/images/frame_02215.png"
        string_val: "../data/Training/Run_0001/images/frame_01313.png"
        string_val: "../data/Training/Run_0001/images/frame_00228.png"
        string_val: "../data/Training/Run_0001/images/frame_04537.png"
        string_val: "../data/Training/Run_0001/images/frame_02280.png"
        string_val: "../data/Training/Run_0001/images/frame_03757.png"
        string_val: "../data/Training/Run_0001/images/frame_01130.png"
        string_val: "../data/Training/Run_0001/images/frame_04051.png"
        string_val: "../data/Training/Run_0001/images/frame_02251.png"
        string_val: "../data/Training/Run_0001/images/frame_03128.png"
        string_val: "../data/Training/Run_0001/images/frame_03344.png"
        string_val: "../data/Training/Run_0001/images/frame_01261.png"
        string_val: "../data/Training/Run_0001/images/frame_03930.png"
        string_val: "../data/Training/Run_0001/images/frame_01600.png"
        string_val: "../data/Training/Run_0001/images/frame_04076.png"
        string_val: "../data/Training/Run_0001/images/frame_00470.png"
        string_val: "../data/Training/Run_0001/images/frame_03956.png"
        string_val: "../data/Training/Run_0001/images/frame_01593.png"
        string_val: "../data/Training/Run_0001/images/frame_01086.png"
        string_val: "../data/Training/Run_0001/images/frame_02658.png"
        string_val: "../data/Training/Run_0001/images/frame_02489.png"
        string_val: "../data/Training/Run_0001/images/frame_03924.png"
        string_val: "../data/Training/Run_0001/images/frame_01199.png"
        string_val: "../data/Training/Run_0001/images/frame_03579.png"
        string_val: "../data/Training/Run_0001/images/frame_00185.png"
        string_val: "../data/Training/Run_0001/images/frame_00194.png"
        string_val: "../data/Training/Run_0001/images/frame_02035.png"
        string_val: "../data/Training/Run_0001/images/frame_03847.png"
        string_val: "../data/Training/Run_0001/images/frame_02657.png"
        string_val: "../data/Training/Run_0001/images/frame_02277.png"
        string_val: "../data/Training/Run_0001/images/frame_00415.png"
        string_val: "../data/Training/Run_0001/images/frame_03143.png"
        string_val: "../data/Training/Run_0001/images/frame_03532.png"
        string_val: "../data/Training/Run_0001/images/frame_04127.png"
        string_val: "../data/Training/Run_0001/images/frame_01255.png"
        string_val: "../data/Training/Run_0001/images/frame_00524.png"
        string_val: "../data/Training/Run_0001/images/frame_02767.png"
        string_val: "../data/Training/Run_0001/images/frame_02828.png"
        string_val: "../data/Training/Run_0001/images/frame_01705.png"
        string_val: "../data/Training/Run_0001/images/frame_02419.png"
        string_val: "../data/Training/Run_0001/images/frame_02859.png"
        string_val: "../data/Training/Run_0001/images/frame_02618.png"
        string_val: "../data/Training/Run_0001/images/frame_04006.png"
        string_val: "../data/Training/Run_0001/images/frame_00139.png"
        string_val: "../data/Training/Run_0001/images/frame_03836.png"
        string_val: "../data/Training/Run_0001/images/frame_04156.png"
        string_val: "../data/Training/Run_0001/images/frame_04425.png"
        string_val: "../data/Training/Run_0001/images/frame_03078.png"
        string_val: "../data/Training/Run_0001/images/frame_00573.png"
        string_val: "../data/Training/Run_0001/images/frame_03800.png"
        string_val: "../data/Training/Run_0001/images/frame_02816.png"
        string_val: "../data/Training/Run_0001/images/frame_00178.png"
        string_val: "../data/Training/Run_0001/images/frame_02140.png"
        string_val: "../data/Training/Run_0001/images/frame_02717.png"
        string_val: "../data/Training/Run_0001/images/frame_02222.png"
        string_val: "../data/Training/Run_0001/images/frame_01196.png"
        string_val: "../data/Training/Run_0001/images/frame_00343.png"
        string_val: "../data/Training/Run_0001/images/frame_01717.png"
        string_val: "../data/Training/Run_0001/images/frame_00377.png"
        string_val: "../data/Training/Run_0001/images/frame_04336.png"
        string_val: "../data/Training/Run_0001/images/frame_01942.png"
        string_val: "../data/Training/Run_0001/images/frame_00974.png"
        string_val: "../data/Training/Run_0001/images/frame_03629.png"
        string_val: "../data/Training/Run_0001/images/frame_01751.png"
        string_val: "../data/Training/Run_0001/images/frame_04605.png"
        string_val: "../data/Training/Run_0001/images/frame_00329.png"
        string_val: "../data/Training/Run_0001/images/frame_03534.png"
        string_val: "../data/Training/Run_0001/images/frame_03685.png"
        string_val: "../data/Training/Run_0001/images/frame_02218.png"
        string_val: "../data/Training/Run_0001/images/frame_00795.png"
        string_val: "../data/Training/Run_0001/images/frame_01057.png"
        string_val: "../data/Training/Run_0001/images/frame_01103.png"
        string_val: "../data/Training/Run_0001/images/frame_01075.png"
        string_val: "../data/Training/Run_0001/images/frame_04140.png"
        string_val: "../data/Training/Run_0001/images/frame_02624.png"
        string_val: "../data/Training/Run_0001/images/frame_04438.png"
        string_val: "../data/Training/Run_0001/images/frame_01201.png"
        string_val: "../data/Training/Run_0001/images/frame_02981.png"
        string_val: "../data/Training/Run_0001/images/frame_02814.png"
        string_val: "../data/Training/Run_0001/images/frame_01750.png"
        string_val: "../data/Training/Run_0001/images/frame_00695.png"
        string_val: "../data/Training/Run_0001/images/frame_03080.png"
        string_val: "../data/Training/Run_0001/images/frame_04184.png"
        string_val: "../data/Training/Run_0001/images/frame_03531.png"
        string_val: "../data/Training/Run_0001/images/frame_00469.png"
        string_val: "../data/Training/Run_0001/images/frame_04468.png"
        string_val: "../data/Training/Run_0001/images/frame_03072.png"
        string_val: "../data/Training/Run_0001/images/frame_02373.png"
        string_val: "../data/Training/Run_0001/images/frame_03223.png"
        string_val: "../data/Training/Run_0001/images/frame_01749.png"
        string_val: "../data/Training/Run_0001/images/frame_02741.png"
        string_val: "../data/Training/Run_0001/images/frame_02761.png"
        string_val: "../data/Training/Run_0001/images/frame_00444.png"
        string_val: "../data/Training/Run_0001/images/frame_00835.png"
        string_val: "../data/Training/Run_0001/images/frame_02843.png"
        string_val: "../data/Training/Run_0001/images/frame_00365.png"
        string_val: "../data/Training/Run_0001/images/frame_01055.png"
        string_val: "../data/Training/Run_0001/images/frame_03259.png"
        string_val: "../data/Training/Run_0001/images/frame_04595.png"
        string_val: "../data/Training/Run_0001/images/frame_03221.png"
        string_val: "../data/Training/Run_0001/images/frame_01969.png"
        string_val: "../data/Training/Run_0001/images/frame_03705.png"
        string_val: "../data/Training/Run_0001/images/frame_01078.png"
        string_val: "../data/Training/Run_0001/images/frame_02635.png"
        string_val: "../data/Training/Run_0001/images/frame_00930.png"
        string_val: "../data/Training/Run_0001/images/frame_02055.png"
        string_val: "../data/Training/Run_0001/images/frame_00272.png"
        string_val: "../data/Training/Run_0001/images/frame_01162.png"
        string_val: "../data/Training/Run_0001/images/frame_04619.png"
        string_val: "../data/Training/Run_0001/images/frame_00367.png"
        string_val: "../data/Training/Run_0001/images/frame_00007.png"
        string_val: "../data/Training/Run_0001/images/frame_00564.png"
        string_val: "../data/Training/Run_0001/images/frame_03158.png"
        string_val: "../data/Training/Run_0001/images/frame_00064.png"
        string_val: "../data/Training/Run_0001/images/frame_01712.png"
        string_val: "../data/Training/Run_0001/images/frame_02302.png"
        string_val: "../data/Training/Run_0001/images/frame_00379.png"
        string_val: "../data/Training/Run_0001/images/frame_01180.png"
        string_val: "../data/Training/Run_0001/images/frame_03359.png"
        string_val: "../data/Training/Run_0001/images/frame_03885.png"
        string_val: "../data/Training/Run_0001/images/frame_04612.png"
        string_val: "../data/Training/Run_0001/images/frame_00022.png"
        string_val: "../data/Training/Run_0001/images/frame_02304.png"
        string_val: "../data/Training/Run_0001/images/frame_02965.png"
        string_val: "../data/Training/Run_0001/images/frame_01781.png"
        string_val: "../data/Training/Run_0001/images/frame_00281.png"
        string_val: "../data/Training/Run_0001/images/frame_04241.png"
        string_val: "../data/Training/Run_0001/images/frame_01620.png"
        string_val: "../data/Training/Run_0001/images/frame_01972.png"
        string_val: "../data/Training/Run_0001/images/frame_03340.png"
        string_val: "../data/Training/Run_0001/images/frame_01314.png"
        string_val: "../data/Training/Run_0001/images/frame_01132.png"
        string_val: "../data/Training/Run_0001/images/frame_00981.png"
        string_val: "../data/Training/Run_0001/images/frame_00031.png"
        string_val: "../data/Training/Run_0001/images/frame_04160.png"
        string_val: "../data/Training/Run_0001/images/frame_02592.png"
        string_val: "../data/Training/Run_0001/images/frame_01106.png"
        string_val: "../data/Training/Run_0001/images/frame_00527.png"
        string_val: "../data/Training/Run_0001/images/frame_01524.png"
        string_val: "../data/Training/Run_0001/images/frame_04133.png"
        string_val: "../data/Training/Run_0001/images/frame_02505.png"
        string_val: "../data/Training/Run_0001/images/frame_00302.png"
        string_val: "../data/Training/Run_0001/images/frame_00237.png"
        string_val: "../data/Training/Run_0001/images/frame_02355.png"
        string_val: "../data/Training/Run_0001/images/frame_03313.png"
        string_val: "../data/Training/Run_0001/images/frame_00045.png"
        string_val: "../data/Training/Run_0001/images/frame_01671.png"
        string_val: "../data/Training/Run_0001/images/frame_04265.png"
        string_val: "../data/Training/Run_0001/images/frame_04663.png"
        string_val: "../data/Training/Run_0001/images/frame_00440.png"
        string_val: "../data/Training/Run_0001/images/frame_03056.png"
        string_val: "../data/Training/Run_0001/images/frame_02661.png"
        string_val: "../data/Training/Run_0001/images/frame_03135.png"
        string_val: "../data/Training/Run_0001/images/frame_04664.png"
        string_val: "../data/Training/Run_0001/images/frame_04123.png"
        string_val: "../data/Training/Run_0001/images/frame_00152.png"
        string_val: "../data/Training/Run_0001/images/frame_01224.png"
        string_val: "../data/Training/Run_0001/images/frame_03488.png"
        string_val: "../data/Training/Run_0001/images/frame_02933.png"
        string_val: "../data/Training/Run_0001/images/frame_01656.png"
        string_val: "../data/Training/Run_0001/images/frame_02514.png"
        string_val: "../data/Training/Run_0001/images/frame_02649.png"
        string_val: "../data/Training/Run_0001/images/frame_02860.png"
        string_val: "../data/Training/Run_0001/images/frame_01337.png"
        string_val: "../data/Training/Run_0001/images/frame_02662.png"
        string_val: "../data/Training/Run_0001/images/frame_00677.png"
        string_val: "../data/Training/Run_0001/images/frame_01034.png"
        string_val: "../data/Training/Run_0001/images/frame_00630.png"
        string_val: "../data/Training/Run_0001/images/frame_00115.png"
        string_val: "../data/Training/Run_0001/images/frame_02176.png"
        string_val: "../data/Training/Run_0001/images/frame_00704.png"
        string_val: "../data/Training/Run_0001/images/frame_00888.png"
        string_val: "../data/Training/Run_0001/images/frame_02788.png"
        string_val: "../data/Training/Run_0001/images/frame_00233.png"
        string_val: "../data/Training/Run_0001/images/frame_04193.png"
        string_val: "../data/Training/Run_0001/images/frame_01134.png"
        string_val: "../data/Training/Run_0001/images/frame_02892.png"
        string_val: "../data/Training/Run_0001/images/frame_01710.png"
        string_val: "../data/Training/Run_0001/images/frame_03421.png"
        string_val: "../data/Training/Run_0001/images/frame_01179.png"
        string_val: "../data/Training/Run_0001/images/frame_00646.png"
        string_val: "../data/Training/Run_0001/images/frame_01414.png"
        string_val: "../data/Training/Run_0001/images/frame_00782.png"
        string_val: "../data/Training/Run_0001/images/frame_03337.png"
        string_val: "../data/Training/Run_0001/images/frame_02650.png"
        string_val: "../data/Training/Run_0001/images/frame_00213.png"
        string_val: "../data/Training/Run_0001/images/frame_01440.png"
        string_val: "../data/Training/Run_0001/images/frame_02590.png"
        string_val: "../data/Training/Run_0001/images/frame_00619.png"
        string_val: "../data/Training/Run_0001/images/frame_02577.png"
        string_val: "../data/Training/Run_0001/images/frame_00318.png"
        string_val: "../data/Training/Run_0001/images/frame_03668.png"
        string_val: "../data/Training/Run_0001/images/frame_02664.png"
        string_val: "../data/Training/Run_0001/images/frame_02762.png"
        string_val: "../data/Training/Run_0001/images/frame_02930.png"
        string_val: "../data/Training/Run_0001/images/frame_00086.png"
        string_val: "../data/Training/Run_0001/images/frame_04547.png"
        string_val: "../data/Training/Run_0001/images/frame_00067.png"
        string_val: "../data/Training/Run_0001/images/frame_02582.png"
        string_val: "../data/Training/Run_0001/images/frame_02576.png"
        string_val: "../data/Training/Run_0001/images/frame_01859.png"
        string_val: "../data/Training/Run_0001/images/frame_04075.png"
        string_val: "../data/Training/Run_0001/images/frame_04203.png"
        string_val: "../data/Training/Run_0001/images/frame_02392.png"
        string_val: "../data/Training/Run_0001/images/frame_03634.png"
        string_val: "../data/Training/Run_0001/images/frame_03016.png"
        string_val: "../data/Training/Run_0001/images/frame_01249.png"
        string_val: "../data/Training/Run_0001/images/frame_04392.png"
        string_val: "../data/Training/Run_0001/images/frame_00289.png"
        string_val: "../data/Training/Run_0001/images/frame_01107.png"
        string_val: "../data/Training/Run_0001/images/frame_00269.png"
        string_val: "../data/Training/Run_0001/images/frame_04390.png"
        string_val: "../data/Training/Run_0001/images/frame_01315.png"
        string_val: "../data/Training/Run_0001/images/frame_03172.png"
        string_val: "../data/Training/Run_0001/images/frame_04030.png"
        string_val: "../data/Training/Run_0001/images/frame_03652.png"
        string_val: "../data/Training/Run_0001/images/frame_00366.png"
        string_val: "../data/Training/Run_0001/images/frame_00756.png"
        string_val: "../data/Training/Run_0001/images/frame_04354.png"
        string_val: "../data/Training/Run_0001/images/frame_04069.png"
        string_val: "../data/Training/Run_0001/images/frame_02760.png"
        string_val: "../data/Training/Run_0001/images/frame_02214.png"
        string_val: "../data/Training/Run_0001/images/frame_00128.png"
        string_val: "../data/Training/Run_0001/images/frame_00121.png"
        string_val: "../data/Training/Run_0001/images/frame_01071.png"
        string_val: "../data/Training/Run_0001/images/frame_00483.png"
        string_val: "../data/Training/Run_0001/images/frame_01080.png"
        string_val: "../data/Training/Run_0001/images/frame_03045.png"
        string_val: "../data/Training/Run_0001/images/frame_02479.png"
        string_val: "../data/Training/Run_0001/images/frame_00337.png"
        string_val: "../data/Training/Run_0001/images/frame_01912.png"
        string_val: "../data/Training/Run_0001/images/frame_01435.png"
        string_val: "../data/Training/Run_0001/images/frame_00829.png"
        string_val: "../data/Training/Run_0001/images/frame_00654.png"
        string_val: "../data/Training/Run_0001/images/frame_00681.png"
        string_val: "../data/Training/Run_0001/images/frame_03211.png"
        string_val: "../data/Training/Run_0001/images/frame_03909.png"
        string_val: "../data/Training/Run_0001/images/frame_04292.png"
        string_val: "../data/Training/Run_0001/images/frame_00579.png"
        string_val: "../data/Training/Run_0001/images/frame_04267.png"
        string_val: "../data/Training/Run_0001/images/frame_00494.png"
        string_val: "../data/Training/Run_0001/images/frame_00648.png"
        string_val: "../data/Training/Run_0001/images/frame_00238.png"
        string_val: "../data/Training/Run_0001/images/frame_00230.png"
        string_val: "../data/Training/Run_0001/images/frame_03307.png"
        string_val: "../data/Training/Run_0001/images/frame_03150.png"
        string_val: "../data/Training/Run_0001/images/frame_04562.png"
        string_val: "../data/Training/Run_0001/images/frame_03699.png"
        string_val: "../data/Training/Run_0001/images/frame_04430.png"
        string_val: "../data/Training/Run_0001/images/frame_01960.png"
        string_val: "../data/Training/Run_0001/images/frame_02095.png"
        string_val: "../data/Training/Run_0001/images/frame_04474.png"
        string_val: "../data/Training/Run_0001/images/frame_03291.png"
        string_val: "../data/Training/Run_0001/images/frame_02581.png"
        string_val: "../data/Training/Run_0001/images/frame_01464.png"
        string_val: "../data/Training/Run_0001/images/frame_02020.png"
        string_val: "../data/Training/Run_0001/images/frame_03451.png"
        string_val: "../data/Training/Run_0001/images/frame_03440.png"
        string_val: "../data/Training/Run_0001/images/frame_03561.png"
        string_val: "../data/Training/Run_0001/images/frame_02909.png"
        string_val: "../data/Training/Run_0001/images/frame_04703.png"
        string_val: "../data/Training/Run_0001/images/frame_00088.png"
        string_val: "../data/Training/Run_0001/images/frame_01918.png"
        string_val: "../data/Training/Run_0001/images/frame_02093.png"
        string_val: "../data/Training/Run_0001/images/frame_02669.png"
        string_val: "../data/Training/Run_0001/images/frame_02406.png"
        string_val: "../data/Training/Run_0001/images/frame_04367.png"
        string_val: "../data/Training/Run_0001/images/frame_01728.png"
        string_val: "../data/Training/Run_0001/images/frame_00076.png"
        string_val: "../data/Training/Run_0001/images/frame_04289.png"
        string_val: "../data/Training/Run_0001/images/frame_01098.png"
        string_val: "../data/Training/Run_0001/images/frame_01173.png"
        string_val: "../data/Training/Run_0001/images/frame_03664.png"
        string_val: "../data/Training/Run_0001/images/frame_03820.png"
        string_val: "../data/Training/Run_0001/images/frame_00009.png"
        string_val: "../data/Training/Run_0001/images/frame_01610.png"
        string_val: "../data/Training/Run_0001/images/frame_01410.png"
        string_val: "../data/Training/Run_0001/images/frame_03627.png"
        string_val: "../data/Training/Run_0001/images/frame_00457.png"
        string_val: "../data/Training/Run_0001/images/frame_03516.png"
        string_val: "../data/Training/Run_0001/images/frame_04364.png"
        string_val: "../data/Training/Run_0001/images/frame_01793.png"
        string_val: "../data/Training/Run_0001/images/frame_02468.png"
        string_val: "../data/Training/Run_0001/images/frame_02565.png"
        string_val: "../data/Training/Run_0001/images/frame_03950.png"
        string_val: "../data/Training/Run_0001/images/frame_00805.png"
        string_val: "../data/Training/Run_0001/images/frame_00621.png"
        string_val: "../data/Training/Run_0001/images/frame_00163.png"
        string_val: "../data/Training/Run_0001/images/frame_02166.png"
        string_val: "../data/Training/Run_0001/images/frame_04672.png"
        string_val: "../data/Training/Run_0001/images/frame_02927.png"
        string_val: "../data/Training/Run_0001/images/frame_01481.png"
        string_val: "../data/Training/Run_0001/images/frame_03200.png"
        string_val: "../data/Training/Run_0001/images/frame_04359.png"
        string_val: "../data/Training/Run_0001/images/frame_01067.png"
        string_val: "../data/Training/Run_0001/images/frame_01673.png"
        string_val: "../data/Training/Run_0001/images/frame_03445.png"
        string_val: "../data/Training/Run_0001/images/frame_00745.png"
        string_val: "../data/Training/Run_0001/images/frame_01699.png"
        string_val: "../data/Training/Run_0001/images/frame_03933.png"
        string_val: "../data/Training/Run_0001/images/frame_03839.png"
        string_val: "../data/Training/Run_0001/images/frame_01543.png"
        string_val: "../data/Training/Run_0001/images/frame_00667.png"
        string_val: "../data/Training/Run_0001/images/frame_02586.png"
        string_val: "../data/Training/Run_0001/images/frame_01115.png"
        string_val: "../data/Training/Run_0001/images/frame_00751.png"
        string_val: "../data/Training/Run_0001/images/frame_01920.png"
        string_val: "../data/Training/Run_0001/images/frame_01110.png"
        string_val: "../data/Training/Run_0001/images/frame_01560.png"
        string_val: "../data/Training/Run_0001/images/frame_01963.png"
        string_val: "../data/Training/Run_0001/images/frame_03119.png"
        string_val: "../data/Training/Run_0001/images/frame_01149.png"
        string_val: "../data/Training/Run_0001/images/frame_01691.png"
        string_val: "../data/Training/Run_0001/images/frame_01994.png"
        string_val: "../data/Training/Run_0001/images/frame_02111.png"
        string_val: "../data/Training/Run_0001/images/frame_00721.png"
        string_val: "../data/Training/Run_0001/images/frame_04262.png"
        string_val: "../data/Training/Run_0001/images/frame_03089.png"
        string_val: "../data/Training/Run_0001/images/frame_02147.png"
        string_val: "../data/Training/Run_0001/images/frame_01875.png"
        string_val: "../data/Training/Run_0001/images/frame_02240.png"
        string_val: "../data/Training/Run_0001/images/frame_00503.png"
        string_val: "../data/Training/Run_0001/images/frame_03785.png"
        string_val: "../data/Training/Run_0001/images/frame_00887.png"
        string_val: "../data/Training/Run_0001/images/frame_01753.png"
        string_val: "../data/Training/Run_0001/images/frame_00597.png"
        string_val: "../data/Training/Run_0001/images/frame_03350.png"
        string_val: "../data/Training/Run_0001/images/frame_03270.png"
        string_val: "../data/Training/Run_0001/images/frame_02223.png"
        string_val: "../data/Training/Run_0001/images/frame_00666.png"
        string_val: "../data/Training/Run_0001/images/frame_04350.png"
        string_val: "../data/Training/Run_0001/images/frame_00349.png"
        string_val: "../data/Training/Run_0001/images/frame_02524.png"
        string_val: "../data/Training/Run_0001/images/frame_01346.png"
        string_val: "../data/Training/Run_0001/images/frame_01278.png"
        string_val: "../data/Training/Run_0001/images/frame_00837.png"
        string_val: "../data/Training/Run_0001/images/frame_02426.png"
        string_val: "../data/Training/Run_0001/images/frame_03263.png"
        string_val: "../data/Training/Run_0001/images/frame_00819.png"
        string_val: "../data/Training/Run_0001/images/frame_02966.png"
        string_val: "../data/Training/Run_0001/images/frame_00297.png"
        string_val: "../data/Training/Run_0001/images/frame_04122.png"
        string_val: "../data/Training/Run_0001/images/frame_04110.png"
        string_val: "../data/Training/Run_0001/images/frame_03706.png"
        string_val: "../data/Training/Run_0001/images/frame_00783.png"
        string_val: "../data/Training/Run_0001/images/frame_01125.png"
        string_val: "../data/Training/Run_0001/images/frame_02163.png"
        string_val: "../data/Training/Run_0001/images/frame_04206.png"
        string_val: "../data/Training/Run_0001/images/frame_02328.png"
        string_val: "../data/Training/Run_0001/images/frame_00650.png"
        string_val: "../data/Training/Run_0001/images/frame_01356.png"
        string_val: "../data/Training/Run_0001/images/frame_00961.png"
        string_val: "../data/Training/Run_0001/images/frame_03973.png"
        string_val: "../data/Training/Run_0001/images/frame_04136.png"
        string_val: "../data/Training/Run_0001/images/frame_04460.png"
        string_val: "../data/Training/Run_0001/images/frame_03175.png"
        string_val: "../data/Training/Run_0001/images/frame_00539.png"
        string_val: "../data/Training/Run_0001/images/frame_02612.png"
        string_val: "../data/Training/Run_0001/images/frame_02172.png"
        string_val: "../data/Training/Run_0001/images/frame_01161.png"
        string_val: "../data/Training/Run_0001/images/frame_02427.png"
        string_val: "../data/Training/Run_0001/images/frame_00209.png"
        string_val: "../data/Training/Run_0001/images/frame_02403.png"
        string_val: "../data/Training/Run_0001/images/frame_04211.png"
        string_val: "../data/Training/Run_0001/images/frame_02902.png"
        string_val: "../data/Training/Run_0001/images/frame_03495.png"
        string_val: "../data/Training/Run_0001/images/frame_02088.png"
        string_val: "../data/Training/Run_0001/images/frame_03529.png"
        string_val: "../data/Training/Run_0001/images/frame_00637.png"
        string_val: "../data/Training/Run_0001/images/frame_04652.png"
        string_val: "../data/Training/Run_0001/images/frame_03955.png"
        string_val: "../data/Training/Run_0001/images/frame_03682.png"
        string_val: "../data/Training/Run_0001/images/frame_04013.png"
        string_val: "../data/Training/Run_0001/images/frame_00738.png"
        string_val: "../data/Training/Run_0001/images/frame_03863.png"
        string_val: "../data/Training/Run_0001/images/frame_02411.png"
        string_val: "../data/Training/Run_0001/images/frame_04454.png"
        string_val: "../data/Training/Run_0001/images/frame_02357.png"
        string_val: "../data/Training/Run_0001/images/frame_00881.png"
        string_val: "../data/Training/Run_0001/images/frame_03593.png"
        string_val: "../data/Training/Run_0001/images/frame_00896.png"
        string_val: "../data/Training/Run_0001/images/frame_00321.png"
        string_val: "../data/Training/Run_0001/images/frame_00389.png"
        string_val: "../data/Training/Run_0001/images/frame_02691.png"
        string_val: "../data/Training/Run_0001/images/frame_03301.png"
        string_val: "../data/Training/Run_0001/images/frame_02626.png"
        string_val: "../data/Training/Run_0001/images/frame_02646.png"
        string_val: "../data/Training/Run_0001/images/frame_04155.png"
        string_val: "../data/Training/Run_0001/images/frame_01441.png"
        string_val: "../data/Training/Run_0001/images/frame_03851.png"
        string_val: "../data/Training/Run_0001/images/frame_01687.png"
        string_val: "../data/Training/Run_0001/images/frame_00682.png"
        string_val: "../data/Training/Run_0001/images/frame_02389.png"
        string_val: "../data/Training/Run_0001/images/frame_04222.png"
        string_val: "../data/Training/Run_0001/images/frame_03698.png"
        string_val: "../data/Training/Run_0001/images/frame_00019.png"
        string_val: "../data/Training/Run_0001/images/frame_04170.png"
        string_val: "../data/Training/Run_0001/images/frame_01879.png"
        string_val: "../data/Training/Run_0001/images/frame_02039.png"
        string_val: "../data/Training/Run_0001/images/frame_02587.png"
        string_val: "../data/Training/Run_0001/images/frame_03674.png"
        string_val: "../data/Training/Run_0001/images/frame_03392.png"
        string_val: "../data/Training/Run_0001/images/frame_04180.png"
        string_val: "../data/Training/Run_0001/images/frame_00332.png"
        string_val: "../data/Training/Run_0001/images/frame_00054.png"
        string_val: "../data/Training/Run_0001/images/frame_03828.png"
        string_val: "../data/Training/Run_0001/images/frame_04147.png"
        string_val: "../data/Training/Run_0001/images/frame_00323.png"
        string_val: "../data/Training/Run_0001/images/frame_01586.png"
        string_val: "../data/Training/Run_0001/images/frame_01784.png"
        string_val: "../data/Training/Run_0001/images/frame_03164.png"
        string_val: "../data/Training/Run_0001/images/frame_01138.png"
        string_val: "../data/Training/Run_0001/images/frame_01764.png"
        string_val: "../data/Training/Run_0001/images/frame_03854.png"
        string_val: "../data/Training/Run_0001/images/frame_03156.png"
        string_val: "../data/Training/Run_0001/images/frame_00986.png"
        string_val: "../data/Training/Run_0001/images/frame_00424.png"
        string_val: "../data/Training/Run_0001/images/frame_01649.png"
        string_val: "../data/Training/Run_0001/images/frame_02628.png"
        string_val: "../data/Training/Run_0001/images/frame_01871.png"
        string_val: "../data/Training/Run_0001/images/frame_02436.png"
        string_val: "../data/Training/Run_0001/images/frame_04535.png"
        string_val: "../data/Training/Run_0001/images/frame_02764.png"
        string_val: "../data/Training/Run_0001/images/frame_03182.png"
        string_val: "../data/Training/Run_0001/images/frame_03819.png"
        string_val: "../data/Training/Run_0001/images/frame_00011.png"
        string_val: "../data/Training/Run_0001/images/frame_03751.png"
        string_val: "../data/Training/Run_0001/images/frame_01655.png"
        string_val: "../data/Training/Run_0001/images/frame_00040.png"
        string_val: "../data/Training/Run_0001/images/frame_02838.png"
        string_val: "../data/Training/Run_0001/images/frame_03577.png"
        string_val: "../data/Training/Run_0001/images/frame_04534.png"
        string_val: "../data/Training/Run_0001/images/frame_00663.png"
        string_val: "../data/Training/Run_0001/images/frame_03901.png"
        string_val: "../data/Training/Run_0001/images/frame_04695.png"
        string_val: "../data/Training/Run_0001/images/frame_03723.png"
        string_val: "../data/Training/Run_0001/images/frame_03787.png"
        string_val: "../data/Training/Run_0001/images/frame_03171.png"
        string_val: "../data/Training/Run_0001/images/frame_00037.png"
        string_val: "../data/Training/Run_0001/images/frame_02189.png"
        string_val: "../data/Training/Run_0001/images/frame_01409.png"
        string_val: "../data/Training/Run_0001/images/frame_01525.png"
        string_val: "../data/Training/Run_0001/images/frame_02115.png"
        string_val: "../data/Training/Run_0001/images/frame_01789.png"
        string_val: "../data/Training/Run_0001/images/frame_04297.png"
        string_val: "../data/Training/Run_0001/images/frame_02016.png"
        string_val: "../data/Training/Run_0001/images/frame_01679.png"
        string_val: "../data/Training/Run_0001/images/frame_00762.png"
        string_val: "../data/Training/Run_0001/images/frame_04137.png"
        string_val: "../data/Training/Run_0001/images/frame_00736.png"
        string_val: "../data/Training/Run_0001/images/frame_02606.png"
        string_val: "../data/Training/Run_0001/images/frame_01791.png"
        string_val: "../data/Training/Run_0001/images/frame_02072.png"
        string_val: "../data/Training/Run_0001/images/frame_02316.png"
        string_val: "../data/Training/Run_0001/images/frame_00850.png"
      }
    }
  }
}
node {
  name: "tensors/component_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4725
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4725
          }
          dim {
            size: 4
          }
        }
        tensor_content: "H\201\022@<\335\227?J\266\302>{J\276\276;E\244?\241\366\275?`\220\234>\027\016,?\342\357\310?\212\307\001@\323P\233\276\254X|>\301\007\212?\327\243\272?G\003\250>l\313\370\276\206\3777@d\"\325?\325\262\325\276\013\321\025?\267\217\350?\351\232\335?f\365\026\277#k\r?\315\026:?\\\223\334?\2715\211=\364j0\277\373[\013@\226]\360?k\3278?\231f\362\276+\035\r@?\002\261?\343\030\311>\372C\023\277\r\032\032@\371H\330?33s\2759\270\274>k\014\252?\3058\251?\273\362\005?k\021!>\372\375\275?=\233\233?}u\265\276:\037\376=\242A\"?\336t\223?\322n4=LQ\n?\350\"\234>\020\005\307?\317\023\357\276?\250{\276\005\357\027@|\272\260?VHA?\255Q\037>\215\367\022@\214\242\235?\304\261\326\276\210\362\305>a\315\037?8L\326?D\213|>f\333\031\277\377\304+@yv\341?\214\0224?\335\321/?a\251j?l=\305?oJ\271=\336 2?T\371c?#\370\257?H6\037?\222$\250>\"\213\316?\t\300\337?\356C\376\275X\032\220>\201T\221?\366z\301?\272\276\033\277I\0202\277VU#@.S\331?qY\355>\006/\016\2771W+@\271R\275?BC\'\277\373\313\216>\3009x?\341\270\300?O\226>\277;\302\321\276TO4@x\321\263?\3231\027\276\260X+\277>8|?\315\001\306?\331]@\276[[,?(\327\335?\220\327\321?\245N\020\276\002\234\026\2770\204\252?\245\243\334?6\006\275\275\377[\031\277:\034\352>\225\'\005@\301S\360\276\360\300\300>{\234\366?\303,\310?\004\252\237\276\264 \204\276]\016+@t\227\366?\334\177,?^\236\036>\233\334%?\261\336\332?v\342\252>\233\312\">\375\344\276>I\242\323?\242\3614?I\366\014\277Bp3@\220\244\302?\374\306\277>\341|\006\277\277 \243?g\n\315?<\334\376\2766=\030\276[{\351?\315\256\335?\317\2766\277\356\353\240\276\325v\027?y\004\303?bg\232\276L\341\t?.C\326?\315s\260?2\2161\277\242\230\244\276\217V\301?\232\353\326?B\353)\277\310\232Q=\037{\327?\375/\277?k\3303\277*7\321<\224\026\t@\210\270\367?\256J\342\275\355)\371\275\217\336\217?\362z\276?\242\014%\277\251\211*?\204\311v?\320\325\222?N\322\010?DR\017?\236R\207?RF\260?\231\235\215\276A\014\204\276\304F\374>1\355\235?\001\241\021\277\016e\034?5\3074@O\\\324?\302\022#?\036\341t\276T\241\300?.t\265?\037\2048?\177l\232>i\313\350?\'\301\307?\220\242.?\217\032+\277\026\360\023@\003\321\305?\372bo=-\\\326=\016R\273>V\272\277?\244\215\243>g\322\346>.\321+@\317\021\331?\337\340\213\2759{\317\276\353\334\335?\333P\323?\263\323;\277\326\031\013?\375\356\306?\342W\254?%\\8\276<M\226\276{5\003?V+\323?f\366y\276\030\265\263\276Y\361\031@}\352\304?\221\233A>\203/\314<\242\344\177>\270\220\325?z\310\010\277\311\221\356>\371\371\r@\237\"\261?\335\352\371>\3477\354\275\275\000\027@x\177\262?d\"\375\276\221_\247\276(A\274>\r\343\276?\313\363\370\276\336\256\023?\234\233\001@\271O\256?/\277\223>\n\334\016\277\321\2047@\232B\321?\300\264\000?t~J\276.\201,@v\376\267?C\342\226>\206=\375\276\264\312\350?\211b\260?&\213\033\276\305\220\264>UH\364?\206\307\234?\004\253:>)\355\021?\265+\330?\334e\255?\033gS>I\203\373\2752\370\245>\203\335\344?\367\315\375\275\275\307\031\276\270\273\032@\274\002\267?\355\361\">\2547\362>\031=\201?\030`\301?\326\340M\276M\237\355\276\256\006\346?\210,\336?]\304\227=\263\013v\2761\330\300?\260\306\303?ak\356>?S\257<s\305\201?\303H\337?\201=.?E\022\275\273\272\322+?k\323\372?PV\014?\330J\310=\026a\272?\222\315\301?\016O\377>\334h\360\276\261+\264?l$\277?\341\321\236>\321\007\363>p1\271?^K\270?G\255\340>\226\314\311>E\236\374?\205y\305?\3331\r\277{\021\025?\305\234\350?\336\217\345?\342Z\001?N(\020\277\341\340\304>9\265\321?\277)\374>\224\301\021\276gI\014@\332\341\305?\014W\'>\022\3018\275\306\345*@z\027\265?\333m+\277\205\2651\275S^\337?\206\001\327?B\257\177\276\247\256\010?j\264\356?\017\013\325?\024\262s<\274\006\215\276Q\3308@v\247\341?\271\214\273\276\351|\370\2766f\360?\202o\306?\307\273\273>\033h\036\276QT\205?\356\007\242?G\312\206>`\260\013\277\037\352\336?\246)\242?\006\274\354>\233\037\033?\301\337=@[{\263?\022i+\276\001\340\210\276\354x8@\025V\332?\341\007\'\277Pr\277>\013\375\345?\270\316\241?8\272:>\301\377f>\177\334\314?hy\256?gH9\277t^\313> fF?4h\230?g\325/?\254\307\315>\266\336B?Dj\304?\t\211\244>\340L\224>\374\371\207?7\336\245?\226\315\274\275\241\237\005?<Y\017@A\177\303?Ll\336>\013\3211\277\205\321\002@\017\264\276?)$\031?\226\261q>\3314+@\361-\342?p\226\342\276s\325,>\366WH?\266\330\275?\242\3563?\340.\303>\030\205\020@\364k\273?\001\335#?\332\344\310\276T\270\327>\331\352\304?\250\304\001?\223W\317>\271\242E?v\030\277?T\036\245>\273\326\236\275\270\251\316?+\337\305?}u5\2776u\266\276q\002\233?\355\021\356?]5\317\276.YU=\301\364o?\234\371\325?y[\311>\255j\035\277\343f\254?M\334\302?\323.\032\277\304\n/\277\0018\257?\213\210\216?4\277Z\276\013\227e>\247\2022@\275V\256?\030\260\204\275\220\243\025\277U\311\031@\355-\247?\276k\260>\377\224\252\274\326\010#@\032\277\344?h>g\2754.\234>H\n3@\231b\306?\177i\341>\201\313\007\277\277qw?\346\\\256?\t\373\002\277\3165\304\276\352\210\235>&\345\336?3\032\321>\243\002\247\274\222\263\350?\250:\356?\202\343\342\276\022\204\343\276\371\223\322>\0259\222?b\243\344>\1773-\277\234\351\036@>\010\365?\330\020D?Kr\034?Py\001@8\363\303?\217V\021\277]\244\220>D\277)@\265\373\303?\313\242\210\276\363\306I\275\352>(?u<\310?;\340\372\276\361\237>\276\373p\n@O\312\260?\206\216}>4\241\t\276x\3338?L\246\312?\263`\202\275\264\222\"\277}\363\271>/0\223?\214h\253\276\022\301 \277\345\375\017@%\002\301?8\332\361\276`w\242\276R\222\331?\365i\311?D\210[>\345}\034>\223n>@q\347\262?\035\343\006?\372\232%\275d\2331@H6\303?Dl\270>\017\323\"\277\317\017\020@\250\034\245?y\3516\276\311\217\010\276\343.\033?\372\270\272?gG2?\230l\024?6\376\035@{\021\277?\317H\204\273gdP=\211\\\016@\234\372\252?\276\335\032?\331\265\025?\313Q#@\305\305\343?\313\021r=E\1778\276\220\034\035@m\252\350?T\342B\277\002\267\356>>\\\022?*9\261?\370\373E=R&\315>\354\177\'@\345b\354?\001/\007?\223\2126\276\000\032R?7\247\270?\215{??\016O\257;2\372\363?\233T\272?fj\262=\347:\001\277XM\007@\245\332\237?t\355\353=\355\r\326\276\255\345\263?G\343\266?H2+\275\026\207\323\276\210\261\220?\340\016\306?i\343\034\277\t\025<\276H\'\232?\350k\340?\034\266\235>=\3264\277\346 \014?|\271\345?\325!\003\277\353o9\276c?\360?\025\253\332?\251\3344?F\266S>N\223)@\256\177\247?\272\332Z\276\272\2377? ]\366?\344/\267?\205\320\035\277\331\231\372\276O\n\033@\346@\237?%z%?\025\342a\276+\266\205?\323\365\260?1\262\344>\277+\342\275\017M(?\031\216\357?%\006\321\276\354\372\t\277\301\303\211?\235\235\314?\214\025\325\275\0056\327\276 \362\034@\024\350\311?\273\361\226>\250\340\360>Fk\024@,a\327?\3441\007?\'\237\036\276\354\t\274?\257!\372?\016\327\322>r\247\004>\014y\013@{\240\335?\313/\253>\212\351b\276;\210\004@\001\241\371?l!\340>`r\343\276\244\237\016@\026\370\224?\254<\341\275\t\336\220\275\355\274\227?\365\237\257?n1\317>4,\036\277\301%\246?\034\360\257?0\rC\274\033\364\265>\324\323\317>\350i\306?\324\323G\276N\323g>\322\327M?\303\177\326?\351\236\335>\256I\023?\263+\306?\305\002\347?(\232\237\276\315\005~>Mp/@&r\321?\211\321\'\277\360\211\215\276P\326\013@\372}\367?\354\030\367\275n\374\241\276\311\023\262?m\037\326?3\336f>\325\263\200\275y\"\216?\361/\350?G\344\033?\332\035b\276F\037\212?\235\205\317?H\302\026?O\005\204>\316\326\355?\324I\256?e\2464?\317\205\221;<\222\010@Dl\330?\010=\273\276*\377\006\277`5$@[\323\302?\302h\206>2 ;\275\236Y!@\372{\371?A\267\007> \355\023\277\177\253\215?\0318\274?\237\351%\2750\275\235>\016\322\220?8\202\334?\275o\234\276\340G\345\276\363B\r@\032\250\270?\037L\212<\362[\224=\323u\321?\242D\271?\246\270J>\237:.?\016x\330?$\235\255?WxG>q\255\376>0\316\334>6\316\316?-Z\370\276J\014\242\275\276eC?uw\361?8\0259\276\026\303!\277\211\270\232?\316T\342?\"\0008=\367\257\354\276\333\242\321?o-\271?\207\206!\277\255KM\276m\200\214?\306\027\317?`<\213>\307\236M>!\376\314?\260\350\312?\007%|\276\234N\262>y\r\024@S\006\344?\226^k\276\3125\t?\250\365P?\274\312\300?\036k\376>\307-\346\274n!\214?\371\273\265?\027\266:\277\215\177\367\276\'\325/@\002)\303?\311U\020\277D\334\\=P\361i>_\014\303?d\222%\277\345\361\334>~\307\362?\3478\367?\000R3?\323\365\304\275$\007\371?j\022\266?\013\234\034\276Z/\336>\271M\005?*\304\277?\377\350\253>C\220C\275\342\315\225>\220K\374?\330\013\025\277 F\250\275\273\305\t@\004\306\254?\304\353\362>U\332\362\276\241\371\313?\347\343\322?\3022>\277~93\276Q1\242?aT\260?\000\214\347\275\206\312o>BD\313?\367Y\311?m9\227\273H2\253<s\025\023@f\024\317?[\315\342\276\351\0140\277\2057\227?\327\022\006@\n\3268>0\273\027\277\376\221\303>\0223\263?/4\367=0\361+\277\253&\030@\376H\317?\005\304\234\276rj\267>*t:@}y\321?N\357\342=t\nB\276\3210N?\r\214\324?*;}=\253\262\'\277\310\301+@\214/\326?F\226\014=\245i\020>\032\002\207?\202\217\275?\275o4\277z\2151\277O\034\265?}y\367?\210J\353>7\375\231\276f\021\217?\344N\267?\022jf\276F~\375:\371\343\204?\356_\305?k\361\r?\234m\236\276\247\016\207?c\320\243?l\350\n?\273)\205>\\a;@\274\350\253?\334\r\302\275W\314x>\234\230\017?\254\341\256?g\233\003?0\330!\277\026)\267? B\300?)x\n\277\317\366\030?\320\234\024@b\370\306?F\010\377\276]\030\t\276^\300\342?h\003\304?\ne\341\274f\372\305\276\307>Z?\236%\254?\367\003\306\276\370q\014?{8\031@5\265\312?\025\032\010\277n\027\252>BA\037@\r\336\004@\320\233Z>\210\r&>\203\340\n@\373<\234?\203\276\030?DL!\277M\220\367>o\324\336?8\330\007\277\320D\004?i$:@\0359\324?[|\362>\311\002\246=\222\304\317?\"\251\241?=\013\222>Pr\277\276\r\320\214?\302\026\315?\235\326\005?GZ\222>\277\222\010@U\276\247?X8i\276\247\351\323\276\225\234\271?\017\177\315?x\356\325>\364O\014?\022\220$@\364\245\327?\232\013\344>uw\001\277[\2236@wj\246?gHU=\346\345@>\345\375\277?\317I\327?\014\311\201>\211\265\360>\330(\310?\315\261\324?\227\310\375\276\211\357,\277\372\031\230>)^\273?\t\210\001?<\244\004\277\365,9@j4\255?\222\346\217\276\017c\252>\240VH?aq\266?IG\251>\376\r\032=\207\025b?\3058\325?b\207\361>\270\007\311\276\014\201\256?9\360\316?t\013\025\277\243\351\234>!PS?\356\353\320? {\245\276\354O\362\276\263\362\344?\263\226\230?\316\031\371\276\351\323z\276\372\3623@\0109\307?A\266\274\276\336>\313\276\205\326~?s\330\313?C\347\235>\020;\027\277\225\254\254>7\033\321?\322\376\007\277d:\364\275I\344\022@Jb\353?7o|\276\037\200\374>\\\230\264?\350h\325?W\354/>\320\'2\276M\237\357?\247!\350?\353\035\356\274}\347g\276p\362z?d\315\302?\2756\013?D\300\361\276\355\217\335?\253\354\311?\211z\261>\013\177\306=\025\3730?]j\256?\331\350\244>\300vp=\225{\024@|e\342?]oK>\242\232\222=\034\264\203?\307\274\262?\337\033\243>\022\206\021>\253\347X?\003\013\264?4\234\022>\245\334\335>-\177\032@\316\213\353?\3744>\276UQ\334=\311L\213>\317\332\235?\334F\233>xB/=\236f,?\n\275\274?\257>~>\262\332\234\276[\341\025@\n\271\300?MN\355\276\371\331\034\277*E\251?\207\244\302?B\007=>N(0\277\256\367\226?\000T\277?\031\036/\277t\007!\276\346\251\325?t\356\332?A\234\247\275\377\037\027?d\275\261?\243Y\311?(\363\367\276\325&\036>\002]\360>\234\333\220?\375h(\277\211%\r?\340\234>?\003\354\245?P\246\201\276Q0\027?\357\202\270?\275\001\316?[B~=f\206\215=\"\340$?\275\030\312?j\023W\276\263\320\256=\243\336u?B?\315?=\'\355\276\002\273\006?\262],@&\252\277?l\\\227\276ka6\2766g\206>Q\021\263?T\376u\276Z+\212>\217\t-@\357\214\250?\313\271\024?\326\341h<\336 \366?\241\276\323?\025\342\201>L\245\037<\277]\305?\241\275\342?lA\207\276?\214\320=\327\240_>\360\371\275?f\275\330>A,\333\2768\265\207?8\242\247?u\260\036\276!\223|\276&\200D?f3\327?\253= \277\335\'\367\276l\262\000@\216>\372?[\320\273=p\354\221\276\330\305:@d\346\312?\205\007\315\274s\021+\277a\005\002@y\\\260?\026\337\020\276\240n\240;\214\326b?\025\345\342?\331\350\274\276\251\334\264\276B\342\017@H\302\266?\003\007<?%\002\001?}\nW?\031\347\267?\300{\007>\345\233\355\276\005\0257@v\033\324?\203\244_>\017_\n?\252Q\t@\352A\343?R|\244>\300\261\013\277\377R\222?\340\326\315?\t\341A>\317\020\026\277\275\370\001@r\247\270?y$\016\277\350J\344>\266-\336?\022\277\306?|d3\277\347VH\276\377\'\021@\r6\237?\333o9\277k\200*\2771\315\344?\247\224\337?\340K!\275m\250$?\265\311\206?\306\242\237?\361/B\275?6I=I%\355?\271\377\334?M\020\005\276\"\372\005\276\\w^>u\261\323?\206=\021\277\255\3361>[\347\340?\261\336\222?R\326\327>>\3164>\354.\310>\346\220\232?\272\330\214\276\375l\234>\241/\275?\210\327\247?\314\n\025\277&W\261>\375O\330?\337\033\251?\021\220+?U\277\036\277\352\274\206?\362\232\277?t\0108\2778\023\223>\243h ?p?\272?\020\311`>\325v\223\276\007)\373?\332\004\326?\232D\035\276eT\251>\327\222\302?\235-\300?\225\362\302>}w\343\276-t9@\2716\316?\003\3534\277J\232\227>_\263\344?\234\032\350?\213l\347\274\200J!?Z#\036@\025<\253?\r\030D\276\244o\322=\272\000\r@\002~\277?\366\357.\2777U7\275\357\024+@\270\344\302?\224\203\371=kG\021>2..@\321Y\320?Q3d\275\304\322\020?\233\314\323?\364\305\320?\201\006{\276C=M\276V\371!@\361G\311?fM,\275\361\241d>\"\301\330?Ts\317?\036\306\304\276/\031\307\274\356{7@cb\271?\241g\013\277:\004*\277\002g\222?\272\022\261?u\004\360\276U\301\250=\327\226*@0c\316?c\263\303>(b\221=\344\211[>~7\321?\204\233\314=\263\266)\276%\236\004@\344\367\306?\337\246\237\275\305r\323>\306xw?\312N\317?\375\300\t?\022\333=>\24022@\375\331\305?\326\3458\277S\351w\276\300\351\000@l{\307?\212Y#?\023C\212>\276V\310?\227T\303?\31710?\213\337\374>\230ws?;5\315?\313\023\320>JB\332\276 y\025@6t\263?b0\377>\364o\017\277\227\2424@\313\362\301?\247Y\350>J\230\001?\213\203(?}w\002@\256\240i\276\356>\347=\263^,@\226Z\321?\2508\016>h\257\"\277\177\r\032@\226\006\344?\332\003!\277\242\355\310\276hB\016@\206\311\254?\351\014\000?\244n7\276\rT\032?\376\322\310?\226\263\357>\220\331\211\276.g\004@\334+\277?1^7\277AE\355\276@\325\'@\216\345\351?\321t\216\276\242D\233>\2534@@\2610\326?\031\251\237\276,\021\360>v\274;@\276L\330?^\362\337=W\005\332\276\264\3454@\201$\344?\330\177]\275\027(\031\276\307\212}?\241\241\010@v\247\273\274\274 B>\250F\257?=\'\211?\344\203\376\275/\245\256>\035j\025?}z\330?4\3304?b\237\200>B\034\320?\332\252\330?K\036\037?\272\330$>\217\274\033@\177\371\322?n\276\261=\010\036\367\276\026\255\004@|\266\360?1B\034?TT\275>%\006\027@\267c\346?y\316\216\276\376G2?\362<\355?\000X\301?\270\005\313=\267\325(\277\315r\352?\275\375\261?P\253\350>\236\321&\276\252{\t@\330\360\272?\310_\006?\230\247\373>R\020\241?Q\275\323?\356\n\r>\005\304t>Q3\302?\337\032\322?\260\310\023?FE\364>\277\n\241?\221\234\274?\3745\201\276b\204\360\274L\245\363?\366\t\266?\211\233\373\276\017H\002\275i\332\212?\261\213\330?\262\326P\276\034_\'?\305j\300?\\\346\262?v\244\006?\026P\000\277\250\324\233? )\352?\214\362\014\277\252*\024\277\'\370$@@\206\340?,\200\t?\337Q\373>7\352/?\334\204\311?U\336\"?d\262h\276\226\033\264?\324)\261?%\004#?\327\211K\274\205\2436@\'L\306?g\231\305<\330G\023?\303\364$@kb\315?;6\322>M\021\320>1#\t@\200(\316?\335\224\322>\271T\365\276[\213\t@p%\301?B\353!\276\250\212\351\275X\314\357?\212=\272?h\350o>\243\254\027?\355v\035@oJ\223?GW)=;\215\004>\003\034\333?mp\302?!\344\020\277)Y\356=\342R\r@+\334\202?7\340\303\276\224J\030?\217\357p?\353\343\277?\306\210\034\277\252-\365>\313\202%?\307\332\325?\233\037;?\010V\315\276\311\315+@\244\375\313?\033-\003\277\313.,\277\312\260\000?\304&\314?\n\023\356>\276\276&\276\370X)?\363\346\322?7\337\250\276\250\213$\2776\010v?\001\030\357?F\"\024\276\321\261\003>\303&\207>U\337\317?6x\337<\202\346\017\277\226\242C?\212\310\322?\231.\004\277\314\360\267>\346\361_>\344\203\366?\224N4>U\0229\276\322\2239@\371\275\273?\373y\007?9\'f\276\361\036\220?{\330\257?\261\333\027?\370\031#\277\010\021\214?\274\005\302?\245\300\342=U19?\201C\177?\343k\303?Z\240\325>>%\347\274\355\357\275?+m\307?\301\251\033?\0109\033?\246\2536@\2660\367?\360\244\305\276.\344\001\276\212\013\032?\211{\262?\325\010-?H\247\366\2762\024\027@\270Z\327?r\245\236\274l\3161?\373\262\t@*6\240?\276\366\314\274\335\230\266\276\234\210\316?\004\347\326?\317\363\267>\377\007\030\276g\0349@\303.\314?\2505=?\365\271\342>r\036\355?\323-\327?\247\312\357>\251\371:?N.\t?\021q\255?`\035\307\274\333l\314\276\217\357\242?\221\231\271?\n\366\017>[[\350>\rU\001@\220\205\300?\2031\022\277W\'\247>\246\222\016@\325\004\347?+\301\242>\317\274\344>\335\242^?)@\310?\211x\037\277\\\000\232\275b\214<@\177O\252?\357r\021?\341\225\244=\030P\006@\222\227\305?\276\0260?\324b\220=&\237|?\277(\311?\016N\234>\032\026\263>\261\237\366?\307G\215?\353s\335\276\031X\277\276\336\226\010@`\253\326?^0\004?\014\224t\276n\317\026@\262c\345?\317K-?\370U1?\267\3475@Y\303\275?g\321k\276e4\222\276\215A!@\270\006\260?\317K\255>\241\370\241\276\371\0250@Sz\336?\020%\n?\363:\022\2762\251n?(\326\251?\242\t(\277) \001\277<h\274?\254X\300?Y\277\035\277N\016\217>U\254\340?\313\016\273?\235\366t\276\003?\022\277wX$@1\321\242?\240\251\'>\371\025[\276\251\225\365?\037i\312?\223\305\325\276\243\007^>\322\365\351>\350\300\312?\032k\007?[\010r\275\n\250\006?J_\276?U\211\002\277T\036m>`\252\304?\351D\274?\210\016!\276!Y\004?\226\253\232?5A\314?Cr\222=\3064\223\275\263\021w?K\006\306?\224\371\307>\315\254\345=\244\351\362?\271\341\347?\3543g\276~\031\034\277q^\367>.\347\262?^\240\204>\213\251\324>:h\307?\261\245\351?\243\350\231\276\010:\332\274\363\203\360?\313\364\307?X\252\223\276\306\337\226\275\276M\351?\211a\337?X\305\003?\202\003J>S~\243?\206\001\337?\337\210\026\277|\270\344\274g7\324>\274\"\306?\272/\037\277Y\375\021\277\306Y\177?\333\206\345?M\017\006\277\372)\306\276\017\275\330>\273\325\331?v\306\357\276\271\341+\277\336\037\024@\2716\250?H\033\257\276\330G\217\276\323\000\021?\201\314\256?h<%?\313\236\004\275\365^\302?o\203\324?8\242k\276\250\220\353>\242\020\005@I\202\272?^\3320?\033\273\244>\375d\243?\357\215\233?F\356\005\277\206\004<>P\037\001@\213\374\326?\252\357\010\277\336\310\014\277t\356z?\300\226\331?-\317\003>{\334/?\035\237\022@u\253\301?{\372\030\276h\257\002?o\225.@W\'\273?0\325<?\354.\004\277\207\021\257>\310@\314?\300\314\'\276\325\314\212\276\373y\246?\233\222\324?4K&?b\207\321\276\247\221%@\3123\265?\376\272\023\275\2200 \277\345\227\303?\333\210\263?dv\216\276~\341\025\275\321\220\226?\020Y\324?\320C}>\253\260\301>kd\017?![\270?\243\220,?\357\002\205=\323\357\036@\261n\260?\036m\314>\257\224\305=hy\240?\366\360\303?\240\374\255>\255\371!\276\370\346\026?\347V\324?\014v\203\275\324\235\307>\033W2@\336\222\262?9\n<?s+\304>\016\212%?\034\320\330?\236\353\333\276O\261\232>\002\\z>\215\t\237?\326\3463\277\007\261\'?\376\234\006@i6\273?\250\304\315\276\024[1\277:\343 ?,\324\316?\330*%\277\202X\016\277\264\3366@\231~\355?\275RV\276:?\035\277&<\350?Jy\343?\235\205\031\277MI\006>\005V\025@9|\270?\177OH\277Ct@\277\323\241\030@\317.\345?\034\n/?c\267\237\276\240\230\344?YN\272?\360\375\245\276\353\341\223>\245\267\356?y<\327?o\020\021\277p\007\342>\"9\014@\201>\277?\247\221\316\276\272-Q=\255$0?\371\326\227?\341(I\276\347\344\021\2773\366#@\275\215\231?B\356r>\030\322\021\277\025A\350?\375\273\300?`\223\365\276\372\227\244>\006\002?@\373\351\277?\270\003\275\276m\311\252;\252\201*@\215\230\273?.9\032\277p?\000>\020\232\336?\266\275\257?\227\250\256\276\263z\347\2764\227\304?\277F\300?\306\336\013\274\273\n\321\276\300\210C?\023\324\340?\025\035)>\223\212\036?b\207\235?\020$\273?\215|\336<]S \275\214\376g?\304\353\300?\017\227\000\277V\357\300\276J]\"@e\253\353?\306\372\032?I\365\235\276:\3412?\227u\307?\361\272\376<t~\322>O\216\261?5^\340?pBA\276\017\320%?\017\024B@\021\342\276?\321?=?\035\003\272\2765f\363?\231(\256?\223\035\373>O@\353\276Fa\004@o\274\335?`?\024>\240n\240\272\302\247\216?\366\324\264?a6\261>\037\367\215\276x\005\207?\2505\265?\376}\326\276\234\341\376>\004\222O?\016\371\335?\306\334\325\276\220\277\010?\246\003\021@\341\013\321?/\300^\276O\316\230>&\307\335>\2555\310?L\372\233>\023(b\2753\301\004@\372\231\312?\225\322\213\276\312\335\037\277\375m\232?J\t\345?\355a\'\277j\337\234\275\034\344\247?\030\354\276?\206\311\324\275\3702\201\276P\204#@\246C\357?\001N\347>\224\335\014=u\320\200>#\335\313?\264\003&?\224k\036\277\\\242\010?J\t\251?\377\\\364=F?\032?\346\'=@h!\327?nR\025?L\034i\276\243\226\035?\337\334\277?\364O \277\246_\202\275\350\203\002@1|\316?\370\251B\277\307,[\276\206\2417?]\247\317?\252\272g>\310\262\260\276$M\325?\363=\305?\303\325!\277;7\031?\025q\300?\240\026\247?\'k\020\277\016\026\246>\3153\364?\027\016\264?\342\217\232>y\311\377<\030\316/@\300]\310?%?\342>\013\270g\276D\3715@\355\361\362?\'\336\001\277\216\223\"?\352\033\301?j\204\266?j\275\237=\236\226\037>\271\007\311?\350\206\254?m\341\005?\031\215,?\302C/@\013\'\245?\304\322\300=\271\034\327\276#\230\376?\350f\325?\267\320\355\276H\027[\275\002\223\025@\275\214\300?\255k\344\276K\000\326\276!c\372?`w\314?~\213:\277\027+\252>\365\2748@)v\310?\271\307\032\277~\311\346>=\350c>\315\221\325?\\<\024\277\227\255\215>Hn0@\030|\244?o\017.?&8\025>*i\267?\322\247\327?N\360\275>\247> >FX\245?\026l\313?U\025*\277\3233}>\370\210m>\302\276\335?\203\212\352=\306Q\025?/\317\366?\222@\265?\004t3\277l\320g>\377t\250?\302l\272?1|\204>\276\3321\276\232{=@\366\322\342?8I/\277]\2466>\245\223\037@\326\377\000@\365G\034?)\223\n?\327S\031@k\'\320?]\303\314\275h\225\021\277\306`k?w\331\271?bJ,\277 &!\277\034\365\267?wM\320?K\222\347>>\352\007\277\001%\277?;T\343?\320C\031?^\327\237\276\0202\"@\272\300\321?\252\'??\363\035(?\006\024\021?\177\027\304?%\224^\276@2\255\276\376\325\375?\021\217\256?X\376(?\244\340\311=\270\006\r@\355\203\302?\033\021,?b\025\327\276\313\013\023@\003\317\317?\333\335/?EF\347\275\201MP?\372\361\333?\227\312\333\276v\375\026?\370\026n?H\300\326?\205\n^>\036\336\'?\325\t4@\203\210\346?\264;t>l\261\007?s\275\003@9\266\276?\225\177\245\276\364Q\376\276\214<\215?\005M\347?>>\035\277\017\n\n>,V3@\357\216\326?\331=\021\277\305\254G\276\000\351z?L\031\252? \270\322\276\263\232\356=\350\336\031@\273|\277?\247\313\222\276x|\'\277C\t\206>9\'\250?\200c\237>\031\220)?U\010\221?t_\314?\347r\023\276i\032\344>\312\300\251?\255\332\233?\214.\317\276\303*\316>\325E\341?|\016\354?\367\254;>\255\023\247\276t\267\273?\371\326\333?\013\227\205>\004\256K>v\374\251?<\023\342?se\034\277\331\356\256>\236e\361>\323\335\327?\3708S\276\202\251f\275\371,\375?\215\263\331?hw\310<\253]\333\276\025\250\274?\367=\300?KW4\277_(\330\276o\231X>\322\211\236?(\361\271\275\010\037\032\277O\363\212?:y\245?\t\025\034>\305\347\376>\315:\273?\244n\317?p|\305\276\001\275\340>+\317\010@p^\302?c\177\321\276~6\362>\332\203\366?\204G\363?\0014\312\275~s\377\274l\257i?\310$\355?p\232\266\276\274\226\000\277|\342\300?n\024\223?\260W8\276\350\210\014\276\204\026\021?wL\373?\257`\263>y\221\001\277\243\006\233>.\256\347?(\323\250\275\370\215\017\276\200\357\013@\033\270\313?r\244\223\275\252\360G\276y\347\001@t\t\247?\271m_=\274\\\334>=\311A@4\275\246?\'\245\020\2763\335\037?\002+\261?\003%\301?\246\014\034?Y\367\357\275o|&?\225F\254?7U\277>\021\246\210>\266(\244?\231,\272?\\\377\n?\001\371\302\276\345%\264>bi\340?\177.&\277g+\337>\265\346J?\340\333\366?`\2222\277\262\275\266\275\026\271!@\336\260\t@\350\333\016\277{\026\024\276\304\366\t?~\000\336?\235\327\014?\251\241\t\277H\t<@\347\033\004@\312\033\230>\022\302#\275iP\271>\367\036\007@\274W\225>;r\364>\264\034;@\270\344\362?\217\343\207\276T\2170?\217<o?.t\321?\231\331\247\275q\344\261\276#\231\350?\003\006\313?i\217\037?\331A)?.\023\000@\303\364\275?\031\214\261\276\270\222\235>\271\006\311>l?\341?9*\013?\344\204\031?\013*4@\010\002\330?\325\2275\277$*\274>\'UU?\356\226\330?\023C\232>\347q\010>P\227\273?\224\333\336?\211a\367>M1\267>R\004\002@\274\255\346?u\002\016\277a\341\304\2759\354>@\340-\256?(\3225\2779\270\364\274\371T(?\253\317\265?\316\302\036=\034\263\304>\221\335\213?\361\235\340?\257>&\277\334\177\214\276\341\215\024@PV\274?`\000!>e\343\r\277<\273>@<\332\260?\350\210l>H\212\210\276\313\t\366?\036\304\322?\010 5>\261Q\306>4na?\347\344\313?\"\306\353=\002\204/?qL;@d\220\271?\317\300\310=bJ\344\276C\256o>vl\330?\23046?vS\006?\350\200\311?\202\003\270?\237w\243\276?:-?N\235\032@\244m\300?\261\031`\276\247\004\014?R\254\246?7\342\321?\266\272\304\276\252(\206>f\275\276?\367\037\357?\027\232\003?\037\2421>=\333~?/\243\322?<\330&\277\270\004`\275\224\006\303?\001\277\274?G\0342=\236\263\005=;\211\365?v\034\261?\016\0235?\006-\354>\202\021\024@9`\353?]\243u\276\221\230\020>f2\344>\317\203\265?\246\231\"\277\311\311\254\276\312\251:@\350N\300?\205\227 >\230\206\201\275\271\310;@\274\347\316?\271o\025?\n\203\262\274\257\351\341>\235\364\264?\247XU>\246\356\"?\001\255#?&:\263?\n\202\307=\277\236\367\276\333\n\253>o\017\222?>\t,?W\007 >f[_?D\340\274?\345+\021\277\216\225\010\277\013t\363?\243\350\245?\345\354\035\2770\274\312\276\013;j?pD\317?\325\261\352>\t\377\002\276\"6\354?\326\214\332?\244\375\017\277\031\214\021>a\273\255?\206v\332?\205DJ>\247A\r?j\\\326?\355G\336?\343\373\212>\312\334\374=\303\306:@k)\316?}\257\331>\255\373g>\314u\n@\r\031\273?h\262\037\277\033I\352\276j\3450@\277~\320?\273\361\016\277\224\241\006\277)\352\216?\277b\265?=\267 ?\037K\037\276Fc\250?\330}\263?~5\227\276\014\221\323\276\217\223\241?\202\250\351?\227\375&\277C<2\276\031\005\324>{L\250?\377\347\350>\204\020\220\276\264[%@\3434\332?9\263\335=\"\0312=n9\234?,\201\352?\006\234\325>\265\373\325=\201\201\003@\032P\245?\002\272o\276\263\360E>\221\201\177?+P\345?sJ\320\276Q\024h\276\005\331\267?K\006\324?\253@\031\277m\347\023\277\232I;?6\316\254?\274\263*?\204\270\212\27654.@^\241\345?\033f\020?\r\301\211>\016oq>\307)\336?\177O(?\273\354\257\276\350^4@\240\030\341?\350h%>\240\251g\276\257\2604?%]\273?5\354\037?\252\360\217\276Pn:@Ks\273?\262\362\313\271\247\263\037\277^\276D?\331\010\302?\303}\304\276\361\020\026\277)}4?\243v\257?\250\340\270>\303G\214\276\343\216;@\236\230\351?\266+\024\276\033\241\'\277\034gy?\226w\257?Yj-\277_\316\014?B\320\211?\223\216\314?\035:9?\364\277\344\276_X\247?\316\374\352?\332Yt=T\306\177>\223\342\203>Q\207\313?\363s\203\275\025\216\370>\312]*@1\320\261?k)\260\276\244\247\240>\177\331\221?\376|\317?\270<V;W\352\331\274\340\310/@\306l\305?\\\350\006\277\266\333n\276\264\227\000@\tR\267?5)\025>\2754\001?\347\2531@7\306\304?\332\250\216=\036O\363\276\"T\245??R\300?\223\374\310=\333N\323>\205\301\267?fJ\311?\362a\326\276\004\217\037\276e\361\214?\251\207\336?\365\274\013?\351\325\024?\332|\013@\372\234\263?\301\253e=\271\026\335>A\013A@\2652\351?)_p>\352](\277\255\023\030@R\020\306?\241\327\377>`\005$\277\274\211\343?I\275\321?EJ+?\300\256\036?\006\345\211?\234i\232?m\305>\276\005\302N\275\321\355\200?\205\225\300?\200\013\202>\347:\031\277\325Y\016?\333\247\301?\302\025\320>\337mN>\241+B?{\367\261?\315\004C\277\355\2701\277^\016\266?t`\305?\265\342K>\334\240&>\275V\330?\344\327\257?\033\204\031\277\277+.?\204\306\346?\341y\273?^\330\332\275\352\221\366\276\351&\217?\344\277\354?{\242\243\276\020\222\315><i\325?~\002\310?\014Vl\276ZG\035?\237\357\022@\250\374\337?\253\352%\276\307e\014>^\306\203?\357\003\256?\226\007\231\276>&\262\275\034\2112?\021\032\351?\3503p>)\352\254\275\211\373\025@Q\245\230?h\263Z\276\340\365\231\274nJ\262?X\376\322?L\244T\276\231+/\277\215/)@\230\335\325?\020\004\020?\375J\337\2764%\203?\341y\261?\322\345\375\276\024\004\037\277\246\214\342?#g\331?S\2573?\033\272)>\233p\035@\216w\303?\275\344\227\276|\230]\276}$\373?\300=\257?\271\034\327\276\225\200\030>\205\266\224??\213\341?\31302?R,3?$\205\032@\3332\342?$\177\300>U\372\301\2765\366\214?}\255\311?\240\371\014\277ML\013\277\030\202\341?\255\276\266?\016\371\347=\010\217\266\275\243\362*@\005\372\266?\244\2456?~\031<\276L\335\t@\023\272\323?\367\307/\277\367\253\270\276\337!\265?r\250\321?u\2537>\n\203\022\276\034(%@f\274\261?\030\321f\276\242\234\004?\304\334\354>\362\014\320?>\256\315=\247@\356>h\205\370>Q\371\245?g\236\010\277\007bY;J\353\024@sJ\250?\017\362\002\277\3059\352:@6\204?\246\231\324?\362#\026?J\264\344<r\tV?\345z\337?J\0073?B>h\276\242?\325?\233\253\244?\023c\231;\216\262\306>\212a\206?in\315?W\225\345\276\016I\365\276{\231\321?\353\252\310?l\351\r\277\333i\373>\204/4@\347\032\264?w\025*\277q\253\270\276\354\310\304>;p\346?\302L[<\235\362\330\276\ryr?V-\275?k\364\312>\177h\316>\252\013\031@\356x\315?\325\314\332>\247 \033?\254\353\000@zo\320?v\2147?\224g\356\276\362\302\353?y?\322?-]Q>\244\372\356=\245\020\342?o\235\255?\3233\265>}%\020<v#\222>$\356\333?\350\364\034\277^,|\276\004[\\?\002\273\276?N\323\257>\252)\301\276zE\'@$a\263?\002\330,?4\235\021?\236^\221>)^\347?o\236\202>l\352\234={\322\026@\300?\311?k\014\352>\245\364\254>\243g\027@\234j\335?\330\2746?\306\370\014?\037\376\340>_C\370?k\234\315\276\306\030\370>\277\t\312>\236y\007@\277\201\211=\312\032\325\275\226\350\354>Xr\261?j\370\226\2756x\327>\352\266\006@1\227\314?S\003\r\275\241\022W>\022r\304>\235\237\322?$\2641?\032\210\345\275h\356\312?\307\331\374?\212\315G=*\251\373>\340\3035@\201>\365?\212t\023?%\226$?\013=\317>\226\350\262?\'\302\336\276\261i\375>3\363\365?\206\004\336?\016\237\024\276\3536h\276\333^\334>\234\032\306?=\326\214=V\017\030?\226\367=@\013\013\274?\307\203%\277)\354\202\276\350\005v?1\357\307?G\252\217>{\204\332>\217\273\210?6W\303?\324\362\223\276\250\254\306>\302$v>\300B\272?\311\002\356\276\233Y\343\276\370C\250?\025\340\271?}\354\356\276\212U\023\276\364\344?@\335\262\277?\242\323\023\276>$(?\221n.@w\326\360?\266L\256>\372c\322\276\204\250\201?U\204\307?<\204\341\276\027\203+\277\225\2238@L\372\305?Vf:?0\201\027?\262f5@nO\002@\323\203\262\276\1774\030?tL\202?\221\014\213?\231\364w\274<\365\020\277F\000\255?\301\251\345?R\231\342=9~\004\277P\327$@Y\206\346?#\024k>\203\371\233\276\306+u>\226\320\305?\341\2644?W\230>\275l\000S?\327N\342?*q\345\276\316\034\222;L\243\236>u9\265?\335\226\220\276\312n\006\276zJ\261?\2304\260?QJ\010\276\327\277\233\276W2\214?\267\232\335?\030\316\355>\364\250\370<\262\007\001@=+\247?\020[\006\277(~\034\276T\202\323?\332T\261?R\177M>\274$.\277FU\021@\007\'\324?\3745\201>\031\377\366\276\243\235,@\033\020\273?\276Ou\276;\377\326\275w\277\277?\245\202\304?\216\036\377>\225\202\246>z4\005@7\211\267?\020\226\221\275\271q\213\275\034\035i?\201\n\375?xz\245\274v\213\240\276\355\347\352?/m\272?\3753+?3\030\003\276xm7@\021\343\341?\370q\364\275LST\276\354\330\313?\341\353\343?\262h\222\276\222\346\207>\021\250\230?5\177\340?m\253\321\276\033\271N>\221\007\251?_\227\307?\317\205\031?\005Q\367\275\373<9@\014>\303?\3231\037?\305\032\346>X\3150@\026\023\275?\311\2229\277:\260\010\277\3179\017@\020\315\332?\324\2652\2774\365J>\311\202\235?R_\332?a\244\317\276\014\222\236\275\2678&@2\254\262?\277\236+?\352\226%\277\r\206\341?\260\216\367?T\345\017?,\177>\276\010(4@]k\331?\017\014 \276\325[#\276\355\016\325?\374\337\225?\0318\240<\222\350%>\033\201\234?v\210\317?\013\r\254\276h[\325>\260\202]?\313\362\355??7\374>\270!\346\275\026r`>\264 \274?\033\327\237=h\317\225>Aga?\342\217\362?\337p\277>\013\016\033\277\035\365\267?\207M\276?\023\'\017?\362\264\324>#\345Q?\323\240\230?\361\202\250\276\343\2114?\036\266\326>\342#\322?A\2334?F_\271>W8\216?\t\305\342?\334\2333\277dy\207>\202\374\367?\n\327\311?\223\034\310>Zc\010\277Y\263\213?\372\356\304?\273\266\027?\006\023\017>\250z\"@ \234\357?\247 ;?\000\306\323\276#\3579@\2653\274?\375\204\017?\000\221\036>\001\312\r@\2303\267?y\223\'\277\t\246.\277fO+@eQ\266?\2304\"\277\037,#>\306Z\360?\n\365\266?\263\320\316=,G\250>\002\r\034@\350\332\351?\224\022*?\\\221(\276Au\013@mU\302?\225\020\010\277\002\235\211=.\177t?\025V\302?\020\346\022\277P\2461?\037\201\035@\233Z\302?\345\265b>\250n&\277\037A\335?\376c\267?r\243\010\277\300$\265\275\007\277\010@\362\351\335?[A\003>\'\245@\276\235\306\262?\233\313\253?\275\302\322\276\351}\213>\002\253\305?\005\375\321?\220\025\274=\313\237\357\275\0338\246?[\227\336?\251P)?U\030/\277\023]H?\026O\271?\302\275>\277y]\017\277y\014\322?I\234\325?\324(\004>\363\000\032\277\017\263d?\266\362\256?\010>\376\276\244l\035?\200\021\237>\341\317\276?\366b\014?\247=\345\276\236\230U>p\351\316?T\305\324>F[\t?\246\335!@5y\250?\205\321\254\275\335]7\276\r\335e?\243\036\214?\237\310\013\277h\257>=\306W&@\362\262\312?\3647!\274\216\350\276\276\"01@v\211\332?\035w\272>\232\356\005>\010\027\252?\000p\304?\215by\276\t\341\005\277\036\370\231?Q\242\243?`\224H?=\'\345>*p\252?\367\313\327?\006,\031>\245\240\263\276\031\252\036@!v\254?\25489?]P\377\275\201u\361>0)\252??\034\304>\255\333\200\275H\221\356?\351\n\334?\020X\t\276\215\323\000?jy1@~\344\330?\345A\202\276\033\201\330=<\262\255?Z\275\333?\274\352\271\276}\007\347>kc\324?%\353\322?UO\206>\215\t-\277(\207\204?\201v\227?\310A\021?\254\310\310\276\007\377l?]\214\351?\344.\272>d\222Q=[\\\317?M\237\265?V\360/?o\r\024?\324k\341>`\344\311?\300\0046?\005\030\366=b\341\026@\315s\252?\206\347%\277\265\244C>T\364\305?{g\360?\261\277\034\277\223Qe>\252\321X?\021\304\303?N}\340\275Nc\343>\363R\202?\220h\314?^\276!?\326\036\032?\331<\305?p&\324?\260\347\223\276\036\377%?m\213\177?\311!\360?\262\2041?\007\227.>\2052c?Ve\325?\322s[>\023\r\036?%\320\305?\341]\332?\244\373\201\276\367\036\206\27649\347?;9\307?\335\356%\275/\250\007\277\361J<@\357 \254?=EN\275,\330\246\2768\"-@t\r\355?\370\335\034?(C5\277F\271\313?\302\301\302?\344h\356=)]\032?a8\314?\033K\362?\006\016\370\276\243\261*?\366\344\277?n\031\372?\026\336!?\236\322A\2764z\261?\005\303\263?\003\353\260\276\345A\342\276\254\247\307?d\257\327?\032\367\032\277[\013\313\276\234\341\031@d\347\305?\245\240\333\276\024\256\237\276\325\005\003@\226\t\345?~\254\360>T\374#\277\236\354\260?Ui\265?S\316\367=@\367\035?\3521\365?\006\363\267?\362_\330>\354h\004?\212\311\205?L\027\310?\253\007(?f\273\222\276\347\275;@\035s\003@\0006\020\276%\010\367=O\267\023@Ze\272?\200)\033\2775a\233>\322\377\270?\020\260\264?Bv\356>\033\200\225>:\220\253?Z\363\311?\215F\226>\237\253\255;\342\301\234?H\334\325?$\014\037\277.\256%?\036|W?\314\231\341?\314\323\271\274Z\201\t\277Y\236\244?\261\211\244?\326\032\036\277\322\211\204\276C\365\025@\373<\336?\272\366\235\276\271T1\277\266q4@\004\306\314?\250U\024\276mY\236\275\375\260\326?2q\325?\255O\361>M\241\363\275m\177\"@F$\306?\023)\355\276\"\216\021\2773\264\020?\360\277\333?\366\353^\276\301\346\014\277\013[p?\020\006\260?=\231\377\276\270!\366\276\014\346\t@\232x\313?\003>\277<\200\265\322\276\016\202\350?\262\236\244?\3704W\276`\310\332\276\3647\351?o\016\301?\025\000\037\277|\324\023\277\364e3@\364Q\324?f.\024?Q1\216\275\222\231\022@\300\355\333?\243:\215>d\311\374\275\260\235\231>,J\303?\267\270\326\276\352\350\014\277\375\002 @\306M\263?\237\350\332\275\261N\335\276\377O\005@\226\257\245?\337\210\356\276;6\272\276\366\2547@\231f\310?\255Q\337\276c\266\214\276\310\374<@\335a\357?\335\007\210>Wx\237\276\347x$?\210/\327?\311\313.?\320(\335\276y\231\362?\372\356\264?\364\2479?\223q\014=qu:@\257%\276?\305\311}<\310\353A\274\307\261\327?\037f\275?2\254\342\276\231\360\223>B\024&?\210\366\267?\332q\203\2763\371\316\276NI\321?(~\254?2U0>\316\251\344\274\020x\300>\203\374\266?\306\336\353\275\312pL>\376\002[?o.\256?\267\266\240\276w\333\005\2760\310:@\'\366\234?\2173\275\276}x\256\276H\"*?\213\340\255?\323\024\341\276si\020\2774\027\027?/k\224?\261\370\335\276\002\362\005\276>4+@\034\357\260?*rT?}\260(?m\214\241?U\335\353?\273\233\247<\177L\323\276\002\270\311>\t\210\255?\276\244)?z\215\r\277\371\365\203>h%\327?$C\226\276\247 \327\276\'\036\206>B&\357?7\306\236>\335\227\303\276\377u\332?m7\313?\\\216G>u \203\276$\351\273?\333\304\327?o~\303<\342\224!\277$N\026@\223\343\252?&n\235>\222@\033?\353\032\367?&\374\250?\276P\300\276\360\336\261>\256\t\016@\334\017\352?0/ \276\276\240\355>\177j\354>\213\335\304?\302\3007?\331?\033?5\2264@\356z\355?\0008\226>\212\002\021\277\032\334\304?\314\320\240?\220\277\014\277\030&\333\276\000%\206?\035\307\357?\326\344\211=C\255\211>I\213\331?%w\344?\243Y%\277\333j\276>Z\324[?2=\265?\022\203\004\277\222=\232\276\272>\341?0\177\241?\205\227\004\277dZ3?^\370\027@uu\325?\244\304\216\275\315s\254\276\233\201\240?Eb\332?\304y\200\276GV\276\275\312>\266?\004!\235?\264[\223\276\032l2\277\202\341\205?O\004\347?\236\264 \276\205\231\226>3\004R?4e\313?\340\237\202>,\202\367>\004\230.@\353\341\345?1\n\202>\333\245\215<\311\236\341?K\255\265?l\262\006=[\320\233\276y\265\345?*\250\364?Ku\341\2756\346\r\277\264sR?` \350?S\007\025\277\307\240\373\276\\\200\234>2\343\333?\220K\334\275\341B&\277G\220=@\236\006\354?)\3506\276\332<\022\277\363\306\262?B$\347?ML\207>\2548\325\274\345\375\226>o\331\255?|\177s\276>\351\000?s\324\031@\301\250\254?\277\177\363\273B\010 ?\254\354;@\t\301\332?\337p\007\277g\266+\275\262\317\265>\010\217\270?\345\321\315\276\357q6\276\301\306?@\220\365\274?4\235\021?\375\243\017>\305\274\020@\003w\260?K\312\345>\251M\000\277\351!\346?\356$\360?\372\234+?\355\273\372>\303\315\315?\001\370\265?\243x\245>\206\307\236>\235\365\201?\336:\313?\365\275V\276\334\240\256>\275\322\264?}\313\316?\345z3\277J\324\233>C\326\231>\\\253\375?\272-\231>\344\240\374>>H\354?\2237\270?T\306?\276\345\227\021\276m\235y>\251\243\315?H6\257>&\337\224>\254\304,@\341C\265?\204e,>\305s6\274\227k\006@\357\032\352?l\313$\277\264[\243\276\221>\374?=\014\305?\t\247u\276+1\277>b1\000@\024\261\242?\307c6?\225-2>\231\347\n@\351`\331?7\026\030?=H\357\276\002\260\273>\001n\324?J&\237\276\341{\007\277l\350\256>h\260\335?\320\356\004?\203\207Y\276pb\001@\006H\312?E-\205>d\352\036>7J\207?\201{\316?;S\210\276\371g\016\277\206\310\335?-\263\332?\2713\223<)\354\026\277\000\320\257?\320\235\264?-[k\275\177\206\267\274\316\366\007@\275\304\332?\234\212D\276\322Q\216>\002\267*?m\256\310?75\360>\203\333\"\277\250\350\n@\205\224\263?\262\022\037?t\'\010\276<\371\003@7\250\315?\322\030)?J\361\311>\271\331>@\241\022\345?\333\304\031\277\216\221<\276\274w\266?^\234\322?\304\316\034?\333\333\035?\006\332\326?l$\347?\020\037\250\276\260\251s;7a\003@\004p\275?!\316\017\277\306\212\036?\227\216)@@j\331?K \365>X\220\026?4\016\325>\361\363\355?\341\360\332\276\004\345\002?QP\265?\206\344\314?\263|\375\275\263\354\021\277A%#@\236_\334?\353r\342>\274\006\035\276\365d\002@\210\235\347?\254\001*\277\356\230\002\277)q\344?\321=\345?\231J\337\275\200d:=\247T\312?\357 \310?\206u\263\276s\326\327>5\336\330?\257\265\261?\024%\025\277\227\034\337>\346\'\302?\017d\253?=\016c>\314\361\002\277 \004\013@\203\212\272?]\0323\277\307\272X\276!\202P?O\314\320?\324\231\233=K9\277\275\024\235&@\207\210\237?\256\017\033>\331?;?i\353;@\251M\254?\267b7?\006I\017>\350\372\356?\325#\257?/\302\234>\3433\301>\312m;?/\244\267?@\024\224\276Y\210^>\327\036<@ \360\316?\242E&\276~9\223\275F\371\300>\213m\274?H\302\276<\221*\026?\003\210\031?\202\035\323?\003\005&\277>\316d>\216\220\320?\rT\346?\261\3016\277\350\206\016\277\317L\220>\237\347\315?\'0\365\276\003\264\325>X5;@\013\233\271?\263\266I\276\220\237\215;\254\314&@^H\235?><\313>y\224\n\277;\033\037@u\345\305?\2722\000\277\221,\030\277qV\264?\274@\257?KY\346>(\177w>0Q\t@\342\000\330?m\307\224=b\330)\2774^\275?\025q\242?\252,\212\274\002\204\'\277\004H\220? F\312?B\315\360\275\253@-=\023L\t@\317e\310?\003\226\034\276(+\306>\373\331\236>m\034\243?\020\257\303>\315\001\342\275\305\\\223?:\351\255?.\221\333>\344\327\257\275\333\202\"@<.\270?\214\365\025\277\373\006\"\277-\202=@&\033\333?\277\013/\277\002d\034\277\365c7@\220\367\310?\323\333\177>h\346\351=\250*\340?\346\315\301?U0>\277\0262\367\276\335\027A?f\273\316?9}\375=?\214\020=\221&&?]p\356?\234\207\263>}\227\232>\271O\006@\331C\347?zP\220=\330E\371\276\335\3718?b\242\263?\351\271\345\276\314@\275>\312e\031@>z\331?\242\353\036?\031\2522?\234\374B?\000\307\242?9\200\226\276G\220\026?\345\035\213?\275\373\247?a\374\034?\220\020\315>z\342\305?\266\274\340?\301\342\014?\3475.\277\207\277r?\207\375\330?\222\224d>d\222\021<C\311\266?i\212\300?\2068\366=\357\343h\276\001X??!<\342? \355\003?\355\232\020\275\312*\'@^\366\337?4\330\014\277\271T\245\276\034?L?\202\312\262?\217R\251\275\342!\314\276\016\207\024?I\326\325?\307\234C\277\373=Q\276\\\243\343?\033\233\277?j\244\245=\017\357\031\277\272\024\021@]\030\327?\002\272\317=\336\005\222>\214*\360>\250\217\336?\347\033\321>P\303\027\276\360<\017?\300&\271?m\254 \277\001\212\021>\334\t\'@\263~\335?\325A6\277yt\333\276\341>\201?gD\367?\304^\350>\345+A\275\254.q?\014\223\315?\030y\001?\274\350{>\023D\005@\032\367\344?\311\312\017\276\225\360 ?$:A@X\215\361?\217\376g\276\264\000!\277\374K\376?\256a\266?^e\255>\252\231\345>\234\245\366?b\327\214?Uk\271\276\341\270\204>\356W~?\\s\317?\223\341x>\302\301.?i$\027@\002\237\271?\330.\005?\367\223%\277\244\0146?\002f\330?\355I\200=\005\214^>\361\345??\336\001\316?\351,c>0\023\365>m\'\272?v\337\275?\204IA\277\r\031\217;\316\272\027@-\351\336?ux\034\277\020\037\270\275\243\225\276?y\262\263?\035!\223\276\316n\005\277RJ\023?>@\253?\267`\241>@m\010\277\246/\335?$\200\317?\031\215\034>\374\215\022?@ \244?\211z\261?\"\302\327\276\303-\023\277\214\356\225>\003&\304?\2511\351>\005\242\'\276O\274 @\245f\301?\212\002\001?\006\366X\276}\"\027@}>\312?\364\214%\277\t\030\335=6s\020@!W\322?\265\376\366\275\334\273\316>\206\306=@^.\354?\274\037\'?\3268\253\276l\0053@\322:\354?wf\252\276\215\321\302\276\375$4@8\332\333?2\314Y\276$*\264\276\370z\001?\335\323\271?\357\3430?\350\370\350>\004L\350?\025q\270?\332\003=\277\262\235O>\"\351\341>@\023\333?\236\014\016?\260\251\007?<p,@\"n\246?\335|C\276K\344B>\024\313\"@\374\214\307?\017\232\035?(C\325>\3631\211?!t\366?\341a\222\276\374\247\373=\337\354\021@\304y\342?\225\235\256>\356Z\302\274=tG?\035\001\252?\203M\305>\325\320\036\277\262e\215?\033\270\333?\371J\350>\016N\204>@+}?\233\221\365?\343\033\342>\311:\234\275v\376\325?`\001\352?\376\327Y\276v\212\r\277\261\211P?\354\022\265?\332\220\267>\213q\316\276\303r1@\344h\006@KY\246=(})?9%%?s,\305?\253%->l\353W>iJ\316?\202S\255?xG\226>\367\260\237\2763\300\340?M\023\354?\200\362C\277\202\310.\277\330[`?}\"\277?\310\356\026\277\331\223\000?g\243\366>\200\267\254?\254\217\367>Ku\231\276\001\374s>\316\211\301?\0060\205\276\334d\010?\274\033\342?\353\344\302?\235.\007?\022\241%\277\270]>@<l\244?\343O<?\336\004\307\276\243\312\244?!\347\323?H\031Q>i\305\027>\014\321|?\020\"\305?W\262\373\276c\321\004\277q@\224?\243<\303?f\332^>\367\224\034\275\'6\246?\301\032\277?d<\022?\256\201\001?\177\023\372>\311\001\261?\232\353\264\276\237\004\022\277\376z\316?&r\321?XT\314>_`\266>\240\311$@\222\351\314?q\312\034?1^c>-\332\212?\"m\227?\346\007\346\276\245\277\027>\t,\027@\230\334\346?/\302\024?\304\317\177=\'\326v?a\251\376?\032\336\354\276\331\261\321=9\330\272?w\241\357?UN\313\276\\\221\270\275\237n)?\273\357\330?\205_B?\224.\035\276\237\376\366?\3334\372?\257\t\351\276\201\223\265>;\233\302?\266\326\321?]\214\321\276+\366\267\276X\324\342?p}\362?$\230\022\277>\353\352>F\357\350?\342\001\317?S\316\013\277Uh\240>\274V\267?B\\\343?\\\257\221\276r\371O>\t\272\017?\023*\326?;\375\000\276\316R2;k\031\265?\275\375\313?\232\354\267>H\213\273\276-c=@\234\030\276?G\306\202\276\342t\202>tL;@\331\356\274?\325[\003\275\330\273#\277E\314\362?9`\341?O[#?\257\261\313=\266T\352?5$\270?\032\373\">\312o\341\276P\035%@[\323\244?X\254\231\276G\005*?\355\307g?\331!\326?\366@{\276\276\301\277\276I\222\t@L\341\217?}\313\024?\342x*?\260Ub>\305\255\322?\332W\326>\203O\353>\310\200S?\342\\\303?0)\306>\216\006\260>\025e\030@nR\257?tD~\275C\002\336\276\003O!@Q-\326?f\3353\277]l\n\276\013\003\031@zo\342?\001n\326\276\237\003\213>\367\271\026@\334\201\330?\257?\211\275\267\226\311\273\303\357/@\022M\314?\302\022\337>\247\257\017?s\024\005@<f\320?\274\003(\277~\254\014?\346\324\023@ \320\331?\374\376\025?w0\302\276\"a%@\247\354\264?\360\243\006\277{\206\250>\220>\"@kd\006@4\204\253>\235L\234=k\302\256?\230/\371?>\257\370\276\251\330\330=\353#G?\277\232\301?\201v\207\276[].\276\210b\027?\210\r\316?\342\000>\277\033\366{=\037\014B@/\243\214?c\232\351>B\n\246\276PE\001@\022\333\345?\225*A>\247\351C>\000\\H?\004\036\332?\"\000\014\277\035\256-?x\224\003@P5\320?\375\025\002>zo,\277\017\245(@\202:\357?N\323g>A\327\276>\021a\020@\325\227\237?\341\2631?Kxr\276\360\272s>\025\375\337?\302L;\277p\264\343;\315\332\267>f\372\335?\r\372>?\345\356c>bj6@\312\334\352?\320C\t\277\3169\014\277-p\353?\376\322\322?uY\204\276\363>\002?\272L\021?\266\366\214?@\277\227\276\3703\010?\322\344\242?\251i\323?\2509\t\276m\034\311\276A\315\326?\354\337\311?p\\>\277\344\202#\276L\2340@(b\267?\332\310\021\277\201#\371>\226\247\033@\263\317\265?\211\353\010?\036\212B>fU\361?\263\267\312?\314A\020\277\315\036\010>\022\222\217?\004\252\271?-\320^>\235\364\276\276\313\013Y?\016\244\325?\325\005<=\206WR\276Z\0171@}^\277?!\001\203>\233Z\266\276\257`\026@\317/\324?\327L\336\276x\357\000\277\351\207\325?O\036\364?!\003)?@K\023?\347\352&@\3537\323?\033*>\277\226\010D\276\232q\251?\224l\217?<\025\034?\204cf\276\214\')@\216\220\345?\365\023\016\276\231~\321>CX\215?\254o\300?\204\327\226\276\322\3061\277~\200+?\tm\311?\003\005^>GV\036\277u*\245?\351\013\303?G\215\261\276\337\032\330=\00566@8\274\264?\335\\\324>\233\311\033?\356-\035@\314a\221?8\274\310\276\347\304\376>\204$4?V\323\265?\363\217\266>Fa\023\277\257\321b?^\200\275?\031\345-\277#\363\000?\276\257\220?\300\351\335?C\341\233\276Hm\022?\350\372\314?#\365\300?\336\307\t?BZ+?\034\365\n@\271\340\274?\2179\327\276?9\022\277\221\311\213>\2452\275?\036\372\316\275\356|\227>\302F\002@~\303\264?*\255?=\355\200\313\275\240\350:@\003{\324?en\026\277U\300\031\277&\243\235?Y\370\370?u\006v\276$\n\355\276ty5@_\'\355?\312\302\327=\370\302\004\276\375\270n?n\246\362?\016\206\232\276\305\004\035\277\314+\022?t\264\352?D\277\356>6\344\027\277\233\020i>&\305\233?6\316\216>7\032\300\274\025\370S?\215\r\263?\247 \257\276\310\356\202\275\261M\263?\037\330\357?\365e1?W\317)\277\304R\272?R\356\240?9\324+?\242\232\262>\342a%?\201\353\334?\311X\345\276e\251\r?\017\020\021@\351E\275?\222\257\244\276\030\264\240\276\261\234\226>\3017\225?\2236\245\276?\034\244<uF)@\252\017\326?@\302\260=i\002\265\276Wq\202?o\275\246?\371\333\236:\353q\337;5\231\014@\002\240\336?\361\331\252\276\t\031\210\276\357S\356?\002E\252?P\216b>\237\260d>\264d\374>nl\314?U\244\272>\222[\333\276\305\337;@\035\035\253?L\302\365>\231\331\007\277)\2132@\373!\264?\210\205:\277\001\0230?\332_*@7\000\355?\235\236\003\277~\036+?\337\242\220?\001\340\302?\353\377\234>\214J*=\321B\267?mV\345?&7\352\275\356%%\277\237\020\362?\247\262\356?\241\240D\276\216\003\207\276)\320\302?\205D\326?K\254(\277q\2525:w\256\225?R_\314?\032\025\310>F\322\376>2\205\024?h@\353?\264\220\200=\216\3502?\2265\377?\231\360\257?\324C0?\3707\330\276\254z\212?\264\036\272?\263\317\213\276Vf*\276\r0\002@\322p\252?dy\357\276y\036\314>\016\331\360>\334F\265?\356_\251>RH\222\2751\377\310?\014?\312?rS\003?E\236\004?\001l\270?\033I\346?\347S7\276\216\346\200\276N\301\017@\233\252\307?\327\024\240\276\375.\264>[k&?\005k\256?\221,H\277\327\372\022\277\334\370\016@k\270\346?m\0037=G\346\021\277_\007\370?\223\250\331?M\0172\277\255\242?=\332\2608@\354\301\254?\210\235\001?\243@\307\276;\022\346?F\317\305?\231\327Q=\214\275+\277y3\006@C\342\344?-\263x\276(\267\t?\337\2702@\211)\321?\364P\273\2750\241\002=\031\246\253?\313.\346?\336\314\260\276\334\200\247>`CG?\341\177\301?\367:Y>\215\014\232>\207\375\331>\027\235\266?\325\351\020\277\021\374\033\277\351\r\033?R|\306?81\010?\367\347\242\274\222\200\007?\275\337\324?!@&?\321\260\310\276\230\344\177?o\267\250?\0218\202>\260\036\277\2767\317\377?\255i\320?X\256\'\276\034A2?\345\267(@\254\035\331?\301s\017?4\364\257\275\036\376\215?|\357\305?#\023\004\277\265\335 ?D\024X?\2300\234?\022\330\014?\266\363\205>\230!\212?\035X\005@_\'\255\276Fx\353\276\331\362\022@\035w\316?\345\271*\277\361)\260>Jbd?\214i\350?8k\000>x\t^\276\363\267\000@0\016\352?uZ\'\277d>0\276\300\235S?v\252\320?\007\013W>W[\251>|F\003@ \321\266?\376\230V=\307\360\030\276\243\316\374>%=\244?\274\006\275\275u\005\023\277x\030\321?\217\253\313?\346X*?\016\334\251\276^\260m?\206\345\253?\224\275\r?\262f\334>$\207\236?\211#\333?\324)\013?\240\340\362\276\001\225\376?.t\361?L\372\'\277\177\332h\275\367}\333>\352\010\330?\361\360\276\276c\014\304\276\316\002?@\0010\272?P\034\014\277\0006\020>\223\250\307?,\017\324?\200\237\021?S<.=\203[\275>o\016\361?\337S\025?C\255\331\276\226j\265>\364\030\237?Jb\t\275V\201\002\277\316\206>@\230\026\331?\365\234d>Xp\347\276_\207\270>MJ\327?\204\272\220>*\003\247\276=l\344?\364\243\307?i7z\276\337\335\352>|\366\241?p\317\341?\352#(?\350\206&\276\377\023\222?\014\312\360?\262JE\277Qk\232<}_&@\\\034\253?H3F?B\005\357\276\204V\001?!\\\375?\331@\202>RE\221=\310/\240?\214\363\315?5A8\277\372c\006\277\005\215\340?\233\377\267?Y\031}\276\337\304\020\273-\026\"@\325\351\344?\032\250\304>\260\350&\276\311\270\270>t\265\305?\231\270e> \231\006\277i\262\214?\020\347\257?\351\362\346;~o\253>\227g\005@\252\201\276?\342\036\023?\202\250{8\013\312%@^e\327?\221\323\027\277Rc\302=\266\320Z?\341~\314?\341\013\273>\364\370\005\277\rj@?T6\334?\337\026\314>x\270\005\277\216\310\201?\325\320\304?\315Xt=4,V\276\246$h?\320(\303?\335\317\271>\360\243&?\276\356\002@8\240\323?\273*$\277\030\t\365\276\252\333L?\207\340\316?\303\240\234>\336\311\037?Bp\236?\241e\305?\263}\360\276\001i\267>\223\270\312?\017\326\375?\273\355\002>\324*\342\276<\030\244?\262\366\323?\367 \354\276\017B\210>c\335\013@\266e\344?o)/\277\215}\311=\261M<@\237\313\304?V\327\201\276<\364\315>y\275\004@\264 \260?\242\3614?}<\364\275\007\366\232?\230O\310?\217P\243\276?\344\r\277\334U\010@\374P\323?\324c\353\276\217\032\223<\235\374(@\232\006\313?\346\317??f\202\301=K\032h?l@\306?\257\\\367>\366`\202\276\242\210\241?\220\240\276?\253Y\307>\353s\325\2753\261\030@\240\336\330?w\331\317\275\376\236(\277X\267\220>+\242\302?\253\351\022?\240\340\022\277X\321\004@S\315\234?V\364\027>+P\373>s\300?@\034\360\255?p\353\016\276u\002\272\276\273\255\216?Y5\222?\177K\360\276\337\214\342\276&\016\336?9)\266?D\304-\277V}\356=\300\300\215>\nH\323?\241\271\006\277\212\260\301\275\355R/@bL\262?\340\363\017\277\374\303f>\035<w?\200\356\331?MeQ= \317\216\2768_\021@\376\177\264??\250\353>8\364\306\276\276\343\267>XW\271?e\307\022?9\354~\275\342\027\263>>Y\325?\256.\247\274h\010\307;m\276\333>6;\336?nm\241\276\344\240T\2767\205\017@\201z\323?D5\r\277_\\\322\276e\366\034@\247\317\276?\347Q\361<G\306\032><\210@@\277\020\222?\230n\362=\215\200\222>)\304a?\341a\346?\201\262i\276\262\272\345\276\220\277\210?Ef\276?\"\374\017\277\253ZR=7\252\n?\210g\321?\000s\355\275\262\235\357>~\004\371>\330J\244?\314F\033\277\035\312\250\2763\'\026@\023\177\274?<\365\014?\'\274$>tJ\351?%u\346?\362{3?5\322\342>\021W\006@\247\003\307?\317L\200\276\321\317\314\276\233C0?\250\036\271?\033,8\277\364\374\035?+\267A?^K\312?\335\261\350>\271\340\004?_\350$@?\251\334?\272\241\351>r1\326>au)@%>\321?\273\265\354\275\204)\372\276X;\250?eQ\354?\r\035?\2772\260n>\177\327\034?\234\210\342?\034);>\254\252\267>\002\035\227?\241\275\240?\032M.\276\177N\031\277!m\331?\335\261\300?\237<\354\276\026\332\231\276Z\230\246?\334\330\266?\367\005\274>q\257\324>9\263\205>\363V\321?Y\300\244=\351_\022<\010\253\371>A\362\270?u\3448\277\317\364\222\2753N\275?\3751\345?\313f6?\035\350\231\276t\335\026@\002\267\330?\001nv>\306\205s>\371\325Q>\"\033\224?\220\367\302>a\252\035?\367\017!@4g\337?\361\326\035\2774\200\267>\367\002\363>\213O\303?\210\r2\277\236B\026?RO\203?\343\216\321?\254\034\032>:\220u<\004C3@mT\307?\256JB\277\223\374\030\277\023\365\251?\'\241\242?I+\216\276\002\326\016?Y\004\241?\231\236\336?H\302*\277\004\307!?(\"\014@\377u\366?\340\241X\276\333\211\032\277\3264\210?=\232\240?\031\376#\277\260\254\034\277^\263\263?p\260\321?*\221\034?\377\003(\277\023\356\243?\376\355\310?\210\365\306\274\275\213\367\275\323\265\260>\307b\357?\314@\315>\216\221\014>h\021\320>\177j\332?\242\325\005?\033\324\206>>H*?NC\264?.\217\365\276\274\256\377\275\2062\311>Xq\334?U\300=\276\267\t\023?`\224\257?H\336\251?7\216\270\275\010\345\255\276\252\2440@W\007\326?\333\246\260\276\320\t\261\276\316\034\377?\366\n\311?\314z\321=U\335\213>Ff\321>,b\302?\365G\024\277\006\201\345\276\275\004\r@\020\005\237?\220\205\310>\366~c\275\340\035\327>\270\"\323?W\223\247<\340\205-\277\207\016\257?\270s\357?M\275\036\277\027\237\372\276\021\2113?qv\361?\320%\030\277M2R\276\3409\202>i\306\226?\223\036\"?\216v\004\277y@\210?32\352?F@\345\275~n\240>~R\225>\000\307\210?\033d2>\0320\370>\024\210\032@\332\343\321?\267\325<\276\032\371\274<P\303k?=I\310?B\356r>\316\031%\277\301\317c>\006\204\254?\235e\306\276C\253\333>\343\007}>\334\021\234?\314\233\273\276\327jO\276)(@?`\000\261?\303\016\353>q\307\323>V\322\006@\205{\245?x_\031?)\\\217\274\022\223\356>\347\247\306?W?f\276}ya\276w\t\005@\235/\322?\244r\313>\262\361P>\002\301\261?\023b\260?e\377\274<\020\352b>u\036)?\241h\312?\373\261\031\276\301\214\005\277\322}\235?\227\000\322?\200\266\265=\001\277\366>\t\'\323?\354\243\277?\0012t\276\254\377\243\276q\330\225?\262\235\345?}\037\016\275\'\024B\276}h\365?]\301\304?\026\025!>\237<\334>>\037\006?=\013\236?SB \276\263\354\211\2762\364+@\001\275\272?\177\2067\277 c\376>\216L\313?\346\256\315?\2608\244>\210\332\026>\247\037\033@?p\307?+n\334\273\'K\355>A\334\214?\234m\246?\0215\r?\371d\255>|\001\245?~T\275?\"\033\350\276\017d\365>\343\372\232?\252f\352?\017`!\277\217\251\007?\227,\000@`\221\317?4\206\035\277\037GS>\2025\311?\221\266\347?\204\235R\276\232\352\311\276\360-\313?g\360\311?q\220\200\276{\327\240\275\377d\353?\334I\324?\231\365:\277\351\265\301\276&\261r?\314\231\275?\2450\357\275\000<R\276\245\271\246?\320\354\342?\031:\376\276tb\277>\016\337\363?Z\237\310?\210\271\004\277\030\005-?*\351$@jg\274?\301\221\034\277y\"h>R,*@\271\213\276?B\231\022?yt+\2777\311\372>{\243\212?\355\016\211\275\362[4=Y\021\034@\224h\307?IL\014?\342\313\014?\330\342.@\313\326\320?\000u;\277\351\266t>\227Y\265?\254\342\301?v6\014\277\001\247g\27696\244?\263\267\342?\317NF\275\355e\203\276Xl:@\267%\244?N\235\337\276\312\376\331\275\206m\212?\365\331\251?}\007\257\2764\202\365>\303\331\"@\004\004\247?~\251\017>\243\256E>\006\270\002@\232D\343?W\320\234\276#\367\004?\322\322\323?\034\321\315?\316\213S>eS\"?\\\325P?\215^\305?\363\0341>\3642J>\024\300\256?\270\257\263?i\250\221>\216\262\006\277_;6@!\352\324?\037H^>$\016\t\277y\244\203?;\035\270?\001\2415?T\342j>\214\206\003@\014Z\272?\334\3607\277\212\343\030\277\177\215!@4\206\321?m\310\227>R_\376\276,id?\317/\262?S\223\270>/\024p\276\226&\013@;\251\325?\215b1\277\326W\307\276\010\210\353?J$\311?=\363\006?C\343%?W\204\261>\177\335\321?\261O\310>\355\014S>\330\013\362?\376{\316?4g\375<\371\367\271\275t\263\277?b\020\306?d\317\"\277Z~0\277 C\023@Uj\302?\376\017\340\276\365\017\252>>\\\036@\352\350\336?\243\003\036\277N%\023\2771\255\342?\010\221\326?\3577:>\254\003\000?\'\351\004@q\215\323?\321?)?\202\377}>\230[\362?\257^\325?\211\322\"?\326\342+?\243\032\177?\256\363\321?Nd\356\276N{\252\275\236\366#@.U\321?\312\373\034\277\322s\353=\345\322%@\031\214\351?\233pG?\242\231\347>\007\3372@\037\206\264?\234\373\313\2755~\001>\375\203$@0J\336?x\263\032?\350M\205>\002H\r@\357\254\277?t\265\305>\355\362\215> H\241?v\300\223?C\256\264=\203i\310\276\376LP?\310(\341?\232{\300\276\034\010!?js\330?+3\275?\024]\017?\211\356\331<\376P\036@7\341\230?\323\366\307>\254<\021?\237b\317?e\215\326?\024x\003?,b0?^r\214?(\200\326?\215\016\024\277\327h\351\276\255\r\372?U\300\271?M\364\001\277\223\252\275\2762&\020?\342\"\267?\363\253\321\276*\255?\276\203A\223?wj\314?\032\212\033>\031\254\270\276V\265!?\\\253\257?\204\272\240\276\223\345\304\275\026,;@mS\300?-\317#?\210\275\360\275\330 \"@\3169\346?\272\241I>f\024\313=\314x\016@\204*\325?\0366\221\276\032\244\034\277\025\017\315?\017)\352?\316\2514\277(\324/\277Cw\266?\036\030\276?\347\027E\276\327\373!?\276E\024@\030{\271?\037/$\275B@\n\277q\274 ?\204\233\304?\264\223\221\276H\027\203>\224\013=@\324E\262?y\257.\277\225\201\333>5\340\375>$d\346?8h\257<\264\003\032?\310\352\324?\207S\266?\344\022\007?\215]\032\277kq\025@\316\304\314?+2*\277\350\240\037?M?\272>!\254\222?\324\322\244>D\302+?\237\004\306>\256,\315?\007\352\234>\342\003\023\277\257c<@3\243\273?d\316\003?D\242\340>\274^\020@\304\013\332?E\3629\2774\277\352>`\014\265?\375l\304?\373\226\341\276\314\014\027\277^|\312?\014\225\253?\360\373\367\2750\330\021\277P\362\364?\024\224\252?b\366\006?\351\322\027\277j\205\257?\021\337}?\231\331\017\277\364\207B?\264\016\t@q\343\266?\300BV\276\024\\,\277N\030\263>\026\370\276?\222Y1\277L\343\327\275d\023\023?\316\304\304?\324\177\266\276\020]P=*\230#?\n\277\254?\265\030\214\276|B\346>\351e.@f\274\311?\267\013]\276\033\017v\276O&y>\262F\355?\234\333T\276()\210\276\327\255\204?\3544\364?\263C\314\276\232\"0?\213\323\t@28\266?\242\266\345>\203\205\263\276$\025\276?\327\207\357?\313\024\363\276\006\023\357>\355E0@\226\t\317?\221{&?\000t0\277(\024\375>\\\036\325?\362\010\216\276\n\326x>\021v\333?c\200\276?\0222\320>\247A\031?\370\027\337?\200\323\337?\375\202}\276\314\267\226\276\033\247\232?\251l\254?\260\253)?d!\322>7\350\027@x\270\323?\250\3404\277\250\033\320\276\r\200r?\014\261\204?!\310A>\220-\033\277\360\325\354?\006\274\314?\n\022\233\275\205\225\212\274\273\201\034@%<\305?\360\372\374\276Y2G=x\010H?a\342\273?d\317:?Y\210\016\275;\275#@\272\273\312?z\303\315>[\010\006\277u\324\221?\207j\276?\342\000z\276\261\246\262<\222\255b?$C\324?\267\262\004=?\304\206\276I\371\336?Y\373\221?\346\003>\277\261n\234>\242r\002@&\214\346?\236\267\001\276)\010\276=vI\335?\354k\315?RC\263\276>u\\>|\016\224><\242\270?\005\213\023\277Y\207\353>\024\3664@\003\231\305?\246\234+?\367 \204>W8\250?\2754\303?9\265#\277&\375\025?(/\315?\r\000\002@\267\233 \277\243u\020\277{\351\345?<N\233?h\007\254\276\221\321\221\276Nb\030?\301:\246?J\353\217=\221\234,?\035\265\023@\201\\\354?a\305\r\277\265\371\277=\261\256\337?\265\032\230?\3441\243\276\313\237\007?\262\023\271>\353\310\265?\301p\216>\317\244\035?\201\")@F\'\347?\016\020\010\277Nae>\210\0174@\210g\275?\347\216~=T\344P=\225\235\236?\035t\353?\323\204\335\276J\014\262\276@h\273?\021\031\344?J\360&\276\233!\035?\202\213\243?V\200\325?7\026\304>\366\010\025>7\026=@\374\217\242?8\206\000\276\220\0232?Oh\200?\267\324\327?\277\n\330\2765\3543\277\004\330\263?s*\315?\375\334\360>R,\247\276@\374\006@\343\335\273?\251\333\001?\212\002-\277u\365\263?\013&\272?I\326\031?\361\236\373\2769\224\344?U\301\320?kJ\">l\264\010?\353\342\326?)!\260?\266\201\373\276\335|\303\2759\225)@\366\322\242?\010Y\026\276\265\027\261\275\361\371(?}\"\277?\001\243\027\277\212<)\276\345AJ?\311\252\304?_\316\014>\016\365\037\277=8\010@\235I\271?\334*\000?W\314X\276\265\375\343>B]\214?\274\312\302>\234\300$\276\202\277)@&\250\323?\n\333\347\276\337\244)\276\305\241\027@\276k\362?\271\3752?\340\274\370\275\242\304Y?@\210\276?\254\253\222>\024\347\024\277g\273\032@\207\244\330?\336 J>\335\322\242\276\322\344-?\260V\305?\305rk>i\376\030\277j\215:@\"3\327?x\361\206\276\2549\020\277(Rp?$\321\303?`Z\030\277\321!\000?t/\245?\256\r\253?\202W\313<c*\225\276\253N\220?>v\305?\337\030\n?\217oO>vv\220?\277C\365?\323\027\302\276\023D}\276tx\014@\036\215\337?4,\316\276\362\321&?1\235\301?B?\323?\010\037\322\276T\031v\276]\021Q?U\366\325?\037\364\030\277w\331\027\277W\340\020@\020v\270?\341\233\026\276\261\024\025?\342\306\006@\363 \243?\376\327\211>\300\003\243=&<\200?\312\207\276?\020\3136?\303e\215>|\017\211?ta\330?\247\002\316\275\230\303\356>^\243h?\020t\262?\010\034\035?\333k\021?\272o(?\324\'\263?y\316\356>U\0221\277\225P\330>\202o\250?Ug)\277\326\247\\\276\372\213\316?\247\010\342?$\3578?\353Ud>\007\3162@\2068\342?\224\302@\277\232\264\361>\351\3464@p>\317?\213\302\356\275f\277\n?\300Z\311?\255\211\311?F\225-\277\006h\243>\351\360p>e6\252?E\365\326>1\006\026>\364\037\371?u\256\322?\200`\216\273\357u\322>>\374\023@@P\350?\207jz>\376~\331\276\317#\276?\014 \244?\363\310/>D\205\332\276S\264\233?0\360\256?\261\341-\2773\213\250>X\277\226?0d\251?\275q\272>@\3020\275Y9\033@\324\325\241?\276\332\221\275\353\034\003=F\363\213>Y\245\370?\310\352\316>\355\323\021>\t\033\005?\357 \264?\\\257-?\002f\356\276\213\275\013@@\374\272?\356C\266>\362@\020?m\256\232?\224\205\307?\375\207\364\275\016J\024?(\220(@\301\001\323?\262\274\313\275\3165L>F\362`?\"S\300?\202t\251\276v\213\300\273\311\370\257?|}\353?\346#\331\276\214\275\257>2,\r?\3377\336?|\355\031<,,\340>\301\317\026@\371\330\257?!v&\2778e>\276IG^?\347\310\276?\247%\366=M\3311\277\332>*@\001Q\300?W]\007?\363U\">\355Y\025@\207\302\273?\361I;?\250rz\276\236\311O?\302\205\334?\313\023\310\276\227\003\355\276\270S5@I\017\307?\324\201<\277B\265\231>\344\230*@,\014\265?.T\236=\336\2155\277\361\265*@\255\030\274?B\350\370>\354\335\367>v\0160@K\006\300??\216\216>\225\330\365\275\024\366\205?\227\254\346?:z\014?Lq\315\276\244\"\032@M\274\351?k\231<>\026\023K\276\261iZ?\272-\261?w,\006?6\221\331\276Y\340\376?l\263\337?y\257\242\27677v>Pf\345>\244\343\362?\232\226\230\2751\317\372\276#\360\270?\351\230\313?&\310\230>\214\271\253>\367<\033?%\224\326?\312\337\205\276\240\334\026\277M\320\260?-\264\335?0\364\250\275\277~\330>\231\027\305?\rr\333?\017\r\'\277\340\203\307\276\276\030\321?\246\323\332?l\355%?g\013\210\275aC=@ \266\322?\351\323\006?\371\331\270\276W\300\343?5%\365?\360\370\006\277\304\350\271<\210k$@$H\303?\t\212\037?\317\237\356\276\202\236\'?h\350\003@\213Q\377>\r\373\001?\314\216\362?34\346?\201A\022?\376\201\232>\252\220\240?\366)\313?}\227\022>q\313\027>\026\361\036@S<\330?\007\352\234>6\352\341\275\025\344\217>L8\226?Q\237\224\276\305\312x>p\234\351?\247\263\305?.\032\202\276\275\031\355>p\nS?\346\351\302?\204K\217>0\237\014?Hl\'@\330D\354?bH\016\275\3164\331\276\2262<@m\252\260?m\216\027\277\342\006\274\276{(\022?\032M\316?\3747\337>\010\344\222\276x%\003@\273\323\275?+\275\026?\340H\200\276\356q\026@\002\273\314?@2!\277P\305\315=\337\350E?K!\324?M\203\016?W\265\334\276U\317\255?\220\240\234?\302\276\035>\333\301\030>R\005\370?\224\334\303?\272Lm>\360\371\371>\356\223>@\305\252\253?*\346 \275\211|W\2769\3551@\324\361\346?\344\272\251<\252\265\260\275\252g\\?\206Y\250?8\207\003\277\355}\032\277\324VZ?J\226\311?\023H\r\277\272\202\t?\347jX?\032O\300?F\261\364>\313\242\330\276Y\245\366?\257z\320?\034#\251\276J) ?\250\030\274>\370\305\317?\001\276\007?\365\200\331\275\371\3676@\265\335\342?\rU\331\276f\205\302=HE#@&\343\230?5bv\276\300\003\233>\")\347?O\316\362?RFH\277\351G\303<O\345\320?\351\355\303?\363\252\356\276\027\362\230>[\332\273?j\205\361?D\0303?\246+\030\276\240\340\300?Cu\273?\025\033\037?z\376\214\276\331\305\n?\223\305\267?\224\023\225\276\263x1=?\362\216?\346\314\322?\240\210\335>\223q\374\2769\005\r@\210L\261?4\330\204>\216;\r?\016\337\037@\364\335\275?\224\210p\274\363\037\006?\310/*@\345\'\277?a\301%\277K<\370\276\370\203\232?\234\025\371?\036n\037?\226w\031?\230-%@.\253\264?\022\206q\276\0260\241\275\320\2423@\004\220\310?\026L\254\276\240\335!=\235E?@\251h\350?\366\0105\276H\211\265>j@~>\223o\212?\272\364_\276q\253$\277\246^\212?\332W\370?\215B\302>s\2000\277+W(@6\221\267?\377%\341>\031\036\233\276\324q\203?\245\333\272?[\355\371\2763P\301>\261\257\020@\003$\270?\274!\345\276{I\203>\215\270\"@\353\346\262?A\360\350>\357op\276\222\260.@\336\377\305?Ks\017\277\200\014\005\277i\344\357?\272\366\257?O\225/\277O\353\"?\366\266\361?\233\001\364?\361J\212>\342\\\003\276\324\261\205?\337o\362?A(\217\276\314%\265\275\313\311\232?8\207\371?|\362 >c}\007? \275\376?\265\375\331?\267\234k\276X7\016>\001K\263>\312\025\226?\353\345w\275\216\006p\276\2749\253?\221\234\316?F\357t\276\354j\222=;V8@\222u\274?\016\330\325\274Y\372$\277\331\247\035?\324`\250?\033K\360>\364l\206>M-{>\235\275\337?r\247\000\277\005\025U\275\021B\006@\373@\264?H\212X>\006\021y>\005AV>&6\335?\214I+?6\002\r\277a\375\365?l\005\255?\234\244\231\276\351\234\347>\261\246J?\224\302\250?\331\355+?2\310\025?Y\2637?\220\243\333?^+Q\276\271\377\350>\344,\345?H\213\315?w\020\343\276-\316\010\277N*2@i\002\257?;\3052?\206q\207\276\365*\n?U.\276?;\305j>\222>\325>L\201\322?D\300\361?\236\360b\276\t3\315>\237\3005?>]\331?k\362\010?RD\006=7v\033@\367w\324?\301r\204\275\250\031\202>\217-U?4-\311?\317\273\361\275\222\221\017\277{\330?@\332T\341?\336\310|\275_\266\305>v\204t?\334\325\343?\336\002\211\276\024\005.?S[!@\317\202\336?\'\332E>\356\317%>k\336#@\013~\225?l\313\330>a\027U>zQ(@yW\325?u\002\036\277\272\205\316>*\244=?\247v\266?W\350\333>E\362%>\'D\035@\214j\231?\344-\007\276Tr\246\276\016\252\004?,\274\353?\214I\317\276\007b\021?\231\247I?\243Z\342?[\007\237\276\350-.?\020\273\345?ro\262?\274\3144\277\021sY>\202\350\364?\243:\271?\257\263\331>\336<%?8O\304?H\251\314?\361h\373>\333\205\316>JX\200>C\312\325?\250\304-\277p\224\334\275\t\275\233?}w\227?\253#\007?\312\031\036\277\200C\027@\251N\253?\336\220\"\277\214\2064?k\334\300?R\'\260?\377\005\372>:\257\211>\263u\225?e\032\275?)ZE?C;w\276\360N\244?r\335\250?s\330m\276\273\200\027\275\315\237\315>!@\334?\177\302\035\277\322\304\323\276j\365\354?l\315\264?\373>\214\276\204\365/>\211<\005@\nj\346?\036\303\373>\n+u>\325\2606@\314z\273?e\030\367>\223\217\225\276\\\361\253?\326t\245?\303\016c\275\374\250\326\276\312\234x>?S\321?\274?\016\276\276\332\031?dO\314>t\227\216?\266\365\363>\226B8\277\210\344\332?\351(\337?\225\202\316>\362\262\336\2767%\231?\235\205\241?S\2225=\342r\244\276\342\355\342?M\334\314?,\017\262=\221\016\'\277}\220\224?\252\200\311?\006H$?\021\034\367\276hM\375?RG\317?KX+>W\010\333>\n\305\022@\321\350\342?c+\014?Z\270|\276\3161\233?\316S\275?\225\'P\275ap\215\275\317S\324?.;\336?<hF>\273|k\276)\371\025@OX\260?i6\207\276>\003J\276}\031e?\302\300\253?\233\376(\277\365\331\261>f\216{?\222\352\335?p\"\016\277Y\337\340=r\266$@#\367\264?\2029\n\276s\330\325>\201\251\276?\367\003\270?_E\366\276\355\231\345=\312\376,@\255\024\276?\362%4\276\"\210s\274\256\272\032@d\004\336?\021\376\315\276\026\370j\276\346\332\311?-\315\305?\232>\233>\221`J>^\n\312?\233!\343?\333\3375\277\005\244=\275\325\306\207?\276\242\321?\346\317\377>\330(k\276\241\236~>\347\343\342?\271\213\220\276g\235q\276\"\031\216?\021\341\315?\363\256\032\276k\234%?Z\000\213?\211\'\341?[@\020\277Q-\036\277\254\375#@\375\025\300?0\271\r\2778\333,?C5*?;\345\361?_$\324\276|+\312\276\331\330S?l&\325?\265\303\217\276\036Q!?q>\027@\252\327\267?\344\300\213\275\243V\370> \366\006@9\357\323?SX\371>\002\232\024?#,\254?,f\336?\312\337!\277\205\353\025\2770\001\'@\263]\273?\325z\'?#\204\017\277\024G\357?s\204\320?\227\252\030?$b\262\276\230\'\377?\220\273\274?\221\'i>RC\333\276\000v1?(\n\302?qY\t?\2034\273>\344\030\374>\361\233\324?\305\305\201>\354.\000\277gp2@\357\221\337?)\010\236\276\315#\033\277\311N\032@w\241\233?\257\260\300\275\357\343\000\277Y\036\317?\311W\246?\200,d\276\n\202\007\275\027@9@\373u\323?\271\373\244\276\302\243\t\277g\322\031@\375\333\237?\246\t\017?\302\373\032?\220\263\232>yv\355?<\365\310=\022\211\022>/\314\010@\311\256\312?\205A\001?V\202e>\262\023Y>A\020\216?aR\274=_\360!?DZ=@\034]\261?\210f\206\276\260\2531\277\253&\250>6\345\316?#\274]\276l\350F\276*z\306>\263\360\263?\026\211\035?g\014\003\277\262\301\022@\344\370\327?\271\306\257\276)wO>\210\241+@Ed\322?B\351\233>?\340\r\277\022(\224>\341\007\251?\322\251\303\276\004\001\202>\320\3739?yw\256?C7\223>1\323\036\277\255\270\032@\201\316\336?q\005\364=\3172+\277\1778s>\000o\275?*\002L>\372{\271>\036\355*@\306n\241?\247u\253>\371\024\030?\262X\230?\206\254\330?X\001\316\276o\017\372>\274\252\036@\355\200\317?s\274\252\276\211\352\215\275\010\203\361?\262\203\304?\261\242\032\277\337\210n>\206\224\266?\277\235\330?\375\331\013?7\0264?)V*@\370\033\305?\253x\333>Z\270\244\276\'\224\224?\032S\330?C\004L\276R\322\203\2769-4@\271\377\310?\332\342\032=\226\320\215\276\264\274\022@\352!\322?\300\350r<\205#\350=\024\017\014@\301\343\315?\t\032\017\277\023cy\276\375\355\364>\370\306\260?\314A \276\351,\013?\023\367O?\263}\266?\331\257\363>\234n\361>%\376\243?\343\373\322?P8;\274\244\030\240\275u\201\367?->\315?\000\033\000\276\025\377\217>n\'\017@\3230\234?\020A\r\277\301\255\213\276\006\254\275?e\027\230?!\223\034\276{\300\214>\367,:?\3748\324?!:\224>\352=\031?t\037\025@\337\213\321?\253_\035?\277}->&\331\326?9^\321?\3748\372>\016\300\316>\357\025\033@\035;\350?o\240\240\276*U\332>\263!\330?\221\t\246?\266+\244>\367\352\003>\026\313\225?\274@\225?\033e}>DM\000\277\n\371\213?\375\202\227?b\201\257\275\252\360w>\"\370\270?\240\246\310?\240\305\026\277\302\331\r\277\022\226\332?\321\313\276?\240\212+?\210H\021?\277Y>@j\241\300?\231\364\227=\312S\256>\272\201R?\210\205\370?\267}#?\025\000\003>\206\254\014@\372C\325?\252a?>\300$\t\277\302\273\031@\336\257\306?P\035+\277\320Gy>\221\017\010@<\243\241?A+\320>2uW=px\243?\261\250\256?\22416\277\203N8\2778,\323?\200,\252?mq\255\275\001\023$\277\250-9@\364\376\327?\327g\206\2762\253\037\277r\326A?\322\305\224?\213\250\351\275\271\374\267\276\327\022*@\245/\312?\314@\215\276\212\002\205\276\201\315]?\3122\252?\034\354\275>\371\236)?\273\274\240?\366D\301?<O \2778\363\253=E\311\372?]\334\322?\235\330\253\276\222\006#\277\221\254,@^,\246?\342#\312>\227<\366\276\315\254\277?\305=\304?\334\2025>\026\023{>\226\263\375?\2035\304?Xp\277=\237>\212>\036~\031@\257\223\n@\247\317J\277\266\017\201>\001\"/@\0215\263?ms\027?\340\276\316=w\016\354?\354K\250?\'i\036\277Ze\206=\264\224\032@qZ\324?\022N\033\276\367\216\032?\326\332h?\362\007\327?m7q\276\343m\031\277\342\315\205?\035\223\303?\370\3726?\215%\274\276%\203F?\324+\273?\277\013\273\2759\264\300>\2047\340?\311V\271?\324dF=-\260\347\275\345\302%@\272k\265?\350j\313\275\253\317-?\005z\216?Ie\304?\346\345\200\276\021\251\r\277\311!\031@m\376\335?\007\355\375>d\223\264>6\267\n@\223\217\363?\027./\277\255M\263\276\231B\001@\'\276\326?\227\253/>\215)\340>4I\014?\307\240\321?\237\253=\277m\306\351=b\033s?W\356\271?/\3418?\024#\203\2768\237\014@M\327\331?Hn\001\277\331]\340=\327\362.@e\213\346?\350\237\340<\301\031\364>4\234\003?f\021\254?\321\223.\277Z\200\026?\300\014q>en\312?s\177\325>\317I\013\277!\337\302?\243\224\344?p{\302\275\255\335\246\276\270A)@\274=\326?O<#\277?\037\001?\351\201\r@\341(\247?\317\240\351\276\347nW<\211\2714@\251\207\342?\331=\025?\037\240{\274\376F\t@\323\025\250?\020\0026?\242F\025?\334\307\030?f0\366?\231\267>?\032\026\303\275\265\035@@\246\201\237?\330G3?\215\325\006> \332\004@\355*\332?\345E&?F\0061\277?}\322?\006\274\322?\321Wp>\204+ \274\331\017\310?\2178\350?\213\244\305\276\204gb\276\344\312\023@\254\254\335?1`\025\277\265T^={\0274@\027\325\334?\333\300%?\027\271\037?}\022\316>,,\334?Z\270\000?R&\365\276;\036\"@]\305\234?ND?<zQ\203>\r}\225?\307L\260?N\356\377\276d\347%\277/\242v?\232\230\276?q\002\323\275\362\224\255>\373p\235?\304B\271?\252a\347\276TS\302>,SR?X\214\334?\264w&\276\036N\240>\320.\370?\2343\372?\340\204\202>\312\251\035\277?\2554@\234\335\374?\177\3658>F[\021?@\210\"@\035\343\330?\322\375\034?\236#\362\275\350\262\032@\331`\235?\362\t\301>+\335\275=\rD!@`\350\327?\340\325r\276\357s(\277v\0026@\314\227\241?t&5\277o\203\372\275%d\022@\346\255\364?\r\250\267=\273b&\276\026\032\275?c\014\260?N\323\237>8\242\223\276\327\276\272?\237t\342?\035\034,=U\025\n\277\211#$@\211\360\303?*\377\016\277\361\274\014?rZ\242?\025\220\256?h\006\361\275\024\226\320>\026&\373?\363\222\257?3\372\361\276\343\214\241\276\224z\314?\347\217\343?-A\366\276\252\363\030?\034\335\"@\314~\006@\252c\035\277\302\334\256=\\\270\001@^K\276?s\3323>\354\334\004?\375\233\320?\004\313\261?\336\0021?\214\021)\276\326\037\272?\017\322\267?+\027\022?>\317_>\201V\367?5b\254?\017\230\277\276u\314\371>\243/\343>b\020\326?\014\261\342\276g~\005?%\272i?{\366\306?\257\316\t?\351\272\210\276\003\327\210>\230\207\306?\355,\342\276\217\034\271>\214 (@\244\214\332?\213\213\243\273\036\207\r?2jt?0\233\314?U\207\024\277\245\204\034?>Rb?+\303\230?\n\202\247=1\321\310>\022v\346?\036\027\311?]NI>\215|\022?\202\237\340?q\005\320?\316\307!?\037i\034?\355\336=?\265R\222?$\264e=\2546\003?\256T\266>\014\256\367?\251kM>\367v\353\276\246\234.@\000\253\315?\372G\007\277\377[\t=^\332D?\273\013\300?\347\340\361>\312P\031?0\021\'?\203P\254?\205\317:?\267B\010\276\"\320\217?\220J\000@\277\364\246>\312\026i\276\212\n:@N_\337?\364\032\313\276\350\276\004?aN\231?\033\332\314?\331w%\276A\202\016\277\034\240\207?Q\300\302?\320\177\257=\354\276\273>\331\336\372?\342v\352?\231\240\026\276\020>\204>\013\000s?\241\365\320?\221b\000>\024\317\t>\215\027\321?\352\003\333?\255\243Z\276\276JN\276 \314\352?\210\204\315?\334\0229=\003\2273?\006\360\253>\216y\301?\347\306\000?v\3005=\330}9@\371\017\311?\311s-\276\243\254\337\273\0244\017?\261\373\342?A\202F?}\260\374>\236P:@\331z\310?\312\301(\277\244\374\304=\000\244\017@|\321\322?\262\363v=n\334\242\275O!\347> }\325?R\266\240\276\363\255O>\017\307\276?Y\375\245?f\371:\276\335\231I\275\252\275>@ \264\306?<\207\n\277t\354 \274\346v\341?l\260\330?\0324\004\277\201\353\n>\304\2248?K;\307?\177\242\036\277\301\033\212>\252\236\205?\210\205\272?\225H\302\275`t\231\275\"\307\006@\007\'\322?c\361+\277\333\276\'>o\206\272?S#\364?8M\257>\264v\007\277\210\232\205?u=\307?\007\226\213\276\374\253\023\277\305\230\347>}\\\263?\316\033W>\014\346\033?\t\255.@Gw\346?\361\331\332=*\251#\277\021\221\267?A-\336?\224\024\200\276\3119a>Tv}?\370\247\350?\035<S>D\213<\276P\371\214>\313\202\357?\3330*\276H\304T\275j\003\266?\371\365\313?c\231~\276\205\262\030\277\220\265\026@+\204\323?\356`4\277\344\207J\275\033\370-@Yn\347?\t\302\245>[y\t=r\277\017?\222\346\301?\226\224\037?\000\304\031?\260M\264>\2069\273?*\341\371\276\033\237\021?g\177\244?\270\344\334?\316\301\353\276\250p\204\276\002.\007@\222y\242?\002\021\372\276\227\253_>S\305\312?\324}\332?\031\343\303\276\254q\276\276\303\343.@\024z\343?\272\244\302\2768\327p=\250S\266?r3\322?y\345:?\334\240\216\276%T\375?\337\025\345?\036\341\364=R\020\334\276\366\3461@\247\315\366?R_.?c|\230\274\203W\312?\023\363\302?\007\n\020?\313.\010>\225|\022@\327\367\267?u\0361\277\303\357&\276&1\010@2\345\307?\022\330\374>3p\360\276\n\250\243>\017\234\243?D\334\364\276A\235\026\277z1\t@\361\201\265?\304\"\346\2759\324\013\277\037\327)@\221\363\352?\000\252\034\277\345F\261>Q\201\370>\315;\266?%y.?\271\215*\277P\\\037@\360\334\325?E\364\013\277\'\334\023\277\307\352\366?\004Z\360?\253\"\\\274z\337\220\276!\273\031@F\013\300?4\330\014\277\350\333\272>\357\373\210?\254\251\326?\356\230J>\225,\237>\272d\035@\322\030\347?\271\301\360\2758j\245=\245\240\027?_}\300?\006\272\n\277\247\037D>\255h\222?\244\210\304?>B\r\277B\315\210\276\216\021\033@?\305\313?Xo\024>2Z\307\275I\215\327?\210\325\311?\366D\317>J`\233\276[\332\027@\302\024\243?\"\306K>\232w8?\335\250\203?\211$\342?\006c\344\275`\257\200\276\013\200\t@\207\245\301?\371\3267>\211\010/?\260\364,@$\017\346?\035\3472?\243\002\003?\206\300f?V\274\331?\316\000\227=.\217\325>D\234\232?f\275\300?\313d\010\277,\266!\277\231\355\367?\256+\252?\256\365\025\277\350\243\274\276\276p\232?\337m\324?o\2743?*\213B>\323\3051?fg\273?\245\327.\277\363\307 \277\276\332%@\265\375\363?\214d\327\276+\301&\277o\355?@<\203\360?\022N\203\276\352[\"?\315~\241?\233\254\267?Y\276.\277&\340W;\346\303\266?\253\262\307?\357t\267>\201\224\030=\244\210\373?x\322\320?R\355\273>\033.\222\2755\272\254?er\334?@\204\260>\027\r\371=\021\025\243?\025s\262?\226C\343\276\n\022\313>\251\"\354?-\010\323?\001\024#?\010\002\254>\246\230\331?3N\323?QM\r\277Z\324\267>\215\256\375?\276\203\303?+\275\226\276B[\n\277\r\226\310?=|\273?\362w\'?\200co\276\202\344\231?\273\267\256?\326\345\244>\017\360\344\276[J\n@W\t\314?79<\275\023~\231\276\211\321O?\264\000\313?\311v\016\276\3642\252\276\272\316T?\316\376\226?\033\204!?+O\240\275z\377&@\324\361\324?\312\3001>\357\003\220>\303\211w?\241\024\247?h\004\223>\004\3062\277\273\037\'@\363\253\273?5\231\331>\010\257\375>\027\022\031@j\022\304?Q\204<?p\231\033\2770d:@\267\262\234?\364\247M\275\377\222\204>VV\332?\356>\325?\247\350\370\276\303\362\307>\224\302\272?\246\235\350?\321]\036?5B\227>&\236\251?\237\346\276?*o;\277\254\304<\275Al\206?\r\306\306?=a\371>\347\306\274\276P}\276?\254\376\322?\236z\264\276f\334\004?\220\264i?9\016\306?\332p8?\207\214\027\277\332\253\013@\2033\340?\177j$\277\\\216\027?\330o\242?#\273\344?\017&\315>\221G\020\277S\330K?w\365\270?\320{\023\2774-!>\320j\214>>#\345?\375\2074\275\3273\254>\340\242\204?\361\366\220?\226\351G>\034\357.>)<7@\022k\303?\334\202\355\276\245\0204\277\372\">@\367\257\244?T\002\032\277^I\242\276~F\335?Y\367\305?\017G\037\277\362B\332>,\210\310?\270\261\361?\r52?.\254[\2764\366\034@\320\233\252?\347\2126?\250q\017\276\262\340)@\343\373\322?;\001%\277O\004\025?x\272\000@p\261\304?w\326\036?\226\227 ?\000\005\252?\032\303\326?~8\014?\216x\222=\340X\306>N\355\302?\276N\342\276j\335\006>\257\242.@\t7\245?,\r \277\347\212\242>&\266\221>\260V\301?\210F\027\277\216#\032\277\337\n\233?!\310\305?1@>\277\364\340\016\276s$\001@\340L\214?s\0235<\207\336\002\277p:9@\2759\244?\316\251\024\277\230\371\016=>\257\240>t\264\346?\331\005\353\276\030_\034?L\340\376>\027d\001@$\232 \277\266\364(=a\200\212?0.\301?\207\032\375\276\373\006\006\276\306+\347?\371\332\303?\270\256\230<\312\251\245\276kD\030@i\344\235?yv5?z\341\036\277\330A\274?5\007\326?\005\244M\276qW3?/\016\372?6\\\274?\352\2212?\247\223<\276\256l\016?o\360\307?\223\215G>\233<U>;\317\276>0\200\324?\236\230\205\276\262\325U>\310\035\202?\377\257\306?\235\020*\2778\204\006\277\2622\241?d\222\321?\217U\332\276\307\273#\275\365\361u?\323P\345?\034\014\215\276>\006k\275^;\002?x\227\257?\003B\363>n\277\030\277\305\375\206?T\254\312?\251\240\252\276\032\341\005?)\331\032@\205?\265?\036\302\270>cB\344>\305C\022?\230\246\332?g\2364\277\006\241\234>W\255\030@r\030\276?\234\024\022?b/\224\275\246\211\215?\205\321\376?%\354\213\276\205_\262\276\223p\347?\271\342\326?\376\177\014>{1\224=<\275.?\306Q\277?H\213\263\276\024w\234=\304\017\311>\275\001\302?b\276\374\276\274\350\353\275\255s\345?\342V\253?\363u%\277\210\274%>\003\343\332>Hp\267?\334\273\006>\206\003\351>\"\326\344>\344\207\346?[\230\335\276\222\353\326\276\356\372\250?1\317\272?s\202\026?h\222\010>{\244\365?q\000\277?\016\025\303=\350J\204\275VW+@\255\300\300?\014\222\006\2773\245\225>\"X\314?%\261\322?\211\321\017\277\n\327\353\276\333B\277?\373Y\340?SwU>k\017\263\276\223\366\010?\261m\267?\245\277\327\275A\014t\275\333\274\000@\334\241\355?/\026\306=\266\204\374=\323\253d?\321 \271?\373\316\357=\363\002\354>\237\322\351?\022\300\301?\010[\374>\010 u>\357\216\224>\tl\272?L\375\234=\375M\310\276\350\355\331?\\\255\313?5\361n\276\201=\246\274\211\240\212?\375\301\302?\205A\231>-#\365\273\324\034,@Zg\300?\025\3425\277\367\352c>\352\320\341>\\\033\342?\002\326z\276\271P)\276f0\302?\344\021\260?\357r1?\235\240\r>\353\3105@W\317\343?h\351\352>\033\324\336=\325\213\333?\306\337\302?a\304\306\276;\304\267>\343\322\355?\345\231\327?,\0141?\260sc>A\240\226>\310y\257?A\327\276\276\375\364\267>#\227\201?%\006\311?W\230>>%\354\273\276\211g\217>\252c\311?\367!/\277\035Y\351>\234\326\343?\367\255\342?\342!0?\tn,\277\365\366\355?\355\266\235?in\205;Q\203i>\001D<@\250\307\336?\335\006\365=\267$\257>\006\327\314?\227p\316?\235\016\020\277\n\236\002>}!.@\336X\320?\031:\356>G \316>\371(\304?\365\024\273?Y\205\355\276\001\3661\276k~\310?\326:\351?\363V\325\276h\t&?\227\2359@\335\265\272?\207\025\006?\"\0307><|,@\261\207\336?\300yq\276\327\303\377>\337\024\311?\035:\277?\337\251\200\274\376\357\340\276\340_\004@O\312\260?\025\035\031\276\3753s\276\272?\234?\2760\321?\236\3221?\257\230\005?~\014\020@\257>\350?\246+x>\201\"\n\277XU\237?y\003\344?\233\377\267\275W#\233>\313\313\022@\313\331\303?\334\330\354=:y\301>5\013\006@\3543\305?yX\250\275\\\343\007?\370\304:@j\332\345?#I(?\322\303\034?L\265L?\'L\330?((\335>\266I\205>Pe\356?\024\223\351?\301T\263<%u\032\277R\247\022@h%\303?Y\242\343>\325\354Q\276\244\034\341?\301\247\261?@1\006?\013|\t\2772\346\037@A(\325?A\016\212\275\313\235\t\277\203]\237?\016J\276?C\252 \277\307\023\341>J\337\020@]\246\350?\341\262\n\277\3121\t\277^O\'?\214\272\310?\322\252V>jl\037\276\r\337\310? \265\001@\\\035$\277\255\3031\276\220\301\n?\007\353\305?8\024\002?^\017\n?\004\321\243?\247\255\317?\372\270\226\276\256\240\t?\321\247\247?\357\343\264?\223S3?%]\233>^\362\r@\374\307\324?\002\233\343>\307\362\306>z#(@\214\326\277?7n\005?\273\n\031\276\303P\032@F\227\301?1\227\010\277\007`\007?}\003\342?\346\257\252?\247\346\022?\336\003$\276\304\033-@\\ \241?\227V7?\312\210\353>\265\251\240?\320\t\337?\342\220%?\342\221\330=\360\254=@%\\\270?#2\\\276t\263\007?\367#*@R\272\272?\307\204\034\277\377\352\361=\001\205\002?{\243\340?o\365(?\261\245\003?\n\220\265?\320\r\327?\256d\347=g\264\305\276\354\317\333?$\361\274?\372{\371>\034\225k>IE\001@l\352\316?\007A\377>\371\277\363>\021:`?Gt\301?\371M\001>\364\247\225>\331\305\236>\233p\257?\343T\027?%\004#\277\321\332#@\023D\275?\245\020\030\277\201y\250=\035\301\324?\023,\264?\225|\304>c\354\204<\317\220\262?\227R\243?`#I\275\027H$\277\366b\364? C\277?\215D\310\275\314\267\266\276\020w\251?\036\341\326?\325\256\005?\025\216\000?\370\335\210?0\022\322?\265nC>\273F\313\274/\036E?\300\260\322?\354\243\'\277Jb\031\277\253\363!@rP\346?|\264\230\275TVS<\24336?n\304\313?o\331\231\276\3063\004\277\377%\265?\001\212\307?\200D#?d\003\211\275 \331\277?\376`\254?\247\314M>\253\257\"?R\334\"@\376\014\205?\037\272 \274\237\000J\276\277\227\021@\227\342\274?\257A\033\277\224\022\302\275\2704\335?~\250\276?\006\203\353\276\274W\375>\377I\246?\220I\240?\201?\374=\026\246\023\277\272\313k?3O\312?l\351\r\277GX8\277\370A.@\020\315\000@,\360u\276\212U\223>(\307\003@*\377\266?\201\"&\276^\325\025\277\314\032*?\013\353\240?\207\027\024>1A=?\022.\030@\206Z\261?;p\"?\247\221\036?\251\341\002@Ou\312?\325\2271?\203\243\264>\220\020\227?\240\334\332?\336\037/\277I\241\214\276\024A\030@E,\310?\226\352\252\276\004\251\374>\275?%?\305Y\367?\245\274.?\030\321\326>uS\037?\003\260\241?\374\303\236>M\205\030\276OF\270?|\233\270?jhS>\244\342#?\007\025\363?\276K\347?h@=>\327\205\017?\231\345\202?\034\317\317?&\246k>#K\n?\360>\237?\020\346\304?P:A\276\212\2160\277y\366\"@\272\025\340?_~\247=~\311\276>\007\357\231?c\013\345?\031\000\212\276\251\334\004\277\177u\237??\307\365?\244\3740\277\333n2?z\362\320?\224k\306?d\037t\276\270;\013\276N.\335?\001\241\343?T\032\035?\365\271.\277\246u\260?\005\210\226?\236#\272>\244\033\241\276B\327\003@\326\253\334?\247\"-\277\270\261\025\277\303E\372?qr\331?\343\032\247\276\270s\201\275;g*@\003&\270?\016\366\206=/03?\372\3048@\353n\352?S\354\010>\204\237\330\2765\265+@\2030\275?\006\200\202\276\003\353\270=gI\003@\260 \303?B!\272>m\345e\276\275\221`?h\226\370?\024\225=\277kH\214\276\270Z\315?\321\262\262?H\247\002?\224\367\025\277\311\026\335?\370S\253?\221*\006?\206Y\310\276t\205\335>\2027\304?\353s\r\277\031<\324\276T\361\231?\216\352\310?\345\177\002>?\306\304\276\364\354&@\275\373\301?d\\\301>\351\326\233>\217g\372?\267a\332?\324|5\2760\021\017?\224\267\300?\377y\304?c*\235\275\027\021%?t,\206?\230\025\322?%\316\n>\3372\347=!\221\300?\325y\336?>\2578\275\304^\004\277\321\3325@}X\315?L\213\006?\373\311\350>\000\013\245?Rb\243?\271\376\031?\277*\317>\036q\017@T\311\352?fNg\276\262\326\004?\2771\233?h\351\344?\241.\026\277<P\367>\t\302\013@:;\301?$d\020\276\024[\331\276\r\377\265?MM\260?\020\347)?\256F\326\275\264\002\007@t`\271?\004\306\272=\262\200\341\276\217\342#@(\324\245?`\344\345<\257\317\234\275_l\270?`\346\251?\262\332<\275>\350)\277\364\202\302?)\355\277?\323\335\355\276\327\211\313\275^s\337?\002E\332?\342 \261\276\214\2046\274J\231\326?\006\016\246?\tP\273\276J\3611\275\362{W?\260:\320?u\001\003\277*\217~>@\246\333?\032\244\274?\031W\334<\036\251.\277\200Q0?\371K\327?\203ly\276\n\274\323>\201m4@\325\004\317?\n0$?\304C\230\275\226\236!@\344\276\003@5\360\313\276Z\177+>\353\305\014?\267)\322?\331\n\026\277\322\310\237>&\r\301?JF\332?MJ\301<p\224<=\205DR?\262\022\307?;TS>%;*?\257\311<@\236E\271?\3166\247\276\255\276\242>|\n\233?,\235\337?\223\215+?n\336\010?Su\277>\337m\300?\034\'\005>\002.H>F\307Z>\343\302\353?\351\r7\277\3541\001\277\024\031\227?@K\335?z\340\303=R`\201\275\205\276\004@W\355\270?\021U\014?\242a1=c\306\205>\246b\351?\247\353\311\275\340\236\347\274\2745\242>Ps\360?\000\215\">\001Q\240\276k\361U?.\221\301?\"\303.\277\301T+?\003\322\016?l\\\273?\035\037)\277\226_\246\276\211\214 @\320a\312?\332S\362=\340-\240>#\306m?\345\354\253?\367\005\034\2779^\301>\366\023&@\321\316\255?\244\341\014\277\006\362\354\276\001SQ>\204g\344?\024\256\247\276) \315\275\254t+@/\367\263?\367\256\211\276e\344 ?\332H\027@q\222\266?\023\266\377=\017_f\276A:\236?\017\355\313?\244\336\'?p\356\017\277\322C\000@\230\302\333?\255\333\370\276\216\316\201\276\237\361:@:z\370?\007zx>\232?\256>\n\360\332>\032\030\325?\246\270\"?\261\333\033\277Dv\322?\251\237\253?\364N\005\275\352\315(\276\273c\273?w\021\314?\016\207\t?xa[>\245\202G?Lk\325?\304#q>\334\201\332=z\273\345?\"T\301?\034\317\327\276<\2422>\372Y#@\353S\322?\016.\031?Ie*\276HT\021@\225I\243?\202S\277\276\220\205\030\276\357\223\002?m\035\276?\276l;\277\003\314\324\276$\2434@\342\000\322?-\007\332\276n\205(\277C\230\t@\335\266\303?\303.2\277\244\303\253>*\356\020@\316\247\300?W\tV=\213\252/\277\270\367\302?=\017\320?a2\365\275q\215\357\276W\210 ?\377\"\344?\n\334\n?\325$\270\275>vG?G\003\304?\300_|\276Q2\321\276\311\0130@\177\277\306?-z\207>\321>\276>K\357n?\337\304\312?1\265\245>1yS>7\"\347?&:\275?\022\207\224>\343P\237>\207\254\027@\357o\352?\t2\262>c\r\277>U\3179@\254\033\251?\334\177\344>VD\345\276V\315=@\374\250\270?\307\177\021>\364n,>D>\005@\307L\326?\223\303\267>\277\230\305>%\013\263?\375\237\345?\006\332\275\2768M3?H\237\275?\367\347\314?\025\0346\277{\243\266>*6+@\337\302\274?\343\210\345\276\355\202)\277Q\372\240?\025o\314?X\3071\276\nL\'<\374\002m?v\376\267?}!\274\276\307\234\'\277\243\004?@Z\330\305?\036\245\362\276B\315\220\275W\356\356?]\243\305?V\201\026?,H\323=B\353\251?\214\017\267?\222%\213>C\306\343>\t\335\033@\317\242\315?\2244\207\276\324|\025\276\031s:@\016\210\316?_`f>\320\233\n;&6\235?\336\222\352?6\035\201<{\026\000?-\017y?\364\372\357?\260pF\2774\273\036\276\005\025\017@\356\004\337?\205\357%?q\220\370>@!5?\205{\315?\343\377\206>iU\313=\352\026\251?Z,\235?,\325=\277\226]\250\276z\2005@9\016\304?^\2001\277\355\270-\277\274\\\376?\376\201\336?\315v1?\362\227f>\246\201\343?\300_\236?\205\351/\277\005\026\330>\334W\207>\303,\250?\221+\355>Rd\355\275\017\004\242?\271\251\303?2\350D>\232\320\264\276N@x?H\032\304?u<\032?\322\215`\276\236\300\242>\311\346\360?Z\273\005?\235\276~\276Ti\315?\313\022\315?{j\245\276\300[0>\34489@\241j\314?\377Ad\275\2100\036\277\034V4@E\237\317?]o\353\276}\353C>i\301\000@:\317\360?\326q\224\276R\363\365>\224}*@F\"\304?K\221\244\276VF3>\267\342\025@@j\301?5|\213\276\254;V=7\206\303?\003}\324?\340\200\026<4\274\371=\224\274!@v\377\352?\376\361\"?\253!\221\275\001#\330?\t\032\n@%\006\201>K\3515?\'\371#@\010\307\242?\322\306\221<\303J\245\276X+\t@L\307\230?\332\032\271\276\256d\007\276g7\306?\352\t\313??\304\032\277]\335\261>H\204\006@\356\350\335?e\250j>!\005\377>)\313\374?Hk\316?\3273\274\276\332T-\277(\261\320>rp\255?\004t/\277\365J\331=\357\277\200?\241j\224?\273|\037?-[\263\276\306C\017@_\360\345?&5\374>p\007\242\276\347\374\212?\376\177\346?\230\371.\276\301\000R\276x_\345?\3544\306?>!#?3\375\002?G\004\365?)=\335?\016\277\243>vO.\277L\260\300?l&\267?=\2005?V\021\036?Q\t\221>\253\230\352?\002\274\215\276\036\342\013?\240\371\210?\350\336\257?\251k)?\215D\024?R\030\342?g\267\300?\275\303\225>\357\253\262\276\322^\321?~W\270?\010\216[\276K\345\035?\361\0218@\005\246\311?#K\"\277\370\031\367>X\246\210?\215\361\257?`!\363=y\007\250\276\233\207\020@S\313\276?f\274\355\276\363\252n>\007l\030@(}\337?:<\354>\357\341\222>a\232\251?L\342\354?5\317\311>\323P\303\276\364\323$@\361h\275?\203l\271>]\376\313\276\020Tb?\\>\320?\316\304\344\276@\370\020\275\321\311\267>\226\226\311?\356z\341\2768\275\013>\212\3436@\372^\313?\241\362\227\276\342\224\371\276\200\313\020@\246_\300?\247\347\r>\242\354\r\277\201\340\207?\347\251\272?^\200=\276h \002\277\316\260\300?\222\354\257?p{\332\276\230\244r=M\'J?\346X\344?\226\224\253\276\363\216S\275\231L\264?L\377\264?\246\177\321>\374R\037\276.\235\t@\257w\313?\257?)\276paM>\335\177\205?,\364\261?5E(?\277\232\363\276\364\230\006@O[\301?U\207\354\276\276\211\241<8\352\202?>@\353?2\2174?C\346\n\277\363z8@\n\326\274?\376\264\241>\230k\035?Cj\004@\300\256\344?\353\031b\276\3126\200>o\250\366?\001\245\277?\n.\n\277\325y\004>\033bM?K\035\336?\033+-\277=\231\003\277\001\374\313>\274\312\266?\2100\022\277\014\316`\276\226.k?\331_\336?A\272\310>\345\323S\276\233\222\342?5\014\335?\004\251\274\276\216\224\255=\\\022\213?2Z\313?R\234\033\277\233\002\311\276\333\335\277?\036P\316?\345}\204>l\222\017>1J^?\372a\276?*\033\356><\372\007?aI\035@\325\\\310?\035\346{\276\251\372%?\366\330\215?Su\315?\366\014\341\272\266\236Q\276\214\261$@\347s\332?\362\351\331>\344\243E\276*\307\010?\350\026\346?\320\322\t?\323\205\200>\205\254&@9\232\321?\262\276%\277t\t\257><S;?m\034\273?\273\355\036?\315\314,>\361>\020@\352\354\302?V\020\263>KV\305\275\352\033y?\250o\365?\377A\254>YLL\276\331>\031@\233\376\250?\254\377\033?/n\233>\213\265r?\345\360\275?\202\252\241>\017c\362>\022;9?\n\331\361?\355\202\231>\307\330Y>NM\305>`v\275?\225\017\301\275\263\225\017?\334\027\331?4\275\336?\334\202\235\276_\n\017=\241\032*?\241\277\262?,\365\364\276\305\306\030\2776\315/?|\177\255?\252e\343>\230\212M\275<\261\036@4\241\301?J\316\211=\246\235\232=\274\252\322?*q\313?B\226)?\266\331\270\275\203\234\006@O\222\312?\r7\240>\254\003\250\276\204\2279@\333\026\307?\264\343\316\276EJ#\276Oh7@\374\000\254?\265\211\233>\264w\016\277H4*@7\374\326?\345\356\343\276\264\257 \277\331}\036@\302\242\362?/\205\327>\370\371\027\277\301\231\240?\014\313\271?\025\252{\276\254X\374\275\002\225\300?)\010\276?\\\036\313\275\371\272\214\275I\2477@\002(\300?\307\330\371>*\032\253>\373\030\350>]\025\264?\262\205 \275bip>X\306\001@U\027\324?g&\010?\371i(?\t\354\024@r\212\322?_\t$>\254\255\350>g\355\253>\363\343\325?\222\006\023\277\360\243z>\267aH?\311\350\352?8I\243>\352\010p>\236\303\344?\321\225\264?\367!\017\276\245\207\001?/\276\327?O<\263?\322\306a\276\275\344\377=T\237\235>\301s\325?\370\376\246\276[\353\273\276Q\027=@\323\336\232?[@\320\276\311\345\227\276;4\371>\"\372\315?\230\300!?:\317\030\276\344r\342>/\375\253?\3169\350\276\002\365\006\276W\343\365?\377\223\351?K\315\256>\006\201e\276v\246 ?\263\354\353?k\236\243>z\344\177\276\347\220\363?\203\302\334?\377\t\266\276\217\307\304\276\007\265@@\203\212\332?\2074&?&\033\007?\346\247\017@R\324\311?aT\312\276\021\307\352\276\324k\207?\362\006\202?f\023`\275S\262\034\274\352\267\332>\327m\270?\311\221\256=\304\351\344\276>\177\321?\"\342\334?&p/?\275U\'\277/k\364?\010[\246?\027\177\007?\036R\034?\347\\>@\337l\311?\236(\211>\347\303#?1XB?Z\361\227?\014\\\216\276\036\372\n?\263`4@\013\355\314?,)\027\277[\232+>\371!1@\202\032\342?\241\240\000?6\260U=\030(\034?\334\267\270?N\362\273\276\035<\013\277C\007$?\221H\311?\277\202\344>\364\305\236\276F\033y?\350J\270?\026l#\275\363\256\026\277#\333\315?S\317\310?E\360\033\277i\034*=L\033\212?>\263\264?\305U\315\276=\200E\275gK\017@\235.\323?\276\0228>\006\177\013\277\200\377\036@\370S\247?I\331\"\277[\263\345>\033w\"@\220i\337?H\213s=M\331\021\277{\360\247?\266j\307?\026\276.>j\205Y\276N\211.?\303\326\240?\312\250\312\2763\372\301\276\277>6@\022\372\321?\021\343\r?\332\311 >0 \245>7\000\317?\265Q\335\276{\365-?\021\326\350>a\337\230?0\177\245>2\002\252<\334\204\004@4\272\311?A\200l\276\231\326\216\276\264`\263?O\226\310?\003C\206\2764\023\014\275m@\014@\345^\312?\273(z\275\320\227\246>j\n~?\225I\211?\352]\000?\"77?0\241\325>\003\263\314?\262c\273\276\355\203\020\2778\244\023@\315\257\274?z\2532\277J\321\002\277F\336\016@\321\260\304?\341\010\252\276\\=\247\274\371\260(@6\035\267?(\363\317=I-\004\277\033\177\005@\274\351\306?\325x)>\320~\374>>\202\325?\321\316\225?\350\203U\276\016h\261>\212\253W?\353\034\315?\204\326\343=l&\207\276k\365\"@\223\344\275?\030w\273>\321z\210\276NX\t@/\243\270?\246\362*\277\365\362\343>\316\216\332?\316\250\267?ux\320\276\374\341\247>yK\024@\342v\266?rN8\277\017C\253\276\032\0244@\376\201\326?\037\332/?\034C\320\276UG\305?e\376\343?\273\227\373;A\324\r\276\022\337\010@2\255\337?\\>\302\276\207\373\030>\334o\323>\027\235\252?\346\005\300\276\221\017z>\2169\210?Q\207\325?\367\352\203\276\037\364\010?b.\233?\352!\314?\360\300\370>\013\013\246>\017\033\244?\374\214\255?\210\272\237>\013c\017\277KP\325>`\221\307?\225\327\252\275\313H}>\252\263\257>a\301\341?\307\326C\276\237\220->\257\006\332?\222\006\303?\324H\263>\345a\231\276\320^\025@s\242\327?1\354\020>pB\251\276\177\"%@U\244\306?\323\275\356\276\355\273\022?\006\307\213?\257[\362?\310\315\030\277V\266\017\277z\261 @\017|\332?\371\326\217\276\361h\233\276\036u\337?\226]\250?0\203\261\274\337\303%>F\027B?\372A\275?\032\247\361>\321\261\263\276\003\221\"@\217\027\256?`\257\030?\374\034/>\355\277\036@P\213\004@#\025\026?\r\214\234=O\2475@$\264\263?\321\221\024?\361.\227\274\231\037\t?q\221\361?D\300\005\277E\330 >_$\263?F_\351?\027d\233>\353\340\000?\260\274\305>\306\211\217?5\014\007\277\212r\351>\244\r\331>\013~\225?\021\2125\2778\024\226\276M{L?\010!\344?\330\017\005\277\274Zn<\226\022\214?\312ms?\375g\215\276!X\355>\020\304\020@\215\263\307?\220L\337>\177\275\242=\264I\024@\035\343\250?:\2245?\014v;\277\205>\020?\323\332\360?\177\245\263>\317\274|\276\315\2328@{\366\276?\252\'\017?\350\372.\276\221c\035@\367\313\327?\206r\022>A\017\365\275\335\034\"@\210\325\215?\266\273\257\276\02195\277\224C\033@\271\214\305?\335\321\237=|\355\021?\017\357\035?|C\333?\317\275;\277d\221\306=P\204#@\005N\244?T\3114?\356&8\275\214\323*@\374\001\235?\034\227%? \267\237=\332\336\"@kJ\320?\325{6?E\234\216\275w\032\020?\240\250\340?1[\002?\036\373\251\276F\032:?\200I\352?M\023\006\277\003\230r>\r|\247?)&\305?,\2379\277\032\372#\277A\215\251>j/\334?\001Q,\277\000\253\343\276\374\213\240>MJ\245?a\032\246\275{\365\221\276\345<}>\377w\226?\351\361\033\277\275q\362>\375\276\033@\354\022\305?\225}\'\277d\\\021>\354\377\024@E\364\357?O\257\214\276\005\030\022?[\354\206>\257`\004@\202;@\276\346v?>\0015$@\371\273\315?\316P\034?\316OQ\276\224|$@\354\022\361?\037\366\372\276u\217<\276\271Y\004@\016i\304?\237\005\301\276\341{\367>$?g>o\324\306?\006I\037>\232@\311\276o\226k?\323-\357?\035W#\275\302\373\032>\024h\220?g\264\327?\311\255\321>QNt\276\311\231\010?g\266\223?\223\0344\277W\226\210>\013~\247?\232@\265?28\222>\\\221 \277\377\177+?\375f\376?\314& \276\037I\361\276u#\013@\204\363\305?\264Y5\275\234\212\314\276\3514Q?\341`\237?\307.\271\276\207l\200\276l\343\026@\346\004\265?&\213\253>\341\265#\277\214\234\222>!\345\267?rR\230=\007\007#?\310 \334>\310\225\334?3\304\005?(\234%?\345c2@o\361\334?\344\021,?@\024\314=B\321\321?k)\314?\037\241\206>=\323\353=\206\236\276?\360\207\317?ak\026\276\232B/\277\014\001\372?0\020\266?\024A(?\226B\200>\257\3606@\2447\276?\327\210\320>R\357-\277{\246\374?\305\306\260?\265\2503?\373<\326>3\312\033@c\322\325?4\276\357>\027\240\225>Q_\210?\021\035\344?\000U\334\276\364\246\006?\301\247\256>O@\303?\324\r\034\277KtF\276[\034\034@Tr\250?0\3604\277I\200\312\276\001^\200?@\336\253?\277\272\362>\211`,\276\254\026\375?<0\332?\201\2603\276\320\355\021?\347\320 @\340L\274?\036\244w\276\366]\r\277\2758\241>K\036\265?\323\3324\275T\376\265=\306M&@;Q\314?\343\302\351>\366B\261\276gu\336?q\222\246?\275\2177?\\\002\270\276R\305\203>\207\300\267?H\376<?\3127\273>\000\037L?\027\203\273?\357\343\030>\376d,>3B.@\272\332\310?\306\027\275\276s\2361\274\030K\375?\325]\303?\240k\227\276\240\337\357\276\242_\005@\\q\341?\307JL=\251\210\343>)\347\203>(\272\276?\031<\264\276\203\023\361>y\022\244?\205`\301?3\215v>\353\311\264>\255\261;@J\010\254?\334\020#=\264\343\036?\177b\005?\331@\320?\200\016\223>\217\251;\275\227\003\375>J\'\350?x\n\331\275\2615\027?P7\252?\313\273\356?\036\300B\277E\234&?\365\367\322?\350/\316?[$=?L\336\034?\370\370\215?\216\262\356?\032\244\200>.\3119\277\305\3060@~\342\272?\342\035`<\253y\036?j\\\241>~n\206?Gr\035?\002\361\312\276\211\023\362?\252\234\244?B\"\255=W\315s\275\221Sz>\300\261\263?\\\314\227\276/\212\n\277\032\275\025@\213Q\323?\001m\353=\367\256\025\277Xt.@p{\326?\256\324\253\276`W\013?bz)@\2069\345?\363\033\246>\036n\'\277\220\237U?\3436\310?yX\010\277\034\\\262>FlB?\331\227\354?\230\275\030\277~S\010?m\221\274>\312\250\376?\266\277S>\310\t\363>\343\356\021?\214\024\266?\336s\010?\245,\243\276\361\312\255?\267A\335? \013\021\276L\307\034<\026^*@\242{\302?\237\002p\276\243\217%?\351\201\275?}\312\303?u>\004?D2\010?\337J\275?\263\353\330?\345B\215>\303\272\001\277\332\270D?\264\223\325?\245i,?> \220\275\374\247\327?\333\367\320?\007\262\266\276\037I\031>\007\346\355?\261\245\273?\314\227\247>\376\324\300\276\351\3322?\353\002\314?~\345\r\277g`\014?\r\2604@\257[\260?\334I(\277\202\003*?yj\035@\\t\276?\332\001\217\276\202\000\371\275\330\006\'?\245-\316?\233\346\205\276\255\206(?\341\370\007@\202<\237?\272g=?\360\340#\277\316\027c?\213\374\234?\346]\225>\254\251l>)Q\340>\3535\345?\354M4?\351D&\277\340\340\366>\311\000\216?Z\363+\277\230m?\277]\241\360?S\221\316?\304$\004?\303\234$\277yO\245?\000\310\245?\255\367\253\2763\214\223\276\241\"\202?\027\017\341?\246\235\232\275\363U\002\276\323m\372?\355\232\314?9\232\263\276\004\215\361\276\206w\032@\321X\325?\202\255>?\324\r$\276A\033\315?D\303\320?\315rY\273\267\360<=\351\251\261?1\315\330?Q\241R?\001\276\273=\3606\032?G\253\250?\233\000\303\274\231\021\336\273\225\200\224?\343\342\334?\266I\235\276\257?\301\276\207Aw?6\315\245?\'\372\374=\313\366\221\276:\266(@\256\267\247?H\247\256>s\017Y\276\317\351$@\337\212\314?\331\317r>\000\213\324>\372\t\375?7\246\311?\013\230\000=L\301\022?\270\261\031?~\306\233?\2660\343\276\343\301\016?\253\t(@S?\247?\246\270\222\276\261\374I>\0046\270?\263\006\331?\224\244{>Z\325\036\277\377\206{?\2339\262?\222\316\240>\355\267\n\277\004\201\025@~\214\327?@\275\231\276\355\234\246\276\335\356\335>\262\234\316?a\246->am\034\277\217\035\036@\355}\320?\222x\035\2777\212,\277\0227\220?o\240\326?W]\247=\214.o\275\367\3109@\261\375\332?W\355J>\034\357\016=r=8?LR\247?*\000\346\276J\321.?o\304\265?\220\277\314?\320^\305\276\205\264\366\276\212\r\264?\0051\306?\346\255:\276,E\302>\346\340\206?Uk\331?_\233%\277\214-\024>:\226N?\331\354\354?\022\276\247\276\244\215\243\276\"\271\350?^\273\324?\206;\367\276\210e\343>L\366\030@\315\004\343?\356\004\323>k\202\010>\334\n\376>\225\356\344?\302\026\203>\242\rP>\037\205\037@\243\035\307?\226w\005?\003D\005?\233\'\036@q\216\344?\035\000\371\2767\373\203>\004\3272@\362&\253?\361E\033>\\\005\231>\311\364\201?oI\336?m79?\256\330\'\277\334cy?Ec\357?\320a\356>\005\302\036\277\353\365\025@\304\005\276?\270Y\024?T\341\017\2762L\027?\305\307\321?6##\277\261\244\274\275m\311\330?;n\354?\317iV\275\014Y\r\276\350-\013@1\'\354?\223\251*?/\372\036\277\316\035\306?\"\246\326?\036\207\t?\365\361\020?Yc+@\260t\276?~W\004\275]\243\345\272\033\307\024@\025\217\327?\014\260\337>!?{\276\t7\321?\236\267\263?\212\003\310=\311w\361\276$\362\341?X\035\275?\201\227\005\277R\266\270\276\233\025\026?\327\370\232?\026\277Y>\033\234\004\277\301\265A?\272K\322?\020\226\021>\367\036\016\277s\2064@\0324\252?\266\364\330>\037Mu\274\247\020\336>\374\307\262?\256\202h>\347\306\254>BX\314?\336\344\261?\364\371\030?\177\337\023?O\223\003@\331\"\305?\031\344\246>\233X\034\277\231G\212?\350N\306?\213\030\306>\355\324\204>\260\260k?\n\242\270?\244\246!\277\006\202P>t\333\342?<\332\316?R\016\376\276\331_\306>\307\247\214?\214\331\340?\36054>Q\237\244=p\t\216?} \251?\324I\002?\037/T>,\210A@\336\254\311?\\\347O\276q\342\253<0X\225?nP\357?\243u\264\276\302K\260=\2639\240>\322\341\271?\304\n/\277\302\335\261>\252\330\037@\026\373\313?7\341\n?>\"\356\276\2570\027@P\246\355?\201AR<\264Z0?s\0246@\033f\300?\312\031*?Q\274\212>\204\340\227>\226\n\336?\361\021=\277*\036\027\277\003\203\022?t\316\257?\000R\373\275\255\212\004?\270\325\254?\246|\324?%\225\021?|\360\032>\303\322\205?F@\315?\347\032\022?\t\207\002\277T\272Y?\200\177\270?0\2031>/\277\263>\010`\223?OZ\310?\244\304\002\277\276\0215\277\241\306+@PT\350?\'\334\033\277v\337\311>\r\355\256?}\352\312?ob\010\275\031r\264\276\205\031\334>U\300\345?\005P\344\276\363\347\303\276.\206\370?+\337\303?\342\000\036?\271O\016>\373ys> \264\246?U\372\351\276\027\r\301\276\203h\265?\275\342\261?\255\302V>\327\207\355>~\312\276?\334\r\302?s\017\361>J\264\364\276q\200\247>\177\365\270?h\006\221\276,\177\"\277\016\2671@\024\263\360?\340h\277>\003\\\320\275\223\256\246?\355\274\247?(G\311\276&\337\274>K\033\010@\031\306\361?\3335a>\201x\035?\265\024\327?\017\321\306?\3022\266\275\275U\017\277_\235)@\303\232\322?\241/\305\276Ll\306\276\370A\364><\365\350?0\020\204<\245\366\352\276a\021\033@\020\221\300?\272\021\"\277\256\331j>?C\236?\336\310\336?\200I\302>?\375\257\276\206\233\226?9\324\327?\264\217\355>\002+G\275s\017\005@\034#\301?\201&2> \'\314>S\264\214?h\003\326?h\\ ?\3225\303>g\272\267>w\326\260?\321#\022\2777\033\323\2765\0078?\302\275\356?$%\021?\260T\013\277\320O\257?\243w\324?\335\230*?/\242\021\277\353\270\266?\342\\\253?\n\241s\276\231F\273\276;\373&@\017\320\331?\363>\326\276V-\005\277pCT?m\375\302?\212?\032\277\022\330\004\277\220i(@o\364\343?\264v\243\276x\267\352\276\225>\005@\367;\306? |\340>+2\"?\346\000\006?\335z\377?^\367\226\276\n\327\343>s\200\376?\002J\241?h\257Z?\246\266\364>\226\234\031@\2661\242?\203\244\257>(\364\312>g\3615@/\277\257?\0007\273\276\275r\335\276:\243\n@\211\317\275?\233s\350\276\344\024\025?s\263\342?\322\216\251?\210f6\277d\222\331\276\231\323\316??\253\326?\211(\376>\020>,\277\'\266\177?\226\005\227?[A\303>\371K#\277\031\2657@/\244\225?;\373\342\276\333\375:\276\2613-@b\363\267?Q\366\022\277?\036\002?\317F\010@\360\246\277?\322\343\367\275Kr\010?|(\341?\341\231\346?\347\253\030\277\376\360\343>\034A\222?\252F\275?\257@,\277\371N\204\276\207\232\031@q\002\353?\372E\201>\234\246\277>7\2462@\354\211\366?\367 \204\274W\261\220\276\356j\376?V\232\240?j\242\217>\305X\256>\010[\234?\013\r\224?\355\266\017\277\005\250\001?\221\326,?vR\001@\017+\\\275}A\213=\200\346\273?\217\376\273?\\sG=5]\017=G\352\330?\270!\324?\032\027\236\276\031\307\024?\0133\265?\205\"\313?\013\360\265\276\234l\017\277tx%?\001\337\335?\323\336\340\274\313L\t>\270\366$@{L\334?\255\370\256\276\035>Y>\200`\037@q\222\322?\222t\035\277\240\244\030\277\207\200\240>\305\254\327?\202p\215\276\034\352G>\001\222*@y \260?\317\367\203\276q\344\341\276\r\265\'@\r\031\273?\234\336\315\276\257\224\325>\374m\030@\227\220\237?-\231/?\327h\005\277F\261\375?\336r\257?\223WW>\262\235\317\275\3669\302?Y\337\266?|\231\250>n\303\200>\270P\306>s\327\340?!Z\037?W#\013?1\271\334>N\013\272?\254X<\277\211\266\213>\256\022w?\347\306\324?6\222\234\276\246\326K\276\177\313\262?\275\254\277?Q\210\250>)_\034?1\352\206?\010\221\322?\004\217\227\276kF\006?\033\242\273?\251\276\351?\350L\322>|E7\274\276\352\362>\233\034\236?\205\266\374\276\352y\217\276\203]s>/1\330?d\316\323\275\343\030\211\276m\373\026@\351\231\274?\000p\244>\013\357\342>X&\270?\"\031\322?g\357\244\276\332\003\245>J\337\332?\272\243\245?\267\r3\276E/\027\277C\343\263?\235\021\311?wH\261=\267\267\273=\344\341\372?\235\204\007@\252\2650=d[\256>\3601\"@\351\200\316?\250\250z\2760I\355\276\244\344\224?\024\315\277?\206\343\371\275\022\021\226\276\304~\354?\022\331\267?\r9\276\2763\336\326\274T\226\241?\025t\353?\334\3262\277W\'+?`*\010@\364j\330?xc\301\275B_*\276!:\213?\362\010\372?\321 \205=\246`M>\tU\313?\037e\300?\244\251\016\2776\037\227>\276\275\001@\246\013\345?\367\257\344>?\250\027?\207q*?\233p\351?\334\177\274>\213\030*?\204A\025@+\206\305?\267\t/?\347\373\331>\271\241b?ur\360?\331\352R>\311\254^\274i#\306?\001\030\275?F&\000><\206\207\276\033M\321>\005\371\331?\306\340\t\277\311\253S>\330?\026@\322S\264?\376\3244\277\2446\021\276nh\t@\351\327\302?\242\267\370=4\325\263>\021\331\270?\254\214\314?\214H\224\274\301\304\227>\263F\230?f\301\274?\204e\254=\3269\206\275\305\0178?\242\264\241?Id\267>jm\"\277\203W\222?\224\300\272?,H\013\277\376d\214\276\273\003\303?M\201\320?\341)8\277/R8\276\374X8?\324\362\327? \014\304>\260\312\t?\276.\034@\206\037\356?r\341\200>0\201\303\276\205\245L?7\000\265?\324I\266\2731\226\351\274\303b)@\247;\311?K;1?\252\323\031\277\230\314\227?\366{\326?\034\261\"?wi\313\276\204\216.@\206\000\322?\013\356\257\276\n\023\236>G\232;@\240\026\325?O\010-\276L8\354>\267\303\r@\275\342\235?\234\333\024\277\246\017\235\276\355\234\200?\004\307\257?U\207l>\313g\371>\342k\032@V\322\324?\267\266p<\1772*\277\376\342\243>6<\275?\343\030\241>aob\275\275\335\031@b/\324?e9\311=\235\202\304>\241\376\000@Q\022\260?\t\304\037\277\307\275)?l\272T?\313\205\330?\302\243!?\323\301\242\276\372)\030@Mf\340?\202s\366\276\013\013\266>\025h\026@\016O\265?\351\231.\277L\374\321\275\335\020~>\3746\242?\232}J\2778\367\017?\031\334\333?\275\213\311?%\2609\275\330f\027\277\314\016\236?\226\227\254?Z,E>\271l\020\277\326\023\270?\275\217\325?x\324\340\276\322r\240<#$d?>A\334?\305\034\004=\026\027G\275+\002\374?\255\212\262?Z*o>\266\203\r\277\351O\311?\001\367\330?\325\221/?>x\315>\307\3215?\271\246\340?e\216\005?/\206\322=\207C\224?\341\357\325?\277\236_>\206\216\315>\215\375\263>\206\257\345?\330-\026?EH\t?\210\t\177>\366]\305?\266\370\204\276M\021\250>\022\306<@\340L\270?\346\311\345>6\311o>\340Z\013?d\317\300?\035\313\013>\321\353\327\276$\277\010@J^\241?_\013\026?\375\207<\277K\204_?h\316\272?Y\367\033?7\000\243>\260\247\032?^\273\310?\027,\245\276\005\373+\277\237\357\026@S\316\351?\212\255 <u\256H>\353\265\255?\352?\247?y\346\245\276\024_!?\314x\312?N&\274?&\341\202\276%\0030>G\216\210?\026\207\263?)\353K\277QO/\277\327\265\361?\215\200\266?L\032\233\2766X\370>\333K4@\263\\\302?\316S]=h\313\211>(\321\003?\335^\322?D\371\302\276_\267\350\276\310\336.@\211E\332?\225\r\013?8\274\020>\244\016\014?\232|\301?\372\016\236>\246_\362\276\"\0132?\036\244\377?\271\374\317>\'\302\236\276\310z\220?\257{\305?\214\271/?\2340a\275\355\237\r@`x\277?\245L2\277s\203!=C\240\270?\007\353\305?\326\340\001\277\177O\010\277y\351/@\366\357\274?\274\261\340\275\273\325\353>\004E-@\337o\274?\013\t8\276\236\321\026\277s<h?+\023\302?\013\177\002?6x\377\276 \335\002?\324\356\303?\026\372\300=(~|\276-\226.@r\340\317?\246\016\016\277\212\343\330>mJ\'@y#\367?j1\230>\034_\223\276.\225;@D\277\304?\211\014\033>\371\330]>\373\2478@\200J\321?\t\337\037?\262\361\310\276\264\244\234?Z\234\271?\215\234\r\277|e\246\276\3071\347?\177\274\315?d\222\021=Ae\214\276-\221+@\216\225\324?X\342\241\276a\210\334\276\253\037X?\256G\307?\225\362\302\276\256\234\365>2\243\r?\232%\257?N\014\035?\030\231\200<\300s=@\216\037\312?\235d\343>^/5?\n\337\250?\003\321\313?T\035\212\276\205\007\225>\236\217d?\006\363\307?J\354\n>\336>\253\274G\003\"@{1\272?\340-,?0\365\363\276gh\034@\272\333\257?\371\0171?\356\355V=.\030\311?c|\306?\341Dt\274\313\275\010\277H\364\227?m\220\317?7\340\333>\277\363\263\276\207\2621@\364\373\376?Y\242\363\2767q\232\276\367h\251?Z\361\305?=\322\010\277\002\3630?\374f\324>\314\'\301?N\321\301\276\237 a>\034m4@\376\355\312?\2757\2066/\026&>B\217@@\362A\227?\376\016\375\276\211)\361=\227\r\313?\'\207\305?\242\266\265\276\3327\003?#\242\222?>\256\003@_\014\345\274\200\271\266>\303\214\177?$\014\305?\345\014E\276\037\367\255\275el\001?\314&\304?\232\t&?`\224\300\275b\375\005@N\324\232?\201\"\006\277~\001!\277\272\357\r?\014\316\264?\032\367f=y\257J\276\263\033\355?\002\327\341?\006\0173>\300\262\026?\005G9@\\\005\263?F\n\375\276\'M\343>\250R\303?\354\025\346?}w\037?|C\341>\273\374\371?0\201\313?\320\325\256\276\267_\226>\205\340n?<K\326?\314\230\002=r\214\234\276\027\350\266?N\234\334?\374p\240\276\205\354\374\275\370\202\373?~\000\304?s\235\206\276\002\235\361\276s9\000?\020A\323?+\211\254\276\200F\t\276ETK?\260\216\271?\276\210\036\277\337P\370\276\351l\205?\312\341\265?\331?\'\277\311\3072?\361\305\317?\030\230\307?\373\346\276\275 z\262=F\254\252>\020t\320?#\206\275=\261\335\245>\267\236A@\330\014\260?\007z\210\276\267\230\007\277\027{\224?<\022\253?,D\277\276jm\022\277\352<\006@\021\030\347?`#\271>.\036\306>DH\372?\355\363\350?=,\364=\304\3527\277\202L\330?oG\264?\225\265M\276E\023\004\277n\027\222>\000s\315?\364\213B?\033\022\017\277AiG?<\366\315?\261\335\245\276kaV\275 \2627@\257Z\261?K\254\020\277v\337!\276\243-#@7\303\257?\3707h=\345E\246\276\027\310\262>p\225\002@wIL>\342\352@?\203\036\325>\304{\350?\350\275\261>\331\223\250\276\367\373\314?\221\360\267?\254\035\r?\326\002\017?\375s5@\237u\325?\303\r0\277D1\r\277\376\324\\?\215c\250?\316\303\211\275B\261\325\275\004\230 @\332\347\335?|H\230\275\037H\002\277,LZ>\306\370\332?\242z\363>\366{b=\344\003\"@\033\202\271?\212v\365>\204d\261\276\232(1?_\230\334?\322S\274>\2762o=-_\036@U\332\354?\2200\374>\340\273\001\277\350\353G?\027.\317?\334\241\341\274-]\241=\307y\021@\342\220\303?O\005\014>KV%\276\316R\026?\270u\315?\010\345\315\276\323k\003?o/(@\241\274\325?}\t\235>\003\316\322\276\262P\004@\274\007\240?\252Di\276+\027\352\276\371q*?\221`\270?\322o\007\277\326\034`\276+\274 ?\017\177\343?\273D\225\276\360\304\254\276\004\237<?\346#\235?\030|\032<6=0?\304P\356?\013\270\323?\377\352\271>\021\340d>\021\316\302?d\347\345?\3025\027?\305V\220=\353\305\230>\345\200\317?-\227\215<X\251 >E?\001@\016\371\233?\030z\020?c\271\335\276\311\033\315?P\377\333?TT\255\276\277\267\025?O\010\334?\266\206\334?\270Y\014\276\242\360Y>\nk\246>:v\332?\322o\037\275\302j,>\005\353\031@\376C\376?\251\023\230\276\002*l\2766\330\026?\374r\316?\271\032\025\277\344I\006\277\035\366\214?z9\252?\230\370;\277.\344Q>\022\206=@\305\002\303?\316\372\264=W\"\370\276@\"\366?\214j\237?=\235\243\276\007b\271=\344\344\360?\3706\247?\010\255\267\276Y\370\272>\222\376\023?g\357\300?\2613\325>\036\214\340\276j$\r@\351~\314?\212\222\310>C\003\261\273s\222\241?\207\250\324?&\3108?\230\244.\277\0027u?:\225\352?z\2458?\250\377\314\275mq;@\246\272\274?Y\333\004\276\361c\014\275\253\350\233?AH\310?\027\020\312\276V\325{\276\244\344!?}\257\377?\204-\026>\r\252)?\022\203\021@\345D\277?7\302\352\276z9\314\275\227\367\223?/\026\336?W\265\254>\3440\014?*\205\016@\006e\306?E\237\017\276\r\344\231\276\201\362?@L\306\225?cB\264>\304\320\352<\013\304I?\027\267\361?\017\270^\276\353\304e<\227\1778@\373\007\263?\320\357#?\264s\362>\303\"\212?\320\235\310?}>\272\2762\345\303<\2069\006@\016f\273?\346X\036=_\270\263\276\037P\311?B!\326?r\370\244>`\000\351\276\020o\356?\204\233\362?\2136G=\000:\254\276\014Y\241?\310\320\331?|\017C?\265\302\364=v\302\033?\252\362\277?\205\316+\275\355\236\364\276\352\274l?\236\352\332?\337\277\221\276/\301)\277H \271>eo\303?\300\354\376\275A\233\014?O\336\273?\014w\300?q9\"\277r\244\223\276\32622?+2\356?\231\272\027?-\356\377\275Y\226\273?{\241\354?\345\230\010\277\377^&?\035\022-@\364\302\307?\310\006.\277\335\356\305\275\355;\310?\300\222\265?\347\344%\276[\265+\277\026\274\355>9b\207?\247;\023\277\211~->\303\332\023?\231\364\303?\031\034\255\276\024\\\004?d4\020@\336\036\264?.<\317\275\235-\250\276\263\010\315>\372\231\324?\213\030\032?Ii\366\275iV\266?\n\237\327?\334\363\034?\tqu\276b\013J?\245h\325?S\316\247>\312Q\000<\366r @\203\366\266?,\014\031?\34380=\361\001(@(F\242?\363v\224>~\217J>\033fT?\254\036\344?k\360\276<\356@\265\276\205\367\301?\t\033\354?\2608$?\251\302\377\275\237\250\263?\367\002\303?\225\271)>\006\234\215\276\td9@\215\322\347?\266.\265\276\316\210\036?\370\273\\>!\351\265?\271\212\305\275\245N\260>\362\332\007@KX\263?\037\235\036?E\362\025=v,\330>\372}\351?\311\3109>\026l\363\276\273\302\017@\220\333\361?\006\236\233>F\227w>O5\304?\227u\341?F\315G\277YQ\037?h\003/@\2759\274?\341\356,\276\177\245\223>\330?\026@\343\032\271?\021\343\r?\\t\342>tnT?\356\257\340?\230\300\205\276\305\377\255>\240)2@\023D\010@m\034\241>\247\0048\277\366@\347?k\273\327?\372&\255>\334\203\340\276\201\325\005@i\304\332?K\037\262>d\351\203>1\253\240?\006\364\360?\330f\253>,\323\017\276\235\321\037?c&\235?{\244\021\277\231d\214>+`\252? \317\270?\370UI>\306\334\031\277\022\036\006@\375\275\304?\2653\014\277\034\354=\276\277,L?\255\247\244?B\226E=\365\2023\277>\304t?\005\027\307?\306P~\276\316o\230:\250r\220?\363\034\265?\024\321\027?\003B\263\276\240C\222?\227:\220?\217\376\277>\264>)?e\317\324>v\032\313?\3603\206\276\265\251z=\337 \343?Yl\325?\255/b>\001h\004>\231:b?dv\252?t\266\004\277\032k\'?x\001 ?\006h\307??W;\276\227\001\'>}\031\003@\2244\315?!\001s\276\251i\307>\322\331\010@y\037\265?\000<\016\277\237\224\001?\254\226\025@O?\306?\207\300!>!t$\277\007\371\365?\203\366\254?C:\374=\226\313\366\276~G\026?R\361\241?1\315(\277\271\374\347>\274\0367@\301\306\323?\317\204&\275\212\217\367>-\345\251>\261\207\244?\233T\344\276\201%\017\277\320\324\033@V\360\271? \3245\277S\351\247\274M_\370?O\226\270?p\266I>S=\311>E\240\032?\223\377\241?\251JK>\271T\345>Wz!@\202\311\331?\357qV\276\3600\315>\313t\344?\344\201\340?\304\006\253>\331\261\251\276\276\333\014@N\235\323?\025\213\277\276\241H\267\276\t#L?\024=\354?\305\214P\276\317H\354>V\010\001@\021m\337?4\275\354>\030\353\363\2768\232\336?` \320?\302\366\363\276\370\374\360\276\010f_?\003\"\316?\024\352\371>\360\367\243>\371z\270?\365\332\354?\262F-?\200\362\003\2776\230\253?\264\255\232?b\333\022\277\377\004\027=\240z\342>I\017\327?\311\004\254>\260\345\255>\036\3678@\221\325\305?\225F(?\\\312\371\275`?7?\275\254\317?\305\310\322\275\320+\206>\336\366z?2\351\275?)\222\357=\260\034a>\332\2147@\301\343\263?\010v\334>) \335\276\037\346\355?\n\275\252?\033\326\364>HS\305>\251\346\340>\360\026\256?*\310\007\277,(\204>\016\n\020?$\013\346?\201A\202>\233\217\323\276@c\263?\033\016\243?\342\257\371\276\300< \277\336o+@\215\016\242?9\013\033>H\247>>\026\314\254?\326T\274?iT\310>\340J6\276g\310$@\227\255\253?m\347\033>l{;<md5@\266\235\242?ff\376>\021o\235<R\223\310?\002\365\350?n\276\021\277\211\353\000\277\032>\270? _\364?M\366\267>\360m\372\276@\223\255?U\300\333?\246\016&\277\3438`\276\24289@\303a\341?(-L?\"\246\004>\375\0316@\307\022\342?\256c\344\276\034\266\235\276\227|^?\275\375\353?\342w\223\275\331\264\222=\254i\304?\375\205\302?g\233\323>r7H>\240\265\227?@3\276?C\313\332=<\242\222>\352\254\034@\321 \303?\356%\345>\365\364\211>\312\310\017@(\266\304?\006H\004\276\241G\264>IG\364?\357p\327?\007$\221\276\377\221\351\272$7(@0c\270?^L\017\277Pq\224>s)6@\240\244\300?#\242\370>\365H\303>_H~?\014[\271?2\344<\277.\307k=$\244\242?\3227\004@\331\355\263\276\200~\277=\r9\007@\262\020\253?\373\352.\277oE\272\276%\230\313?#g\275?\315\220\242\276z\342\251>\241?/@f\243\227?PT\246>\036\026\262\276 \340\212>\201&\274?@h\355>\004\257\"?\026%\036@G\217\243?G9\030?\352#0\277C>\000@\201?\276?\264\254\323>\376\266\033?2V9@|\236\273?\213m\362\276\340\330\223>b\0103@\002b\312?\301\311\n\277\341C\035?\206\013\022@.\221\253?B@\036\276R\200\350\275Y~\001@\032\032\305?\200\272\001\274\354j\222=\301\3477@k\325\310?\307\273\023\277{3*?\271].?\377z\371?\202\342\207>3\243\217\276\317T\221?80\305?\342\345\361>\265\212\306>\240!J?a\032\202?\277\272*\277[B\216\276\205\177\000@U\367\330?n\2114\277\230h\340\276:\275\201>[]\324?\204\235\032\277\324_\337\276g\265\310>\365\364\255?|(\321\273\367v\253>\253D\234>\2615\263?\300\223\366=\342>\222\275\361\3343@9*\325?\301\304\007\277k\357\323>L1L?\373\036\263?\2511\031\277\235I{>\0269\235?\265\246\355?nlF>\034\3202?\'\212\014@\275q\236?\350\301\215>\372B\010=-\2027@\361J\266?\005\207\003?/\370\244\276}\301t?\324~\323?\345\263(?\215\325\236\276C\nX?\373s\301?\302\374\365=\271r\216>\243\014P?HR\002@\201\ng>L\3776?\350a\335?\036\371\271?4\203x<\373\221R\276\367\001\027@S\004\300?\0160\203\276\257>\326\276t\362}>\337\211\317?\327/\020\277\235\364><\327\0360?X<\343?\024\227\303\275\2239\276\2766_\006@xa\253?\3121\331=\315\315\027>]m&@\3538\314?\244\305\221>\316\210R<\275V:@\222\222\244?\236\262\232\274\375K\"\2778\276\314?&\033\335?\024\316.\276\374p\360>\230\351\205?N&\000@0\023\005=\314&8?\372\234\366?\"\033\306?~s\247>Q\370\014?\'\225~?\302\331\271?\202\032\306\276\251\211\002\277c\246\225?\322\254\366?\000T\321=\301\311\376\276\254(,@\322o\343?[\006|>t}_\276HK\001@fL\255?XT(?\344\330\312>\276\325\036@\303\200\313?E\362\025\277\260\347\253\276\003\"\214>\220\025\352?\216\315\256=_\007\356\276Y\002\206?\246\320\317?\336\215U\276\032QZ<\261\256p>x~\313?\226\222\025\276d\347\235>mM\330?W\006\373?_\010\321>q\215\337\276ip\305?p\317\315?\236\226\027\277\221\232&?R\3008@\211a\275?r\303\357\275\027\267\321:bB\t?oI\302?\375\244\"\277\242}l=E\274\261?\315\256\247?\330\3622\277p$\220>\222\376\343?)\004\366?e\375\266>LT\257\276\341mH?y\346\273?\262\325\215>\247\256 \2775d\217?\0265\276?*88\277\206Y\210\275\215h\214?f\334\246?\355\203\264\276\305\343\"\277\023\210\201?\335\226\304?(\232\207\275\3224\350\276\351K\200?\253\347\332?L\031\014\277)Y\022?.\032R>\240Q\262?rO\217>\367\000\355\276\351\370k?G\222\276?O]\321>=\266\355\276\027n_?_\317\343?\326\310\366>7\034\n?\333\232\340?U\024\221?\200\231\017\277\236\263\305\275\315L\034@\231\200\301?\377\350\007?t\007\301>\336\201\360?\212v\305?\242\r\240\275p\"z\274Zxl?\206\035\324?\232>\017\277\211\n\325\276\343\'\260?8\364\272?\267\270\206=OZ\200>\332sy?7Q\231?\203\373A\276\272\202\225>\n:\256?\240\027\000@\217\033\236>g(\356<\332\212\366?\231+\305?\211~-\277W[\241>\354S\035@\000\311\316?\323L/\277\263\264\363\275\007\340\364??\307\265?\024y2\276\247\317\036\277^\232o?x(\356?\312\2502\277U4V\275\n\355\260?\231c\311?\035U)?\345*\"?\231\0309@\031\003\333?X\034\356\275t\r\027?7\0238@\212\217\277?\231\201\262>\320`\253>\325\003\014@\014W\357?\260<\250=\262\236*\277\205\313\245?\021W\260?\265k2\276\313e\213\276)-\354?Z\203\275?\251\333\001?\006\273\035?\202\0349@\022M\302?\307g\222\276\250\303\312\276\270\340*@\317J\334?\t\306\351\276\322\215\034?)M4?\222?\274?\023*0\277\325\320\346=\000\372\020@\3647\331?F_A\277\357\221}>3\234\021@\034{\314?\212\3512\276QM)\276\357\"\013@\034\263\314?\330\363\265\274\231\267\352=p\253$@\321@\242?\242]\335\276\245\365\367\276\254\225\324?\304\354\247?\244Q5\277\3541\221\273\370\274\003@e\246\350?\025\220\316\276\241\273\224>\322\201\230?\347\250\317?9\271\003?\276k\320>\003D6@*\034\331?\032\211,\277e\213\024?-?5@\265\212\254?\324\321\201\276k\267\001?C0\250>\317\024\362?p\322T>l\004.?=\317\310?\226!\300?\020\225&?]\341\r>\341\340\321?V\322\336?>&\362\275\255\243\352=\230\363\303?\332\346\252?\000\377$\276\003^\016\277YF\010@\377\317\311?\204)\036\277)^!\277\227+\217?\341y\241?\271o\365\276:\226w=7V\005?\273B\345?\306\244\237=\217\035\024\275zi\361?\327\300\240?;\031\020\277\212\"\000\277\313\375\030?z7\244?qVT>\033h\n\277\345n\362?c&\323?\223\001\020\277\230\212\r<\034L\t?\247<\246?\357\2177\277\220\241\253\276\230\215\321?\323\371\356?\371\204l\275\273\200\023?+\221Z>{\371\271?\334/\237=\031\347\227>\274\343\277?\201w\306?3S\026\277\324\327\223=T\373\035?\250\251\323?s\235\006\275x\354\'\277\030w\013?\356\350\323?\226=\025\277v51\277\337\241.@\367\350\273?8\365\231>\242`\206=\201\205\302>\343\211\272?\006\330G>\245\363\201>\377]+?\017\321\274?A\201\027\277\215%\314\276\276PT?]j\366?\333\026E>)\262\226\275\310\2177@{\276\370?b.)=\026\333\334\276\351q\301?4.\276?f\275\230>\0325o\276\364\243\374?\201\320\222?4\271\370>2\003\025\276\300\232^?\225\265\361?\240\246V\276U\205*?\203\331\023@\306\304\276?\222%\363<\202\003\232>\204\323\026?0\325\260?\254\3438=\210\276{\276\270l\334?\n\205\336?E\021:?8IC>\355+\263?r\370\352?\225\020\010?\362_P\276\344s\036@\247\312\301?z\214\262\276i\345\006?*\247\255?\223\310\274?=e\325\276\002K\326>\\\n\224?H\303\257?\344M~=s\275\345>\222\2411@5\321\265?e\216e>\"\372E\276$J)@\321v\266?\326R`\276F\315\027=\033,4?\312\245\257?\24461\277\324,P\276w\320\317?\223\376\274?E\200\303\276\360\245\000\276\326\014\347?<\276\265?\303\233U>\331\n\n>\022\364$?\213\335\312?\027\021\345>)_,?X\274\262?\335\013\320?\374\035.?\334\362\r?\2279*@q \316?:\006\214>\007\266\372\276b\373\214?\250\213\304?\21784>\315u\332\275\214~\225?f\022\301?\020\313&\275\340\200\226>S!\320?>x\357?v\337!?UM\240\276\356\023\342?\003\357\306?J\262n>\275r\375\276\234\243\304?h#\323?\270=\241\276>\226^>q\006\214?\232\314\246?>\004%>\005\032\274\276?\355\020@\027\273\337?$\234\032\277c\324%?\237e\036@\221*\276?\331#\274>\030&\223=\3024\277?DQ\322?!:\004=\222!W\276\274-\357?\177\245\267?W\230n\276\n\274\333\276\032\2365@\352\227\326?f\333)?#\333Y\276Y\\\354?\300\006\270?\276g\314>\330\177\t?:P\213?\245.\271?CS\032\277x^&?\273\032>@\212 \322?\324,0?\226\317R>\375\013\005?\350/\330?H\025\255\276\036\030\010\277d2>?\037+\260?\243V\230=\2346S\276\362\374\237?28\214?\030z\004=\036\207\361\276\217\001\234>\001\030\341?\234\305K=\276J\016?t\353\340?\217\373\274?/\341P=^.\026?kN\001@\237\216\363?&\001\312\276\245\026\312<\310\210\304?\327P\330?/\372\222\276]\032/?\223\266\215?\262\270\353?\205\\i\275O\\\036\277\326\210\215><\275\324?\007y\r?\347\3739\276\202~\000@\r\247\322?E\325\017\277\364\300\013\277\203\r\241?R\325\274??T\202>\037\333\002\277\320j\376?\217\211\246?\330\201K?l\264<>=\236\242?<\330\316?1y\263\276\326\305}>\204]4@\353\001\271?\360\025\335;\363\215\350>OP0@\221\267\322?X8\301>\225\014 \277\355\303x?\253\313\335?\246\'\034?\213n\035\2760\r\007?\'j\307?\007\360\336>\362\262\326\276\334\326(@?p\275?:\315\332\276g\236$?\244\260\020@\206\220\227?\352z\302=\036\212\222\276\320\265\030@\007\352\264?m\346@?}\221\200\276Z\347:@\256\363\313?776>\302K ?\244S\003@\004\253\226?\334\236H\277\243@\037\275\277(\223?\376D\313?\360\332\315>\204\326\343>=\370\324?\031\215\300?\343\033\n=I\236\373>\215`\215?\033b\322?T\306\377\275P\376\026\277p\331\t@\270x\270?3NS>s\325\304\276\205\002\333>\036\247\344?\t\026\007<hx\203\276\264[2@\024\257\344?*\247\345\276\221\270\367>7\252\252?\023\322\350?\014w\306>=c\027\277-;M?\226\230\317?\214g\260\276\023\201\212\276e\326\t@\246\271\331?a\245\036?\276\274\340>\347\034;@\r\035\331?\235\022,\277\231E\210\276`\\ @rl\261?k})\277\371M\271>\r\322\017@\024\"\310?\244\340Y\276\340\367\347\276t%\250?\024\262\213?\227o\325\276\322s\373>F>\220?\363:\256?\020\3141>\206\256,?ed6?7\305\255?\223\030\204\275\0265\330\276C\370\277?\235\235\352? `\375\276\350j\013>\204\224+@;V\313?\355F#?\246c\216=Fq\200>7o\260?\306\213\355>)\317\274;\325\037\013@\223\344\271?w\025\322\276.\0001\277\020L\354?*6\004@o~\203>\356\226\224>v^\355?\207\247\267?\323\027\232>\335a\333\276yP\362?\025X\300?d\007\025<=\267\270>d\326\261>\025\251\360?<\242\372>R\3571\277\\:\314?\353\001\305?:v \276\355\016i\275\257\266\305>\244m\312?l\261\017?\2175\013\277ib9@\314\013\350?O=&\277#\203\364\276\207\024\003?m\000\324?\030\354\036?\323\243\031?vi\270?\277\265\243?\346Y\301>\333\0303\277-\260\303?\204F\306?\017\233\004?9\263\325>\254,\t@\250\254\354?\241\022\357\276^\325Y>\341\2071?D\242\312?^0\230>\211\226|\276LD\034@\217Q\312?&\212\240>>\007\026\275\326\3630@$d\354?\375I\034?L\213\n\276\rZ/@\273\'\277?-\005\214>\241\363\332>o\324\t@J%\324?P\373\005?\346\\\n\276,G5@Q\207\323?\221\321\031\277\3577\n>\321\243\004@b\330\305?\'\027/?\2609\237\276\200\214\203?\366\267\270?\360\302V>\274z)\277\377\210%@\013~\004@;\373\372>\306\337\032?\372o\223?\021\337\265?\267E\211\276\300\005\271=\230\264?@\274\257\262?\353\375v\276]7\255\276\\\327Y>`\312\350?\312\030\217>~\306!?\270\364N?\031\222\345?\2235:>\322\341\031?N !@J\265\317?\305\305\001\276\244\211G\276rb\275?-\355\274?\301\251\013\277DlP\276]\302\024@\3165\316?\265R\220\276\256J2>\243\023\r@(~\312?b\2039?\006\235 \277\360p4@\315s\336?\320\357\033?\221~\333>H\340\027@\3267\304?\350\336\007\277\010\224\r\275\025\023\205?\363U\330?y\2219\277\n\024\301\276\271(2@\202\221\323?\340\275\007?\365\203*\276\303\027\r@\'\335\314?\247\312g\276\322\302\225>\242\267\210>X\037\227?\246\014\374\275\204\234w<\022m,@\3021\271?\311\351;\277\303G\374\276\346\342\370?/\244\243?$\3574?\001\3661?6t%@\201y\276?\331\353\315\276\177\275\202=\230>\256?H\301\301?9\n\034\277\234\371e>\264\'\302?f\240\310?\303\270\363>\371\236\001>?\270\026@\324\231\233?\261\206\353=\256f\235=\372^\276?!\005\307?\021\251i\276\224O\277>4\0063@\372_\344?\202\254\337>\322\373\026\276{\370~?I\274\302?\256.7>\005\244!?\0323$@d[\332?N\016\277\275\030z\004?\220\322\016@\376F\203?tF\034?<KP\275\203i\020@\332 \257?\304\315\021?\007\007\333=\357M(@\263\232\226?\212;N>\216\2258?\010\002\260?\332\343\251?i\340G\276;\211\370\276\016\263\321>\340i\304?\246\326\353>\327h\371=E(\313?ir\365?\014x\231\275-\"\222>\037\350\300?\364m\277?S\256\360=\240k\237=m\270;@\321]\272?\365\021\370>l\351\241>\231U\370?\204\365\337?\213\372\214\276\000\001\027?\307X\235?m\250\324?\252\2364\277\331\321\370\276\357SB?E\r\342?;:\356\275\271\305L>\225\035/@%#\257?\301\031 \277\205\260\302\276\322\343\327?\036\300\304?\212\006\231>\222$0?5-\212?\352!\254?\014\037\035?t~J\275\302\345 ?\017\231\332?\3170\031\277\315vU\276#\276\037?\377u\262?\214\277!\277J\225\300\276\220\326\355>\014\255\264?\"\301D>\236\2644\277\005o\220>\033\021\310?{0\021\277\212t\367\276\326\024\355>\325!\355?\361\200\232\276-\356\377\276\330\362\202>+\335\341?\000\036\r\277e9\241>\264k\020@\267\267\311?\360\302\356>m\000\246>\214\206/?4\326\302?V\020s\276\311\312\177>\n\035\016?\021\342\206?\3232\036\277\264:\001?\213\212\264?D\372\361?\333\303\026?\273\266\267\274QF\025@\207\250\232?\246~\256> aH>C\t8@*\312\277?\355\017 \277\307g\026?\367\362\315?q \322?\334-%?,\233\211>\257\013\242?\037\204\304?\371\277\203\276\343\215\334\276p\331%@\331\264\262?|}\205>Sv\362>\355\013\212?\326\034\276?\277\013/?$Bc=\240\263\343?u\307\276?P\247,?;\032\317\276m(\347?\267\262\300?K\314\333>\222\347J\276S=+@\337\214\342?^J=\277r\245\276>\001&\010@\243\346\321?`w\002\277x\200\307=\353\260\257?\266\333\332?\000s\025?5\n)\276\r\274\365?Hk\344?I\274\204>V\0203>N\376D?\326\255\312?\332\216\r\277%w\024?\233g\002?\224k\320?\201\007\346\275\360\340\023?\277\3443@\r\245\340?\"8\006\277\017\356\036>\306\023\022@\224\336\335?\222$\260>\261\246\322=\263\037\n?d\007\311?~\251\037?F\261\024\277\\\201w?\336W\315?\352\316\203>\233\256\317\2769\216\217?m8\332?\371e\270\276\017d\235>\344p\n@x\234\250?~\033\342>\350\207\351\276\270\240X?a\245\300?\262/i>\027gL\276\210\360\020?@\241\330?-\263,?cB\020\277\353o\030@\252\017\316?\016\274\302\276iQ\177>m\373\n@!\257\247?\305\032n>py,<\227S\307?\324}\320?s\016\326>\203R\364\276\231|\254?wM\262?\237\311\276>O\345\354>\3217\272?\022\210\273?\r\253,?\373\005\223>\"\351\260?\034\264\347?G\223\213\274\377[\201\276\026E8@\351\201\335?\307\2759>L\373\026\277b\304\037@\031=\347?\335]7\277\346xE\276>m\026?\035\350\255?\364\213J?\357\035)\2770\254\343?#\366\327?\035;\270>\326\253\030? \217\206?A\237\242?\313\016\361<G\252\037\277\202\346\227?\352B\366?\3372\003?w\363\004\277a\325R?\037\235\314?\324_\177\276\331!\266\276[W\027@\'0\305?Wv\331\276*t\306>\275\0315?\3711\314?\360\245\310\276X9\264\274w,j?\013F\265?w\017\220>\361\204\256>S\201u?\247\222\313?e\245\271>\010\"\253=\031<1@\326\255\310?\t4\370\276\310\317\"\277\037L\346?<\332\274?\365/=\2777\213\027=\330\000\364?\351\357\311?\323\275\246>\371,\277\276\3055\323?\273\234\302?\204\3276\277\303\270\203\276\373\244\004?\001\210\263?\\\005\271\276\302\337\017?\017\224\264?_\226\304?m\034\311\276m\345\245<\227\325\005@P\213\353?\036O\013=\325\225O<\020c\375?eU\340?V\322Z\276\017\360D>\361\221\274?*S\246?\376\236\230\275\233\257\302\276\037\375\322?4g\273?n\304\273>\370\252\305>\206\270\330?\355f\326?c\267+?\326\001\310\276\272dQ>\370k\334?\034\322(?\005\334\017\2774T\273?\311r\302?S\261\r\277\363Y:\277=\340\310?_\323\267?\006h\233=\250\251\305\276\307\241\232?\323\026\303?\032\370!\276C=%\277*\016\311>\267\357\307?d]\234\276,\357*\276k\2155@b\276\324?\271\303&>(\357c>\020\0062?\337\303\251?xA\214\276\264\"\332>\272i\034@\224\300\304?\306\210\204\276\206\003\005?\376\3276@\314\355\330?y\345\352\276\226C\007\277s:\367?\350\275\337?\372\323\306\274\304#-?\210\341\337?\003B\323?\02215\2779\235\004\276Tr\003@\357p\331?\001io>\352\350\010\277aW2@\376\360\273?x\t6?\300\227B=\002\262\312?f\371\332?P\303\257\2762\000\034\277ZcP>\230\334\266?\002\361\242>\364O\020\277~\244\337?\346 \342?W?\336>\250\250\262\276\306 \266>\341A\243?I\020\316>\200\272\301=\037\216@?a7\304?\\X\267\274\255h\263\275\022\357\327?v\341\327?\207S.?#j\302\276\232P\032?\026\245\340?u\004\360>~8(\276q\3018@\306\337\314?\335\351.>\226\tO>H,\305?\024\260\361?\004\344\027?\307d\361\275\273hG?\037\200\336?\033\020%\277\334\235%?3y\032@$\325\345?\004Y??\037\021\037\277\'\206\214?\346\315\333?\231E\210\276m\035\010?+\372\004@\255\024\272?\255\370\246\275!\222\021\276zZ\275?\027d\333?\177\246\026?\314\355~>L\244)@=a\313?\371\236\005\277\324\234<\274\275g2@\336\004\277?\3227\271>\274\006}\276\034c^?\3577\336?\324\233!\2771x\004?\245\025\027?\343\342\234?\331#\224=\213Q\367=\301b\033@\214\365\273?\3023\321>A\357\205\276!\355\272>\341\265\347?\352\347m\276\332\306\'?\212\224\n@\227\033\212?\266\332\343\276\314\232X=\261\232\210?\307\270\302?\354\240\322>\312\213\204>\231\224\374?\361g\322?[\224-?J`\033\277\361Q4@\266G\325?\356]\303\275\274\317\271\276\250\005\023@c)\332?\273}\026\275\265\251\232\276\310\323\235?\237\312\343?@\3704\277\n\022[<#\334\356?\026l\307?\352\\\351>U2\300=3,\204?\364\301\266?\305\033-?\354\332>\276\216\226\254?\005\027\307?\213\3017\277n\023\326>\266\000\323?>\226\342?\2134\321=.\221\007\277K\271\243?\334I\344?C\305\270=\0322\n\277&e\210?\333\277\346?~\030\251>\031\252\n?v\001\030@\362\323\316?\335%1\276\377\256O;\0031\013@\002\237\303?U\242\344\276\303\327\217\276\342+\t@\334\363\264?L\034\371>\000\251\r\276\352\364\016?\350\023\275?\221\320\326=\332:\024\277v\226[?_D\235?\205y\017\277\000r2\276\315\335\210>RD\262?\213\374\222>\000\3063>\214\277a?\224i\262?*\031\260>\354K\006>\222\304\261?\352z\364?#.\000?\237s\307>\216a\367?\320\266\256?a\033\221=\255\023\'?\023\343\203?$\357\356?\350\023y>~s\017\277\036\213i?4\275\352?8g\334\276\217q\215>\301|\001@\322\304\243?\030z\244=\210\271\020\277\243\326\017@\004t\345?\202\255F?\350-\246\276\000\252=@A\323\372?\275\217\033\2777q\n?\214\037\021?\204\275\343?\306\340a>\376\234\002>\246&:@\247u\325?\026\374\326>\250\344\344>\267\272\207>s\242\233?\347\251\236>\243!\333>\\\213\016@-#\311?\345\263 ?73\322>\250\242e?\276\277\321?g\235\341\2767qR\276{=\'@\342\314\305?\016i$\2764-Q\2769K ?\363\257\275?:A{\276\306R$\275\221\025r>&\035\311?.\221\373\276u\000\204\275\271\330\017@\243<\243?\273\361\016>\227W&\277/o\026@m;\257?\302N\311>\247]\014=\214a\367?S\007\277?\213\373\013?\323\203\002>L\2474@\351\271\265?\350\300\022\277&\345n><\030\014@t~\324?\275\306\306>\256\362\324>\356\212v?7\377\375?\234\333\030\277\245\205K=\354x\274?\007\227\322?\302\210\215\276\316\376\250\276ts\016@\230\367\266?\343\306)\2776\352\271>}\251\013@\312\033\310?\355c5\277)\224\005?\256\246%@D\245\311?,f,?i\306\">\342\315\026@\361\274\272?\'\241D>,\201t>\177\250\271?t\t\275?\244\341\254>r\341`>s\270\006@o\275\276?\342\350\322\276\247#\210>\344I%@\177\242\266?\377\3135;I,\251\276\317!_>gC\300?\203NH\275\255\206\304\274N\256Z?\353\343\275?\267_\276\276\236%H<\006\334\336?\0008\264?w\274I<N\321Q\276\350\260\241?\227\217\306?\230\244\372\276\353\213\024\277IrO>@\302\322?\221\200Q>nQ\026?\021\275\274?\227\003\313?\322\3025\276\247\3462\275\300:\223>?\220\272?\231\274\025?5\361\256\276\351\250\221>\013\177\276?4\327\211\275\220\365\254>\270\310\261?\312\025\276?\023C2\275\242\r\220\276< -@3\210\347?\250\0352\277&\373G>\215\\\254?Uh\260?\020\037x>\207\301\314\276\036\231\010?\356%\305?~o\223\276\310\n\002\277\362<9?\226\226\231?!s\335\276\322\212_>\n\341\224?\264\224\342?\374\377\010\277J\354\232\2762\2764@\031\376\263?\230\243\257>\032\300\007?\322x\366?\234\374\332?\351\r??\263\262\245>\270\245&@\"9\307?\200\265\322\276\2507#<\002\313g?\224.\255?x)\305>\313i/?jE\364?l\354\270?0K+\277\301o3>\300\313\025@\257z\254?\254\032\204\274>\224\200>`A}?u\260\306?\"\337\245\2761\357)\277\207\253\016?\331_\002@ff&\277\367;\354>Q\304\367?\201Z\330?\036\032*\277A(\217=\370\212\033@j\302\252?a\2126?\332rn\276\244\366\325?a\376\334?\267}_>\357\256#\277\245N\272?b/\334?\004\345\276>\377\256+\277\352k?@\365\203\234?`Y\241\276\331$\037\276\342\323\010@|a\312?\r\027y=1?\007\277\261\032\037?\320\263\317?GZ:\276\317\244\305>\035b\005@s\236\313?L\306\031?|\325\312>\023!\017?t\357\261?jP\264\276\327\211\313=\217y\231?\244p\247?\305\255\242=\327\206\016?Su\227?\266\274\304?\354Pm\276\020\002\022>k\370\237?\3164\333?\337\032X\276\264\343\206<>\225K?Ie\330?!\255)?%\312\016>\373Y\374>\324d\304?\305=\026>P\217\r\277\347m\352?\215\233\362?e4*?\3061\252\276\365\270\245?\026\246\311?i\342\235=\221\321\361\276\234\354\274?\3501\360?\221\320\316>\307K\357\276\325\3319@\315\351\304?g\324L>\257\315\306\275\006*\347?\2027\350??S\257\276m\033\316>X\341\244?D4\372?mY\326>\214\024\332>\256\014\332>\346\317\371?\004\217\207>]\341\225\276/\003\260?\247\347\315?\2338)?C\343\t=H\022\361>\201\225\265?=+\201\276E\365v>MX\t?c\016\272?H2+\276D\340\360\276\362\273\254?\204f\355?\275\377\023?UQ\244\276;J4@\rm\330?\247u\363\276\246~\246\276m\013\013@dy\237?LT\317\276v\030#>\300\332\237>(\357\235?\351`=>\275\303\021?\315\035M?\000\304\331?\353R\203\276\2555\024=\214\266\243?c|\344?F\013\260\276K\345!\277\353f\270>L\373\326?\262\272\035?\266h\201\274\332O\225?\345\357\322?\0060%\275\242E\022\277x\277!@\360\030\274?g\234\016\277\264r?\276:\373\324>\304\261\250?\307\324\315\276\345\235\333\276\311+\324?\317\241\332?\243\345\200\276\310x\214>\210\020\227?\234O\337?\254\255\010\276\337p#?\261P\235?\255\023\315?\211\355\"\277\0013\017?,\3073@us\335?\253\005&>\321y-\276\242\233u?\036\027\277?_\013\002\277!\006\002\277\003rJ?\247%\260?\313\016\271\276Tp\240\276vk\210?\323\366\261?I\202(?\t\215\340=\350\311\217?\365i\321?>\256\001?rj\207=\351\263\344?k)\350?N\177\236\276\036R\034?\365&\257?\202\001\226?\013\320\256>\274\255\014\277f\025r?\022j\314?\356\3175\277V\231)\276\321\204\366?e\027\306?\277\014V>\265\336\267>y\361\314?\235/\310?\265lm\275\307\360\230\276lT\004@\331x\332?0h\005?\326\252\021\277\037;$@s\275\335?^\273\004?\241\366\363>2\037\232?|\326\303?\311\252H=~V%\277]\035\371?i:\303?c\270\"\277\322\253\201\276&\331\025@\232\322\306?Z\271\347\276\205^#?\373\241\327?\007#\262?\231\361\206\276}!\214\276w\370\340?4\236\222?VF\253\2761\006\216\276\030\002\345>\002d\270?\027\014\236>\377\257J>\274\344\003@By\343?B\224\'?\330}\013?\222\032\375?)\317\272?\257\261\253\275\234\243\016>\265I\036?\365\332\364?i\344\263\275%\314\224=\220\325\244?\247\223\342?Y\332\371>7pw>\337\217\031@\023\234\264?\213l\033?\272\333\025?\327\210\010@I\236\271?8\203?<\237\256\036?;\211\322?\365\204\247?c\010\200=\005\243\312\276k\2169@&Q\341?\350\300\212>|\230\275\274o\034\307?\203\023\365?\"pT>G\221\205>W\032\t@\217\000\250?\207\244\236>\203\210\024\275M\231\032@\327\337\334?\033f\034\277g\272\337>\330**@\265\247\246?i\375\355\275\210\240*>\rg\007@m\307\332?D\375N>\371fk>I 3?\313\020\277?\345\230\010\277\201\tl>N\227A?\005\246\253?B\316\243>1\226\261>\024\260\303?\355\r\340?N\267\324>\220Ja>\001L\033@7\026\264?\233\256\247\274\366D\357\276\266\310\324>\306\245\370?c\321d\276\2715\241>\027\211\212?\366\357\332?\375\203(\276\004\3478\277\327(>@\267b\301?\241\275*\277%\223\013\277\263_\261?\263\360\317?\263}\300\2762V\233<)\365\257?U\241\303?+\370m\275\206\256\214\276\013;\276?\241\327\261?\235\020\232\275\262\275v>\214\313\322>N\t\242?\204\324\t\277\326R\000\277\\\031\020@\264\252\255?G \002?I\242\027<7l\034@\320%\242?sd\305\276\217\033N>^\317e?\226=\373?[\356<>\2033\000\2773p4@(\n\270?D\334l\276\010Yf\276\027\313\324?\375\241\353?\332\000 \277\331`\321\276Z/\246>\347\001\312?G\347@\277\301\345\221>\351\253\016@2\002\001@\300\010\272\275bg\026?QO\354?\201{\246?\247\313\"?w\365\312\276\251\323W?\262e\251?=\201\030\277\022\275\014=%\332\305?\344\370\351?\236|z>\017\233\260>H\263\026@\232\'\353?\214\271\007?\226!N\275\205$\263?\222>\241?\237\221\220\276\033\022w\274\342\275\260?\235\324\333?O\350\025>\346\223\035? \350\r?\374\250\264?\t3E?D0\026?>Ft?\241\235\337?\271\031\216\276\266K\013\277\277\342\010@\037\240\301?\"\3725<\201{\"?\374}\225>E\273\334?\230\332\022\277\240\245\233\276\3769\020@\'\330\323?m\255\237\276\225b\207\2751\331\335?\2405\323?\327\024H\2756\311\003\277\364\253\314>\214\022\314?\004\251\244\276\211a\207>]i\264?W\350\007@|H\370>\366\267d>_b6@\347\342\317?|\321\"?\227\343\235>\356)\032@\036\373\257?\031\255#<\330\201s\276\0044\316>`\220\266?\035\307;\277\251M\234<\000S\216?\034\231\325?\214\370\002?(\231\024?\227Xe?p]\355? ^\327>\007D\210<(\202S?c\264\276?\270\003)\2775\324\250\275J\361\323?\303\021\330?\223\030\244\275\307\365\013\277\370\321\363?YP\356?\351&\271\276\362#\366>>\t\024@T7\223?\233W\031?\350\371\033?S\360\313?\003]\277?\346t9\277\317\365\031\277\016{B@\357t\253?\233\350\273>\217m\t>\314\303\325?5z\271?I\327l>\25106\276\3702\371>\364k\323?\256\360\326\276\203\333\272=\222\307\242?u\345\307?\377\006\345>F\231\305\276\353\300\036?G\003\322?NF\t?\341\n\030?\002\225\251?\001\247\265?0\332\003\277\314\267\366\276\275\230\336?\204\232\307?\203\247\010\277\327\244{>\252!\036@\364\341\233?\351`\325>\313\272o\276t\257\035@rO\321?\305r\253\275\371\236\271\276\222E\255>\313/\237?\037f\347\276\342\256.>\323X>@\3020\344?D\370W>\301\253e\276\235\205\t@\305\346\331?\230\2129\277\n\275\032\277*\000\220?\200\363\312?/n??\"\034\243\276\342\020\250?\006F\300?\307e\214>(\201\r>\030{\000@\277\'\344?Hj\001\277\261\340n>b\201\'@\351d\337?\245/\014\277mp\026\277Q\321\370?\037\332\273?\265\246\371<\303f\200<Cd5@\030w\004@\330\013\345\275bN \277\226T:?\2451\256?\177\372\037\276\316\335*?\023@\244?Z)\322?\362\354\302\276\220L7\276f-#@\r\302\242?:w\013\276\366a\t?\320z\241?iS\363?e\000X\276\211\'\233\276y\233\337?\207R\317?&\341\026?/\373\005>\352\341\033@\255h\241?|\r9?\235/\266>\020\n\345>\010\224\301?\227\343\375>\'\332\325=\257C\251?\313\331\253?\256~0?\237\315\332\276w\264#@\333\374\377?\272L\t?R\323\336>\311\177 @\035\221\307?\252+\037\274\200\234\000>\267\305\026@T\342\344?\"\247\003?\305\307+?8\003\006@\024{\250?\245\2755\277IG9?\312\330\215>\261\026\345?\343\246\306\276\232\006U\276*\032\265?D\371\350?WZ\026?\201\"V=\316\236\315?\334\233\271?\313g\231\276\231K\302\276\030\225\326?\320b\277?\206\215\002>\317k\254\275\211_}?8h\265?o\365\334\275\023\325\243>>\334\037@\205\264\264?\241\2765\276\320\233\372\276T[A?\263A\354?}\317H=z\336m\2763\2639?e\035\324?\223\033\025>5\227\033\276\244\006\346>\343l\346?\366A\216>\225\360\204;8\016/@\343\304\317?\022\2455\277IK\025>_\205:@OW\365?~\311F\274D\277\032\277\354\250\363?\326\035\275?sh\261=c\324\275>\365\346\013@\245\021\275?\237\351\021\277 \360\034\277\351\r\317>\261O\300?\352\223\304\276oG,\277u\216\366>\222\354\337?\334\3322\277\026\2423\276 5\262?6 \334?\205\316\037?B[\036\277\225\004b?\t\377\362?\214\274\234>2Y\344>(r\330?w,\316?Z\274\230=\016\243\024\277\307O\306>\006\201\000@,\361\230\276\217\336\020\276\354\254\351?H\211\355?\017\231\272>\t\211 ?\241\326\037@\304!\365?\325\224\304=\225+4?\256\266\360?\232\321\263?\\\034\021\277!\225R>\370X\321?M\366\351?p\3173>-\351\250\276j\005\344?A\232\271?\003\'[;L\034i>^\317(@o\366\333?\200\016\033\277\204a\260\276u\255=?\310$\241?\345A:?\"O\322\276\034\346\035@\356\225\245?3\305\014\276\231\233\017>w\254\266?!>\374?Z\270|\276\347\030(\277\000K\304?\nf\320?\337\250\365\276\245\335\034?\354\260%@\376\232\304?\212\257\206>(\267!\277\222V\341>\231E\316?\322\310\207=\231\362\231\276\221:\313?\356\007\354?\257Z\031>\032\244\014\277\r&.@\276\274\276?[\262\372\276O\313\367\276\314\242\036?`\256\315?\254\3429?(\236\323=\332\201\031@\375\241\271?\260v\324>\223n\'\277\256\357\362?\324\322\330?Nz\347>tD\216\276\232\"\024@\303\327\311?2\345\323>\203m\244=\343\2270@\326s\376?\265\301i\276\350\202\262\276\032\263\022@\323\372\305?\241,\274\275\205$\'\277b\342\001?5~\313?\351\267/\275+\277\030?\346\377\322?\272\275\312?\037\200\264>\326\252\235\275\241\210\350?\036\305\277?\350\210\224>\324\265\006\276\027\r @s\020\262?\325#\275\2765z\345\2761\021\340?\3579\352?F\266\213\276K\\\267>\241(\030@b\202\314?\355\272\033\277\022\241\251>[H\301?\237\314\273?s\204\314=Mi\t?A\021\200?s\205\261?\252-\215\276\322\253\301\275!\222\025@)\262\302?\004\254\235\276\341A+?\014\204\213>\344K\330?\334\364\277>\271l4\275\310X,@\320\232\333?=\363\032?\347\030 \277jag?o\240\372?V\266\347\276\256\ru>\274Dd?u\222\327?\237>\202>&W1<;;\005@<.\364?]\250\234\276\230\247\333\276M^^>Q\237\264?\220\366\217\276\314\265(?i$%@\300\350\232?\231F\333\276k\235\020\277\304\243\201?8\236\243?\363\314W\277;\340.?\245\351*@\310\355\265?\337\214\212>\355H\t? \235\303?\n\202\271?\303.\302>\345\362+\277\341\253\315?\301o\355?#\237\357>r\304\002?x\026??\275m\340?\303\r\260\276\321Y\246>\333<X?6\261\240?\372\317\016\277\2405\027?wd\305?fK\314?\343T\003\277\326\377\351>\335\241K?a\372\220?\210\271\324\276\022\025\252<\217\206\002@\325B\301?4\272\363>\311\005\'?\242;\302?0I\357?\277D\214\276\241e\345\276\272\260(@y\255\340?,\324\232<\342\310\203\275Q\301I?&\337\274?f3\007\277\rP:\276\345\240\317>\r\343\240?\025<\021?\206\313\242>\261G$@3\304\241?\233V\272>\035V\030?\317 ,@Ag\010@d\314\335\275\254\251\214\275b \275?\363\377\302?y\036\344\276\213\305\307\276\244q<@\002\330\330?\234\340\373\276U2\230\276xA\264?w\277\332?}\351\245\276x\361\376=\211\271=@\3122\226?M\332\324\276\373\005\273\275\337\\j?%\002\313?r\211c=\327\244\013\277\346\217\246>\334\021\302?\210\363\200>\321\315\036\277D\266\375>\205#\300?z8q\276\214\202\370\276u\200\312?|b\323?\267$\007?\276/\366\2767t\334?\322\304\245?W\'\237\276\006d/\277}\310\262?yZ\226?&\001j=\333\207\364\276q(\252?\032j\314?\025:?\277h\351\032?~\177<@?\214\252?VE\370\275|\361\031?\245:\017?\335\013\246?#\244^>\345\266\345\276Q\202\306?KX\325?C\343I=Y\301\317\276?\354;@*\345\333?\224\300v>\261\243\031?\005M/@\333j\306?kI\037?\326\000\245=\302J\212>+\372\303?\322\213j>\301:\256\276\264\010\001@\302k\243?\311\252D\277a\341d=j\347\025@}A\273?\036R<?2\350\004=\360\235m?\r3\330?\254\216\004?\244\251\022\277\207<5?K\005\303?\323h\212><\021\204>/H{?\023\235\327?|\267\r?7\304\200>\240\374\307?W\317\247?#0\326<G\001\262>[\256\267?\232\005\314?\267E\251>\267\014\220\276\307%&@\006\364\236?\034\353\"=\350\275Q>a\254\010@\243\004\351?\271\216)\277\271\250\366>:S\005@\225\177\265?eT\331=|\267\251>\340\317\265>\331\\\317?\312\026\005?Y\334\017\277\"}*@K\254\276?\252\232 ?n\300\003?\313t\370?\245L\312?\21341\275\261o\347>\251\327\274?\376\n\245?\374m+?\335\316\276\275\230E\206?\213\027\273?\337\342a\274\035X\032?\203\2162@\376\355\252?\026\277\361>x\016\365\276\032\246\206>Q\276\376?Zh\003?\235.\013=\243k\262?]O\372?<\301\006\277j\210z>\266i\n@h>\333?\251\2377\276\363X\003\276\010\312\317?\231e\277?\256F>\277\005\333\350\276\254G\032@Q\336\333?pB\351>\203\025\207=\020\211\236?Y2\275?\211\317\235\275\017`\221\276\274\273\214>d<\312?\233\347@?\0048\021\277Y\2754@\300\262\300?/\374\350>\037\016\362>\323\305\000@$\323\305?\246\230\'\277 \234\347>\275\250\025?\312\251\261?\202\312\330\275G:\003>\324\340\332?\2032\305?D\026\211\275\\\002\270\276>\214\345?F\\\234?\023\201\022?\375\273\022\277\321/\344?\247\317\312?\253y\022\277\355\270\351\276h\025\261?\033\017\270?\001\026\321>\366y\374\276b\376\265>\375-\301?\020y\017\277U\246\370\276,\242\335?Rd\361?\027b\205\276\350\370\270>\330\311\336?,\357\266?\316S5\277\236\322A\274 \322\233?\216?\333?\336\257\">\'\241\000\277\020\247>@\333\303\300?\307\236\365>\nM\342>b\3362?\017H\254?{\021M>\231\364\357\276)\315\350?\321\007\371?\311\"\305>\244\210(\277g\3131@\010s\245?A\270\022>\323i\005?D[t?\231e\273?\272\332\372>\334\366}=}\201\307?\210F\337?a\305\321>\205\230/\277\241N<?\305\253\306?\027+j>\373x4\277&\277\016?\274[\275?(\360\256=\376D\t\277?\271\033?{\207\267?k\203\243\276\021V\233\276a_\013@d\345\347?\236)\354>j\207O\2766\371\245?r\370\202?7n1>\334\022y=2g\257>J}\255?F^\326\273\366\266\351\276\264M3?\266\274\236?3\214;\27482\207\276Q\321\242?#\025\366?\341y\035?\323\025<>;\340\222?\201%\301?\346>i>Ve#?^\034\361?\013F\251?\307\023\371>?\037\245\276\223_@@\324+\331?\204\016:\274Gq\356\276\002\273\302>t%\270?\331\353}>\'l\277\274J\005\262?\013\r\366?\303(\370>FD-?\334+\017?^\325\317?L\374Q=`\346\273\275\201\314/@P\215\257?r\3046\277\355\2351?\217h=@\303+\365?\0013\247\276\313\3300\276\227\217\020?S=\333?\276\211\001\277:yA\276\3605\346?\263\357\320?\314\232\010\276\020\262\034>XeL?\2305\343?\021\252,\277\376\236\024?m\323\300?\306M\303?y\312\n?\213\373\257\276\304O\302?\350\025\351?\002\014K=d\007U=;:\276>\370\306\272?\253\351\032\277\253\355\236>\267\264\001@P\304\234?\206\310!?eT%\277&\'\275?\200(\342?\034\232\372>\230\247\343\2763\3340@\253\010\241?O\315\245\275=\234\000\275k[\024@\006-\274?\366{\212>m\216\353\276\033j\017?\007\266\314?\231\270\025?\276\275\033\276*5\254?k\020\264?p\265*\2778N\352\275<C\356?\200\322\274?I\362\264>\t5\273\2763\323\007?\312\335\335?\375\364\277=R(k\276A_\357?\007\355\243?\300\320\243\274\227\304\031=\014\326\366>F^\244?\344\330:=_\354)\277\267\037\225>U\277\316?\263\n\303\276\345bL=\377\264\266?\022\371\346?\346v\257\276\347o\242\275|WN?N{\310?\013A\316=\376\235\325\276C&\304?!!\302?n\247M>\246)\342\275\205f\366?\357\341\236?\306\246E>_B5>\321;/@\310z\346?v\033\274>\220/\221\276\316 }?D\030\357?\0216\274>\321[\234\276ge/@*\250\270?\203\210T\274\375\021&\276\242e\027@!\006\246?q\3106\277|*\247\274vaI? }\333?\252)\321>1\007\211>\226\'\265?x~\301?\014:Q\276\264r?\276\017-\273?6;\304?XT\314\276\215\226\223\276d\227 @Z\241\332?.\2521\277nR\361=\010\277\306?\006\363\335?I\203[\275\237V!\277\001\037\232?7\340\343?8,\215>X\216\350\276\207\203\365?\224\300\226?\201%\013?\343\374\225>EC\032@\325Y\333?dv\276\276\362^\005\277EZ\206?\273D\271?\341%$\277\354i\017\277\367V*@\'\240\271?\276P\300\273\230n\"\277\337\225\026@\r7\242?\r\2516\277\216\217\236>NI\353?\t\337\275?\202\002?>\030\'\036>\232\352\013@Z/\304?\232>\333\276\004<\211\276\204\006\016@\365+\235?\025\002\331=qv\233\276\177\030\250?\220\365\274?\232?\036\2772wm>\223Y\024?\207\303\304?\260X3\276q\033\305\276\004]\324?\254\221\265?Ow\356>\037e$?\021\0176@\304|\261?\265k\302<\002a\377\276\316J\017@\003\355\320?%>\013?\260\0002\277\373\004\n@J\225\330?wI\004\277Kw\327>\316\251\344>\3536\322?\2411#\276\222$\010\275\241\2447@\233q\264?O@;\277\r\372\372\276\023\235\335>\240\215\304?P\377\331<\251LQ>\340\353\'@V\203\274?u\001\317\276I\017s\276\277\224f>\335\232\350?\202\250{9o\233\361\2760\233 @\307I\265?m\001\251>\252\014\303\276\326\364\314?\347\307\305?!\313\026?\220\025\344>\364\347\222?\266\333\364?\321x2>F\230\242=\206\367J?\303\200\345?\203\210\024?\231K\272\276\363W\212?LS\330?7\340\323\276\200\200\001\277\242\353J?f\025\222?\232\260\235\275D\207\360>\315\251\231?\370\301\347?\232CR\276\243WC=\334~\300?\2179\315?\243\217\031>B&\031>\037\2725@\013_\315?31m>\215`\023\277 \321\312?&m\256?\342=\367\276$\362\355>Ka-@\365,\304?\267\266\020\276<1\353\275/\341>@\362\n\320?\260t\022\277\356\265\230\276\2731`?\337\026\316?p\316,?\241e\021?M\335\264?wJ\277?\037\016\322=\200b4>\262`\377?h\004\235?t@R=!#\020?\233\017\260?Ec\335?;4 ?L\340V>\372\221\257>8\367\311?>y\010>4\240n>\216|\271?\023F\311?x\321\327\276f\206M>\24029@\003\260\275?X\256\027\277\272\274\331=\256i\333?H\245\344?\206\003\301\275\304[+\277\317\376\036@\014\312\326?4\276\027?\016\331\370>4\263t?\252b\314?\301W\024?5\n\261\276\223\354g?6\260\313?\020y+\276\352=\205\276\207\260\032@\001\277\344?\350K\017\277qv\353>\243\341\031?\216\261\351?e\3730?\336:\023?\010\000\"@\205\260\254?\243\256\275\276\271\372!>\257%\350?\022L\245?\212\004\313\276\260\003\317\276t\\\227?<\027\260?\315V\336\274\305\376\202>/\024\034?\362A\335?\377%\351\275\343\343\363=K\211$@1\266\326?\222z\017=K<\024\277\315\321^?\364\250\304?\272\371\376\276V)%\277\326\331v?IK\317?A\357=\277\221\266\241>\274\270g?u\224\257?\211A@\276\206\311d\276\002\344\342?\017\230\261?\317\274 ?\0362A?\336<\006@F\320\320?]6z>\252-\225=\216\263\214?\213\212\242?\252\202!\277_@\007\277e\r\334?\267$\341?\375iC\276\217\377\202<\303\'\304?\305S\327?\317\273\t?(\235\330>\271\266q?:\\\247?\205\264\306\274#\276\253\276\226\206P?\013(\276?6Z6\277v\336\006\276\000\271N?\210\362\263?hv\345>g\272\227\276\320\362>@\344\327\335?\271\214\033\275_\267h\2760\361\014?\327\331\246?V\266+?\253\257\366\276e$M?p\315\301?\356\317E=\313\366\361\276\225\365\024@h\225\331?\363V\005?\330\177\035<\260\260\t@\331\230\315?R\322\263>\322\375l\276n\177\243>\341\225\272?I.\257>\007\226S>\024\006\351?\222\224\326?.\347\202\276\336 \332\274\177\2401@\261\246\320??n+?s\202\236>\001\263\210?\317\367\317?\317\276r\275:\313\364\276AO4@\367\221\307?\236~H?\227UX\273\365\005>@W\004\307?\243\217\271>\307\016\212\276\364\032\265?J\270\336?#\207\010?\247\316\023\277Z\254\302>Bv\310?t%2?\nL\'<d\305\001?\004\343\340?g\323\221\276$\'\303\276\354\3716?\201^\244?\204\363\r\277L\032\363\276m63@&\337\302?\277D\000?\320\'\022?\235\025\244>*\345\225?\270\005\323>\277\r\035?\025\371\372?\214\327\324?\353\035\036\276\nM\332\276w;\351?\323\243\303?\360\277%\276\333\211\322\276\247\2131@_y\362?+Q\366\276I,5?\210\354\020@Qf\347?\320\360\326>\320EC=\352k\000@\255\300\270?\n\242\216\276SY\334>\027\021e>\3745\327?\315\037\007\277\216\345\025?\351\225 @(\323\300?=\362+\277\267_\022?K\223\024@we\321?3\027\200\276\001\276\003?\256G\034@\265\243\252?\210\204\007?R\321\360\276 \212\371?\313\366\273?\242a\231>\235*\307\276/\t\343?qv\307?;\000\262>\342\002\320:\354\210*@\270t\272?\262\363:?\317\242\317>|v\200?N\t\262?\004\0034\277\355\273\202=qA\"@\to\257?\340.\373<(\364\n\277\324j;@}\347\243?\351`]\276\366\014\261>\341\224\006?\234\246\251?\241\276\001\277\0261\274\276\315#$@\322\035\324?\225c\006?\211\007\304\276MP\020@S\221\310??\375\347\276w\236\024?\036\3347@\261\300\303?\355\274\355>@\030\200\276\020\247\364?Na\245?\312\211\306>\335\317\001\277]\017\n@oJ\365?.\256%\277\301\307\270>)\0012?\004=\324?+\333/\2776r%\277\267c\023@\224L\260?:\346\014?\331%\202>K\217<@.\034\274?\306iH\275\236|:=\267\0130@\363\313\330?8\332\025\277\223\304\212\276\247\266\335?\374\337\325?\024=\220>C\221\266>\017MO?\255l\313?f\026q>\326\215\217>\233\217\010@\202\217\265?\204*u>6\217\343=\2533\334?\031\215\316?w\243o\276\313\330\220\275M\264\022@\272h\250?g\321#\277\354\204\007\277\364}/@\020Z\277?R\n2?~W\364>!\371\250?9^\261??o\212=\275\345\352<\315<\371>\221\016\325?\305\032\256<\232y\302>4\321\330?\307\363\333?u\346\356>\234\341\002\277\022~\366>}\315\344?\3604\371\275\261\030)\277\\V6@~\031\306?v\302\213\276\242B%>\257\223o>i\344\343?VFs\276\330\234\223\276W\003\001@5(\336?\215}1?K\222\327>\22517@\207j\272?\207\376\221\276\343\030\261\276\304\273C?f\202\311?\220\301\n>\014\310\276=\256\332\310>\231a\305?\325\222&\277\344N\r?\023\275\277?\315>\271?\267\231\n\276\340\203\327\274e\255\014@b\203\307?CW\362>|\356\014?\366\373\204>\302\300\317?\233v\261>(\017\363\276G\266\r@\376\017\246?\001\206\345\274\006\363\367>\\H\202?\270Z\337?E\204\017?\232\317y=\370Y`?*\032\257?ZI\263\276\347ob>\036o\222?4\017\322?%<\271\2761x\340\276\365\210\n@\006\016\256?B\230\373\276MM\352\276\213\'\247?\231~\305?T6\\\276\334\275\204\276j4\315?\357\341\262?75\220>\310\267\337>\224[\342?\264\260\327?w-!\276\353\305\014?_\3747@(\363\343?N\231+\277U2\250\276\214B\241?%]\343?H\032 ?\207\213 ?D\276\254?8\025\303?\310\231\266\276k\273I=\033\333\276>;7\327?+\335\031?\203lY>\301\037\007@\212U\331?V~9\276\302\027\266\276&\225(??T\332?o\202;?\3477\254>$\247\017@\214\365\277?)\3207\276+\302\r>\230B\r@\344\017\336?\006\324\263\276\3375 ?\013\350\266?(a\326?W\263~>\355\327\325\276\202f\311?\203\277\243?\341~\240=)\230\271>\265\243=@\355d\346?\001\335\247\276\001N\277>\246\373o?^\326\272?\234\246\277\276Dk\355\276\214\033M>\027F\334?\330\365;\277\026\333\024\276^\263\300?\226\355\251?\322\030\365\276\317h\243\276\177\216\272?\225G\335?\014\\\016>\317\277\031?<8s?\032\206\321?U\3734\276\273+\023?`/^?s-\334?}\317\230\276\003\n\315>K\312!?x\360\333?\221\324\342>\010t\026>\205\324\274?\217\343\347?\236z,\277\351\r\003?E7!@\320C\323?*\312\r?\240\300\313\276TN\256?h\037\311?\t\027\n\277\375gM=\322\226\353?6w\252?<\332\010>\226\230\307=\254\274\032@\316\336\227?A)F?\235\177\313\276sf%@\234\212\346?\323N%\277\330~\222=\273\210u?\002K\276?\370o*?`u\334\276e\010\037@&R\304?q\215\377\276\334\235\021\277\003x\333>\034\006\355?\305:\235\276\353\214\033\277\341\013\203?\273\326\276?\337\031!?c\356\352\276qY=@\026\333\274?\210\362\025\276\336\036\344=\260\254\220?\361\275\255?p\260\217\276\237[\030\2763CA?\004\035\265?\316\212h=R`\001\275f\342!?b\274\260?:\256\n\277\202t\021\277\0238\364?\025V\372?\030B*?\026/\n?\244VB@O;\374?\3022*\2776\346\025?#\347\245?\234\277\331?3\210\377\276\027\020\222\276\327\353;?JA\363?\263\356\347>\274Z\002?X)-@S%\304?(\236\323\276\220\275\356\276\346E$@\327\373\245?\034&\272>\375\243\247>r0H?\002e\333?T\303\236\275g\270\331>o\2042@\205x\330?W\\|>\317I_>\010\027#@\345\264\261?\334\177\314\276\333N\013\277v\272$@lZ\301?\215b9=\rP\n?\260\274\021?\\\215\336?\001\277\006\277\2713\213\276\324\215\n@\300\314\265?0-\252=\3328\006?\014V!@\334\325\255?YP\200\276z\340\223\276F\270\024@]5\271?8\3312\277 |h=!\301\204?\232\223\331?@L\342\275j\024\362=\274\306\003@\002G\320?\010[\354=\014Y\265>\344\022\365?\246\013\257?\034\353*?3\372\321<\371&B?\225\231\246?\313\367\020?\327\371g\276\244z@@v5\231?\003\013\020>\314\322\016\277\031lo>\251\335\245?\245\276\304>\376H\331>:B\211?\036\374\274?\255\242o\276\350\024D\276\242\206;@\003\353\320?A\272\340>\354\336\262\276\353| @\226\226\267?\205\321\254\273q9\026?XK\031@5\321\255?\227\002&\277\301T3?+\2555@d\311\332?]Q\312<G\217\217\276\r/\353?\030\264\310?L8\324>\257\227\022?\003\027\305?\217\246\326?\235\r\201\276\2132\333=\201\347:@\327\336\251?{\327\020\277\210\016\005\277R\257\036@\305 \276?D\3357\277\212\255p>\323\310\227?\363\037\306?f\277\026?\2133\006\277-\251d?\365\364\305?\270#\234;Z\241\270>f\200p>\363t\330?\363<\230\2750\361\277>uF\016?\352\351\273?\350\244\347\276y\261\220=b\214\256>\247u\325?ca\004\2779CA>.\306)@\030&\006@8i\272\276u;\373\273R\303U?T\037\270?\025\306\326\276\344\022\023\277\375\307\202?\376\264\335?\025\304\350\276P6\t?yb\022@)&\353?\ne\031\277Z\325\036\277\316\224\216?\360P\304?\204\270r=x\354\'\2760\2654@\351&\313?\341\t\025\277w\205N>\035H\n@\263\232\356?!\225B\277\031U\022\277\013\004(@\265\213\333?\337\246\177\275\330\201\213\276\020\037\371?\235\361\271?f\367\264>\226=Y\276\227\206\006@\211\263\254?A*\025?g\264!?\367]!@G\037\327?#M\234\275+K\364\274\323\000\271>9(\277?\324\230\360>\343\303\000?8\0306@\020\221\342?Kr\340\275^\363\202\2764t5@\253\257\336?\372\317\372\276\272\273\316\274U\362\216?\354O\354?\206:,;\322\214\335\276\370T\201>@h\277?\355-\205\276/\210\310\274\033\2120@}\t\317?\3708\363=eS\336>C\362\350?\274X\310?\024_]\276y\220\n\277;\211\330>\177.\306?l?\035\277\263{\"\2766\315-@5\317\271?\275oL>L\251\013=\035A\245?\0014\250?\247?\037\277F]\363\276>\326\000@\203\374\320?\026\373\343\276\317\240\341=\211*\021@\276J\342?\352\313\022\277\306\205\243\276wSP?\035\004\275?\023\364W>/\212\026?/u\026?\333N\327?\030\2604?hy\n?#\270V>\305;\362?\214\243\352>B\223\010?\307V:?\262\274\241?^H\257\276\232[\301\275JS\r@K9\277?\244\2503\275\200\363\202=\351\215L?\326\037\307?\277\266\216\276\3503\340\276\350\307\032@\000\215\320?\315\310\024?\033\325!?\326%\235?\2405\247?\207\026\321>O\224d\276Eu#@\351F\332?TW>?C\305\030\277\317\033\276?\326:\277?@Q\t\276\345C4\277mM\004@\325<\311?\211\267\016\276\221\230\034\277\271\016*@RC\357?\006K\005\276\266\242\245\276\300\'6@\\ \257?\323k\'\2774.|\276\"y]>\004T\372?\265Q]>\255\242\347\276d@\222?\234o\242?\210i_>0\361\257>\276:\005@\263\360\333?\344\237\t>()\030?\'r\321?6\351\300?~\251\347\276\265\303+\277\347\006\013@)B\266?Y01>&\373\327>\031n\"@\363\004\312?\324}\000=\360\212p>\375\3103?\222\037\327?\327k&\2779()?Y\364S>\320\227\274?\362\3511\276\240\207\032\277$\322\276>\372^\275?ZH\300>\371\022\032?\317\200_?Hj\245?L\244\004>`!\373>\325\326\365?E\202\331?\323k\263=W\314(\277\000\033+@\353T\365?\3706\005\277\274\313\305\275A\372\247?\024\353\322?\262\234\030?\227\252\274\276\016.i?/\250\327?\\\222;?\212\006-\277\315\347\236?->\327?\301\247\r\277\205\3571?\304~\232?/\244\333?\214Lp>\222\313\277=\021b\311?\030\262\236?\203\247\034\277\330\014\340>\222\263\002@h\313\323?\013\353\026>\304x\265>\006J\262?\304\231\315?\275T\254>>?\034\276\311\"\305>\251J\353?\346?\204\275/m4?\000\235\n@\215\323\336?\264u@>\300\260\344\276\254\335\004@ty\307?J\356\260\274A\364$\273\267W\270?3\376\257?\311\256$\277J&\217\276\3447\034?$\232\324?!\260\026?\312N?>\360\'5@\027d\331?g~-?\3747\217\275f\305\010@\362(\275?$`<?%<\025\277\313I)@>\314\304?`s\n?\311\256\014?eB\006?b\363\307?\236\355A\276\334/\007?P(\264?\262f\302?z\250M\276\320\326\231\276c\027\235?\006\326\251?\267D\256\275\243\005\030\277\350\016\265?L\027\262?\255\3664?YN\n?\250^\205>\321\262\256?\227\003\265\276\347n7>\325M\347?\372a\270?\213\340/\277\211\230\232>K\304\030?G\345\272?n4\330\276>\223\345\276\245\321\013@,\357\300?iW!>\267}\227\276\254c\022?\323\242\350?\261\030\345\276\272\3712\277\373\335\307?\372^\343?\263\315\215>\024z\225\276L<g?d]\360?\345_\033\277\254\034Z=\231e\026@_\355\346?\370\247\314>\207\244\226=\014\030~>\217U\302?D\3712?Egi\276\300\356\237?Y5\332?\272\241)?\377v)\277M\261t>f\020\275?\217p\332\276\2450\'?\307\027L?\242)\353?\361\363\317\276\242\010\r?84\254?\361\271\325?XV\202\276\207\373\030>n\247\035@+l\324?\315\036\024\2777\250\031?9\337r?\005\302\300?\310\'\020?}\007;?>;\003@;\340\316?\266H\232=\306\341L>a\254\n@jm\316?\337l+?\325\007\016\2778\340\244?\223s\236?\250\214\'?\361c\014=,\031\006@\352\227\266?\364\3377\277m\252\026\277}\0135@\352\007\305?\354\212\231<\362`\203\276\310\016\033@\017_\330?\352w\211>\316\252+?\251\373C?\005\304\320?36\254\276\033\270/?N/\"@f\275\376?~\000\022\276\312S\"?\354\002\236?Fz\347?V\271\000\276EF\307\2750\277\005@\311\260\330?\3641\377\276\225\360D>\277\370\235>\262\325\317?\177i\271>\355E\244>Ag\003@w\024\267?\264wv\276\330-\202<\365\273%@\206\345\307?>\\\362>U\024o>\nX\263?\3400\327?;U\276<\305\215\243>bv\026@\030w\267?\370\250\277;\211\261\254=~-\211?\215c\302?\212\223\273\276\244\032\266\276=l\230>\210-\267?E\362\025<\336\220V\276#:B?\271\252\304?\241\3701>f3\207\275R\301>@1\225\256?X\255\264\276t#\374\276H\3479@\253Y\335?\375l\324>\034\360)\277\230\374\214?\306n\277?GV^>\316\000\367\275\221\230;@\235\201\363?#\367\004>x\r\036?\266\206\340?\350\371\273?E\366-?\375\365\026?t\300\216?9d\303?d!\002\277\001\030/\277\326*\017@x\227\265?D\277\276\276B\007\315>\320\0103@\302\025\342?\300[\320\276\216\007K\276a\031\037@\205\005\347?\303\365 \277\300\227\302\276\020\277\340?\346;\314?\000U\\;v\214\203\276e\211+?{L\312?\377\261@?\215\265\'?\230y\324>\036\025\373?%<\001>\002\240.\277\266\251\022@\301\346\332?G\260\211>\322\216\273=\272i#@\341\320\341?\007\267=\277\320\265\013\277\332\263\220?\207\212\331?\336\215\205>FD)\277#C\004@CU\246?y@\331\275\'3\036>\203\177\321?\3121\303?w\330\004>E\267~>b\377\025@U\204\303?rO;\277}?\001\277\345i\035@F\316\340?a\303\323>\355\231\t?Vc\361>\374V\327?\216 1?\006\017\037\277 \t)@Bv\256?rS\273>\325\257\304\276\275]\315?\242\'\361?\316\252O=\276\245\214\276%\037&@X\312\320?\267(\343\276\333\025\372\276N\216\035@Sv\310?|\236\023\277\314\2320\277Zh\227?4\016\271?c\361\223\276\250\030#\277_\353>?e\033\350?v\213@\276u> ?\026\360\256?\221\321\341?\371\272\214\276\371\204\244>c\001\365>\3269\350?\026\241\360>\221\264{\276sn\362?_\'\331?)\226\313\276\265\214\020?[\034\017?y[\353?\314C\246\276\245\207!?\177{\026@q=\300?\302\241\307>\302\024e=\314\202\206?y$\302?\254\306\312>\235F\302\276\035`\336?\251\205\352?d\347\315\275\374S\212\2762\343e?\006\362\274?\207\376y>>\320\252\275\317l\222?9{\311?\274\226`\276\314`\264>.\312?@+Q\270?lC\355\276\3639\357\276\3060\247?\224\367\341?\2449*?\004\310\320\276\237v4?p%\353?\222<7>\253&\004?cA\213?\370\343\324?:Z\325;u!V\275\313\212l?\262\233\257?8\277\241=[\316\365>\200(\004@F\264\317?Dm\013>~\344*?\362\324j?\213\341\334?\003\3538>\340K\301\276\343\0207?To\265?\366]\021=*\034\221>\375C\027@H\207\327?f\206}\276\035Y\321\276C\004C?r7\342?\261\370->D\244\206=D+\364?2\220\323?T\251\031\277X\344\023\2775g\034@\310\231\342?\257\231\334>\307e\034=^\016*@\335\227\305?x\3200\277t`\261>\260\035-@\006L\270?G\312\236>` (\277v}\374?\212\350\305?.\251*\2774\276\257\274\235S[?A,\303?\264\034X\276F\353\250\274ug\264><\333\251?\r\000\345\276\010\310\003\277P\343\005@\273\356\237?\337m&?\200\235\013>\035z\002?\342\345\305?\267a\014?\365\325e>|\354;@\260\307\200?\034\225;>PU\025\277$\226\005?\352\"\325?\341\323$\277j\206\364>\003.\374?\346\223\321?\204\324A\277\237!\324\276w\214\260?\3537\353?\363\306\031\277\263_7=\240yO?k\360\300?\330\203\221>Q\331,?~)$@\202\221\343?\007aN>\335&\\>&\303\031@\351\236\265?_\360\311=\031\350\312> \347%@\002\201\332?\034\360\341>\"\247\177\276#6\'@\031\256\300?+\207\n?\352#\310\276y\357\323?\r\027\263?\267c\036?\265\372\n\276\020\256\370?L\244\334?zr%\277\n\275\256>e\336#@\272M\324?l\264\314\276v\027\010\276\274\374x>d\\\341?og?>P\341\260>j\204G?\236\354\364?\233=\320\275\201\315\341>\260\266\340?\362w\257?S\353\265>\325\256)\276\013A\241?o\323\347?\031p\226;&:K\2742\357\257>\230\370\307?V}:\277v\031~=O\002\241?\315\001\274?\261\032\033?#\242\020?\212\250\202?O#\271?\275n\021\277\273+\2739\004\305\242?\216\003\265?Me\351\276eo\251\275\016\3562@\302M\001@6\220\236>\327\241\372\275\272K\366?F~\311?\\\306\r\276\273|k\275\302\031/?\304\224\244?\302\372\337\275JFn\276\257\200\215?rm\232?\254\375\315\276\251\242\370=\245\231)@@\205\331?\215~<\277\\\255\223>\020)\235?\243\352\351?e\027\264>\030\321V\276.\027\276>\372\360\322?-\322\344>\365+-?\263}<@\362\321\324?\227\312/?N\t(?uf\006@=\322\300?\342\2540\277X\214\272\275\21444?5\227\257?\005o4\277\"\2451\277>\336\327?\252D\335?X\220\032?v\337%\277\207F4@\235L\332?\3059*\277\252-\275\276\326c\314>\252\270\247?\327\206\352\275\252\232,\277\314\374\220?\032\244\246?\033\177\242=\013\320\256>T>\017@\270V\263?\276\021M>\330D&\277[\276\254>\220\366\347?\177\244<\277*\306y\274\262C\331>\207R\341?!W*>`\352\357\276~w @\360\334\221?\326W\027\276R\325\010?`\271\005@m\034\275?\336v!<\234\211\201>\026k\220>\300\222\307?M\274\003\275\374\001_>V\373)@\320\265\271?iT\014\277\234\245\314\276\311\3561?c\n\324?T\216\r?-!\277=T]>@\261\303\260?Q\025\363\275`?\014?y\223\205?\266\017\347?\355cU\276\022\330\014?\354Q\027@u\310\307?\323\242\336\276\022\211R\276\3474\017?\027\233\332?\233 \n\277\357;\266>\020\2702@|b\311?K\035d>\024\224\302\275:\010%@\034A\312?\332q\353>u\344\010\275\343w\373?\343\335\305?\351|\270>\251\300\311;\217\362\323?\314b\266?\244\2148;\346\260\023\277\242\216\022@\354\277\322?=\323\313=\277\267-\277\265\2768@\252)\375?\325\256\001?\022\274\021?\324\235\367>\232|\335?\003@\265\275\364\214\375\274iW=?\365\201\276?\241\242\312\275\017\355\017\277Up\303>\177j\306?\341\010\352\276\352\004\004\276Xu\323?\364\335\255?o\362\017? cn<e\307>?\313\022\301?\026\371\245\276s\200\024?\227\022%@u\344\266?\"T9\276%w\250\276\202*\362?o+\327?\016/\250=C\311\264>\244\307\217?\301\033\320?,\324\232\275\222\316\014\277E[\'?\024\006\261?\311\216\035>\020u\237=/\000(@t&\261?\367\006\337\276#\331\353>a\374$@fM\274?j\2744\277\270\003\001?M\306\315?\211x\361?\0325+\277\014\"\022\277G\273\034@\215&\271?\335$6\276\\Uv<\334c!?\326\252\323?\352\257\027>\322\031X>\233\004#?\265\374\364?\neI?\367\037\031\276\200TY?\370\372\226?\003\"\000\277\353\213\244=\217\273\210?\013{\274?\202\306|>\220f\254\275L\200\373>\177\025\330?{i\312>\335\\\000?\214\372\024@\0371\266?\273)%=\210\204\007\277\325\t\r@U\335\375?\377\314 ?\236)\234>b\221\001@\215*\231?s\333\276\274]\375$?\013;\355?Va\227?\301\251\017\276{\022X>\243\351\224>\357\310\312?\366a\r>\206;\277>bS\023@\350\370\336?@\370\020\275\225\271\021?\027e\372?\331\260\270?\313\204\'?K\311\362\275\022\305\n@M\023\232?\252\324\020?\236@,\277\234\313;@\3330\242?\266\201\363>\375L\325\276\032\362\370?\330}\245?\3503\000\277\243\037\215=4\317\247?c\200\310?\234O\275\276\271\374G>\353u\222?x\232\352??\342\237>\313\236\304>\231\353]?+\204\337?\013\267\214>\201{\276=pt\026@\357<\217?\332\036\265>F\n\205>H\371\t@: \257?\301\250\004?\021\307\272;\nW\242?\023~\305?\341\t\375=\016\203\271=E\244\205?I\206\304?\370\0339\277\003\0074>\235\000\n@\035\222\342?\370m\260\276\247\351/\277\307\367x?9\271\247?JD\010>\2200\374\276\336\031r>\025\343\302?\366\177\236>\002\326\016?}\177\270?\242C\300?\327h=\277i;&\274\266\0379@4K\320?\022\022\031?=~\017\276\202\233\030@\021n\256?\355}\262>@\374\010?+\240\r@\222\255\312?u\350\010\277\216\225\200>\023\350\004@\030\315\246?\000\252 \277\277\364\366>3\255;@\373\261\331?\311\036!\277K\314\233>\202\240\355>\\8\246?vO\316>\363\255\367\276\235\363\243>.\343\336?\026i\242=l|\306>\364Q\256?i:\301?\301\311\256\276\361+\226>\270\235\003@v\335\343?\372\324\221=\234O\375\276\247*\020@\363\217\266?\363\002\324>`\006\017?\006\332\275>\007\322\267?L\337\013\276h\352\031?st\222?\214\022\322?\252\n\t\277\342\350\322\276)W\016@\270@\276?\02563\277+\204)\277\250\322\303?\360R\326?\237u->\331C\373\274\'\241h?\244P\276?x*\200\276}\006\024\276\376\312\372?y\255\254?\310\315@\276\211DQ>\221\030\353>\036\246\313?is\214\276H\214\346\276t\337\032@\275\377\323?\327\245\006=\314\226\214\275\375b[?\023\020\235?\236\355!?!#\200\276}\335\357?mY\346?\232]\347>\260q\335\275\213\227\345>\322\035\266?\201\351t>\322S$\275\021\362\341?o\267\272?\357\313\331=\251\205\022=nK\024@\317.\345?\361gH\276\225\201\303\2753\321\304?\212 \316?\316q\256\276v\337\005\277\2017\010@^\017\302?\000\3752?\246\323*\276I\376~?1z\314?/\205\003\277\213\031\221\276\371\234\026@\311\"\357?si\324\276\201\351\344\276\360\222\002@$\326\316?IM\003\277[\261\207\276\276\271\020?\307\201\335?\263\007.?\265p\261\276\371\2403?$\264\000@\014\007\032\277\245h%>\310\331\201?\005\031\311?\022k\341\276>\226\376\276\314\206\213>\226Z\331?BC\207>\242\232\n\277\326\262\260>d!\324?d\004\354>)\230\201\276q\326\350?\374Q\270?4e+?\207\244\376\276\210\370\022@\236%\302?\347:\035?t\322+>d\233\247>.8\273?^\276\355\276U\331+?0\242\023@\327l\327?\002\203t\276\314\321c\274\211\255\255>\310\265\301?\252\r\256\275Y\335\352\275\361\225\010@\242\353\346?\350\237@\276\321?\361>vW\261>f\237\251?\203\212\222>\326\213\301=\242; @\300w\277?k\324\013?\330G/?\023k\333?N\360\245?\022\244\302\276\0358\377>\304\257\005?fJ\323?\270\037\330\276\331!.>\326G\003@\317g\244?\264Ye\276o-/?O\221\223?\374\336\256?V\267\222>?6\231\276&_\313?\314_\257?\211\320\320>/QM>\213\341\346?\346\224\234?\032\301\006\277\305S\237\276\314d\036@Wx\277?0f\243\276\237\343\037?\270Tz?\2135\274?p\316\210>\253\3530?\252J\300?\273&\370?\340M\277>\347\214\250>A\245H?\256)\272?\216y\375\275s\240\207\273\322\263\207>\306k\360?2t\214\276\001\024\343>(\232\263?\263\266\343?\272\241\261>\335\263\346>kk\007?\352\\\325?\377\350[\275\014\261J\276m\323\007@k\231\354?\014>\305\276\307\273\273\276\275\271\351?\032\336\350?H\375\315>|\013[\276.\000\035@\325\227\241?\002\240\026?\236_\364=Z\242:?\300^\343?\031V\351>\325^\364>\312\n9@\236$\305?y\314@=\364\3411?!\032R?=\361\216?>\003:\276Wz1?/\216m?\"\374\317?V\330,\277|\266\306\276\246d\334?+\302\315?+\204\225=\nM*?\3344\323?\207\372\321?\346Z\264:4\333\r?\217\216k>By\353?\'K\375\276oGX>\253,q?N\320\302?\310z>\277\321\256\332\276\357\344\031@\223s\322?\314\231\031\277X\256\347\276W4\032@F~\277?b\0244?\224/ ?:\314\227?+\212\343?dy\'?1\317\016?GWa?z\032\254?#\241\325>s\331\014\277\364\001\226?\252\n\255?\2754u>\223r7=\263\0042@\230j\332?\354\367\014?\031\002\034\277\3606\'?\263`\316?B%B\2771~\036?m\331g?]m\271?\216\\\033?\302\210\035>\267{!@\203P\314?\345A\006?M\202\257\276\333]#@z\031\263?\320}\371=\307\202\312>.:&@\000\035\340?\006\327\324\276\221\233\301>\304\024\013@l\010\240?\362z\024\277@\212\006\277\244>\030?\'\336\301?\366\3220\277\200G\304>\277\216\325?\005\300\264?\304\005$?\256\326I\276y\325\003@\201{\336?\251\336\232\274\215E\037?\345S\330?\377#\361?\007\\\327\276a\3726\277\353\270\'@\035\345\306?\273\016)?\374\217L>F\336\343?\035\347\324?\013{\232=EG\032?\035\200\014@\031\214\315?\246\016:\277\303g\013\277\337\257\360>\2074\246?m\252\326\276H\211\215\276\020\237B?M\024\277?\253\007\324\276x\'#?D\024$@=\'\321?A\323\222\275E\273\"\277kd\207>E\017\272?B\\\371\276\214\022t>\375b\321?\274\351\242?@\022\366\276<\203\266\276\316\270\204?J}\315?\202\347\n?\345\231\247\276\362L=@\210\273\316?\310\232\031?\034\356\263\276\2404\274>\023\201\336?\277\236\003\277\274x\207>\017\220\205?\332S\332?\333\3408?8\022\220>\347\032\222?g\362\335?N(\014\277\342\004\n?\010\336\307?\367!\357?\0055\374>\335\\\234\276\365T\345?\027d\273?^\362\013\277\302\300\233\276<n\331?\256\364\346?>\317;?\025:_\276)\353\375?\252\273\346?\202S\003?k\271\233\276\341\272\375>O<\303?\025\253\022?P\253x>o\036\340?\221\320\310?\236]\036>&\305\'\277~!6@\'\336\361?\340-\020=\010\345\345>\2476\245>\031\252\306?G\035\005\277UN\263\276\310\363\037@\333\335\345?xC&?\200GT\276x\245+?]R\333?N\356\257\276\002\021\232\276&\350N?m\033\306?\303\234\220>\023\363\024\277Xc#?H\250\347?\020y\033\277\201$\244\276\325\026\252?\2755\302?c\323\362>\336\001\346\276b\020\312?\331w\337?3\215\326\276\216W(\277S\321C?\307\332\251?\225\r\'?\3021;\276\323\222\237?\260v\322?\000\376i\276\017*\211>\271\301\"@\300\264\236?\'\277\005?\245\241&\276\023\320\375?\027,\313?\024>\343\276\221&\226\276\203r\000@S\256\350?!:D\275\302\244\004\277\232\314m?\214\202\260?\205\352V>\273\234\016?\337\3040@\331\223\256?\371\201\033>\335\230.>KeL?\006d\267?\254\221\r?M\017:>\344\353\024@/\211\255?\317\3316?\272\334\200=<[8@\373\037\240?\375.\000\277\210\2364>\274\244\347?\177\335\317?t\r\323=N\362\263\276-\262\034@+\026\000@\330\273\177\275\277)l\276T8\306?\340\273\237?&\307\365\276\202\342#\277RN\373?&p\247?\324_;\2772\345\037?\"\016\263?O#\261?\361\2037?bI-\277\277\257\220?\'\274\324?\335\315\223=r\371_>\226,\331??:\301?\016k\262>\216\003?\276Th\341?E\362\265?\303\021\030?\223\030\344\275?\3533@M\275\340?L7\311\276\237\036\223>\313N\312?\022\276\325?\351d\351\275\271\372\035?`\231\354?e\306\345?,\270\277>xz\235\276\261\347=?{\333\314?\363\005!\277\021\304\371>\013\216\346?\201[\277?\331@\332=\204\271\335\275)\260\250>\217\344\310?\256\266B\276\200\231\007?J\327\213?v\302\257?Ps\212>\260\347\023\277B\0373@\006\365\271?sc\332\275\006f\315>\177O\210?\301:\306?\371\276X>\360\206\264\275\22352@\330\r\275?\324}\200>\023\266\237\274\255\263#?B\321\240?\253y\216\275M\022\203>\252\273~?\337\341\272?h\320\240>Gt\357\275q`\013@\313\326\326?+4\004\277\232\315\'\277\200\t!@~\374\303?5a\373\275\003\013\260>\0060\031@[\320\333?\231d<? \262\310=\t2\020@\306\206\320?d\313\"\277F`\014\277\312T\020@\352?\337?7n\231\276?\306$?D\271\262?4\273\346?[B\346>\273\014\317>\001?\213?\313\206\261?!?\013>{\206\220>F\257\r@U\207\222?Fy\"\277\271l\204\276\303\206\370?e\310\237?\034}\274>\257\320\007=\250\233\t@\365f\322?\242^\200\276\363q-=|2Q?\3479\304?u\346\036?\305\377%?\260\206]?\311\314\321?{\025i\276\020\257\333\276\306\367%?]\376\271?\211@\315\276\305\222\352\276\251/\357?\213\337\242?jO\r\277\300$\305\276\"u\256?\212>\273?\020\314!\276>x\315\276\273\350\210?\272\240\270?\3271\022\277\262\361\350>\333\307\237?\004\002\315?\016\240;?iV\346\276\346#\031?9`\257?\321\316\301>Ts\025?\344\371+?\211z\315?\276\210\206\276<\210\265>\177\356\235>z\250\307?\334\325\023?W\352\271\275\333E\202>\270 \333?/6\305>\'\027\303\276\335\342\357?\315\314\326?\031sW\275\323M&?0\246\334?\301\346\276?\334\327\201\275cC\007>\362\372}?4\241\305?s\273\367\2750\203A>():@\304?\312?\213\207g>l\265\027>^M\t@h\221\335?\203\302\004\277\367\352\263\276Yh\224?\316\033\337?\271\342\342;k\014\022?\235(.?\354\372\325?L4\370\2764I0?\322\216\215?H3\270?\301\346\364\276\243\312\320\275n5\243?Z\274\264?~\000\222\276@\027\335>\271%\276?\3066\001@\321w7\276\360\374\022\276\314\374@@k+\362?\014\223\031\27632\330\276\254\331\024?\362\007\315?m9+?<\021\264>\241\026\024@\222\350\275?<\204\261\275\357\256\273>D\017(@\365\023\002@\006h\017\277]n0?\247O\306?xz\363?d\036\201>\035 \030<\355n\031@\273+\243?\251\210S\276\234\3334>\034\240?@#\331\337?\007\263\021\277\352\"\205\276\036\257\313>y\347\230?\376\2012=\261\277\264>X\"\024@\344M\342?X;\n?!\352\376=\362\033\244?\331\n\266?\312\335g=\226\\5>\302\007\213?\030\261\303?\245\237\320\276/\372Z\2764zw?\272\204\275?\252\266\033\2770\365\363=\327\014\335>\275\310\276?z\212\\>\365\363\236>0\221(?\215\322\255?$F\357\275=I\n\277\002v\035@7Q\257?\217\212\037?\374U\300>\372\306\007@%\007\302?\021q\'?\311\004,?\005\227\262?\202\253\002@\304\2235?U\205\236\276\034\253\376>\317f\325?\3503\220\276\200`\246\2763\013\246>\202\035\305?\353\376q=H\027\303\276<\005\310?\014\350\301?\200`.?\357U\213>H\017\361?\303,\342?\177\026\343\276\365\024I>\206\334\244?\230k\251?\205\2265\277.\306\024\277\201\330\030@\361g\216?\354h\034>\265\027\351>\016\360*@\215\324\253?\256a\006?U\276g>\306G0@\340\021\277?\304\322\200\276R\363\205\2761\024v?\346\226\244?\265\246Y>\177\337\337\275d\2512?\215B\350?&\375!?\262J!?\022B\006@\233Y\271?\3437\255\276\271\212\235\276\367\027(@\0215\323?\177hv\276\n\334\302>uDx?\245\025\275?\212!\001?\240\214\201\276\216B\205>\244\033\241?\257\3524\277\0264\275\276$\320(?\025o\254?\371\330\315>\323P7\277eB\033@\322\030\355?\200\233\305=5ca\276|i\361?\244\305\237?\306n\357>G\3117\277\371\206\n?\024{\332?\326\254\323=2\3778\276m\251\201?\364\337\313?\304\264o\275Sv\026?\316n\335?\233\222\346?p{b\276S\260\"?7\202\025?\036\337\320??\213\005\277\1771\373\276l\324\220?d\347\225?\277F\252>L\340\226=\373\246\t@\210\270\351?\341A\263=\003\314\274\275\263\307\203?\244P\342?=a\t=\245\206\346\276Ek&@\033\364\371?\300\261\'\275\001\277\026\276\215\321\200??6\225?\227\346\276>@L\312>MJ\263?:\351\355?\'\242\003\277$\013\220\276W\033\004@\000<\302?7\252\253>\235\235\244>\352p\257?\\\002\306?r\243\020?x\265\224\276\304E\227?\351\n\324?\220\023V>\203\245\342\276C\350\034@\314E\264?\343\211`\276y\2572\277\371\265\032@1\264\320?\323\0236?\362\353w>\\\0348@\2133\234?\002\r\336\276a\302H\276@\245\340?\2610\326?\374\377\220>f\331\313>1\225\224?\245N\324?\336\377\327>C8\036?S\347\014@p\354\343?\350\026\332>\267)\206\276\242\'\335?\262\201\314?\202;\010\277\362\224)?\332\367\330?\212\346\317?:\350\262>\025\376\214\274\247\310\316?6\261\324?\2609\347\275\344f4\277c\354\023@\025\252\321?\207\374\373\276\241\024\255\276\233L\336>\207o\373?\242}\034\276\257\261\017?\002\257\202?\340,\347?\370\341L?\336\343\224>\314\221\262?\207R\301?\252\234:\277\223\250\367>\235\3031@\263\227\315?\007\322\005\277#\207\020?\357\001\t@\365\364\305?i6\017<_aA\274\276\372*@\223\212\356?\205x\024\276 \325p\275J\3110?r\245\266?\312\243\033=\207\3041\2779\377P?\250S\332?\031:F>@\336\013?v\335\001@\313G\324?\037Gs>\306\300\006?\207\343\024@y\312\260?\244\372\032\2771\t\023?/zu?\323f\322?7\336\031?\004\035\001?F\006\n?\266J\310?e\211\266\276\216@\014\276BhS>z\247\346?(\017\353\275P9\206\276yJ\331?s\331\322?\202\347\356>\346v\227>d\221\302?\263&\262?\235/6\276\305\035?>\023\356-@\335\357\272?5\2302\277\000\037L\276\267\2303@\221\200\323?\251\366)\275\343\030\035\277\303\'\006@gD\253?\223\031\237\276\220h\036?Nd\241>eo\305?\300\354\036\273\357Wq>\270\361\317?GY\241?\273\362\331\274\005\024.?g\241$?\364\302}?4\203X>\232%\r\277\250i\322?\r\375\333?\355(\016\275\201\313\323\276\317\313\242>\016g\352?\027\365\t=\3169\360\276\213^\020?|\271\303?LS(\277\3703\354>\273(\336?r5\272?\030\263\t\277J~\264>\204\264K?\353U\324?\342\000\332\276\2339D\276\324\n\000?\244\030\262?*\251\007?S@\332\276\371\300e?\320c\252?\307\326\253\276i\247\366>\315p\300>\211\n\355?\251\332N>o\324:>\235\332\337?l\350\310?\301\307\000>\213\302\306\276\031\236\265>\331\'\274?\247\353\t>\355\177\024?7\320j?\374P\337?!\260\302\276\251\371\n>\217\315;@\355\016\273?\304\356\223\276\250\035\266>\310W+?\356|\273?\231\235e\276\030!\334=9\372F?oc\275?\341]\216\2753N\033\277\377\221/@\330c\346?\263@\213>%\004+\276\357\326+?\212:\313?TU8\277\201\264\023?\221\302&@I\204\260?\360N:\277\024 \212<\3701\003?\322n\260?f\0216?f\205b\275\014,\"?\226\\\317?\013\3614?>u\354\275\033\315\027?L\306\267?$*\024\276s-\232=[n\374?(\r\261?\215G\021?\245\365\377\276V/&@\226\353\001@\001\366\021?\342\003\253>FN\027@\273b\330?0\201\013?\305\252\251>\366U\267?\244\301\327?\023D\215>\027\363\213\276\270\\\005?<\204\247?\001Q0\276[`O>\256\177\361?\312n\314?\255\206\224\276T\034\'>\366\310\343>4\370\255?Q\273\237\276 \353\t?\361\204\035@\017\230\305?y;\352>\222 |>\177\016X?\'\026\244?l\n0?8,\375>\0264%?\372\233\352?u;;\275\341A\363>yQ)@g\r\330?\001\337\225\276\262L\347\276\"T]?\362\262\254?\022\241\371\276\236\230\r?\000\003m?j\241\264?\010\220!\275f\365\346\276\360\207\225?6\037\n@N\227\005?\331\350D\277\027\212@@C\305\244?\263$0>@\301\345\276\300.I?D\340\370?\260\004\222\275\337\033\033?\243o\237?\313\331\253?\273\230v\276\334)\245>\2270\376?<\365\300?@\371\233\276\010\001\t\276vJP?Y\340\315?\222z_>\023\326\206>t\001\304>\346\255\264?&s|\276\216X\033\277\327;\"?\033c\327?\343\373\342<\246F8>\244\376\021@\017B\262??\3757?\260\312)\277\241:\216?=\'\303?Wz\215>O\256\r\277J\251i? \317\324?\320E\373\276\275\250\r\276L\374\010@B\316\333?\321\353\017\275\305 \200>\025\315\000@\365\366\317?\004V\216\275\2301\001\277\3752\202?\021\214\365?\006\241\354>\002\2355?Bv%@s\177\263?\254:/?\222\352+\277o\354\021@.\215\357?[\317\270\276\370\211\203=\332\n\006@\321#\276?l&\357\276=c\347>\265Y\233?UM\250?I\365\365>uw\035\276\036\370\233?\277,\305?\271\252\254>\367\315\035\277\336\237%?\345\362\253?\237\002\240\276C\003\021\276\377\346?@jM\321?bL\232=h\313Y>\230\375\305>^\333\277?\240\336\010\277\266i\224\276V\311\317?\003y\274?lA\267\276\037/\024\276_c\302?\354\337\277?~\342\260>\262\365\234\276\327`7?\344\243\275?\026\207\223>\212=(\277\257k\232?\233\033\315?\3541\035\2775\263V=\354Y\022@\003]\255?\263]Q>\201x\315\276$\262\206?B\320\321?\313\202\261>y\002A>\225I\242?<\025\334?\025\376\034>7\340\'\277\025\223\372?a3\306?\2138\025\2779\232#\275\362\302\006@b\371\327?D\336\">e8&\277\024\2470?u\036\307?P\344\211\275%]\333>MX,@\005\210\274?[B\002?\343\210%?\237\027\263?\264\034\320?xF{>\016/\270\276\013\021B@W\006\263?ca\320\276H\212(\276\324\252\257>V\323\353?\300w\033??\344\r?\335\377\004@\211\225\335?\035\"n=\200\330\222=\274,\204?\270\344\310?r\214,?y\313\001\277_\374\036@V\323\255?|\013\037\277\336\252\023?_\244\000@\253\007\246?\013\nC\276\335x\307\276\025\010\016@\312\026\317?\363\314\233>oe\211\276\332\010\247?#\300\337?\316\306\252\275\346\317G\276\252\277\025@G\035\301?\334F\013?\331\"\321\276\346\343\321?\366\266\245?\037\326\033\275\364o\033\277\272_\250?\325\256\331?\322:\232>x\270\275>\037\2709@\003%\331?\n\022\013\2766#\353>\352Uy?\224K\321?\250\031\202\276\300\320s>6\205\317?\231,\340?\357:+\277\257>\256>Y\220\033@q\005\266?\312O*?\r5\222\276\261\301\274?\354\371\272?o~\'\277\264q\020?\277&\023@\210\325\301?\274\2228?b\236\225\273\256\242B?0\271\307?\251\206\025?\'\332\245\276\356\361>@\216<\310?Ot\225\276\252-\021\277C\262\013@\243\002\333?\021\0361\277\033\362\317<h\035/@\313,\326?\322\375\244>\367?\034\277\365t\027?gE\272?\356\006-\277l\351\371>\035\021\267?\223\212\264?\311\346z\276b\331\244>+\t\005@\2026\333?\322\246\312>\340GE\276\242\262b?D\247\303?\264\311\t\277\003\'#\277\333y0@m9\327?\2346\027\277\320\271\013>\t\020\307>GY\303?L\305\022\277y\255\244\276>\370\316?\036\033\311?\360\332\305\276\226Y ?K\034J?\305T\264?\266\240\007\277\205\261\245\276#*\241>\334\331\267?\023\200\357\276\333\025\032\2760\017\251?8\277\327?>\263\244\276\320G\251>\222e3?\030\263\323?\253\314<?R)\336\276s\311\235?u\307\324?\274\314\230>hwx>\355\364\311?DN\377?&5\254\276.<\217>\226#\354?\311Y\312?\300_\344>H\247\346\276\302\r1@Q3\330?6t\323\276\242\354\035\277\350\224y?\300Z\347?\373\316o\276\030?\345\276\366C\224>\310\225\254?\313\331\033\276\006\235\020\277!+\310?\367v\337?\376\322\022?3\303\366>\214b\240?~\220\277?\314`\314=d\314\305\276\334t\023@\245\025\337?\370\335<\277Vc\351=\203\270\357>a3\334? \353\351\275\307\271-\276\306\341\254>\376G\320?M\332,?;4\020\277\264\325\235?\"o\347?7o\234>;\377\246\276\253\252\030@\301\376\237?\0060\r\277t\360\034>o\031-@1\231\344?GYO\276\033\363\n>\310\222*?J\356\332?\00124?V\017\010?\320\337J?:\005\321?\374mo>\303)\027\277\260&\265?<\021\246?>Y-\277C\214W\276\360\354\021@\016-\252?&p\243\276\320\270\360<\236\366\021@\354\332\254?\352\223\234=\016\333\236>,\351\321?I\271\345?c\355\277\276\253y\"\277\332\3761?\222\351\260?\230\247\203>t\232\335>\260b.@\003\"\346?\253\350\003\277-\320\356\275\355\034\344>\305\253\306?\354\367\304\273j\242_\276K\301@?\340\330\271?\211\355\036\277\330\237\244\276\334\007\216?\263\321\273?\226B\250\276\027\274\000?s\272\212? {\273?\356`\004\276Z\203w>w\r\255?\272\203\332?a8\003\277nn\034>\031\215\017@\341\360\324?\305t\t?\307+ ?\233\025\241?\022\025\354?\352u+\277n\371\320\276\356!\337?\231\364\313?\341&/\277+\373>\276\264\271#@0)\t@\275\310\374>\331\231\242\276\030\370\032@\325\317\305?\321\037\332\276\204d\211\276\202\030\327?\3267\370?\352?\203>F\n\225>\356/\253?\332\312\317?\212\222\330>\370m\004?VJ\352?{\333\270?!@&\277\327O\337\275\037\367U?\373\316\335?b\023\321>l\265\207<`\214\327?=\230\314?\365\204\205>\031YR\276\226C\330?\357u\330?<\245;?\225\362Z\275w\232\257?\314\265\276?<\210!?\201\354E>\370O\000?\256\202\306?\367\345\234>\227\341\037?F\377u>\"\032\327?\235\331\016? \354\224>JD8?\342\254\344?o-+?\205\2252?\304\306&@w+\315?\005\334\013?\301\304\'\277/\244\217?\0220\264?u\003\005\277\336sP\276\242\n/?\2552\317?\371\235\006\276\3752\340>\342\032\212?\263\227\353?;\302\031\276\217\035\004\276\027J\002@%v\277?\263\320\276\276BC\177\273_\360\224>\247\"\303?\345\227\031?\233\254A>o\021\024@M\367\336?\373#,?\000S2\277\312\262\010@<K\306?+\205$\277\027b\205>L\316\205?oG\370?\276\275\003\277C\344\024?\370D\366?2\037\302?\233\345\032?\364\027\372\275a\216&?]\336\302?\356\n-\277\212\347\014\276a\240\320?0\270\254?\200\267\310\276\336\310\014?\251\364\024@#\024\277?\203\373=?\367\307\303>\"\251e?\260\034\303?\266L\226\276\342:\006\276\002\300T?\220\026\355?\204\204\340\276\035W#\276\306X1@\357\001\326?\035:1?\244\214\270:U\027\360>\372c\376?\215\234\245=\317\276\342\276\017\037\250?\310^\265?\016\020 \2777U/?\253*0@N_\313?\313\205\322>\024w\334=\210B\274?{\021\313?\022J#?r\244\313\276\177\363\023@\314@\347?\327\242\245=w\022\241>\237\267\237?v\213\360?^M.\276=F\t\277B|\265?*\220\275?\352\317\226>V\270\205=\367M\251?\373\313\366?\000\033\220>\334*\250\276\01068@\321\002\350?\301\251\177\276\033b\234\275\210\004\307?\002E\300?\237\350\332>\3023q>fD\t@\325\352\215?\360\243\252\276\2762o\276\r\332\030?B\260\256?<\277\350=\250\250\032\277&\377\217?\205\230\253?\346\311\025\276\201%\027\275e\177(@q\255\276?>\352O>?V\260=\327c;@\003\317\273?X\307=\277\255\244\225\274\030w*@\261o\273?x\234R>\270\222M>e!\025@M\331\004@\267\014x\276\305V\020>\207\002\257?\277a\334?\322QN\275S\224{>\013\2445@\020\346\304?\332\345\233\275\333n\322>\253\326E?\201>\002@\264\257|\276X\036\214>(56@#\023\334?Y\3017\277\370\215\033\277Dl\013@i\374\354?\355\231\001\277\366\265\036\276\360O\003@\346y\262?B\'d>\2721\021\277\235\240\217?l\316\001@\334,6\277\220\020\335>}\357\374?p\261\264?5`\260>\016\244\017?@\211\177>m\035\260?\r\2117\277+l\306\275$*\007@W\010\267?\263\010\005\2758kp<\217P\333>KX\363?\000\034k>\267\270\n?\323[\365>\n\362\331?\000\0352?\337\337\200\275\351\005d?\032l\256?\023\236\330>\365\017\202>6\241\372?\014\004\305?HQ?\277\344J-\276\275~\367>\3273\304?\0320\350\276f\203L\276\236N\004?\251\207\272?\017\'\024\277\321\004\262>%\356\344?K\035\336?\204\2759\277\3228(\277t\255:@\001N\305?.=\362>\337\335\352\2766\214$@\256\201\223?\2379\033?.\251.\277\"\t\035@F~\345?\354\372\025\277R\361\207\276\017\222\006@f\241\245?+\210\211\276\236\263\205<\340K\303?\3333\277?F\320\024\277\373\221\"=\273\006\350?]\371\300?\3646\256\276\317J\n\277w\200\304?\202X\310?\023\266_>\014\350\215\276RX\036@\026\371\345?\231-y\276\t4\360>\257\314\'?\312\302\251?\006f\205;\210c\025?]\020*@\377x\275?9\360\322>\254\214\002\277\\T\253?\005\243\276?\200\014\345>\204H\026?\001\374.@\3065\304?P\341(\276\t\305\266=\003\363w?\253\261\316?\360\375)\277T\000\024\277[l\037@\313\333\263?\2610(\277\031\214\221=\317\371}?\372\362\340?.t\305>Wy\032\277\020Z\311?I\365\263?4\2406?tA\r\277\030O\303?\\\310\267?X\346A?\026\247\272=\036\213\313?\362\227\300?\016\237\314\276\254\306\022=\301\301&@\004X\252?\001\031\272<\026Px\276\250~,@\325\263\316?n\304\323\276\035u\224\275Y\242\037@0\240\345?&58\2775\177\014\276\233Sn?\305\037\301?\320)H\274G\222\034\277\002c&@\027~\272?!\221\016\277\013C\204\2768\324(@W\010\313?\225\327\032>\216\036\017\276o_.@D\304\315?6\005\312\276AE\035?v\263\275?\035\221\007@\331\223\014\277\223:\361>1T\325?\305W\311??\344\365>a\2100\277\202\2113@\231\233\273?\020x\010\277\274 \242<\234\001\'@\020]\266?\216\316i\276\003{\020\277\254\227\326?\246\200\350?!@B?U\275\374\273|v\325>]3\265?\267b7\277\177\365\360\276\305\243\227?(\364\340?\035\2204\276\250p\304>`\344-@<-\313?\276\242\373\275\240\245\033?\3053\257?\367W\331?\3270\037?\274\010S>\220\266\000@\370\337\232?0F\224\276\242\270\343\275G\037\243?\353p\302?\271\304\211>0cz\276\361\n)?\224K\345?%\317\355\276S\3201\277iI;@\257[\270?q83>\375\025\312\276\213d\221>h\221\267?\244P\022\277r\030\234\276(\024 @Y\246\313?A\357\035\277\234\024\246=T\231\001@\231K\300?+\367\242>pD\267=\355\274\265?\225F\224?k\362\334>/\277C>\247\2112@AJ\264?\345\n\317\275lC%\276\322[\345?\204+\250?\305S\017\273.q\314>\323\254\250?\273\200\331?h\005\"\277\275\034\316\276\035\351l?\236\354\322?\302k\003?\207\025\246\276|s%@\313\235\307?\023`\260>\201\353\232\276\351zs?\000X\301?\245\365\327>\375i\243==\000A@6\315\333?\213\372\344\275\355\363\220\276\320\263\201?\265\376\264?C<*?\345{f>\2612\362?\263\\\272?]7!?\027\0220\275\210\210-@<\335\265?>\312\034\277\243\"\026?B\226\001?\310\226\307?nl\366\276\000\376\351=\233YO?\276\023\271?\0013\257>}\255\003\277\361\315\007@\333m\301?Q\336\033\277\030\265\263\276\231\245\230>\007\323\002@\035\350a\276\006\236\353>j,\032@\2236\277?\304\006\203\276\243x\345\276\257p\274>\034@\323?\225\363\345=\206\255\t\2763P\373?3\033\330?n\024\231>\257\005\215\276\375\026\316?\341\'\240?\027\240\335\276\334)\335\275>\005\374?\214d\307?}$\205\275M\363&?\026&%?\313e\323?P\033\025\277\372b\247>\022\3520?\220\367\250?0*\331\276\376\323\001\277\252\340z?\200J\313?\346;(\276I+&\277\273\334\265?}\257\315?\332\2147?\375M\220>\036\3144?\322\345\341?\267yC\276\266\2356>7*u?=\327\307?\251\373@\275N\270\357>\201\035$?5~\247?\242\232\002?>Yq=\211\204\036?\010w\255?\243V\300\276S\351\023?\252\024>@\233\313\265?\206Z\'?D\277\266=7\016\276>\246\355\303?\3400\261\275}\320c\276\031K\014@x\265\312?\215`\263>\030\227*;F(\t?\372`\325?D\213\024?\271\337\241\273pU\325?-y\234?\325=\322\276\352[\346\2750\275:@\013\233\305?\373[B\275\361\3602\277\213\022(@\'K\223?\224N\234\276\344\367\032?/c\240?g\n\243?\3541\001>J\233\242\276\266\t\265?(\356\250?\257&O>\242\233\r?\337\276\017@\304Z\232?\220\020\375\276]\304\013?\341y\"@\t\306\335?\"4\"?g~\315\276b\247\331?d$\271?\020[z>#f&>\351\350\356?\315\037\261?H5\014\277\355\3621?\376\251\002@\000\037\276?\274\261 \276\361\361\251>\037\266\267?\r8\321?cd\t\276\\\345!\277F\276:@\031\002\350?\362\315F?\306\024\\>\262]\253?\353s\215?\\\220\035\276\206\0330?\262\002q?\376\231\261?L\032#>\231gE\276\267\014\250?\321\004\242?\262\022\363=,\203\232\276\340\336\230?\t\027\312?k\232W>\222=\002\276\367\237\371?4I\312?\342\347\037?\326T\226\274b\310\033@G\311\303?\274Y3>\004\306\032?\301\240:@\214d\311?i9P=\223\305\305\276\201\333\361>N\263\000@\301\311\026>\221F\235\276\014\225\024@P5\270?\336Z\002?S\226q\276NA;?`w\342?\326\310~>\331\257\373>\177\200\342>\275\032\352?\311U\234\276\237\257\005?\001\241>?\240\244\362?\r\344\r\2776\\\024?\016\026\021?[\265\263?\243\220\314>*\247\245\276J\014\362?b\021\263?x%\251\275\3269\316\276\210m\216?\277\322\277?\353t0?$a\007?\272\231\026?NA\262?\230\302\303\276^\235c=}i\006@\020\350\344?\377\257Z>\354OR>\rq\222?\377\003\250?\237\3103>\354\370\307>^6\260>\226\261\335?\302\302\311\275\301U\246\276\225\215\345>\246\n\312?[\261\003\277J\323 \2751\221 @)w\315?\340\241\250>\361-\014?\230\276\032@!W\344?\026\366\304>\367\261\036\277\264\035c>\210f\314?\224M)\277\343l\272\274\235\223\370>,E\344?j\302\276>\307\235\"?\332\rQ>\033\022\335?W\223\347\275\346\261\336\276D\255*@\337S\265?\034\355\030>\221\017\232=e)o?\241\203\350?\331\315\214=\340\325\362\274\345\021$@\213\207\351?\004v\005\277\323\371 \276\247\035\355?\352\313\326?\303Ju\276\005\027\'?\213:\024@\276\275\271?\264:\005\277\013\265\022\277\034?`?\006.\305?\017\360\304\276\254V\236\276\315\3015@vk\277?8\275\033>&\251\214\275gMO?\261\336\344?\"\033,\277\232}\316\276\014\224\360?\3539\321?\304&\016?\021\216Y\276\233\351\035@U\240\326?\246d\331\275\202\347*\277\216\255\267>o\271\344?hXL>\nK\234==\273\316?\021\217\262?`\344%?\010\223\302\276(\202\027@u\003\255?\241I\352>KW\024?\006*\033@X9\250?J\262\356\275@\030X>\333\003\315?\211^\322?Oy4\275f.\020\277\016\207`>\304^\330?n5\253\276\222\260\277\276\335\2439?\021\000\306?\227\346\226=wgm=\237B%?VI\306?\031:\226>\342<\034\273\274\n\270?o~\335?\372F8?\324_\257\273\213\320\346?\006H\266?>w\302>\022\277\302\276X\3631?\2612\330?L\2127\2772\222\345>\325S\007@\366\014\361?\205\224_\276\270 \007\277\233^\035@\337\303\365?\217\302\275>\004\252/\277*\311\312?4\206\275?4M\210\276#j\362\276\t\323U?\342Y\306?H1,\277ge{;\203\216\006@0\366\250?G\217\007?\301;i>\355l1@\323\276\343?\305\002/\277\271\250\306\276Z?\231?1\354\254?J\322\005\276\307\177\001\274=\3636@\251\204\271?n\246.?\\\037\266\276V]\007@VI\342?\251\301\354\276\035\036\262\276\033\007\352?\274\037\301?\271\250\276\276\376\017\014?\356!y?\022/\317?o\267d>\231c\251\276{\213 @\255/\340?\371M!>\235\016\304\275D\364\370>\2343\320?\343\250\014\276\3271\256\274\3764\310?\014\316\302?\334\237\017\2773\244\232\276\274\357,@\353\251\005@CV\'>rj\023\277#\'\351?\273\322\350?Wv\341=\353\220\273\275]\323\365>\020\354\254?\225\202\216\275xA4?\n\037\226?\242\266\217?\236@L\277U\206\301\276\353\376\365?\351\236\303?a\026\032>\rU\231\276\215\317]?W\320\274?\364m\005?\017\n\n>\374\3775@\004;\324?\005i\306=\207\214\237>G\254?@o\364\305?\355*4>\327\371\037?\370%A@\213\373\331?\3168\031?\272\243\307\276q,&@\346u\262?\213\376\310>\034\t\004\277\005\236(?~\217\262?\370\305\315\276&T\000>\325\323\350?\035W\221?N\320\306\276\007\323<?\237\217\216?\347R\254?\231\272\333\276K!P=\330\235!@\3270\271?D2\344\2739F\362=\013[\234?\275S\377?\301TC>^\367\256\276\031\2124?$c\257?\302l>\277\364\026\357\275\224\256\327>_^\266?\207\305\004?X\221\021=5q\374>\010<\334?u\310\315\276\'\206\004\277j\351!@\032P\275?e8\016\277E\331\007\277/P\252>\201v\335?\236\\+\277\333\031\026\277T\037h>jM\247?\366\262\035\276\202\341\344\276\340\331\206?\342\346\306?\346#I\276@\275\271>\276\223\243?\367u\320?\315\352\345\276\362\320\037\277J\233\026?\315\222\316?\376\324\350>\006\205\r?\007E\177?\334\204\335?\323\336\310\276\346\256U>r\345:@2\310\345?X\002\301>\216\221\030\277\354\217\207?,\363\244?a\373\311:\355F\033\277\300M*@\345F\323?+\374y\276!\222\201=\036`(@\024\315\335?\263\352\023?\210.\240>W|\024@)\227\326?\373XA\275{K\t\277L\262 ?\035u\302?\331\261=?U\240\326=\317,\310?\362\356\322?+2\272\276/\211\253\276W\004@@\341\230\271?\242\361D\275\275T\354\274\320Y\001@q\343\302?\325%c\273\242\233\255>z\256\000@k\020\324?]\207\"\277\004s\374\276V\224\326?W>\361?\310$\303>P\213\001\277\3458\031?\334h\324?\260\311\n>Qj\177>w\326\352?.8\301?_a%\277\251\023\360\275~.\214?\233\004\311?:\224!\274\323j\030>\351\244.?\327\022\224?\326\036V?\357\250\251>\302\033\001@\r\336\275?\210K~>8\025y>n\036\212?\232\262\271?W\004\327\276\"\251\025\276XQ\022@\273^\324?\014\261\032?U\370\273>\217Z@?\266\333\300?\216\004\002?\340/.\277Al\346?\375\367\330?G\306*=\376}\022\277y\002:@/\341\230?\262+\335\276\357\215\241\276\014\267\301?\365\021\234?\355\020\177;\024\353\034?R\227\t?=\n\303?FB/?\374q\363\276\014\2761@\2720\302?r\212\336>\251\244\326>I\376,@\232&\326?\351D\302\275\376\270-\277\010h4@\2034\241?\236_\024\275\021\213X\275\017\255\037@\203i\246?\355\273\272>\n\202#?\262\314\001@\016\240\363?\302\026\033\277\221~\273\275\344\320\031@\345\270\301?c\355\317>~\342`\276\375\216\\><\021\300?m\001\301>\276M3?\363\256\300?\025\001\326?\025\344??\035\346\213>n\311\005@7O\251?.\251\342\276\261N\025\274u\021 @\223R\270?)\262*?\266\021\217>\350\243\324? \'\244?(\323\210=.Y%\277{\366\242?\221`\334?\231\202\265<BZ\203\276\350E\272?\217\376\271?MLG\277\347\341\024\276\247\030\014@#\241\323?\234\337P\276\210\274\225>\004\3445@\235\274\270?\274]\277>kHl\276\316\206-?\2339\300?\223SK\276\010\0341\27749\245?\2552\251?\r\033\305\275\003\3162?\352\356\225?\037\200\324?\031t\372>\227\217\374\276-\336\036@\320\324\277?\3478\013\277\275\340\373\2768,\005@{\274\240?\221}\030?\263\267$\276\343\026\034@\334f\226?j\301\323\276\321\353\317\276\346\275\007?(`\267?q\256=\277\271\305\034?\303 \262?\311\307\242?>\\\262\275f\371\002\277#\324\021?\246\267\321?J$\021=\t\212\007\277\361S\023@n\247\265?\021q#\276\363s\203\275%\247\301?\200\323\227?Tt$?</\345>\36573@\013\226\302?\344\333\013?\024\347\010>\336\001\017@]j\310?\3744\256\275dZ\223>\222\n^>\272\367\262?\177m\035>\226Y$>\217F\031@<\206\317?\020\007\231\276|\356$\276\215\344 @\317\331\372?\257\226G\277\342x\366\276\252RY>\252E\246?\216\224-\275\003\n\225\275\037\305D?\350-\272?\246B@\277\366(\264>\252\246-@\2657\342?\251gq>?8#\277\177e^?\036\302\306?]\342\300\276*\255?<B\265\205?\303\r\352?\035\001\334<o\364\321>\327#\373?\237\350\272?\336uB?\016\240\347>\264\210\"?\345\355\212?\037LJ=o\201\030?(\302\252??S\315?X\343\014>{\204\032\276\263\014\301?\017}\321?_\'\215\276^0\210>\003\223?@m<\330?\370\302\374>*\377\242>\373\233\326?\206\257\255?\334\361.?\014\311I>\352(4@N\232\300?\007y\265\276\222%\203>Q\375\306?H2\313?\'j\201\276m\346\010\277\\\222\333?o\200\363?gd8?v\246\320<\2611\'@\n\202\213?s\273\347>\345b\224>&\211%@\343\213\322?kf}>\257A\327>`\361\034@H\300\306?\373\007\331>\006e\342\276 45@\221d\274?\021W\022\277\252\013(>\0164$@\241\364\247?Fz\021\276\031\254\270\275u\0165@F\t\326?\313g\025\277M\334\262\276lC\225?\264\307\317?\034\356\003\276\355,\202>\203\".@#\202\301?\020u\033\277\017\014 ??\357\216?\303\266\311?\305W3\277\rQ%\277\210\2526?\303e\261?T\376\265<&\217\037?)\3264?t\r\277?\202\255\362\275\322\253A>K\000\253?\314@\305?\356\006\t?\261\210\221\276\251\364\026@Q\331\262?d#@\276\306\301\275>\341\264\033@d\220\305?\233\033\333\276\265\214\204\276\332-\203?N\355\322?\337m\326>\2341\034\277\032\341\027@?;\300?\260s\'?\2244\033\277\314\262\034?\037\235\272?\023\177\264=\250\304\021?\371\t\253?=`\334?\340\021\215\276)\222\003?\346\007\n@\036m\272?\010\347\027\277n\301\n\277.I\001@\334\364\267?\257y\225>[$\305\276\342\274\264?\327\337\260?U\370\263=U\371\026?\003\343\351?,\233\263?y\347\000\276l>\216\276\003}z?/\367\223?\211\320h\276\343\210\325>\304\022\022@z\035\347?\272\020\027\277Zc\240>\020\352\336?g,\234?\3274\367\276\375\024\227\276d\3324@\303\361\001@\223W+?\023H\271>\334\2530@\324\265\003@k\233\262>\343\244\220\276\303X:@\177g\001@~;\t\276t{\341\276I\325\264?u\260\266?\2719\325\276\301R\r>\340\301\013@\014\004\357?&6\217>2\310%\277\036\037(?|H\350?\r9\006>5\320\014\276\243\220*@\307b\303?{\206\360<w.\010\277\276+\343?\2761\266?H\246\213\276\270:\340=D\037O?\3268\327?hw\004\277\322q\025\277\330}\376?\271\306\341?\267^\213>\255O\t?\025\351\311?\217\245\303?-\t >0/\350\276\360z\336?\205$\317?\322\377&?\002\270i>L\207$@e\253\325?7Pp\276\036\243\234\276\354\251$@\370q\326?@\210\304\276\036\372\022?\241\2359@\237W\320?\201\223\t?\222\256)\277\037\3734?\230\366\301?\244\030\340>\205\226\255>\274\037\277>\357\216\272?k-(\277&\375\305\276F\330\337?\213\335\254??\002\247\276\037\272\300\275\313\206<@\257B\344?v7\207\276>\261\246\276\211) @\213\030\320?*\002\014\277\025\376<\276S\347\327?\036\306\244?*\304#\276A\201\337>l\256\341?\304]\353?\211\267\356=: \251\276\001\360\315?\235\233\206?0\240\377>\256\331\n?u\372\004@\276\330\277?\033\275\252>^\363\242\276\315E\237>LQ\250?\271\245\365=K\352\314>\323~<?\277+\244?\\V\001\277\331=\331\275\247\224\277?T\303\222?\360\277\025;xF\273\275\312\227@@\212t\363?5%\031\275&\340\207\276\237\2351@~\035\264?\367?\360>Ab\273=u\365\374?P\373\241?\036\244g\276x\320\214\275tY\035@W^\324?\275\032,?\177O\034\276\246S9@\313+\307?w\023\334>J\320\357>0\262\202?\267B\304?\364\337\023>be\364=r\375\034@`\315\273?\317\2073?-\223\201>\256.{?cE\263?\340\234\001\277\331w\305<\002$\024@\334\202\265?\224\372\202>_B\021\277\225\210\013@I\331\336?(I\277\276sf\273\275\247`\000@\355\360\225?\245f;?\013\014\311>R\264\030@\221\357\310?\2512\304>\177\244\340\276\232=\371?\022\027\234?\304\013\006\277\025\001\266>_\247^?\343\302\333?\"\304\355>\002-\355>\013\223\356?RG\315?f\021\002\277\344i\271>\341\230\005?\262H\253?\tP\017\277\243:5\277EKN?\332\346\330?y\351\002?\231\267\302>\233T\t@\033\363\264?\314\266\017?,\r\004?\223\315\334?rm\246?\021:\260>R\013\225>D\210\030@B\225\272?.\254\233\276Q\237,\277\351\213\263?\344\206\303?\236~\014\277\357\250\t\277\3679\232?\260<\010@g~\365>K\002<\277y\034\017?\001j\252?p\351\034?\03175\277\330_\013@/\244\305?\330.1?\001\027d\275\311\247L?}?\315?\210\276\253\276\337\251\300>\334\225,@\252\327\325?\340,\255>II\007?\2468\016@\024\262\303?\312R\007\277\264\347b\276\350\327\273>\350\273\233??\305\321=\324E\252\275\244E/@\315\314\334?{\367\227>\303)\323=\320X)?\241\370\271?zn!\275c\354\344>\021x\245?7\250\235?\rQ1\277\211{\354\276\355\007\004@\016\204\314?\177\367\326\276\351\321T\276;\224\030@\030>\330?\013\323\327\276;U2\277a\245\302?\221\360\323?\350\336\023\276Ho\210>K\372\305>\201\223\267?\363\222\007\277*\341\t=_\177\255?\225b\273?\315[\365\274A\272\010?\233]\256?\347\303\257?\202W\023?#\3308?$TF?y\"\316?\372^\253>\353\035\036\276\221g\024@`\000\237?\275\036@\277\353\031\342>fL\006@\021\216\255?$\321\027?\202\035\327\276\250\250)@a\210\236?\210\234\206>\302\241\277\276\216:\317?\252C\330?\313\240\022?\254\0030?H\356\300?\235I\213?\302P\007\277\220\274\037?^L\303?#\021\322?\032l\212=+\207\236>1V\377?\201\004\337?\324G\340\276z\310\364=\355\364\037@\202\251\334?\353\0325\277-#\315\276wi\313?\336\005\302?\340\016\000?\372A\001\277\325$\300>\350\331\230?\363X\223\276\\q%\277M2]>\002\234\344?|F\332>\315\035\345\276\022S\014@\267)\274?\251\204\033\277\276\333\344>\366l\254?!\225\314?\262\016;?7\302\212\276R_3?\245f\327?\323\025\244\276\034B\325\275-D\312?\332p\276?\276\330{=\236`\277\276\001\201\034@\233\033\271?\304\262\371\2769)\274\276\343\035#?\352\353\343?\033IJ?\'\205Y\276<L\371?\201 \230?\035:\245\276=\017.?\2569+@\311\005\275?\230M\240=~\306\315>Q\374\020@\235\271\273?\326\034 \275G<Y\275v\214\022@\364j\350?U\334\350\276\203\336\363>ga-@\253#\353?$\201:?\204\326\233\276Son?\235K\275?\230QL>\275V\002\277\220I\201?\010\034\223?\260:2=I\203#?m)b?\341D\250?\246~&?g&\260>\267A\034@\266\366\270?\350\335\034?\r9\032?t\034\253?\334\203\274?\261\245\017\277\215]\262\276+H\340>k\232\303?=\235+\277s\201\303>\314\276\231>2\312\313?3\250\326\275a\306\364=:\213\334?\345\233\235?\301\220u>\022\2767>\311\252\226?\325\352\307?\301:\036\276\306\211\207>c\\\013@G=\300?\'\027\263\276\256\237&?Va%@\301\036\313?\361\364\"\277,\357\372>\016e\337?1B\000@\233\222@\277}\t\265\276\201\024\345?\235\205\261?z4E>\315\311\263>\261v\"@vl\304?\307\274N\276\317\241\264\276p\240\274?\311>\302?\035t\221>\024[\331\276\2174\260>nn\316?\272fB>\003\321\223\2738Q\035@Q0\207?B!\032?gb\022?TW\272?r\246\311?\036\211\277\276\261\304\203=\243)\004@aU\257?\t\305\366\276m\035\010\277\214\020\356>\341\013\323?\355\3308>B\"\355>\0275\354??\000\337?\230M ?\311=\t?9\370\276?:z\340?g\356\331>\221\360\025\277\321m\231?\361\361\335?\r\2461\276x\271\300\276R\024s>\020t\366?\357S\025?\237\255\263\276[\372\004@ur\334?\001\335#?d\220\333=\232K\036@x{\236?\323.\026>#\274\255\276\343\3419@\330c\302?\203\206\366>\227\256\330>\365\254z>\206v\336?S\264\332\276\310y\027\277\030\242\007@`\314\306?M\3324?\331\\\255\276c\0308@\224m\254?\245g\352>3k\341>\264\357l?6\261\302?\277\014\006?8\364\366=\310R\007@\326\247\262?\257\225\240\276\nK\034\276d\r\013@\002\323\343?\250\341\373=!\255\251>\212%\260>w\237\333?\t\031\310\274Q\242\225>\244\206\273><3\311?\351_R>h\313)\276\367}\000@\3118\260?5\361\356\276\341\014.\276\316x#@\303g\245?\331\006\022?\027\272\262\276\276\352N?\205\006\324?\001mk\275\032\2435=\274/\205?\327\210\224?\014@\343\275\344\273\234>c\320\035?&\374\266?J\231\014\277(\323x\276\202]\n@d?\261?Dn\336\276\311q\'\274\335\266\317>\324\014\341?\240\301\246<\333N\003\277\254(\276?\221\323\265?\341\227\372<y\311\247>!\006z>\236\323\332?\303\3251?\037h\t?\001\035\371>\3330\322?\342\311\256=Y\374\016?I<\364?\255\300\304?\205\320\211\276/N\274=l\324\032@eP\241?`\315!>\265R\210\275\377l\253?\272\333\213?\272\272\343<\271\343\005\277}\326/@p\353\310?Q1\306>\351b\323=\'r\r@\000\213\226?S\"y>\243\351\034\276V\341,@\320\233\234?\023\357\370\276\034B\235>w\303\030@\001O\346?DL\311>\205w-\277\253z\001@\005\213\333?\032\3043?n0\334\276l2+@\367\350\271?\213\303\031\275\210+\227>y\007S?Q\245\374?\"\336>?\2140E>\0065\"@\213\306\266?35\251==_\343>\347\326\253?\206\347\271?\375\300%?\220f\324\276\330\322/@\241K\344?\332\037\220>\321=K\276\357\030(@M\022\267?7\212 ?\311<2\276\215\0376@\327\334\357?)\223\232\274\345\n\013\277Vy<@\255\373\311?(\363\007\277\276\336\335=\341\244\223?6\\\344?.Y\355\276\267z6?\350-\310?\255\332\311?\335\263\346>\027\016\354>q\'/@\363\033\270?\341\177\313=$)\t\276\302\004\312?\232\007\256?\006H\004\276\373\226\271=\242\220Q?5\230\274?\331_\366<|a\362\276\256\336K?,)\305?zl{\276\363T\207\274V\363\326?\320\267\363?\300B\266>\014\225?>\252\005\266?<\240\322?\263\262=\275\326X*\277\221\314;@\256\273\315?\372\013\275\276A\232\001?\306\036e>\376E\240?\355\202%\277\022l\344\276j\346\026@o\274\253?\"\373`\276I\327<>\244\206?@XX\270?\250\304\025\277\034\007\032?B\356-@?\253\300?-\314\n\277\017~b\271S\2412@P\253\320?\0219\265\276N\360\021?T\002\257?\330\271\277?\232B\317\276\273\230\036?\274\323\r@\246\014\304?</\365\276H\277->\257\017\226>\2718\260?\335\320\374>\237\260\204>\223\233+?$H\006@\263%{>\265\371\033?Z\226\226?E\022\367?\322\0358\277\242\016\033>\301\342\340?\t\211\346?G\377#\277eq\027\277\253z#@\301\000\340?\355\330\250>*\3125\276YT\034@&\373\333?||\016?\224\370\\<F4\344?\333\210\303?\316\304\234>\226^\323>:Q\220?\337\247\256?\035\253d>\217\307\354\276\201\223\375?\306M\303?u?\2479Z\237r\276\262\374\252??8\335?\256\014\036?\321@\254>ZA=@\237u\323?\t\375\244\276+k\023\277\252\273=@\036\026\326?\245\202\002\277\227:\310>0m\r@\242\n\323?_&\362>\373[2?\312\312>?B\"\275?\364\212\037\277^\333[\276P3\r@\263\315\311?\355\272\327=\267A\t\2779\332\252?\216\004\322?\331\230\033?\212\256\007?\327\3765?\031U\266?T\033\234:\000:<>\007%\034@5\321\365?|\n >\346y\000\276d\303\264>{\202\264?\207\030o\276\'\207\317<\324\235\301?b\237\210?Y\3677?\356]\033?f\221\264>\330\324\253?%AH?\250\307\276\276\237:\270?0\330\355?e\0316?\316\304D>\032\301\024@\007\t\321?\222\262\255\276j\240\035?\'\206#@\221D\315?k\021\211>\363\350\276\276\234^\265?\010\221\324?Ln$\277\316\2450\277\212t_?<\206\263?\335\317\t?\357\250\211>\022a@@ip\267?]\027&?\343R\315\276)a\321?]\302\271?[\"\003?\324\323\317\276\315\344l?\353\247\317?\355\363(><f\350\276E\036\027@\230\300\305?\230\206\021\276\2759\354\276_\355\014?\376\233\317?1\263\357=F\224\336\2762>;@\216\316\307?\222\"\362>\257{\373>\320\214!@\032\333\313?\314&\000\275\220g\247>[\240.@\341b\327?\013\232\006\276h]\323>?\003\205?|`\301?\000\311\204>\316\303y>^\322=@\310\\\223?\252E\264>b\276$?\024\025\001@\340\021\317?\374Q\014\277Y\371\315>\263\310\200>\024\354\265?D\371\242\276:\005\371=\315\n\034@\330)\364?^*\366\276\242c\013\277\215\005\021@%\316\274?K\253%\277\003\351\322>YA\210?\371\275\353?l\257)\277\034)\233>\250\255\232?v\301\340?\247$\273>\355\365\266>,9D?\233\253\322?!u\033\277\212?\202>O\327\325?\305\305\263?\200+\271>\031\377\306>\261P\303?A\203\245?\311\004\020\277fL\035\277=\372]?\246D\320?/\341\360\275Z\327\320\276\333\261\r@v\374\277?1\013%?\316\032\274=\334a\031@\233Y\267?7\031\365\275cG#\276>\243\377?\355\267\262?~5G\276~\304o=\206s\307?)<\240?\366_\003?\204\323\002=\364\213\340?\215\323\356?`rS\276\272\275\014\277\236\004\000@\340-\332?\212\216\204=\205\227\260>\002\337\033?\205\006\370?\356|\277<f\372\r\277\356\331!@\365.\007@\026\027\257>Eg\331=\0339\006@?\375\275?\236B\326\276\033\204\351\276\305\341!@S\354\302?\312\030\013\277q:\035\277E\372+@[\354\346?sK\213=#\207\030\276F\307\310?\310`\323?[\354.\277\013$\034?\017U<@{O\247?\206V??\255\276\312\276M\361\257?\353S\320?H\033;?6\311\347\276\242\340;?\315\316\256?;n\360\276\272\370;\276\357\3606@x\r\324?\301\340:>\022\372\031=\365T.@\034\266\301?\317\207\267>x\227\303\276M\266v??\305\273?\375\205\026?\225}\327\274\223\345\024@\001\335\333?\307.!>tFT\275\277\344\314?\222Z\262?~\214\331=1\231\342>/\370x?E\330\266?PV(?\212\002=>\'\341\023@u\001\333?\312\336\322<\034\321\315\276\312W\225>\\>\306?7\306\036?\313.\030\275\244\305#@?9\330?*\214)\277\263\006\327>\021x\343?\333\335\273?\253\257:\277g\014\223\275\3010:@\372\267\301?\312\341\263\276\204\323\262\2769%\236?\005\337\240?\225\017\201>\360nU>\0372\027@\217V\261?Q\365/\2774\020\333\276\2013\212?#\274\267?\211B\203\276\305 \020\277<\203\216>\237:\250?\337\2119?\255n\245\276\347\027\003@\212!\007@\r4\037\277\354\240\232\276C\244\223>\271\252\314?z\251\310>R\265]\276&\245=?\235\275\315?\300\264\210>\305\313S=\2575\343?\333\276\325?l?%?\263\265*?|T!?\312\207\266?*\376\027\277.S\'\277\261\010\331?\207\250\304?\223\220\024?\260\035\214\273]\243\030@\235\016\252?\022\021\376>\316\211\345\276\000\373\243?:\036\307?\021V\343\275\317\363\227\276\021$Y?f/\353?O\257\254>\032\211\270\276\215\221\310?\\\034\243??\034\204\275(\363#\277\2476\232?\271P\255?\267\234\023\277\331A\205\276\230p\035@\276f\355?\247v\306\276\032\2770?$\266\351?\372\177\275?\375O\266\276\223\374\220\276\252O\271?E\201\346?\013)\033\277\354\242\370>\327j\377?:>\264?\341y\031>T\304\031?"
      }
    }
  }
}
node {
  name: "num_parallel_calls"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "batch_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 32
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5095
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 5095
          }
        }
        string_val: "../data/Validation/Run_0001/images/frame_01380.png"
        string_val: "../data/Validation/Run_0001/images/frame_00394.png"
        string_val: "../data/Validation/Run_0001/images/frame_00400.png"
        string_val: "../data/Validation/Run_0001/images/frame_01489.png"
        string_val: "../data/Validation/Run_0001/images/frame_01558.png"
        string_val: "../data/Validation/Run_0001/images/frame_00995.png"
        string_val: "../data/Validation/Run_0001/images/frame_03605.png"
        string_val: "../data/Validation/Run_0001/images/frame_04155.png"
        string_val: "../data/Validation/Run_0001/images/frame_04872.png"
        string_val: "../data/Validation/Run_0001/images/frame_04569.png"
        string_val: "../data/Validation/Run_0001/images/frame_04822.png"
        string_val: "../data/Validation/Run_0001/images/frame_01637.png"
        string_val: "../data/Validation/Run_0001/images/frame_01631.png"
        string_val: "../data/Validation/Run_0001/images/frame_00846.png"
        string_val: "../data/Validation/Run_0001/images/frame_02477.png"
        string_val: "../data/Validation/Run_0001/images/frame_02659.png"
        string_val: "../data/Validation/Run_0001/images/frame_00202.png"
        string_val: "../data/Validation/Run_0001/images/frame_00135.png"
        string_val: "../data/Validation/Run_0001/images/frame_01529.png"
        string_val: "../data/Validation/Run_0001/images/frame_01698.png"
        string_val: "../data/Validation/Run_0001/images/frame_03377.png"
        string_val: "../data/Validation/Run_0001/images/frame_00116.png"
        string_val: "../data/Validation/Run_0001/images/frame_04009.png"
        string_val: "../data/Validation/Run_0001/images/frame_04497.png"
        string_val: "../data/Validation/Run_0001/images/frame_03321.png"
        string_val: "../data/Validation/Run_0001/images/frame_01827.png"
        string_val: "../data/Validation/Run_0001/images/frame_00160.png"
        string_val: "../data/Validation/Run_0001/images/frame_03538.png"
        string_val: "../data/Validation/Run_0001/images/frame_02634.png"
        string_val: "../data/Validation/Run_0001/images/frame_02433.png"
        string_val: "../data/Validation/Run_0001/images/frame_02290.png"
        string_val: "../data/Validation/Run_0001/images/frame_03374.png"
        string_val: "../data/Validation/Run_0001/images/frame_04365.png"
        string_val: "../data/Validation/Run_0001/images/frame_01545.png"
        string_val: "../data/Validation/Run_0001/images/frame_03008.png"
        string_val: "../data/Validation/Run_0001/images/frame_00079.png"
        string_val: "../data/Validation/Run_0001/images/frame_00797.png"
        string_val: "../data/Validation/Run_0001/images/frame_00693.png"
        string_val: "../data/Validation/Run_0001/images/frame_00440.png"
        string_val: "../data/Validation/Run_0001/images/frame_01370.png"
        string_val: "../data/Validation/Run_0001/images/frame_00300.png"
        string_val: "../data/Validation/Run_0001/images/frame_00714.png"
        string_val: "../data/Validation/Run_0001/images/frame_02775.png"
        string_val: "../data/Validation/Run_0001/images/frame_01131.png"
        string_val: "../data/Validation/Run_0001/images/frame_05043.png"
        string_val: "../data/Validation/Run_0001/images/frame_01271.png"
        string_val: "../data/Validation/Run_0001/images/frame_01085.png"
        string_val: "../data/Validation/Run_0001/images/frame_02973.png"
        string_val: "../data/Validation/Run_0001/images/frame_00665.png"
        string_val: "../data/Validation/Run_0001/images/frame_02622.png"
        string_val: "../data/Validation/Run_0001/images/frame_00701.png"
        string_val: "../data/Validation/Run_0001/images/frame_03499.png"
        string_val: "../data/Validation/Run_0001/images/frame_01200.png"
        string_val: "../data/Validation/Run_0001/images/frame_03209.png"
        string_val: "../data/Validation/Run_0001/images/frame_03284.png"
        string_val: "../data/Validation/Run_0001/images/frame_00601.png"
        string_val: "../data/Validation/Run_0001/images/frame_03427.png"
        string_val: "../data/Validation/Run_0001/images/frame_00532.png"
        string_val: "../data/Validation/Run_0001/images/frame_02879.png"
        string_val: "../data/Validation/Run_0001/images/frame_01434.png"
        string_val: "../data/Validation/Run_0001/images/frame_05066.png"
        string_val: "../data/Validation/Run_0001/images/frame_02077.png"
        string_val: "../data/Validation/Run_0001/images/frame_03042.png"
        string_val: "../data/Validation/Run_0001/images/frame_04637.png"
        string_val: "../data/Validation/Run_0001/images/frame_01866.png"
        string_val: "../data/Validation/Run_0001/images/frame_00889.png"
        string_val: "../data/Validation/Run_0001/images/frame_00937.png"
        string_val: "../data/Validation/Run_0001/images/frame_02952.png"
        string_val: "../data/Validation/Run_0001/images/frame_03312.png"
        string_val: "../data/Validation/Run_0001/images/frame_02153.png"
        string_val: "../data/Validation/Run_0001/images/frame_01654.png"
        string_val: "../data/Validation/Run_0001/images/frame_04918.png"
        string_val: "../data/Validation/Run_0001/images/frame_01204.png"
        string_val: "../data/Validation/Run_0001/images/frame_00094.png"
        string_val: "../data/Validation/Run_0001/images/frame_04505.png"
        string_val: "../data/Validation/Run_0001/images/frame_00495.png"
        string_val: "../data/Validation/Run_0001/images/frame_03797.png"
        string_val: "../data/Validation/Run_0001/images/frame_04349.png"
        string_val: "../data/Validation/Run_0001/images/frame_02827.png"
        string_val: "../data/Validation/Run_0001/images/frame_00793.png"
        string_val: "../data/Validation/Run_0001/images/frame_04536.png"
        string_val: "../data/Validation/Run_0001/images/frame_01488.png"
        string_val: "../data/Validation/Run_0001/images/frame_03549.png"
        string_val: "../data/Validation/Run_0001/images/frame_03223.png"
        string_val: "../data/Validation/Run_0001/images/frame_02938.png"
        string_val: "../data/Validation/Run_0001/images/frame_02730.png"
        string_val: "../data/Validation/Run_0001/images/frame_04741.png"
        string_val: "../data/Validation/Run_0001/images/frame_00998.png"
        string_val: "../data/Validation/Run_0001/images/frame_02458.png"
        string_val: "../data/Validation/Run_0001/images/frame_00338.png"
        string_val: "../data/Validation/Run_0001/images/frame_02323.png"
        string_val: "../data/Validation/Run_0001/images/frame_02352.png"
        string_val: "../data/Validation/Run_0001/images/frame_01192.png"
        string_val: "../data/Validation/Run_0001/images/frame_01635.png"
        string_val: "../data/Validation/Run_0001/images/frame_00367.png"
        string_val: "../data/Validation/Run_0001/images/frame_04855.png"
        string_val: "../data/Validation/Run_0001/images/frame_04435.png"
        string_val: "../data/Validation/Run_0001/images/frame_01604.png"
        string_val: "../data/Validation/Run_0001/images/frame_02520.png"
        string_val: "../data/Validation/Run_0001/images/frame_04956.png"
        string_val: "../data/Validation/Run_0001/images/frame_00486.png"
        string_val: "../data/Validation/Run_0001/images/frame_00391.png"
        string_val: "../data/Validation/Run_0001/images/frame_00552.png"
        string_val: "../data/Validation/Run_0001/images/frame_00511.png"
        string_val: "../data/Validation/Run_0001/images/frame_04721.png"
        string_val: "../data/Validation/Run_0001/images/frame_01121.png"
        string_val: "../data/Validation/Run_0001/images/frame_04699.png"
        string_val: "../data/Validation/Run_0001/images/frame_03355.png"
        string_val: "../data/Validation/Run_0001/images/frame_03679.png"
        string_val: "../data/Validation/Run_0001/images/frame_02149.png"
        string_val: "../data/Validation/Run_0001/images/frame_04659.png"
        string_val: "../data/Validation/Run_0001/images/frame_00720.png"
        string_val: "../data/Validation/Run_0001/images/frame_01883.png"
        string_val: "../data/Validation/Run_0001/images/frame_03974.png"
        string_val: "../data/Validation/Run_0001/images/frame_03033.png"
        string_val: "../data/Validation/Run_0001/images/frame_02552.png"
        string_val: "../data/Validation/Run_0001/images/frame_00474.png"
        string_val: "../data/Validation/Run_0001/images/frame_01624.png"
        string_val: "../data/Validation/Run_0001/images/frame_00350.png"
        string_val: "../data/Validation/Run_0001/images/frame_03294.png"
        string_val: "../data/Validation/Run_0001/images/frame_02112.png"
        string_val: "../data/Validation/Run_0001/images/frame_01481.png"
        string_val: "../data/Validation/Run_0001/images/frame_04250.png"
        string_val: "../data/Validation/Run_0001/images/frame_02545.png"
        string_val: "../data/Validation/Run_0001/images/frame_00291.png"
        string_val: "../data/Validation/Run_0001/images/frame_04995.png"
        string_val: "../data/Validation/Run_0001/images/frame_01023.png"
        string_val: "../data/Validation/Run_0001/images/frame_01506.png"
        string_val: "../data/Validation/Run_0001/images/frame_01328.png"
        string_val: "../data/Validation/Run_0001/images/frame_00458.png"
        string_val: "../data/Validation/Run_0001/images/frame_03386.png"
        string_val: "../data/Validation/Run_0001/images/frame_04746.png"
        string_val: "../data/Validation/Run_0001/images/frame_02124.png"
        string_val: "../data/Validation/Run_0001/images/frame_00597.png"
        string_val: "../data/Validation/Run_0001/images/frame_03179.png"
        string_val: "../data/Validation/Run_0001/images/frame_02703.png"
        string_val: "../data/Validation/Run_0001/images/frame_04162.png"
        string_val: "../data/Validation/Run_0001/images/frame_03054.png"
        string_val: "../data/Validation/Run_0001/images/frame_00787.png"
        string_val: "../data/Validation/Run_0001/images/frame_00635.png"
        string_val: "../data/Validation/Run_0001/images/frame_04457.png"
        string_val: "../data/Validation/Run_0001/images/frame_02818.png"
        string_val: "../data/Validation/Run_0001/images/frame_03454.png"
        string_val: "../data/Validation/Run_0001/images/frame_04611.png"
        string_val: "../data/Validation/Run_0001/images/frame_01138.png"
        string_val: "../data/Validation/Run_0001/images/frame_02632.png"
        string_val: "../data/Validation/Run_0001/images/frame_03519.png"
        string_val: "../data/Validation/Run_0001/images/frame_03558.png"
        string_val: "../data/Validation/Run_0001/images/frame_02993.png"
        string_val: "../data/Validation/Run_0001/images/frame_02480.png"
        string_val: "../data/Validation/Run_0001/images/frame_03883.png"
        string_val: "../data/Validation/Run_0001/images/frame_05062.png"
        string_val: "../data/Validation/Run_0001/images/frame_03344.png"
        string_val: "../data/Validation/Run_0001/images/frame_03850.png"
        string_val: "../data/Validation/Run_0001/images/frame_02781.png"
        string_val: "../data/Validation/Run_0001/images/frame_00221.png"
        string_val: "../data/Validation/Run_0001/images/frame_02641.png"
        string_val: "../data/Validation/Run_0001/images/frame_04879.png"
        string_val: "../data/Validation/Run_0001/images/frame_00745.png"
        string_val: "../data/Validation/Run_0001/images/frame_00152.png"
        string_val: "../data/Validation/Run_0001/images/frame_01890.png"
        string_val: "../data/Validation/Run_0001/images/frame_03704.png"
        string_val: "../data/Validation/Run_0001/images/frame_04251.png"
        string_val: "../data/Validation/Run_0001/images/frame_00262.png"
        string_val: "../data/Validation/Run_0001/images/frame_00395.png"
        string_val: "../data/Validation/Run_0001/images/frame_05041.png"
        string_val: "../data/Validation/Run_0001/images/frame_04344.png"
        string_val: "../data/Validation/Run_0001/images/frame_00535.png"
        string_val: "../data/Validation/Run_0001/images/frame_00829.png"
        string_val: "../data/Validation/Run_0001/images/frame_01438.png"
        string_val: "../data/Validation/Run_0001/images/frame_00441.png"
        string_val: "../data/Validation/Run_0001/images/frame_01893.png"
        string_val: "../data/Validation/Run_0001/images/frame_04194.png"
        string_val: "../data/Validation/Run_0001/images/frame_01203.png"
        string_val: "../data/Validation/Run_0001/images/frame_01781.png"
        string_val: "../data/Validation/Run_0001/images/frame_00332.png"
        string_val: "../data/Validation/Run_0001/images/frame_04345.png"
        string_val: "../data/Validation/Run_0001/images/frame_04866.png"
        string_val: "../data/Validation/Run_0001/images/frame_04214.png"
        string_val: "../data/Validation/Run_0001/images/frame_04916.png"
        string_val: "../data/Validation/Run_0001/images/frame_01449.png"
        string_val: "../data/Validation/Run_0001/images/frame_00574.png"
        string_val: "../data/Validation/Run_0001/images/frame_03901.png"
        string_val: "../data/Validation/Run_0001/images/frame_02565.png"
        string_val: "../data/Validation/Run_0001/images/frame_00857.png"
        string_val: "../data/Validation/Run_0001/images/frame_02448.png"
        string_val: "../data/Validation/Run_0001/images/frame_03976.png"
        string_val: "../data/Validation/Run_0001/images/frame_00781.png"
        string_val: "../data/Validation/Run_0001/images/frame_00833.png"
        string_val: "../data/Validation/Run_0001/images/frame_03981.png"
        string_val: "../data/Validation/Run_0001/images/frame_04004.png"
        string_val: "../data/Validation/Run_0001/images/frame_00318.png"
        string_val: "../data/Validation/Run_0001/images/frame_02884.png"
        string_val: "../data/Validation/Run_0001/images/frame_02627.png"
        string_val: "../data/Validation/Run_0001/images/frame_00816.png"
        string_val: "../data/Validation/Run_0001/images/frame_01420.png"
        string_val: "../data/Validation/Run_0001/images/frame_02989.png"
        string_val: "../data/Validation/Run_0001/images/frame_02403.png"
        string_val: "../data/Validation/Run_0001/images/frame_01445.png"
        string_val: "../data/Validation/Run_0001/images/frame_04381.png"
        string_val: "../data/Validation/Run_0001/images/frame_03505.png"
        string_val: "../data/Validation/Run_0001/images/frame_00645.png"
        string_val: "../data/Validation/Run_0001/images/frame_02709.png"
        string_val: "../data/Validation/Run_0001/images/frame_04551.png"
        string_val: "../data/Validation/Run_0001/images/frame_04973.png"
        string_val: "../data/Validation/Run_0001/images/frame_02364.png"
        string_val: "../data/Validation/Run_0001/images/frame_03234.png"
        string_val: "../data/Validation/Run_0001/images/frame_03168.png"
        string_val: "../data/Validation/Run_0001/images/frame_04249.png"
        string_val: "../data/Validation/Run_0001/images/frame_02415.png"
        string_val: "../data/Validation/Run_0001/images/frame_02166.png"
        string_val: "../data/Validation/Run_0001/images/frame_02754.png"
        string_val: "../data/Validation/Run_0001/images/frame_04623.png"
        string_val: "../data/Validation/Run_0001/images/frame_04073.png"
        string_val: "../data/Validation/Run_0001/images/frame_01372.png"
        string_val: "../data/Validation/Run_0001/images/frame_03932.png"
        string_val: "../data/Validation/Run_0001/images/frame_04614.png"
        string_val: "../data/Validation/Run_0001/images/frame_02898.png"
        string_val: "../data/Validation/Run_0001/images/frame_03308.png"
        string_val: "../data/Validation/Run_0001/images/frame_04273.png"
        string_val: "../data/Validation/Run_0001/images/frame_04697.png"
        string_val: "../data/Validation/Run_0001/images/frame_02103.png"
        string_val: "../data/Validation/Run_0001/images/frame_02690.png"
        string_val: "../data/Validation/Run_0001/images/frame_04136.png"
        string_val: "../data/Validation/Run_0001/images/frame_03010.png"
        string_val: "../data/Validation/Run_0001/images/frame_00216.png"
        string_val: "../data/Validation/Run_0001/images/frame_01297.png"
        string_val: "../data/Validation/Run_0001/images/frame_05053.png"
        string_val: "../data/Validation/Run_0001/images/frame_04542.png"
        string_val: "../data/Validation/Run_0001/images/frame_04964.png"
        string_val: "../data/Validation/Run_0001/images/frame_01447.png"
        string_val: "../data/Validation/Run_0001/images/frame_00091.png"
        string_val: "../data/Validation/Run_0001/images/frame_02394.png"
        string_val: "../data/Validation/Run_0001/images/frame_02444.png"
        string_val: "../data/Validation/Run_0001/images/frame_01125.png"
        string_val: "../data/Validation/Run_0001/images/frame_04104.png"
        string_val: "../data/Validation/Run_0001/images/frame_01846.png"
        string_val: "../data/Validation/Run_0001/images/frame_03214.png"
        string_val: "../data/Validation/Run_0001/images/frame_01887.png"
        string_val: "../data/Validation/Run_0001/images/frame_03252.png"
        string_val: "../data/Validation/Run_0001/images/frame_01539.png"
        string_val: "../data/Validation/Run_0001/images/frame_00245.png"
        string_val: "../data/Validation/Run_0001/images/frame_02226.png"
        string_val: "../data/Validation/Run_0001/images/frame_04790.png"
        string_val: "../data/Validation/Run_0001/images/frame_03646.png"
        string_val: "../data/Validation/Run_0001/images/frame_04829.png"
        string_val: "../data/Validation/Run_0001/images/frame_04967.png"
        string_val: "../data/Validation/Run_0001/images/frame_00934.png"
        string_val: "../data/Validation/Run_0001/images/frame_01031.png"
        string_val: "../data/Validation/Run_0001/images/frame_00164.png"
        string_val: "../data/Validation/Run_0001/images/frame_02897.png"
        string_val: "../data/Validation/Run_0001/images/frame_03438.png"
        string_val: "../data/Validation/Run_0001/images/frame_01341.png"
        string_val: "../data/Validation/Run_0001/images/frame_05065.png"
        string_val: "../data/Validation/Run_0001/images/frame_03900.png"
        string_val: "../data/Validation/Run_0001/images/frame_01794.png"
        string_val: "../data/Validation/Run_0001/images/frame_00306.png"
        string_val: "../data/Validation/Run_0001/images/frame_02089.png"
        string_val: "../data/Validation/Run_0001/images/frame_00943.png"
        string_val: "../data/Validation/Run_0001/images/frame_02931.png"
        string_val: "../data/Validation/Run_0001/images/frame_02190.png"
        string_val: "../data/Validation/Run_0001/images/frame_01327.png"
        string_val: "../data/Validation/Run_0001/images/frame_04993.png"
        string_val: "../data/Validation/Run_0001/images/frame_01061.png"
        string_val: "../data/Validation/Run_0001/images/frame_02350.png"
        string_val: "../data/Validation/Run_0001/images/frame_01132.png"
        string_val: "../data/Validation/Run_0001/images/frame_04483.png"
        string_val: "../data/Validation/Run_0001/images/frame_02920.png"
        string_val: "../data/Validation/Run_0001/images/frame_03793.png"
        string_val: "../data/Validation/Run_0001/images/frame_01006.png"
        string_val: "../data/Validation/Run_0001/images/frame_00763.png"
        string_val: "../data/Validation/Run_0001/images/frame_00817.png"
        string_val: "../data/Validation/Run_0001/images/frame_03790.png"
        string_val: "../data/Validation/Run_0001/images/frame_03150.png"
        string_val: "../data/Validation/Run_0001/images/frame_01307.png"
        string_val: "../data/Validation/Run_0001/images/frame_04794.png"
        string_val: "../data/Validation/Run_0001/images/frame_03075.png"
        string_val: "../data/Validation/Run_0001/images/frame_02544.png"
        string_val: "../data/Validation/Run_0001/images/frame_05060.png"
        string_val: "../data/Validation/Run_0001/images/frame_04574.png"
        string_val: "../data/Validation/Run_0001/images/frame_03562.png"
        string_val: "../data/Validation/Run_0001/images/frame_03940.png"
        string_val: "../data/Validation/Run_0001/images/frame_03820.png"
        string_val: "../data/Validation/Run_0001/images/frame_02435.png"
        string_val: "../data/Validation/Run_0001/images/frame_00335.png"
        string_val: "../data/Validation/Run_0001/images/frame_03459.png"
        string_val: "../data/Validation/Run_0001/images/frame_02360.png"
        string_val: "../data/Validation/Run_0001/images/frame_04635.png"
        string_val: "../data/Validation/Run_0001/images/frame_03911.png"
        string_val: "../data/Validation/Run_0001/images/frame_03153.png"
        string_val: "../data/Validation/Run_0001/images/frame_00093.png"
        string_val: "../data/Validation/Run_0001/images/frame_04257.png"
        string_val: "../data/Validation/Run_0001/images/frame_04007.png"
        string_val: "../data/Validation/Run_0001/images/frame_01862.png"
        string_val: "../data/Validation/Run_0001/images/frame_04165.png"
        string_val: "../data/Validation/Run_0001/images/frame_04847.png"
        string_val: "../data/Validation/Run_0001/images/frame_02457.png"
        string_val: "../data/Validation/Run_0001/images/frame_00123.png"
        string_val: "../data/Validation/Run_0001/images/frame_02558.png"
        string_val: "../data/Validation/Run_0001/images/frame_03479.png"
        string_val: "../data/Validation/Run_0001/images/frame_00611.png"
        string_val: "../data/Validation/Run_0001/images/frame_01279.png"
        string_val: "../data/Validation/Run_0001/images/frame_02123.png"
        string_val: "../data/Validation/Run_0001/images/frame_03876.png"
        string_val: "../data/Validation/Run_0001/images/frame_02843.png"
        string_val: "../data/Validation/Run_0001/images/frame_01929.png"
        string_val: "../data/Validation/Run_0001/images/frame_03522.png"
        string_val: "../data/Validation/Run_0001/images/frame_02568.png"
        string_val: "../data/Validation/Run_0001/images/frame_00969.png"
        string_val: "../data/Validation/Run_0001/images/frame_03689.png"
        string_val: "../data/Validation/Run_0001/images/frame_03506.png"
        string_val: "../data/Validation/Run_0001/images/frame_01301.png"
        string_val: "../data/Validation/Run_0001/images/frame_04380.png"
        string_val: "../data/Validation/Run_0001/images/frame_02984.png"
        string_val: "../data/Validation/Run_0001/images/frame_00107.png"
        string_val: "../data/Validation/Run_0001/images/frame_04710.png"
        string_val: "../data/Validation/Run_0001/images/frame_04783.png"
        string_val: "../data/Validation/Run_0001/images/frame_04719.png"
        string_val: "../data/Validation/Run_0001/images/frame_02288.png"
        string_val: "../data/Validation/Run_0001/images/frame_00434.png"
        string_val: "../data/Validation/Run_0001/images/frame_03060.png"
        string_val: "../data/Validation/Run_0001/images/frame_02609.png"
        string_val: "../data/Validation/Run_0001/images/frame_03521.png"
        string_val: "../data/Validation/Run_0001/images/frame_03764.png"
        string_val: "../data/Validation/Run_0001/images/frame_02701.png"
        string_val: "../data/Validation/Run_0001/images/frame_02746.png"
        string_val: "../data/Validation/Run_0001/images/frame_03433.png"
        string_val: "../data/Validation/Run_0001/images/frame_02417.png"
        string_val: "../data/Validation/Run_0001/images/frame_04146.png"
        string_val: "../data/Validation/Run_0001/images/frame_05044.png"
        string_val: "../data/Validation/Run_0001/images/frame_02277.png"
        string_val: "../data/Validation/Run_0001/images/frame_03552.png"
        string_val: "../data/Validation/Run_0001/images/frame_00012.png"
        string_val: "../data/Validation/Run_0001/images/frame_00388.png"
        string_val: "../data/Validation/Run_0001/images/frame_03018.png"
        string_val: "../data/Validation/Run_0001/images/frame_04075.png"
        string_val: "../data/Validation/Run_0001/images/frame_05094.png"
        string_val: "../data/Validation/Run_0001/images/frame_01476.png"
        string_val: "../data/Validation/Run_0001/images/frame_03362.png"
        string_val: "../data/Validation/Run_0001/images/frame_02214.png"
        string_val: "../data/Validation/Run_0001/images/frame_04591.png"
        string_val: "../data/Validation/Run_0001/images/frame_04267.png"
        string_val: "../data/Validation/Run_0001/images/frame_01228.png"
        string_val: "../data/Validation/Run_0001/images/frame_01511.png"
        string_val: "../data/Validation/Run_0001/images/frame_03945.png"
        string_val: "../data/Validation/Run_0001/images/frame_03512.png"
        string_val: "../data/Validation/Run_0001/images/frame_04328.png"
        string_val: "../data/Validation/Run_0001/images/frame_01549.png"
        string_val: "../data/Validation/Run_0001/images/frame_01947.png"
        string_val: "../data/Validation/Run_0001/images/frame_04329.png"
        string_val: "../data/Validation/Run_0001/images/frame_01557.png"
        string_val: "../data/Validation/Run_0001/images/frame_01077.png"
        string_val: "../data/Validation/Run_0001/images/frame_03403.png"
        string_val: "../data/Validation/Run_0001/images/frame_00149.png"
        string_val: "../data/Validation/Run_0001/images/frame_00561.png"
        string_val: "../data/Validation/Run_0001/images/frame_01731.png"
        string_val: "../data/Validation/Run_0001/images/frame_04315.png"
        string_val: "../data/Validation/Run_0001/images/frame_02773.png"
        string_val: "../data/Validation/Run_0001/images/frame_04686.png"
        string_val: "../data/Validation/Run_0001/images/frame_03136.png"
        string_val: "../data/Validation/Run_0001/images/frame_00619.png"
        string_val: "../data/Validation/Run_0001/images/frame_01238.png"
        string_val: "../data/Validation/Run_0001/images/frame_03994.png"
        string_val: "../data/Validation/Run_0001/images/frame_00989.png"
        string_val: "../data/Validation/Run_0001/images/frame_02137.png"
        string_val: "../data/Validation/Run_0001/images/frame_01108.png"
        string_val: "../data/Validation/Run_0001/images/frame_01171.png"
        string_val: "../data/Validation/Run_0001/images/frame_03373.png"
        string_val: "../data/Validation/Run_0001/images/frame_02262.png"
        string_val: "../data/Validation/Run_0001/images/frame_03818.png"
        string_val: "../data/Validation/Run_0001/images/frame_04592.png"
        string_val: "../data/Validation/Run_0001/images/frame_03929.png"
        string_val: "../data/Validation/Run_0001/images/frame_02681.png"
        string_val: "../data/Validation/Run_0001/images/frame_02742.png"
        string_val: "../data/Validation/Run_0001/images/frame_03332.png"
        string_val: "../data/Validation/Run_0001/images/frame_01477.png"
        string_val: "../data/Validation/Run_0001/images/frame_02498.png"
        string_val: "../data/Validation/Run_0001/images/frame_03561.png"
        string_val: "../data/Validation/Run_0001/images/frame_04997.png"
        string_val: "../data/Validation/Run_0001/images/frame_00419.png"
        string_val: "../data/Validation/Run_0001/images/frame_01953.png"
        string_val: "../data/Validation/Run_0001/images/frame_03673.png"
        string_val: "../data/Validation/Run_0001/images/frame_01451.png"
        string_val: "../data/Validation/Run_0001/images/frame_00396.png"
        string_val: "../data/Validation/Run_0001/images/frame_03740.png"
        string_val: "../data/Validation/Run_0001/images/frame_02230.png"
        string_val: "../data/Validation/Run_0001/images/frame_04736.png"
        string_val: "../data/Validation/Run_0001/images/frame_03347.png"
        string_val: "../data/Validation/Run_0001/images/frame_02644.png"
        string_val: "../data/Validation/Run_0001/images/frame_00235.png"
        string_val: "../data/Validation/Run_0001/images/frame_02440.png"
        string_val: "../data/Validation/Run_0001/images/frame_02297.png"
        string_val: "../data/Validation/Run_0001/images/frame_02971.png"
        string_val: "../data/Validation/Run_0001/images/frame_02830.png"
        string_val: "../data/Validation/Run_0001/images/frame_00658.png"
        string_val: "../data/Validation/Run_0001/images/frame_04640.png"
        string_val: "../data/Validation/Run_0001/images/frame_04990.png"
        string_val: "../data/Validation/Run_0001/images/frame_00464.png"
        string_val: "../data/Validation/Run_0001/images/frame_02959.png"
        string_val: "../data/Validation/Run_0001/images/frame_02583.png"
        string_val: "../data/Validation/Run_0001/images/frame_04219.png"
        string_val: "../data/Validation/Run_0001/images/frame_02087.png"
        string_val: "../data/Validation/Run_0001/images/frame_00021.png"
        string_val: "../data/Validation/Run_0001/images/frame_03563.png"
        string_val: "../data/Validation/Run_0001/images/frame_03950.png"
        string_val: "../data/Validation/Run_0001/images/frame_05028.png"
        string_val: "../data/Validation/Run_0001/images/frame_00992.png"
        string_val: "../data/Validation/Run_0001/images/frame_01531.png"
        string_val: "../data/Validation/Run_0001/images/frame_00214.png"
        string_val: "../data/Validation/Run_0001/images/frame_04321.png"
        string_val: "../data/Validation/Run_0001/images/frame_01381.png"
        string_val: "../data/Validation/Run_0001/images/frame_01383.png"
        string_val: "../data/Validation/Run_0001/images/frame_02700.png"
        string_val: "../data/Validation/Run_0001/images/frame_03178.png"
        string_val: "../data/Validation/Run_0001/images/frame_03324.png"
        string_val: "../data/Validation/Run_0001/images/frame_03502.png"
        string_val: "../data/Validation/Run_0001/images/frame_02771.png"
        string_val: "../data/Validation/Run_0001/images/frame_01032.png"
        string_val: "../data/Validation/Run_0001/images/frame_04698.png"
        string_val: "../data/Validation/Run_0001/images/frame_03650.png"
        string_val: "../data/Validation/Run_0001/images/frame_02534.png"
        string_val: "../data/Validation/Run_0001/images/frame_04835.png"
        string_val: "../data/Validation/Run_0001/images/frame_04179.png"
        string_val: "../data/Validation/Run_0001/images/frame_03258.png"
        string_val: "../data/Validation/Run_0001/images/frame_00333.png"
        string_val: "../data/Validation/Run_0001/images/frame_02907.png"
        string_val: "../data/Validation/Run_0001/images/frame_00607.png"
        string_val: "../data/Validation/Run_0001/images/frame_03141.png"
        string_val: "../data/Validation/Run_0001/images/frame_03612.png"
        string_val: "../data/Validation/Run_0001/images/frame_02340.png"
        string_val: "../data/Validation/Run_0001/images/frame_00187.png"
        string_val: "../data/Validation/Run_0001/images/frame_03643.png"
        string_val: "../data/Validation/Run_0001/images/frame_04935.png"
        string_val: "../data/Validation/Run_0001/images/frame_04888.png"
        string_val: "../data/Validation/Run_0001/images/frame_01083.png"
        string_val: "../data/Validation/Run_0001/images/frame_01597.png"
        string_val: "../data/Validation/Run_0001/images/frame_03243.png"
        string_val: "../data/Validation/Run_0001/images/frame_01573.png"
        string_val: "../data/Validation/Run_0001/images/frame_00293.png"
        string_val: "../data/Validation/Run_0001/images/frame_03301.png"
        string_val: "../data/Validation/Run_0001/images/frame_00376.png"
        string_val: "../data/Validation/Run_0001/images/frame_04240.png"
        string_val: "../data/Validation/Run_0001/images/frame_02321.png"
        string_val: "../data/Validation/Run_0001/images/frame_02820.png"
        string_val: "../data/Validation/Run_0001/images/frame_00143.png"
        string_val: "../data/Validation/Run_0001/images/frame_02197.png"
        string_val: "../data/Validation/Run_0001/images/frame_04292.png"
        string_val: "../data/Validation/Run_0001/images/frame_04881.png"
        string_val: "../data/Validation/Run_0001/images/frame_00863.png"
        string_val: "../data/Validation/Run_0001/images/frame_03926.png"
        string_val: "../data/Validation/Run_0001/images/frame_03325.png"
        string_val: "../data/Validation/Run_0001/images/frame_03930.png"
        string_val: "../data/Validation/Run_0001/images/frame_01036.png"
        string_val: "../data/Validation/Run_0001/images/frame_02648.png"
        string_val: "../data/Validation/Run_0001/images/frame_01059.png"
        string_val: "../data/Validation/Run_0001/images/frame_00673.png"
        string_val: "../data/Validation/Run_0001/images/frame_01957.png"
        string_val: "../data/Validation/Run_0001/images/frame_00882.png"
        string_val: "../data/Validation/Run_0001/images/frame_02310.png"
        string_val: "../data/Validation/Run_0001/images/frame_02922.png"
        string_val: "../data/Validation/Run_0001/images/frame_01149.png"
        string_val: "../data/Validation/Run_0001/images/frame_04939.png"
        string_val: "../data/Validation/Run_0001/images/frame_02363.png"
        string_val: "../data/Validation/Run_0001/images/frame_01037.png"
        string_val: "../data/Validation/Run_0001/images/frame_00630.png"
        string_val: "../data/Validation/Run_0001/images/frame_02850.png"
        string_val: "../data/Validation/Run_0001/images/frame_02178.png"
        string_val: "../data/Validation/Run_0001/images/frame_04418.png"
        string_val: "../data/Validation/Run_0001/images/frame_01676.png"
        string_val: "../data/Validation/Run_0001/images/frame_00818.png"
        string_val: "../data/Validation/Run_0001/images/frame_04020.png"
        string_val: "../data/Validation/Run_0001/images/frame_00975.png"
        string_val: "../data/Validation/Run_0001/images/frame_03503.png"
        string_val: "../data/Validation/Run_0001/images/frame_03041.png"
        string_val: "../data/Validation/Run_0001/images/frame_02168.png"
        string_val: "../data/Validation/Run_0001/images/frame_04347.png"
        string_val: "../data/Validation/Run_0001/images/frame_00639.png"
        string_val: "../data/Validation/Run_0001/images/frame_02061.png"
        string_val: "../data/Validation/Run_0001/images/frame_02074.png"
        string_val: "../data/Validation/Run_0001/images/frame_01409.png"
        string_val: "../data/Validation/Run_0001/images/frame_00914.png"
        string_val: "../data/Validation/Run_0001/images/frame_03439.png"
        string_val: "../data/Validation/Run_0001/images/frame_01767.png"
        string_val: "../data/Validation/Run_0001/images/frame_04876.png"
        string_val: "../data/Validation/Run_0001/images/frame_02082.png"
        string_val: "../data/Validation/Run_0001/images/frame_01925.png"
        string_val: "../data/Validation/Run_0001/images/frame_03498.png"
        string_val: "../data/Validation/Run_0001/images/frame_02727.png"
        string_val: "../data/Validation/Run_0001/images/frame_00834.png"
        string_val: "../data/Validation/Run_0001/images/frame_01790.png"
        string_val: "../data/Validation/Run_0001/images/frame_03202.png"
        string_val: "../data/Validation/Run_0001/images/frame_04364.png"
        string_val: "../data/Validation/Run_0001/images/frame_02833.png"
        string_val: "../data/Validation/Run_0001/images/frame_03748.png"
        string_val: "../data/Validation/Run_0001/images/frame_03962.png"
        string_val: "../data/Validation/Run_0001/images/frame_03535.png"
        string_val: "../data/Validation/Run_0001/images/frame_01122.png"
        string_val: "../data/Validation/Run_0001/images/frame_02306.png"
        string_val: "../data/Validation/Run_0001/images/frame_02054.png"
        string_val: "../data/Validation/Run_0001/images/frame_01622.png"
        string_val: "../data/Validation/Run_0001/images/frame_02399.png"
        string_val: "../data/Validation/Run_0001/images/frame_00606.png"
        string_val: "../data/Validation/Run_0001/images/frame_01901.png"
        string_val: "../data/Validation/Run_0001/images/frame_01410.png"
        string_val: "../data/Validation/Run_0001/images/frame_05014.png"
        string_val: "../data/Validation/Run_0001/images/frame_01015.png"
        string_val: "../data/Validation/Run_0001/images/frame_00254.png"
        string_val: "../data/Validation/Run_0001/images/frame_04265.png"
        string_val: "../data/Validation/Run_0001/images/frame_01463.png"
        string_val: "../data/Validation/Run_0001/images/frame_04454.png"
        string_val: "../data/Validation/Run_0001/images/frame_03072.png"
        string_val: "../data/Validation/Run_0001/images/frame_03717.png"
        string_val: "../data/Validation/Run_0001/images/frame_02978.png"
        string_val: "../data/Validation/Run_0001/images/frame_00621.png"
        string_val: "../data/Validation/Run_0001/images/frame_02748.png"
        string_val: "../data/Validation/Run_0001/images/frame_04289.png"
        string_val: "../data/Validation/Run_0001/images/frame_01168.png"
        string_val: "../data/Validation/Run_0001/images/frame_00569.png"
        string_val: "../data/Validation/Run_0001/images/frame_04494.png"
        string_val: "../data/Validation/Run_0001/images/frame_02248.png"
        string_val: "../data/Validation/Run_0001/images/frame_01709.png"
        string_val: "../data/Validation/Run_0001/images/frame_02492.png"
        string_val: "../data/Validation/Run_0001/images/frame_02376.png"
        string_val: "../data/Validation/Run_0001/images/frame_03307.png"
        string_val: "../data/Validation/Run_0001/images/frame_02750.png"
        string_val: "../data/Validation/Run_0001/images/frame_01457.png"
        string_val: "../data/Validation/Run_0001/images/frame_01151.png"
        string_val: "../data/Validation/Run_0001/images/frame_01791.png"
        string_val: "../data/Validation/Run_0001/images/frame_02434.png"
        string_val: "../data/Validation/Run_0001/images/frame_01464.png"
        string_val: "../data/Validation/Run_0001/images/frame_04139.png"
        string_val: "../data/Validation/Run_0001/images/frame_00063.png"
        string_val: "../data/Validation/Run_0001/images/frame_03783.png"
        string_val: "../data/Validation/Run_0001/images/frame_00196.png"
        string_val: "../data/Validation/Run_0001/images/frame_00499.png"
        string_val: "../data/Validation/Run_0001/images/frame_01252.png"
        string_val: "../data/Validation/Run_0001/images/frame_02722.png"
        string_val: "../data/Validation/Run_0001/images/frame_01175.png"
        string_val: "../data/Validation/Run_0001/images/frame_03993.png"
        string_val: "../data/Validation/Run_0001/images/frame_01770.png"
        string_val: "../data/Validation/Run_0001/images/frame_02143.png"
        string_val: "../data/Validation/Run_0001/images/frame_03813.png"
        string_val: "../data/Validation/Run_0001/images/frame_04283.png"
        string_val: "../data/Validation/Run_0001/images/frame_03216.png"
        string_val: "../data/Validation/Run_0001/images/frame_01294.png"
        string_val: "../data/Validation/Run_0001/images/frame_04025.png"
        string_val: "../data/Validation/Run_0001/images/frame_04688.png"
        string_val: "../data/Validation/Run_0001/images/frame_01182.png"
        string_val: "../data/Validation/Run_0001/images/frame_02068.png"
        string_val: "../data/Validation/Run_0001/images/frame_01362.png"
        string_val: "../data/Validation/Run_0001/images/frame_00268.png"
        string_val: "../data/Validation/Run_0001/images/frame_03676.png"
        string_val: "../data/Validation/Run_0001/images/frame_03064.png"
        string_val: "../data/Validation/Run_0001/images/frame_03423.png"
        string_val: "../data/Validation/Run_0001/images/frame_01692.png"
        string_val: "../data/Validation/Run_0001/images/frame_03402.png"
        string_val: "../data/Validation/Run_0001/images/frame_04816.png"
        string_val: "../data/Validation/Run_0001/images/frame_03755.png"
        string_val: "../data/Validation/Run_0001/images/frame_03774.png"
        string_val: "../data/Validation/Run_0001/images/frame_01547.png"
        string_val: "../data/Validation/Run_0001/images/frame_01560.png"
        string_val: "../data/Validation/Run_0001/images/frame_03546.png"
        string_val: "../data/Validation/Run_0001/images/frame_03877.png"
        string_val: "../data/Validation/Run_0001/images/frame_02237.png"
        string_val: "../data/Validation/Run_0001/images/frame_02980.png"
        string_val: "../data/Validation/Run_0001/images/frame_03122.png"
        string_val: "../data/Validation/Run_0001/images/frame_04036.png"
        string_val: "../data/Validation/Run_0001/images/frame_01486.png"
        string_val: "../data/Validation/Run_0001/images/frame_02041.png"
        string_val: "../data/Validation/Run_0001/images/frame_01474.png"
        string_val: "../data/Validation/Run_0001/images/frame_04516.png"
        string_val: "../data/Validation/Run_0001/images/frame_04644.png"
        string_val: "../data/Validation/Run_0001/images/frame_01821.png"
        string_val: "../data/Validation/Run_0001/images/frame_00557.png"
        string_val: "../data/Validation/Run_0001/images/frame_04750.png"
        string_val: "../data/Validation/Run_0001/images/frame_03928.png"
        string_val: "../data/Validation/Run_0001/images/frame_03268.png"
        string_val: "../data/Validation/Run_0001/images/frame_03290.png"
        string_val: "../data/Validation/Run_0001/images/frame_02919.png"
        string_val: "../data/Validation/Run_0001/images/frame_01027.png"
        string_val: "../data/Validation/Run_0001/images/frame_03691.png"
        string_val: "../data/Validation/Run_0001/images/frame_01594.png"
        string_val: "../data/Validation/Run_0001/images/frame_03382.png"
        string_val: "../data/Validation/Run_0001/images/frame_02047.png"
        string_val: "../data/Validation/Run_0001/images/frame_04745.png"
        string_val: "../data/Validation/Run_0001/images/frame_00067.png"
        string_val: "../data/Validation/Run_0001/images/frame_04424.png"
        string_val: "../data/Validation/Run_0001/images/frame_03435.png"
        string_val: "../data/Validation/Run_0001/images/frame_02413.png"
        string_val: "../data/Validation/Run_0001/images/frame_03808.png"
        string_val: "../data/Validation/Run_0001/images/frame_01582.png"
        string_val: "../data/Validation/Run_0001/images/frame_01324.png"
        string_val: "../data/Validation/Run_0001/images/frame_03016.png"
        string_val: "../data/Validation/Run_0001/images/frame_01508.png"
        string_val: "../data/Validation/Run_0001/images/frame_00484.png"
        string_val: "../data/Validation/Run_0001/images/frame_03801.png"
        string_val: "../data/Validation/Run_0001/images/frame_03975.png"
        string_val: "../data/Validation/Run_0001/images/frame_04044.png"
        string_val: "../data/Validation/Run_0001/images/frame_04715.png"
        string_val: "../data/Validation/Run_0001/images/frame_04316.png"
        string_val: "../data/Validation/Run_0001/images/frame_02189.png"
        string_val: "../data/Validation/Run_0001/images/frame_04060.png"
        string_val: "../data/Validation/Run_0001/images/frame_03543.png"
        string_val: "../data/Validation/Run_0001/images/frame_03015.png"
        string_val: "../data/Validation/Run_0001/images/frame_00918.png"
        string_val: "../data/Validation/Run_0001/images/frame_00471.png"
        string_val: "../data/Validation/Run_0001/images/frame_02767.png"
        string_val: "../data/Validation/Run_0001/images/frame_00973.png"
        string_val: "../data/Validation/Run_0001/images/frame_04559.png"
        string_val: "../data/Validation/Run_0001/images/frame_03177.png"
        string_val: "../data/Validation/Run_0001/images/frame_03718.png"
        string_val: "../data/Validation/Run_0001/images/frame_02795.png"
        string_val: "../data/Validation/Run_0001/images/frame_00146.png"
        string_val: "../data/Validation/Run_0001/images/frame_00270.png"
        string_val: "../data/Validation/Run_0001/images/frame_04184.png"
        string_val: "../data/Validation/Run_0001/images/frame_02011.png"
        string_val: "../data/Validation/Run_0001/images/frame_03201.png"
        string_val: "../data/Validation/Run_0001/images/frame_03442.png"
        string_val: "../data/Validation/Run_0001/images/frame_04853.png"
        string_val: "../data/Validation/Run_0001/images/frame_02086.png"
        string_val: "../data/Validation/Run_0001/images/frame_02454.png"
        string_val: "../data/Validation/Run_0001/images/frame_03105.png"
        string_val: "../data/Validation/Run_0001/images/frame_03879.png"
        string_val: "../data/Validation/Run_0001/images/frame_01348.png"
        string_val: "../data/Validation/Run_0001/images/frame_02539.png"
        string_val: "../data/Validation/Run_0001/images/frame_00712.png"
        string_val: "../data/Validation/Run_0001/images/frame_03399.png"
        string_val: "../data/Validation/Run_0001/images/frame_03226.png"
        string_val: "../data/Validation/Run_0001/images/frame_00309.png"
        string_val: "../data/Validation/Run_0001/images/frame_00702.png"
        string_val: "../data/Validation/Run_0001/images/frame_01424.png"
        string_val: "../data/Validation/Run_0001/images/frame_03765.png"
        string_val: "../data/Validation/Run_0001/images/frame_03477.png"
        string_val: "../data/Validation/Run_0001/images/frame_03238.png"
        string_val: "../data/Validation/Run_0001/images/frame_04166.png"
        string_val: "../data/Validation/Run_0001/images/frame_00941.png"
        string_val: "../data/Validation/Run_0001/images/frame_01748.png"
        string_val: "../data/Validation/Run_0001/images/frame_01321.png"
        string_val: "../data/Validation/Run_0001/images/frame_03469.png"
        string_val: "../data/Validation/Run_0001/images/frame_00055.png"
        string_val: "../data/Validation/Run_0001/images/frame_00649.png"
        string_val: "../data/Validation/Run_0001/images/frame_00632.png"
        string_val: "../data/Validation/Run_0001/images/frame_00005.png"
        string_val: "../data/Validation/Run_0001/images/frame_05033.png"
        string_val: "../data/Validation/Run_0001/images/frame_00954.png"
        string_val: "../data/Validation/Run_0001/images/frame_04356.png"
        string_val: "../data/Validation/Run_0001/images/frame_04638.png"
        string_val: "../data/Validation/Run_0001/images/frame_01782.png"
        string_val: "../data/Validation/Run_0001/images/frame_03739.png"
        string_val: "../data/Validation/Run_0001/images/frame_01853.png"
        string_val: "../data/Validation/Run_0001/images/frame_00023.png"
        string_val: "../data/Validation/Run_0001/images/frame_03580.png"
        string_val: "../data/Validation/Run_0001/images/frame_02597.png"
        string_val: "../data/Validation/Run_0001/images/frame_02160.png"
        string_val: "../data/Validation/Run_0001/images/frame_03426.png"
        string_val: "../data/Validation/Run_0001/images/frame_03360.png"
        string_val: "../data/Validation/Run_0001/images/frame_04672.png"
        string_val: "../data/Validation/Run_0001/images/frame_00761.png"
        string_val: "../data/Validation/Run_0001/images/frame_03913.png"
        string_val: "../data/Validation/Run_0001/images/frame_03285.png"
        string_val: "../data/Validation/Run_0001/images/frame_02875.png"
        string_val: "../data/Validation/Run_0001/images/frame_00130.png"
        string_val: "../data/Validation/Run_0001/images/frame_00902.png"
        string_val: "../data/Validation/Run_0001/images/frame_03872.png"
        string_val: "../data/Validation/Run_0001/images/frame_00431.png"
        string_val: "../data/Validation/Run_0001/images/frame_02389.png"
        string_val: "../data/Validation/Run_0001/images/frame_03031.png"
        string_val: "../data/Validation/Run_0001/images/frame_01369.png"
        string_val: "../data/Validation/Run_0001/images/frame_03952.png"
        string_val: "../data/Validation/Run_0001/images/frame_03915.png"
        string_val: "../data/Validation/Run_0001/images/frame_04359.png"
        string_val: "../data/Validation/Run_0001/images/frame_04440.png"
        string_val: "../data/Validation/Run_0001/images/frame_02154.png"
        string_val: "../data/Validation/Run_0001/images/frame_02640.png"
        string_val: "../data/Validation/Run_0001/images/frame_03636.png"
        string_val: "../data/Validation/Run_0001/images/frame_00812.png"
        string_val: "../data/Validation/Run_0001/images/frame_03261.png"
        string_val: "../data/Validation/Run_0001/images/frame_03251.png"
        string_val: "../data/Validation/Run_0001/images/frame_04225.png"
        string_val: "../data/Validation/Run_0001/images/frame_01677.png"
        string_val: "../data/Validation/Run_0001/images/frame_01703.png"
        string_val: "../data/Validation/Run_0001/images/frame_03787.png"
        string_val: "../data/Validation/Run_0001/images/frame_03735.png"
        string_val: "../data/Validation/Run_0001/images/frame_00255.png"
        string_val: "../data/Validation/Run_0001/images/frame_02712.png"
        string_val: "../data/Validation/Run_0001/images/frame_04556.png"
        string_val: "../data/Validation/Run_0001/images/frame_04486.png"
        string_val: "../data/Validation/Run_0001/images/frame_01699.png"
        string_val: "../data/Validation/Run_0001/images/frame_01543.png"
        string_val: "../data/Validation/Run_0001/images/frame_04877.png"
        string_val: "../data/Validation/Run_0001/images/frame_01441.png"
        string_val: "../data/Validation/Run_0001/images/frame_00256.png"
        string_val: "../data/Validation/Run_0001/images/frame_04366.png"
        string_val: "../data/Validation/Run_0001/images/frame_02019.png"
        string_val: "../data/Validation/Run_0001/images/frame_02981.png"
        string_val: "../data/Validation/Run_0001/images/frame_02656.png"
        string_val: "../data/Validation/Run_0001/images/frame_00979.png"
        string_val: "../data/Validation/Run_0001/images/frame_01590.png"
        string_val: "../data/Validation/Run_0001/images/frame_02030.png"
        string_val: "../data/Validation/Run_0001/images/frame_03120.png"
        string_val: "../data/Validation/Run_0001/images/frame_04748.png"
        string_val: "../data/Validation/Run_0001/images/frame_03753.png"
        string_val: "../data/Validation/Run_0001/images/frame_04819.png"
        string_val: "../data/Validation/Run_0001/images/frame_00515.png"
        string_val: "../data/Validation/Run_0001/images/frame_01184.png"
        string_val: "../data/Validation/Run_0001/images/frame_03894.png"
        string_val: "../data/Validation/Run_0001/images/frame_02083.png"
        string_val: "../data/Validation/Run_0001/images/frame_03757.png"
        string_val: "../data/Validation/Run_0001/images/frame_04481.png"
        string_val: "../data/Validation/Run_0001/images/frame_01210.png"
        string_val: "../data/Validation/Run_0001/images/frame_03547.png"
        string_val: "../data/Validation/Run_0001/images/frame_04081.png"
        string_val: "../data/Validation/Run_0001/images/frame_02436.png"
        string_val: "../data/Validation/Run_0001/images/frame_03390.png"
        string_val: "../data/Validation/Run_0001/images/frame_01808.png"
        string_val: "../data/Validation/Run_0001/images/frame_04868.png"
        string_val: "../data/Validation/Run_0001/images/frame_04767.png"
        string_val: "../data/Validation/Run_0001/images/frame_03688.png"
        string_val: "../data/Validation/Run_0001/images/frame_03007.png"
        string_val: "../data/Validation/Run_0001/images/frame_04655.png"
        string_val: "../data/Validation/Run_0001/images/frame_03666.png"
        string_val: "../data/Validation/Run_0001/images/frame_05050.png"
        string_val: "../data/Validation/Run_0001/images/frame_04756.png"
        string_val: "../data/Validation/Run_0001/images/frame_00545.png"
        string_val: "../data/Validation/Run_0001/images/frame_00560.png"
        string_val: "../data/Validation/Run_0001/images/frame_01282.png"
        string_val: "../data/Validation/Run_0001/images/frame_03248.png"
        string_val: "../data/Validation/Run_0001/images/frame_03274.png"
        string_val: "../data/Validation/Run_0001/images/frame_04260.png"
        string_val: "../data/Validation/Run_0001/images/frame_00031.png"
        string_val: "../data/Validation/Run_0001/images/frame_04484.png"
        string_val: "../data/Validation/Run_0001/images/frame_00875.png"
        string_val: "../data/Validation/Run_0001/images/frame_00901.png"
        string_val: "../data/Validation/Run_0001/images/frame_04488.png"
        string_val: "../data/Validation/Run_0001/images/frame_04807.png"
        string_val: "../data/Validation/Run_0001/images/frame_04335.png"
        string_val: "../data/Validation/Run_0001/images/frame_02114.png"
        string_val: "../data/Validation/Run_0001/images/frame_03601.png"
        string_val: "../data/Validation/Run_0001/images/frame_01954.png"
        string_val: "../data/Validation/Run_0001/images/frame_03972.png"
        string_val: "../data/Validation/Run_0001/images/frame_03278.png"
        string_val: "../data/Validation/Run_0001/images/frame_02037.png"
        string_val: "../data/Validation/Run_0001/images/frame_02799.png"
        string_val: "../data/Validation/Run_0001/images/frame_04517.png"
        string_val: "../data/Validation/Run_0001/images/frame_04827.png"
        string_val: "../data/Validation/Run_0001/images/frame_00169.png"
        string_val: "../data/Validation/Run_0001/images/frame_00098.png"
        string_val: "../data/Validation/Run_0001/images/frame_03823.png"
        string_val: "../data/Validation/Run_0001/images/frame_02228.png"
        string_val: "../data/Validation/Run_0001/images/frame_03187.png"
        string_val: "../data/Validation/Run_0001/images/frame_01147.png"
        string_val: "../data/Validation/Run_0001/images/frame_01627.png"
        string_val: "../data/Validation/Run_0001/images/frame_04575.png"
        string_val: "../data/Validation/Run_0001/images/frame_00933.png"
        string_val: "../data/Validation/Run_0001/images/frame_01962.png"
        string_val: "../data/Validation/Run_0001/images/frame_04913.png"
        string_val: "../data/Validation/Run_0001/images/frame_01669.png"
        string_val: "../data/Validation/Run_0001/images/frame_00955.png"
        string_val: "../data/Validation/Run_0001/images/frame_01093.png"
        string_val: "../data/Validation/Run_0001/images/frame_04950.png"
        string_val: "../data/Validation/Run_0001/images/frame_03847.png"
        string_val: "../data/Validation/Run_0001/images/frame_00003.png"
        string_val: "../data/Validation/Run_0001/images/frame_03778.png"
        string_val: "../data/Validation/Run_0001/images/frame_02218.png"
        string_val: "../data/Validation/Run_0001/images/frame_03514.png"
        string_val: "../data/Validation/Run_0001/images/frame_02134.png"
        string_val: "../data/Validation/Run_0001/images/frame_01040.png"
        string_val: "../data/Validation/Run_0001/images/frame_00095.png"
        string_val: "../data/Validation/Run_0001/images/frame_03615.png"
        string_val: "../data/Validation/Run_0001/images/frame_03832.png"
        string_val: "../data/Validation/Run_0001/images/frame_02531.png"
        string_val: "../data/Validation/Run_0001/images/frame_01998.png"
        string_val: "../data/Validation/Run_0001/images/frame_01062.png"
        string_val: "../data/Validation/Run_0001/images/frame_00387.png"
        string_val: "../data/Validation/Run_0001/images/frame_00178.png"
        string_val: "../data/Validation/Run_0001/images/frame_05083.png"
        string_val: "../data/Validation/Run_0001/images/frame_00370.png"
        string_val: "../data/Validation/Run_0001/images/frame_00384.png"
        string_val: "../data/Validation/Run_0001/images/frame_04520.png"
        string_val: "../data/Validation/Run_0001/images/frame_00303.png"
        string_val: "../data/Validation/Run_0001/images/frame_02232.png"
        string_val: "../data/Validation/Run_0001/images/frame_00058.png"
        string_val: "../data/Validation/Run_0001/images/frame_04039.png"
        string_val: "../data/Validation/Run_0001/images/frame_00731.png"
        string_val: "../data/Validation/Run_0001/images/frame_04661.png"
        string_val: "../data/Validation/Run_0001/images/frame_02241.png"
        string_val: "../data/Validation/Run_0001/images/frame_00190.png"
        string_val: "../data/Validation/Run_0001/images/frame_03336.png"
        string_val: "../data/Validation/Run_0001/images/frame_04889.png"
        string_val: "../data/Validation/Run_0001/images/frame_00654.png"
        string_val: "../data/Validation/Run_0001/images/frame_03144.png"
        string_val: "../data/Validation/Run_0001/images/frame_04670.png"
        string_val: "../data/Validation/Run_0001/images/frame_04582.png"
        string_val: "../data/Validation/Run_0001/images/frame_02022.png"
        string_val: "../data/Validation/Run_0001/images/frame_04982.png"
        string_val: "../data/Validation/Run_0001/images/frame_01881.png"
        string_val: "../data/Validation/Run_0001/images/frame_04063.png"
        string_val: "../data/Validation/Run_0001/images/frame_00463.png"
        string_val: "../data/Validation/Run_0001/images/frame_02559.png"
        string_val: "../data/Validation/Run_0001/images/frame_01313.png"
        string_val: "../data/Validation/Run_0001/images/frame_01540.png"
        string_val: "../data/Validation/Run_0001/images/frame_01439.png"
        string_val: "../data/Validation/Run_0001/images/frame_02720.png"
        string_val: "../data/Validation/Run_0001/images/frame_01678.png"
        string_val: "../data/Validation/Run_0001/images/frame_04603.png"
        string_val: "../data/Validation/Run_0001/images/frame_02899.png"
        string_val: "../data/Validation/Run_0001/images/frame_02587.png"
        string_val: "../data/Validation/Run_0001/images/frame_01198.png"
        string_val: "../data/Validation/Run_0001/images/frame_03329.png"
        string_val: "../data/Validation/Run_0001/images/frame_01749.png"
        string_val: "../data/Validation/Run_0001/images/frame_04176.png"
        string_val: "../data/Validation/Run_0001/images/frame_02273.png"
        string_val: "../data/Validation/Run_0001/images/frame_00657.png"
        string_val: "../data/Validation/Run_0001/images/frame_04088.png"
        string_val: "../data/Validation/Run_0001/images/frame_01335.png"
        string_val: "../data/Validation/Run_0001/images/frame_00475.png"
        string_val: "../data/Validation/Run_0001/images/frame_02029.png"
        string_val: "../data/Validation/Run_0001/images/frame_00390.png"
        string_val: "../data/Validation/Run_0001/images/frame_04456.png"
        string_val: "../data/Validation/Run_0001/images/frame_04018.png"
        string_val: "../data/Validation/Run_0001/images/frame_01945.png"
        string_val: "../data/Validation/Run_0001/images/frame_04294.png"
        string_val: "../data/Validation/Run_0001/images/frame_02378.png"
        string_val: "../data/Validation/Run_0001/images/frame_04593.png"
        string_val: "../data/Validation/Run_0001/images/frame_02529.png"
        string_val: "../data/Validation/Run_0001/images/frame_03836.png"
        string_val: "../data/Validation/Run_0001/images/frame_03695.png"
        string_val: "../data/Validation/Run_0001/images/frame_02038.png"
        string_val: "../data/Validation/Run_0001/images/frame_04669.png"
        string_val: "../data/Validation/Run_0001/images/frame_02151.png"
        string_val: "../data/Validation/Run_0001/images/frame_03555.png"
        string_val: "../data/Validation/Run_0001/images/frame_01502.png"
        string_val: "../data/Validation/Run_0001/images/frame_04943.png"
        string_val: "../data/Validation/Run_0001/images/frame_01169.png"
        string_val: "../data/Validation/Run_0001/images/frame_02630.png"
        string_val: "../data/Validation/Run_0001/images/frame_00512.png"
        string_val: "../data/Validation/Run_0001/images/frame_05051.png"
        string_val: "../data/Validation/Run_0001/images/frame_02028.png"
        string_val: "../data/Validation/Run_0001/images/frame_02864.png"
        string_val: "../data/Validation/Run_0001/images/frame_03100.png"
        string_val: "../data/Validation/Run_0001/images/frame_01988.png"
        string_val: "../data/Validation/Run_0001/images/frame_01830.png"
        string_val: "../data/Validation/Run_0001/images/frame_01325.png"
        string_val: "../data/Validation/Run_0001/images/frame_02793.png"
        string_val: "../data/Validation/Run_0001/images/frame_02235.png"
        string_val: "../data/Validation/Run_0001/images/frame_05001.png"
        string_val: "../data/Validation/Run_0001/images/frame_03361.png"
        string_val: "../data/Validation/Run_0001/images/frame_01090.png"
        string_val: "../data/Validation/Run_0001/images/frame_04506.png"
        string_val: "../data/Validation/Run_0001/images/frame_03171.png"
        string_val: "../data/Validation/Run_0001/images/frame_00319.png"
        string_val: "../data/Validation/Run_0001/images/frame_01844.png"
        string_val: "../data/Validation/Run_0001/images/frame_01837.png"
        string_val: "../data/Validation/Run_0001/images/frame_03523.png"
        string_val: "../data/Validation/Run_0001/images/frame_01016.png"
        string_val: "../data/Validation/Run_0001/images/frame_04804.png"
        string_val: "../data/Validation/Run_0001/images/frame_03219.png"
        string_val: "../data/Validation/Run_0001/images/frame_02550.png"
        string_val: "../data/Validation/Run_0001/images/frame_00199.png"
        string_val: "../data/Validation/Run_0001/images/frame_04896.png"
        string_val: "../data/Validation/Run_0001/images/frame_00232.png"
        string_val: "../data/Validation/Run_0001/images/frame_03342.png"
        string_val: "../data/Validation/Run_0001/images/frame_03910.png"
        string_val: "../data/Validation/Run_0001/images/frame_02861.png"
        string_val: "../data/Validation/Run_0001/images/frame_00410.png"
        string_val: "../data/Validation/Run_0001/images/frame_00497.png"
        string_val: "../data/Validation/Run_0001/images/frame_01221.png"
        string_val: "../data/Validation/Run_0001/images/frame_04449.png"
        string_val: "../data/Validation/Run_0001/images/frame_04677.png"
        string_val: "../data/Validation/Run_0001/images/frame_03101.png"
        string_val: "../data/Validation/Run_0001/images/frame_03622.png"
        string_val: "../data/Validation/Run_0001/images/frame_01225.png"
        string_val: "../data/Validation/Run_0001/images/frame_04479.png"
        string_val: "../data/Validation/Run_0001/images/frame_05047.png"
        string_val: "../data/Validation/Run_0001/images/frame_00412.png"
        string_val: "../data/Validation/Run_0001/images/frame_00339.png"
        string_val: "../data/Validation/Run_0001/images/frame_01525.png"
        string_val: "../data/Validation/Run_0001/images/frame_01429.png"
        string_val: "../data/Validation/Run_0001/images/frame_02410.png"
        string_val: "../data/Validation/Run_0001/images/frame_01504.png"
        string_val: "../data/Validation/Run_0001/images/frame_04016.png"
        string_val: "../data/Validation/Run_0001/images/frame_00960.png"
        string_val: "../data/Validation/Run_0001/images/frame_04720.png"
        string_val: "../data/Validation/Run_0001/images/frame_02243.png"
        string_val: "../data/Validation/Run_0001/images/frame_02156.png"
        string_val: "../data/Validation/Run_0001/images/frame_04475.png"
        string_val: "../data/Validation/Run_0001/images/frame_04992.png"
        string_val: "../data/Validation/Run_0001/images/frame_02914.png"
        string_val: "../data/Validation/Run_0001/images/frame_00250.png"
        string_val: "../data/Validation/Run_0001/images/frame_04003.png"
        string_val: "../data/Validation/Run_0001/images/frame_04907.png"
        string_val: "../data/Validation/Run_0001/images/frame_00217.png"
        string_val: "../data/Validation/Run_0001/images/frame_04163.png"
        string_val: "../data/Validation/Run_0001/images/frame_00759.png"
        string_val: "../data/Validation/Run_0001/images/frame_00577.png"
        string_val: "../data/Validation/Run_0001/images/frame_00668.png"
        string_val: "../data/Validation/Run_0001/images/frame_03003.png"
        string_val: "../data/Validation/Run_0001/images/frame_01551.png"
        string_val: "../data/Validation/Run_0001/images/frame_03088.png"
        string_val: "../data/Validation/Run_0001/images/frame_04318.png"
        string_val: "../data/Validation/Run_0001/images/frame_00738.png"
        string_val: "../data/Validation/Run_0001/images/frame_04996.png"
        string_val: "../data/Validation/Run_0001/images/frame_00398.png"
        string_val: "../data/Validation/Run_0001/images/frame_02594.png"
        string_val: "../data/Validation/Run_0001/images/frame_01120.png"
        string_val: "../data/Validation/Run_0001/images/frame_00883.png"
        string_val: "../data/Validation/Run_0001/images/frame_02814.png"
        string_val: "../data/Validation/Run_0001/images/frame_02602.png"
        string_val: "../data/Validation/Run_0001/images/frame_04870.png"
        string_val: "../data/Validation/Run_0001/images/frame_01996.png"
        string_val: "../data/Validation/Run_0001/images/frame_04515.png"
        string_val: "../data/Validation/Run_0001/images/frame_02835.png"
        string_val: "../data/Validation/Run_0001/images/frame_00249.png"
        string_val: "../data/Validation/Run_0001/images/frame_01428.png"
        string_val: "../data/Validation/Run_0001/images/frame_04928.png"
        string_val: "../data/Validation/Run_0001/images/frame_04825.png"
        string_val: "../data/Validation/Run_0001/images/frame_03299.png"
        string_val: "../data/Validation/Run_0001/images/frame_01769.png"
        string_val: "../data/Validation/Run_0001/images/frame_00772.png"
        string_val: "../data/Validation/Run_0001/images/frame_05080.png"
        string_val: "../data/Validation/Run_0001/images/frame_03594.png"
        string_val: "../data/Validation/Run_0001/images/frame_03978.png"
        string_val: "../data/Validation/Run_0001/images/frame_00830.png"
        string_val: "../data/Validation/Run_0001/images/frame_00653.png"
        string_val: "../data/Validation/Run_0001/images/frame_00694.png"
        string_val: "../data/Validation/Run_0001/images/frame_01119.png"
        string_val: "../data/Validation/Run_0001/images/frame_03486.png"
        string_val: "../data/Validation/Run_0001/images/frame_01473.png"
        string_val: "../data/Validation/Run_0001/images/frame_03432.png"
        string_val: "../data/Validation/Run_0001/images/frame_04523.png"
        string_val: "../data/Validation/Run_0001/images/frame_02599.png"
        string_val: "../data/Validation/Run_0001/images/frame_01854.png"
        string_val: "../data/Validation/Run_0001/images/frame_03107.png"
        string_val: "../data/Validation/Run_0001/images/frame_00470.png"
        string_val: "../data/Validation/Run_0001/images/frame_00444.png"
        string_val: "../data/Validation/Run_0001/images/frame_01339.png"
        string_val: "../data/Validation/Run_0001/images/frame_00482.png"
        string_val: "../data/Validation/Run_0001/images/frame_00769.png"
        string_val: "../data/Validation/Run_0001/images/frame_00282.png"
        string_val: "../data/Validation/Run_0001/images/frame_01856.png"
        string_val: "../data/Validation/Run_0001/images/frame_00984.png"
        string_val: "../data/Validation/Run_0001/images/frame_01568.png"
        string_val: "../data/Validation/Run_0001/images/frame_00445.png"
        string_val: "../data/Validation/Run_0001/images/frame_03123.png"
        string_val: "../data/Validation/Run_0001/images/frame_04922.png"
        string_val: "../data/Validation/Run_0001/images/frame_03184.png"
        string_val: "../data/Validation/Run_0001/images/frame_01234.png"
        string_val: "../data/Validation/Run_0001/images/frame_04216.png"
        string_val: "../data/Validation/Run_0001/images/frame_01665.png"
        string_val: "../data/Validation/Run_0001/images/frame_03418.png"
        string_val: "../data/Validation/Run_0001/images/frame_01157.png"
        string_val: "../data/Validation/Run_0001/images/frame_00990.png"
        string_val: "../data/Validation/Run_0001/images/frame_02278.png"
        string_val: "../data/Validation/Run_0001/images/frame_01105.png"
        string_val: "../data/Validation/Run_0001/images/frame_02778.png"
        string_val: "../data/Validation/Run_0001/images/frame_03867.png"
        string_val: "../data/Validation/Run_0001/images/frame_04491.png"
        string_val: "../data/Validation/Run_0001/images/frame_01873.png"
        string_val: "../data/Validation/Run_0001/images/frame_00027.png"
        string_val: "../data/Validation/Run_0001/images/frame_01861.png"
        string_val: "../data/Validation/Run_0001/images/frame_03840.png"
        string_val: "../data/Validation/Run_0001/images/frame_02870.png"
        string_val: "../data/Validation/Run_0001/images/frame_02377.png"
        string_val: "../data/Validation/Run_0001/images/frame_02446.png"
        string_val: "../data/Validation/Run_0001/images/frame_04077.png"
        string_val: "../data/Validation/Run_0001/images/frame_00137.png"
        string_val: "../data/Validation/Run_0001/images/frame_01264.png"
        string_val: "../data/Validation/Run_0001/images/frame_00553.png"
        string_val: "../data/Validation/Run_0001/images/frame_03603.png"
        string_val: "../data/Validation/Run_0001/images/frame_01309.png"
        string_val: "../data/Validation/Run_0001/images/frame_04489.png"
        string_val: "../data/Validation/Run_0001/images/frame_02081.png"
        string_val: "../data/Validation/Run_0001/images/frame_04200.png"
        string_val: "../data/Validation/Run_0001/images/frame_02812.png"
        string_val: "../data/Validation/Run_0001/images/frame_03864.png"
        string_val: "../data/Validation/Run_0001/images/frame_04202.png"
        string_val: "../data/Validation/Run_0001/images/frame_02604.png"
        string_val: "../data/Validation/Run_0001/images/frame_04348.png"
        string_val: "../data/Validation/Run_0001/images/frame_00596.png"
        string_val: "../data/Validation/Run_0001/images/frame_02412.png"
        string_val: "../data/Validation/Run_0001/images/frame_02886.png"
        string_val: "../data/Validation/Run_0001/images/frame_03482.png"
        string_val: "../data/Validation/Run_0001/images/frame_03581.png"
        string_val: "../data/Validation/Run_0001/images/frame_00847.png"
        string_val: "../data/Validation/Run_0001/images/frame_03250.png"
        string_val: "../data/Validation/Run_0001/images/frame_04001.png"
        string_val: "../data/Validation/Run_0001/images/frame_01598.png"
        string_val: "../data/Validation/Run_0001/images/frame_02142.png"
        string_val: "../data/Validation/Run_0001/images/frame_00076.png"
        string_val: "../data/Validation/Run_0001/images/frame_00609.png"
        string_val: "../data/Validation/Run_0001/images/frame_02107.png"
        string_val: "../data/Validation/Run_0001/images/frame_01051.png"
        string_val: "../data/Validation/Run_0001/images/frame_01796.png"
        string_val: "../data/Validation/Run_0001/images/frame_02888.png"
        string_val: "../data/Validation/Run_0001/images/frame_00298.png"
        string_val: "../data/Validation/Run_0001/images/frame_00785.png"
        string_val: "../data/Validation/Run_0001/images/frame_01797.png"
        string_val: "../data/Validation/Run_0001/images/frame_01556.png"
        string_val: "../data/Validation/Run_0001/images/frame_00121.png"
        string_val: "../data/Validation/Run_0001/images/frame_04797.png"
        string_val: "../data/Validation/Run_0001/images/frame_03094.png"
        string_val: "../data/Validation/Run_0001/images/frame_01785.png"
        string_val: "../data/Validation/Run_0001/images/frame_04070.png"
        string_val: "../data/Validation/Run_0001/images/frame_01572.png"
        string_val: "../data/Validation/Run_0001/images/frame_05021.png"
        string_val: "../data/Validation/Run_0001/images/frame_01783.png"
        string_val: "../data/Validation/Run_0001/images/frame_04353.png"
        string_val: "../data/Validation/Run_0001/images/frame_04705.png"
        string_val: "../data/Validation/Run_0001/images/frame_00940.png"
        string_val: "../data/Validation/Run_0001/images/frame_00900.png"
        string_val: "../data/Validation/Run_0001/images/frame_01658.png"
        string_val: "../data/Validation/Run_0001/images/frame_02804.png"
        string_val: "../data/Validation/Run_0001/images/frame_03253.png"
        string_val: "../data/Validation/Run_0001/images/frame_00493.png"
        string_val: "../data/Validation/Run_0001/images/frame_03881.png"
        string_val: "../data/Validation/Run_0001/images/frame_02677.png"
        string_val: "../data/Validation/Run_0001/images/frame_04277.png"
        string_val: "../data/Validation/Run_0001/images/frame_01687.png"
        string_val: "../data/Validation/Run_0001/images/frame_04726.png"
        string_val: "../data/Validation/Run_0001/images/frame_02461.png"
        string_val: "../data/Validation/Run_0001/images/frame_00278.png"
        string_val: "../data/Validation/Run_0001/images/frame_00228.png"
        string_val: "../data/Validation/Run_0001/images/frame_04800.png"
        string_val: "../data/Validation/Run_0001/images/frame_00432.png"
        string_val: "../data/Validation/Run_0001/images/frame_04628.png"
        string_val: "../data/Validation/Run_0001/images/frame_02216.png"
        string_val: "../data/Validation/Run_0001/images/frame_01612.png"
        string_val: "../data/Validation/Run_0001/images/frame_02936.png"
        string_val: "../data/Validation/Run_0001/images/frame_00977.png"
        string_val: "../data/Validation/Run_0001/images/frame_04300.png"
        string_val: "../data/Validation/Run_0001/images/frame_02407.png"
        string_val: "../data/Validation/Run_0001/images/frame_02152.png"
        string_val: "../data/Validation/Run_0001/images/frame_00571.png"
        string_val: "../data/Validation/Run_0001/images/frame_02247.png"
        string_val: "../data/Validation/Run_0001/images/frame_02040.png"
        string_val: "../data/Validation/Run_0001/images/frame_02172.png"
        string_val: "../data/Validation/Run_0001/images/frame_03277.png"
        string_val: "../data/Validation/Run_0001/images/frame_02834.png"
        string_val: "../data/Validation/Run_0001/images/frame_04231.png"
        string_val: "../data/Validation/Run_0001/images/frame_00080.png"
        string_val: "../data/Validation/Run_0001/images/frame_01960.png"
        string_val: "../data/Validation/Run_0001/images/frame_00065.png"
        string_val: "../data/Validation/Run_0001/images/frame_04886.png"
        string_val: "../data/Validation/Run_0001/images/frame_03346.png"
        string_val: "../data/Validation/Run_0001/images/frame_03982.png"
        string_val: "../data/Validation/Run_0001/images/frame_01482.png"
        string_val: "../data/Validation/Run_0001/images/frame_00740.png"
        string_val: "../data/Validation/Run_0001/images/frame_01679.png"
        string_val: "../data/Validation/Run_0001/images/frame_02796.png"
        string_val: "../data/Validation/Run_0001/images/frame_00439.png"
        string_val: "../data/Validation/Run_0001/images/frame_01237.png"
        string_val: "../data/Validation/Run_0001/images/frame_01765.png"
        string_val: "../data/Validation/Run_0001/images/frame_00669.png"
        string_val: "../data/Validation/Run_0001/images/frame_03000.png"
        string_val: "../data/Validation/Run_0001/images/frame_00578.png"
        string_val: "../data/Validation/Run_0001/images/frame_03743.png"
        string_val: "../data/Validation/Run_0001/images/frame_02643.png"
        string_val: "../data/Validation/Run_0001/images/frame_04006.png"
        string_val: "../data/Validation/Run_0001/images/frame_04965.png"
        string_val: "../data/Validation/Run_0001/images/frame_04208.png"
        string_val: "../data/Validation/Run_0001/images/frame_00766.png"
        string_val: "../data/Validation/Run_0001/images/frame_02756.png"
        string_val: "../data/Validation/Run_0001/images/frame_00051.png"
        string_val: "../data/Validation/Run_0001/images/frame_03066.png"
        string_val: "../data/Validation/Run_0001/images/frame_03653.png"
        string_val: "../data/Validation/Run_0001/images/frame_03618.png"
        string_val: "../data/Validation/Run_0001/images/frame_00815.png"
        string_val: "../data/Validation/Run_0001/images/frame_01932.png"
        string_val: "../data/Validation/Run_0001/images/frame_01562.png"
        string_val: "../data/Validation/Run_0001/images/frame_03625.png"
        string_val: "../data/Validation/Run_0001/images/frame_03206.png"
        string_val: "../data/Validation/Run_0001/images/frame_03682.png"
        string_val: "../data/Validation/Run_0001/images/frame_01112.png"
        string_val: "../data/Validation/Run_0001/images/frame_00800.png"
        string_val: "../data/Validation/Run_0001/images/frame_02195.png"
        string_val: "../data/Validation/Run_0001/images/frame_04467.png"
        string_val: "../data/Validation/Run_0001/images/frame_00736.png"
        string_val: "../data/Validation/Run_0001/images/frame_04991.png"
        string_val: "../data/Validation/Run_0001/images/frame_04798.png"
        string_val: "../data/Validation/Run_0001/images/frame_03051.png"
        string_val: "../data/Validation/Run_0001/images/frame_03780.png"
        string_val: "../data/Validation/Run_0001/images/frame_01633.png"
        string_val: "../data/Validation/Run_0001/images/frame_01630.png"
        string_val: "../data/Validation/Run_0001/images/frame_02589.png"
        string_val: "../data/Validation/Run_0001/images/frame_02351.png"
        string_val: "../data/Validation/Run_0001/images/frame_02693.png"
        string_val: "../data/Validation/Run_0001/images/frame_01906.png"
        string_val: "../data/Validation/Run_0001/images/frame_00880.png"
        string_val: "../data/Validation/Run_0001/images/frame_01080.png"
        string_val: "../data/Validation/Run_0001/images/frame_03029.png"
        string_val: "../data/Validation/Run_0001/images/frame_03964.png"
        string_val: "../data/Validation/Run_0001/images/frame_01437.png"
        string_val: "../data/Validation/Run_0001/images/frame_00537.png"
        string_val: "../data/Validation/Run_0001/images/frame_03193.png"
        string_val: "../data/Validation/Run_0001/images/frame_04154.png"
        string_val: "../data/Validation/Run_0001/images/frame_01186.png"
        string_val: "../data/Validation/Run_0001/images/frame_02094.png"
        string_val: "../data/Validation/Run_0001/images/frame_02052.png"
        string_val: "../data/Validation/Run_0001/images/frame_04205.png"
        string_val: "../data/Validation/Run_0001/images/frame_05078.png"
        string_val: "../data/Validation/Run_0001/images/frame_01969.png"
        string_val: "../data/Validation/Run_0001/images/frame_04125.png"
        string_val: "../data/Validation/Run_0001/images/frame_04361.png"
        string_val: "../data/Validation/Run_0001/images/frame_01365.png"
        string_val: "../data/Validation/Run_0001/images/frame_03989.png"
        string_val: "../data/Validation/Run_0001/images/frame_01596.png"
        string_val: "../data/Validation/Run_0001/images/frame_03232.png"
        string_val: "../data/Validation/Run_0001/images/frame_03810.png"
        string_val: "../data/Validation/Run_0001/images/frame_01728.png"
        string_val: "../data/Validation/Run_0001/images/frame_03311.png"
        string_val: "../data/Validation/Run_0001/images/frame_00500.png"
        string_val: "../data/Validation/Run_0001/images/frame_02072.png"
        string_val: "../data/Validation/Run_0001/images/frame_00858.png"
        string_val: "../data/Validation/Run_0001/images/frame_05064.png"
        string_val: "../data/Validation/Run_0001/images/frame_00480.png"
        string_val: "../data/Validation/Run_0001/images/frame_00112.png"
        string_val: "../data/Validation/Run_0001/images/frame_00752.png"
        string_val: "../data/Validation/Run_0001/images/frame_01285.png"
        string_val: "../data/Validation/Run_0001/images/frame_01653.png"
        string_val: "../data/Validation/Run_0001/images/frame_03356.png"
        string_val: "../data/Validation/Run_0001/images/frame_01064.png"
        string_val: "../data/Validation/Run_0001/images/frame_01520.png"
        string_val: "../data/Validation/Run_0001/images/frame_03272.png"
        string_val: "../data/Validation/Run_0001/images/frame_01911.png"
        string_val: "../data/Validation/Run_0001/images/frame_03352.png"
        string_val: "../data/Validation/Run_0001/images/frame_01963.png"
        string_val: "../data/Validation/Run_0001/images/frame_01970.png"
        string_val: "../data/Validation/Run_0001/images/frame_02033.png"
        string_val: "../data/Validation/Run_0001/images/frame_00697.png"
        string_val: "../data/Validation/Run_0001/images/frame_04095.png"
        string_val: "../data/Validation/Run_0001/images/frame_01239.png"
        string_val: "../data/Validation/Run_0001/images/frame_04839.png"
        string_val: "../data/Validation/Run_0001/images/frame_04914.png"
        string_val: "../data/Validation/Run_0001/images/frame_04678.png"
        string_val: "../data/Validation/Run_0001/images/frame_01402.png"
        string_val: "../data/Validation/Run_0001/images/frame_02990.png"
        string_val: "../data/Validation/Run_0001/images/frame_00550.png"
        string_val: "../data/Validation/Run_0001/images/frame_04820.png"
        string_val: "../data/Validation/Run_0001/images/frame_00521.png"
        string_val: "../data/Validation/Run_0001/images/frame_00579.png"
        string_val: "../data/Validation/Run_0001/images/frame_02221.png"
        string_val: "../data/Validation/Run_0001/images/frame_02186.png"
        string_val: "../data/Validation/Run_0001/images/frame_03478.png"
        string_val: "../data/Validation/Run_0001/images/frame_02873.png"
        string_val: "../data/Validation/Run_0001/images/frame_00007.png"
        string_val: "../data/Validation/Run_0001/images/frame_01360.png"
        string_val: "../data/Validation/Run_0001/images/frame_04874.png"
        string_val: "../data/Validation/Run_0001/images/frame_03276.png"
        string_val: "../data/Validation/Run_0001/images/frame_04789.png"
        string_val: "../data/Validation/Run_0001/images/frame_02499.png"
        string_val: "../data/Validation/Run_0001/images/frame_03247.png"
        string_val: "../data/Validation/Run_0001/images/frame_02696.png"
        string_val: "../data/Validation/Run_0001/images/frame_00666.png"
        string_val: "../data/Validation/Run_0001/images/frame_00126.png"
        string_val: "../data/Validation/Run_0001/images/frame_03707.png"
        string_val: "../data/Validation/Run_0001/images/frame_03794.png"
        string_val: "../data/Validation/Run_0001/images/frame_01183.png"
        string_val: "../data/Validation/Run_0001/images/frame_01134.png"
        string_val: "../data/Validation/Run_0001/images/frame_02201.png"
        string_val: "../data/Validation/Run_0001/images/frame_00562.png"
        string_val: "../data/Validation/Run_0001/images/frame_03239.png"
        string_val: "../data/Validation/Run_0001/images/frame_03053.png"
        string_val: "../data/Validation/Run_0001/images/frame_03428.png"
        string_val: "../data/Validation/Run_0001/images/frame_00737.png"
        string_val: "../data/Validation/Run_0001/images/frame_00301.png"
        string_val: "../data/Validation/Run_0001/images/frame_04838.png"
        string_val: "../data/Validation/Run_0001/images/frame_04607.png"
        string_val: "../data/Validation/Run_0001/images/frame_04067.png"
        string_val: "../data/Validation/Run_0001/images/frame_01378.png"
        string_val: "../data/Validation/Run_0001/images/frame_04138.png"
        string_val: "../data/Validation/Run_0001/images/frame_03634.png"
        string_val: "../data/Validation/Run_0001/images/frame_01735.png"
        string_val: "../data/Validation/Run_0001/images/frame_04397.png"
        string_val: "../data/Validation/Run_0001/images/frame_02878.png"
        string_val: "../data/Validation/Run_0001/images/frame_00097.png"
        string_val: "../data/Validation/Run_0001/images/frame_00993.png"
        string_val: "../data/Validation/Run_0001/images/frame_00224.png"
        string_val: "../data/Validation/Run_0001/images/frame_00948.png"
        string_val: "../data/Validation/Run_0001/images/frame_05061.png"
        string_val: "../data/Validation/Run_0001/images/frame_01927.png"
        string_val: "../data/Validation/Run_0001/images/frame_00874.png"
        string_val: "../data/Validation/Run_0001/images/frame_00517.png"
        string_val: "../data/Validation/Run_0001/images/frame_03431.png"
        string_val: "../data/Validation/Run_0001/images/frame_01293.png"
        string_val: "../data/Validation/Run_0001/images/frame_01880.png"
        string_val: "../data/Validation/Run_0001/images/frame_02263.png"
        string_val: "../data/Validation/Run_0001/images/frame_00087.png"
        string_val: "../data/Validation/Run_0001/images/frame_02135.png"
        string_val: "../data/Validation/Run_0001/images/frame_02181.png"
        string_val: "../data/Validation/Run_0001/images/frame_02561.png"
        string_val: "../data/Validation/Run_0001/images/frame_04116.png"
        string_val: "../data/Validation/Run_0001/images/frame_00226.png"
        string_val: "../data/Validation/Run_0001/images/frame_01585.png"
        string_val: "../data/Validation/Run_0001/images/frame_02090.png"
        string_val: "../data/Validation/Run_0001/images/frame_02996.png"
        string_val: "../data/Validation/Run_0001/images/frame_01002.png"
        string_val: "../data/Validation/Run_0001/images/frame_00792.png"
        string_val: "../data/Validation/Run_0001/images/frame_01607.png"
        string_val: "../data/Validation/Run_0001/images/frame_01742.png"
        string_val: "../data/Validation/Run_0001/images/frame_00958.png"
        string_val: "../data/Validation/Run_0001/images/frame_01902.png"
        string_val: "../data/Validation/Run_0001/images/frame_02581.png"
        string_val: "../data/Validation/Run_0001/images/frame_04601.png"
        string_val: "../data/Validation/Run_0001/images/frame_04416.png"
        string_val: "../data/Validation/Run_0001/images/frame_03129.png"
        string_val: "../data/Validation/Run_0001/images/frame_04923.png"
        string_val: "../data/Validation/Run_0001/images/frame_01718.png"
        string_val: "../data/Validation/Run_0001/images/frame_01586.png"
        string_val: "../data/Validation/Run_0001/images/frame_01721.png"
        string_val: "../data/Validation/Run_0001/images/frame_03746.png"
        string_val: "../data/Validation/Run_0001/images/frame_05015.png"
        string_val: "../data/Validation/Run_0001/images/frame_04442.png"
        string_val: "../data/Validation/Run_0001/images/frame_03415.png"
        string_val: "../data/Validation/Run_0001/images/frame_02260.png"
        string_val: "../data/Validation/Run_0001/images/frame_02891.png"
        string_val: "../data/Validation/Run_0001/images/frame_04718.png"
        string_val: "../data/Validation/Run_0001/images/frame_01973.png"
        string_val: "../data/Validation/Run_0001/images/frame_00622.png"
        string_val: "../data/Validation/Run_0001/images/frame_00877.png"
        string_val: "../data/Validation/Run_0001/images/frame_02965.png"
        string_val: "../data/Validation/Run_0001/images/frame_04308.png"
        string_val: "../data/Validation/Run_0001/images/frame_03236.png"
        string_val: "../data/Validation/Run_0001/images/frame_04393.png"
        string_val: "../data/Validation/Run_0001/images/frame_03263.png"
        string_val: "../data/Validation/Run_0001/images/frame_02983.png"
        string_val: "../data/Validation/Run_0001/images/frame_02900.png"
        string_val: "../data/Validation/Run_0001/images/frame_02101.png"
        string_val: "../data/Validation/Run_0001/images/frame_01843.png"
        string_val: "../data/Validation/Run_0001/images/frame_02682.png"
        string_val: "../data/Validation/Run_0001/images/frame_02371.png"
        string_val: "../data/Validation/Run_0001/images/frame_00459.png"
        string_val: "../data/Validation/Run_0001/images/frame_03824.png"
        string_val: "../data/Validation/Run_0001/images/frame_00951.png"
        string_val: "../data/Validation/Run_0001/images/frame_01268.png"
        string_val: "../data/Validation/Run_0001/images/frame_04191.png"
        string_val: "../data/Validation/Run_0001/images/frame_01453.png"
        string_val: "../data/Validation/Run_0001/images/frame_01602.png"
        string_val: "../data/Validation/Run_0001/images/frame_02344.png"
        string_val: "../data/Validation/Run_0001/images/frame_04190.png"
        string_val: "../data/Validation/Run_0001/images/frame_04806.png"
        string_val: "../data/Validation/Run_0001/images/frame_03340.png"
        string_val: "../data/Validation/Run_0001/images/frame_01497.png"
        string_val: "../data/Validation/Run_0001/images/frame_00938.png"
        string_val: "../data/Validation/Run_0001/images/frame_04053.png"
        string_val: "../data/Validation/Run_0001/images/frame_00075.png"
        string_val: "../data/Validation/Run_0001/images/frame_00442.png"
        string_val: "../data/Validation/Run_0001/images/frame_01876.png"
        string_val: "../data/Validation/Run_0001/images/frame_04507.png"
        string_val: "../data/Validation/Run_0001/images/frame_05087.png"
        string_val: "../data/Validation/Run_0001/images/frame_03067.png"
        string_val: "../data/Validation/Run_0001/images/frame_04368.png"
        string_val: "../data/Validation/Run_0001/images/frame_00422.png"
        string_val: "../data/Validation/Run_0001/images/frame_04566.png"
        string_val: "../data/Validation/Run_0001/images/frame_02759.png"
        string_val: "../data/Validation/Run_0001/images/frame_02322.png"
        string_val: "../data/Validation/Run_0001/images/frame_03680.png"
        string_val: "../data/Validation/Run_0001/images/frame_00590.png"
        string_val: "../data/Validation/Run_0001/images/frame_00197.png"
        string_val: "../data/Validation/Run_0001/images/frame_05046.png"
        string_val: "../data/Validation/Run_0001/images/frame_04994.png"
        string_val: "../data/Validation/Run_0001/images/frame_00837.png"
        string_val: "../data/Validation/Run_0001/images/frame_02633.png"
        string_val: "../data/Validation/Run_0001/images/frame_02698.png"
        string_val: "../data/Validation/Run_0001/images/frame_05068.png"
        string_val: "../data/Validation/Run_0001/images/frame_00383.png"
        string_val: "../data/Validation/Run_0001/images/frame_02065.png"
        string_val: "../data/Validation/Run_0001/images/frame_02987.png"
        string_val: "../data/Validation/Run_0001/images/frame_01456.png"
        string_val: "../data/Validation/Run_0001/images/frame_01306.png"
        string_val: "../data/Validation/Run_0001/images/frame_04142.png"
        string_val: "../data/Validation/Run_0001/images/frame_01546.png"
        string_val: "../data/Validation/Run_0001/images/frame_02662.png"
        string_val: "../data/Validation/Run_0001/images/frame_03375.png"
        string_val: "../data/Validation/Run_0001/images/frame_03938.png"
        string_val: "../data/Validation/Run_0001/images/frame_04297.png"
        string_val: "../data/Validation/Run_0001/images/frame_04894.png"
        string_val: "../data/Validation/Run_0001/images/frame_03249.png"
        string_val: "../data/Validation/Run_0001/images/frame_01319.png"
        string_val: "../data/Validation/Run_0001/images/frame_03473.png"
        string_val: "../data/Validation/Run_0001/images/frame_02245.png"
        string_val: "../data/Validation/Run_0001/images/frame_04759.png"
        string_val: "../data/Validation/Run_0001/images/frame_02603.png"
        string_val: "../data/Validation/Run_0001/images/frame_04015.png"
        string_val: "../data/Validation/Run_0001/images/frame_02307.png"
        string_val: "../data/Validation/Run_0001/images/frame_03162.png"
        string_val: "../data/Validation/Run_0001/images/frame_04038.png"
        string_val: "../data/Validation/Run_0001/images/frame_04148.png"
        string_val: "../data/Validation/Run_0001/images/frame_00274.png"
        string_val: "../data/Validation/Run_0001/images/frame_02699.png"
        string_val: "../data/Validation/Run_0001/images/frame_00174.png"
        string_val: "../data/Validation/Run_0001/images/frame_00717.png"
        string_val: "../data/Validation/Run_0001/images/frame_04984.png"
        string_val: "../data/Validation/Run_0001/images/frame_00173.png"
        string_val: "../data/Validation/Run_0001/images/frame_05052.png"
        string_val: "../data/Validation/Run_0001/images/frame_02579.png"
        string_val: "../data/Validation/Run_0001/images/frame_03309.png"
        string_val: "../data/Validation/Run_0001/images/frame_04054.png"
        string_val: "../data/Validation/Run_0001/images/frame_00265.png"
        string_val: "../data/Validation/Run_0001/images/frame_04446.png"
        string_val: "../data/Validation/Run_0001/images/frame_00687.png"
        string_val: "../data/Validation/Run_0001/images/frame_02598.png"
        string_val: "../data/Validation/Run_0001/images/frame_02745.png"
        string_val: "../data/Validation/Run_0001/images/frame_03297.png"
        string_val: "../data/Validation/Run_0001/images/frame_03028.png"
        string_val: "../data/Validation/Run_0001/images/frame_03091.png"
        string_val: "../data/Validation/Run_0001/images/frame_00269.png"
        string_val: "../data/Validation/Run_0001/images/frame_03434.png"
        string_val: "../data/Validation/Run_0001/images/frame_03661.png"
        string_val: "../data/Validation/Run_0001/images/frame_04487.png"
        string_val: "../data/Validation/Run_0001/images/frame_00610.png"
        string_val: "../data/Validation/Run_0001/images/frame_01418.png"
        string_val: "../data/Validation/Run_0001/images/frame_01747.png"
        string_val: "../data/Validation/Run_0001/images/frame_04062.png"
        string_val: "../data/Validation/Run_0001/images/frame_04909.png"
        string_val: "../data/Validation/Run_0001/images/frame_03262.png"
        string_val: "../data/Validation/Run_0001/images/frame_00417.png"
        string_val: "../data/Validation/Run_0001/images/frame_00056.png"
        string_val: "../data/Validation/Run_0001/images/frame_03602.png"
        string_val: "../data/Validation/Run_0001/images/frame_01533.png"
        string_val: "../data/Validation/Run_0001/images/frame_03341.png"
        string_val: "../data/Validation/Run_0001/images/frame_01711.png"
        string_val: "../data/Validation/Run_0001/images/frame_02438.png"
        string_val: "../data/Validation/Run_0001/images/frame_02486.png"
        string_val: "../data/Validation/Run_0001/images/frame_03537.png"
        string_val: "../data/Validation/Run_0001/images/frame_04182.png"
        string_val: "../data/Validation/Run_0001/images/frame_03116.png"
        string_val: "../data/Validation/Run_0001/images/frame_04256.png"
        string_val: "../data/Validation/Run_0001/images/frame_01323.png"
        string_val: "../data/Validation/Run_0001/images/frame_01816.png"
        string_val: "../data/Validation/Run_0001/images/frame_02729.png"
        string_val: "../data/Validation/Run_0001/images/frame_00089.png"
        string_val: "../data/Validation/Run_0001/images/frame_04332.png"
        string_val: "../data/Validation/Run_0001/images/frame_01135.png"
        string_val: "../data/Validation/Run_0001/images/frame_03334.png"
        string_val: "../data/Validation/Run_0001/images/frame_00588.png"
        string_val: "../data/Validation/Run_0001/images/frame_01671.png"
        string_val: "../data/Validation/Run_0001/images/frame_03644.png"
        string_val: "../data/Validation/Run_0001/images/frame_00219.png"
        string_val: "../data/Validation/Run_0001/images/frame_02204.png"
        string_val: "../data/Validation/Run_0001/images/frame_04385.png"
        string_val: "../data/Validation/Run_0001/images/frame_02738.png"
        string_val: "../data/Validation/Run_0001/images/frame_04553.png"
        string_val: "../data/Validation/Run_0001/images/frame_03875.png"
        string_val: "../data/Validation/Run_0001/images/frame_01648.png"
        string_val: "../data/Validation/Run_0001/images/frame_04248.png"
        string_val: "../data/Validation/Run_0001/images/frame_02390.png"
        string_val: "../data/Validation/Run_0001/images/frame_00876.png"
        string_val: "../data/Validation/Run_0001/images/frame_01739.png"
        string_val: "../data/Validation/Run_0001/images/frame_00643.png"
        string_val: "../data/Validation/Run_0001/images/frame_00527.png"
        string_val: "../data/Validation/Run_0001/images/frame_00311.png"
        string_val: "../data/Validation/Run_0001/images/frame_03422.png"
        string_val: "../data/Validation/Run_0001/images/frame_00373.png"
        string_val: "../data/Validation/Run_0001/images/frame_01217.png"
        string_val: "../data/Validation/Run_0001/images/frame_02718.png"
        string_val: "../data/Validation/Run_0001/images/frame_02836.png"
        string_val: "../data/Validation/Run_0001/images/frame_02234.png"
        string_val: "../data/Validation/Run_0001/images/frame_01640.png"
        string_val: "../data/Validation/Run_0001/images/frame_00879.png"
        string_val: "../data/Validation/Run_0001/images/frame_04473.png"
        string_val: "../data/Validation/Run_0001/images/frame_02831.png"
        string_val: "../data/Validation/Run_0001/images/frame_03939.png"
        string_val: "../data/Validation/Run_0001/images/frame_04133.png"
        string_val: "../data/Validation/Run_0001/images/frame_01469.png"
        string_val: "../data/Validation/Run_0001/images/frame_01968.png"
        string_val: "../data/Validation/Run_0001/images/frame_04508.png"
        string_val: "../data/Validation/Run_0001/images/frame_04158.png"
        string_val: "../data/Validation/Run_0001/images/frame_02876.png"
        string_val: "../data/Validation/Run_0001/images/frame_02293.png"
        string_val: "../data/Validation/Run_0001/images/frame_03709.png"
        string_val: "../data/Validation/Run_0001/images/frame_00467.png"
        string_val: "../data/Validation/Run_0001/images/frame_00172.png"
        string_val: "../data/Validation/Run_0001/images/frame_00389.png"
        string_val: "../data/Validation/Run_0001/images/frame_04627.png"
        string_val: "../data/Validation/Run_0001/images/frame_04220.png"
        string_val: "../data/Validation/Run_0001/images/frame_03111.png"
        string_val: "../data/Validation/Run_0001/images/frame_03142.png"
        string_val: "../data/Validation/Run_0001/images/frame_02667.png"
        string_val: "../data/Validation/Run_0001/images/frame_02259.png"
        string_val: "../data/Validation/Run_0001/images/frame_00825.png"
        string_val: "../data/Validation/Run_0001/images/frame_03822.png"
        string_val: "../data/Validation/Run_0001/images/frame_01155.png"
        string_val: "../data/Validation/Run_0001/images/frame_03188.png"
        string_val: "../data/Validation/Run_0001/images/frame_01212.png"
        string_val: "../data/Validation/Run_0001/images/frame_00408.png"
        string_val: "../data/Validation/Run_0001/images/frame_02607.png"
        string_val: "../data/Validation/Run_0001/images/frame_01166.png"
        string_val: "../data/Validation/Run_0001/images/frame_02336.png"
        string_val: "../data/Validation/Run_0001/images/frame_04890.png"
        string_val: "../data/Validation/Run_0001/images/frame_01258.png"
        string_val: "../data/Validation/Run_0001/images/frame_02572.png"
        string_val: "../data/Validation/Run_0001/images/frame_01008.png"
        string_val: "../data/Validation/Run_0001/images/frame_04282.png"
        string_val: "../data/Validation/Run_0001/images/frame_02521.png"
        string_val: "../data/Validation/Run_0001/images/frame_01896.png"
        string_val: "../data/Validation/Run_0001/images/frame_01329.png"
        string_val: "../data/Validation/Run_0001/images/frame_01600.png"
        string_val: "../data/Validation/Run_0001/images/frame_04792.png"
        string_val: "../data/Validation/Run_0001/images/frame_04567.png"
        string_val: "../data/Validation/Run_0001/images/frame_01012.png"
        string_val: "../data/Validation/Run_0001/images/frame_02287.png"
        string_val: "../data/Validation/Run_0001/images/frame_00402.png"
        string_val: "../data/Validation/Run_0001/images/frame_01343.png"
        string_val: "../data/Validation/Run_0001/images/frame_04180.png"
        string_val: "../data/Validation/Run_0001/images/frame_03353.png"
        string_val: "../data/Validation/Run_0001/images/frame_01610.png"
        string_val: "../data/Validation/Run_0001/images/frame_00430.png"
        string_val: "../data/Validation/Run_0001/images/frame_03176.png"
        string_val: "../data/Validation/Run_0001/images/frame_00832.png"
        string_val: "../data/Validation/Run_0001/images/frame_02926.png"
        string_val: "../data/Validation/Run_0001/images/frame_02500.png"
        string_val: "../data/Validation/Run_0001/images/frame_01345.png"
        string_val: "../data/Validation/Run_0001/images/frame_02578.png"
        string_val: "../data/Validation/Run_0001/images/frame_04709.png"
        string_val: "../data/Validation/Run_0001/images/frame_02732.png"
        string_val: "../data/Validation/Run_0001/images/frame_02566.png"
        string_val: "../data/Validation/Run_0001/images/frame_02580.png"
        string_val: "../data/Validation/Run_0001/images/frame_00824.png"
        string_val: "../data/Validation/Run_0001/images/frame_03298.png"
        string_val: "../data/Validation/Run_0001/images/frame_03742.png"
        string_val: "../data/Validation/Run_0001/images/frame_05035.png"
        string_val: "../data/Validation/Run_0001/images/frame_02320.png"
        string_val: "../data/Validation/Run_0001/images/frame_04317.png"
        string_val: "../data/Validation/Run_0001/images/frame_02665.png"
        string_val: "../data/Validation/Run_0001/images/frame_02893.png"
        string_val: "../data/Validation/Run_0001/images/frame_00730.png"
        string_val: "../data/Validation/Run_0001/images/frame_01682.png"
        string_val: "../data/Validation/Run_0001/images/frame_03772.png"
        string_val: "../data/Validation/Run_0001/images/frame_03934.png"
        string_val: "../data/Validation/Run_0001/images/frame_03701.png"
        string_val: "../data/Validation/Run_0001/images/frame_04296.png"
        string_val: "../data/Validation/Run_0001/images/frame_04109.png"
        string_val: "../data/Validation/Run_0001/images/frame_00997.png"
        string_val: "../data/Validation/Run_0001/images/frame_03756.png"
        string_val: "../data/Validation/Run_0001/images/frame_00120.png"
        string_val: "../data/Validation/Run_0001/images/frame_00103.png"
        string_val: "../data/Validation/Run_0001/images/frame_04290.png"
        string_val: "../data/Validation/Run_0001/images/frame_01140.png"
        string_val: "../data/Validation/Run_0001/images/frame_00768.png"
        string_val: "../data/Validation/Run_0001/images/frame_03237.png"
        string_val: "../data/Validation/Run_0001/images/frame_01777.png"
        string_val: "../data/Validation/Run_0001/images/frame_01430.png"
        string_val: "../data/Validation/Run_0001/images/frame_03862.png"
        string_val: "../data/Validation/Run_0001/images/frame_03483.png"
        string_val: "../data/Validation/Run_0001/images/frame_02372.png"
        string_val: "../data/Validation/Run_0001/images/frame_05005.png"
        string_val: "../data/Validation/Run_0001/images/frame_04796.png"
        string_val: "../data/Validation/Run_0001/images/frame_03645.png"
        string_val: "../data/Validation/Run_0001/images/frame_00316.png"
        string_val: "../data/Validation/Run_0001/images/frame_01759.png"
        string_val: "../data/Validation/Run_0001/images/frame_02496.png"
        string_val: "../data/Validation/Run_0001/images/frame_04230.png"
        string_val: "../data/Validation/Run_0001/images/frame_01741.png"
        string_val: "../data/Validation/Run_0001/images/frame_03577.png"
        string_val: "../data/Validation/Run_0001/images/frame_00215.png"
        string_val: "../data/Validation/Run_0001/images/frame_05010.png"
        string_val: "../data/Validation/Run_0001/images/frame_01385.png"
        string_val: "../data/Validation/Run_0001/images/frame_02752.png"
        string_val: "../data/Validation/Run_0001/images/frame_01939.png"
        string_val: "../data/Validation/Run_0001/images/frame_00659.png"
        string_val: "../data/Validation/Run_0001/images/frame_01014.png"
        string_val: "../data/Validation/Run_0001/images/frame_01052.png"
        string_val: "../data/Validation/Run_0001/images/frame_00827.png"
        string_val: "../data/Validation/Run_0001/images/frame_00616.png"
        string_val: "../data/Validation/Run_0001/images/frame_04404.png"
        string_val: "../data/Validation/Run_0001/images/frame_03639.png"
        string_val: "../data/Validation/Run_0001/images/frame_02176.png"
        string_val: "../data/Validation/Run_0001/images/frame_04091.png"
        string_val: "../data/Validation/Run_0001/images/frame_00852.png"
        string_val: "../data/Validation/Run_0001/images/frame_03799.png"
        string_val: "../data/Validation/Run_0001/images/frame_01250.png"
        string_val: "../data/Validation/Run_0001/images/frame_04743.png"
        string_val: "../data/Validation/Run_0001/images/frame_04564.png"
        string_val: "../data/Validation/Run_0001/images/frame_00558.png"
        string_val: "../data/Validation/Run_0001/images/frame_01666.png"
        string_val: "../data/Validation/Run_0001/images/frame_00636.png"
        string_val: "../data/Validation/Run_0001/images/frame_01148.png"
        string_val: "../data/Validation/Run_0001/images/frame_03745.png"
        string_val: "../data/Validation/Run_0001/images/frame_01680.png"
        string_val: "../data/Validation/Run_0001/images/frame_04636.png"
        string_val: "../data/Validation/Run_0001/images/frame_00252.png"
        string_val: "../data/Validation/Run_0001/images/frame_01357.png"
        string_val: "../data/Validation/Run_0001/images/frame_01983.png"
        string_val: "../data/Validation/Run_0001/images/frame_02118.png"
        string_val: "../data/Validation/Run_0001/images/frame_01681.png"
        string_val: "../data/Validation/Run_0001/images/frame_04262.png"
        string_val: "../data/Validation/Run_0001/images/frame_01763.png"
        string_val: "../data/Validation/Run_0001/images/frame_04731.png"
        string_val: "../data/Validation/Run_0001/images/frame_02063.png"
        string_val: "../data/Validation/Run_0001/images/frame_00547.png"
        string_val: "../data/Validation/Run_0001/images/frame_01310.png"
        string_val: "../data/Validation/Run_0001/images/frame_04135.png"
        string_val: "../data/Validation/Run_0001/images/frame_00778.png"
        string_val: "../data/Validation/Run_0001/images/frame_00662.png"
        string_val: "../data/Validation/Run_0001/images/frame_00296.png"
        string_val: "../data/Validation/Run_0001/images/frame_04390.png"
        string_val: "../data/Validation/Run_0001/images/frame_02518.png"
        string_val: "../data/Validation/Run_0001/images/frame_01519.png"
        string_val: "../data/Validation/Run_0001/images/frame_02569.png"
        string_val: "../data/Validation/Run_0001/images/frame_01417.png"
        string_val: "../data/Validation/Run_0001/images/frame_01355.png"
        string_val: "../data/Validation/Run_0001/images/frame_03960.png"
        string_val: "../data/Validation/Run_0001/images/frame_01443.png"
        string_val: "../data/Validation/Run_0001/images/frame_01569.png"
        string_val: "../data/Validation/Run_0001/images/frame_05024.png"
        string_val: "../data/Validation/Run_0001/images/frame_01065.png"
        string_val: "../data/Validation/Run_0001/images/frame_02177.png"
        string_val: "../data/Validation/Run_0001/images/frame_04651.png"
        string_val: "../data/Validation/Run_0001/images/frame_02551.png"
        string_val: "../data/Validation/Run_0001/images/frame_00570.png"
        string_val: "../data/Validation/Run_0001/images/frame_03038.png"
        string_val: "../data/Validation/Run_0001/images/frame_03335.png"
        string_val: "../data/Validation/Run_0001/images/frame_00014.png"
        string_val: "../data/Validation/Run_0001/images/frame_03579.png"
        string_val: "../data/Validation/Run_0001/images/frame_02144.png"
        string_val: "../data/Validation/Run_0001/images/frame_00117.png"
        string_val: "../data/Validation/Run_0001/images/frame_03070.png"
        string_val: "../data/Validation/Run_0001/images/frame_03203.png"
        string_val: "../data/Validation/Run_0001/images/frame_05026.png"
        string_val: "../data/Validation/Run_0001/images/frame_00002.png"
        string_val: "../data/Validation/Run_0001/images/frame_00151.png"
        string_val: "../data/Validation/Run_0001/images/frame_00237.png"
        string_val: "../data/Validation/Run_0001/images/frame_00704.png"
        string_val: "../data/Validation/Run_0001/images/frame_03333.png"
        string_val: "../data/Validation/Run_0001/images/frame_02097.png"
        string_val: "../data/Validation/Run_0001/images/frame_02932.png"
        string_val: "../data/Validation/Run_0001/images/frame_02003.png"
        string_val: "../data/Validation/Run_0001/images/frame_03905.png"
        string_val: "../data/Validation/Run_0001/images/frame_02761.png"
        string_val: "../data/Validation/Run_0001/images/frame_04395.png"
        string_val: "../data/Validation/Run_0001/images/frame_00377.png"
        string_val: "../data/Validation/Run_0001/images/frame_00275.png"
        string_val: "../data/Validation/Run_0001/images/frame_02362.png"
        string_val: "../data/Validation/Run_0001/images/frame_04218.png"
        string_val: "../data/Validation/Run_0001/images/frame_04124.png"
        string_val: "../data/Validation/Run_0001/images/frame_01941.png"
        string_val: "../data/Validation/Run_0001/images/frame_04033.png"
        string_val: "../data/Validation/Run_0001/images/frame_04527.png"
        string_val: "../data/Validation/Run_0001/images/frame_02941.png"
        string_val: "../data/Validation/Run_0001/images/frame_02104.png"
        string_val: "../data/Validation/Run_0001/images/frame_03255.png"
        string_val: "../data/Validation/Run_0001/images/frame_02450.png"
        string_val: "../data/Validation/Run_0001/images/frame_03683.png"
        string_val: "../data/Validation/Run_0001/images/frame_00346.png"
        string_val: "../data/Validation/Run_0001/images/frame_02785.png"
        string_val: "../data/Validation/Run_0001/images/frame_03445.png"
        string_val: "../data/Validation/Run_0001/images/frame_02255.png"
        string_val: "../data/Validation/Run_0001/images/frame_01852.png"
        string_val: "../data/Validation/Run_0001/images/frame_03698.png"
        string_val: "../data/Validation/Run_0001/images/frame_00113.png"
        string_val: "../data/Validation/Run_0001/images/frame_00559.png"
        string_val: "../data/Validation/Run_0001/images/frame_02140.png"
        string_val: "../data/Validation/Run_0001/images/frame_03637.png"
        string_val: "../data/Validation/Run_0001/images/frame_01992.png"
        string_val: "../data/Validation/Run_0001/images/frame_03062.png"
        string_val: "../data/Validation/Run_0001/images/frame_00695.png"
        string_val: "../data/Validation/Run_0001/images/frame_04803.png"
        string_val: "../data/Validation/Run_0001/images/frame_03115.png"
        string_val: "../data/Validation/Run_0001/images/frame_03049.png"
        string_val: "../data/Validation/Run_0001/images/frame_02923.png"
        string_val: "../data/Validation/Run_0001/images/frame_02661.png"
        string_val: "../data/Validation/Run_0001/images/frame_01780.png"
        string_val: "../data/Validation/Run_0001/images/frame_01254.png"
        string_val: "../data/Validation/Run_0001/images/frame_00000.png"
        string_val: "../data/Validation/Run_0001/images/frame_04675.png"
        string_val: "../data/Validation/Run_0001/images/frame_03815.png"
        string_val: "../data/Validation/Run_0001/images/frame_00286.png"
        string_val: "../data/Validation/Run_0001/images/frame_03906.png"
        string_val: "../data/Validation/Run_0001/images/frame_02768.png"
        string_val: "../data/Validation/Run_0001/images/frame_02803.png"
        string_val: "../data/Validation/Run_0001/images/frame_04472.png"
        string_val: "../data/Validation/Run_0001/images/frame_01874.png"
        string_val: "../data/Validation/Run_0001/images/frame_02535.png"
        string_val: "../data/Validation/Run_0001/images/frame_04861.png"
        string_val: "../data/Validation/Run_0001/images/frame_03995.png"
        string_val: "../data/Validation/Run_0001/images/frame_02387.png"
        string_val: "../data/Validation/Run_0001/images/frame_03504.png"
        string_val: "../data/Validation/Run_0001/images/frame_01213.png"
        string_val: "../data/Validation/Run_0001/images/frame_03086.png"
        string_val: "../data/Validation/Run_0001/images/frame_04723.png"
        string_val: "../data/Validation/Run_0001/images/frame_01236.png"
        string_val: "../data/Validation/Run_0001/images/frame_04707.png"
        string_val: "../data/Validation/Run_0001/images/frame_00025.png"
        string_val: "../data/Validation/Run_0001/images/frame_00885.png"
        string_val: "../data/Validation/Run_0001/images/frame_03376.png"
        string_val: "../data/Validation/Run_0001/images/frame_01833.png"
        string_val: "../data/Validation/Run_0001/images/frame_04097.png"
        string_val: "../data/Validation/Run_0001/images/frame_04778.png"
        string_val: "../data/Validation/Run_0001/images/frame_01471.png"
        string_val: "../data/Validation/Run_0001/images/frame_01215.png"
        string_val: "../data/Validation/Run_0001/images/frame_04604.png"
        string_val: "../data/Validation/Run_0001/images/frame_00200.png"
        string_val: "../data/Validation/Run_0001/images/frame_02970.png"
        string_val: "../data/Validation/Run_0001/images/frame_01141.png"
        string_val: "../data/Validation/Run_0001/images/frame_01999.png"
        string_val: "../data/Validation/Run_0001/images/frame_04671.png"
        string_val: "../data/Validation/Run_0001/images/frame_04342.png"
        string_val: "../data/Validation/Run_0001/images/frame_00838.png"
        string_val: "../data/Validation/Run_0001/images/frame_00592.png"
        string_val: "../data/Validation/Run_0001/images/frame_03425.png"
        string_val: "../data/Validation/Run_0001/images/frame_03406.png"
        string_val: "../data/Validation/Run_0001/images/frame_00631.png"
        string_val: "../data/Validation/Run_0001/images/frame_03484.png"
        string_val: "../data/Validation/Run_0001/images/frame_02333.png"
        string_val: "../data/Validation/Run_0001/images/frame_04753.png"
        string_val: "../data/Validation/Run_0001/images/frame_02311.png"
        string_val: "../data/Validation/Run_0001/images/frame_04071.png"
        string_val: "../data/Validation/Run_0001/images/frame_00156.png"
        string_val: "../data/Validation/Run_0001/images/frame_03736.png"
        string_val: "../data/Validation/Run_0001/images/frame_00705.png"
        string_val: "../data/Validation/Run_0001/images/frame_02740.png"
        string_val: "../data/Validation/Run_0001/images/frame_04206.png"
        string_val: "../data/Validation/Run_0001/images/frame_01779.png"
        string_val: "../data/Validation/Run_0001/images/frame_04263.png"
        string_val: "../data/Validation/Run_0001/images/frame_03267.png"
        string_val: "../data/Validation/Run_0001/images/frame_01346.png"
        string_val: "../data/Validation/Run_0001/images/frame_01358.png"
        string_val: "../data/Validation/Run_0001/images/frame_01066.png"
        string_val: "../data/Validation/Run_0001/images/frame_03025.png"
        string_val: "../data/Validation/Run_0001/images/frame_04772.png"
        string_val: "../data/Validation/Run_0001/images/frame_01142.png"
        string_val: "../data/Validation/Run_0001/images/frame_03568.png"
        string_val: "../data/Validation/Run_0001/images/frame_02964.png"
        string_val: "../data/Validation/Run_0001/images/frame_01972.png"
        string_val: "../data/Validation/Run_0001/images/frame_02945.png"
        string_val: "../data/Validation/Run_0001/images/frame_02425.png"
        string_val: "../data/Validation/Run_0001/images/frame_04626.png"
        string_val: "../data/Validation/Run_0001/images/frame_04274.png"
        string_val: "../data/Validation/Run_0001/images/frame_01593.png"
        string_val: "../data/Validation/Run_0001/images/frame_04763.png"
        string_val: "../data/Validation/Run_0001/images/frame_01831.png"
        string_val: "../data/Validation/Run_0001/images/frame_00208.png"
        string_val: "../data/Validation/Run_0001/images/frame_02946.png"
        string_val: "../data/Validation/Run_0001/images/frame_02119.png"
        string_val: "../data/Validation/Run_0001/images/frame_04306.png"
        string_val: "../data/Validation/Run_0001/images/frame_00363.png"
        string_val: "../data/Validation/Run_0001/images/frame_01971.png"
        string_val: "../data/Validation/Run_0001/images/frame_00566.png"
        string_val: "../data/Validation/Run_0001/images/frame_04673.png"
        string_val: "../data/Validation/Run_0001/images/frame_04891.png"
        string_val: "../data/Validation/Run_0001/images/frame_03357.png"
        string_val: "../data/Validation/Run_0001/images/frame_04852.png"
        string_val: "../data/Validation/Run_0001/images/frame_02575.png"
        string_val: "../data/Validation/Run_0001/images/frame_01284.png"
        string_val: "../data/Validation/Run_0001/images/frame_00786.png"
        string_val: "../data/Validation/Run_0001/images/frame_01033.png"
        string_val: "../data/Validation/Run_0001/images/frame_04141.png"
        string_val: "../data/Validation/Run_0001/images/frame_00586.png"
        string_val: "../data/Validation/Run_0001/images/frame_02944.png"
        string_val: "../data/Validation/Run_0001/images/frame_01657.png"
        string_val: "../data/Validation/Run_0001/images/frame_01845.png"
        string_val: "../data/Validation/Run_0001/images/frame_04933.png"
        string_val: "../data/Validation/Run_0001/images/frame_01194.png"
        string_val: "../data/Validation/Run_0001/images/frame_04415.png"
        string_val: "../data/Validation/Run_0001/images/frame_00746.png"
        string_val: "../data/Validation/Run_0001/images/frame_01722.png"
        string_val: "../data/Validation/Run_0001/images/frame_02073.png"
        string_val: "../data/Validation/Run_0001/images/frame_00742.png"
        string_val: "../data/Validation/Run_0001/images/frame_01115.png"
        string_val: "../data/Validation/Run_0001/images/frame_02044.png"
        string_val: "../data/Validation/Run_0001/images/frame_00342.png"
        string_val: "../data/Validation/Run_0001/images/frame_01440.png"
        string_val: "../data/Validation/Run_0001/images/frame_00715.png"
        string_val: "../data/Validation/Run_0001/images/frame_00925.png"
        string_val: "../data/Validation/Run_0001/images/frame_03081.png"
        string_val: "../data/Validation/Run_0001/images/frame_02113.png"
        string_val: "../data/Validation/Run_0001/images/frame_01164.png"
        string_val: "../data/Validation/Run_0001/images/frame_03305.png"
        string_val: "../data/Validation/Run_0001/images/frame_04499.png"
        string_val: "../data/Validation/Run_0001/images/frame_05071.png"
        string_val: "../data/Validation/Run_0001/images/frame_00326.png"
        string_val: "../data/Validation/Run_0001/images/frame_03619.png"
        string_val: "../data/Validation/Run_0001/images/frame_01704.png"
        string_val: "../data/Validation/Run_0001/images/frame_02439.png"
        string_val: "../data/Validation/Run_0001/images/frame_00931.png"
        string_val: "../data/Validation/Run_0001/images/frame_00062.png"
        string_val: "../data/Validation/Run_0001/images/frame_00862.png"
        string_val: "../data/Validation/Run_0001/images/frame_04462.png"
        string_val: "../data/Validation/Run_0001/images/frame_03530.png"
        string_val: "../data/Validation/Run_0001/images/frame_01283.png"
        string_val: "../data/Validation/Run_0001/images/frame_00115.png"
        string_val: "../data/Validation/Run_0001/images/frame_01589.png"
        string_val: "../data/Validation/Run_0001/images/frame_01561.png"
        string_val: "../data/Validation/Run_0001/images/frame_02174.png"
        string_val: "../data/Validation/Run_0001/images/frame_03045.png"
        string_val: "../data/Validation/Run_0001/images/frame_00029.png"
        string_val: "../data/Validation/Run_0001/images/frame_03009.png"
        string_val: "../data/Validation/Run_0001/images/frame_02957.png"
        string_val: "../data/Validation/Run_0001/images/frame_00330.png"
        string_val: "../data/Validation/Run_0001/images/frame_01646.png"
        string_val: "../data/Validation/Run_0001/images/frame_02013.png"
        string_val: "../data/Validation/Run_0001/images/frame_04692.png"
        string_val: "../data/Validation/Run_0001/images/frame_00310.png"
        string_val: "../data/Validation/Run_0001/images/frame_03659.png"
        string_val: "../data/Validation/Run_0001/images/frame_03608.png"
        string_val: "../data/Validation/Run_0001/images/frame_02088.png"
        string_val: "../data/Validation/Run_0001/images/frame_03667.png"
        string_val: "../data/Validation/Run_0001/images/frame_03204.png"
        string_val: "../data/Validation/Run_0001/images/frame_00522.png"
        string_val: "../data/Validation/Run_0001/images/frame_04584.png"
        string_val: "../data/Validation/Run_0001/images/frame_04608.png"
        string_val: "../data/Validation/Run_0001/images/frame_03937.png"
        string_val: "../data/Validation/Run_0001/images/frame_02130.png"
        string_val: "../data/Validation/Run_0001/images/frame_03200.png"
        string_val: "../data/Validation/Run_0001/images/frame_03758.png"
        string_val: "../data/Validation/Run_0001/images/frame_01801.png"
        string_val: "../data/Validation/Run_0001/images/frame_04744.png"
        string_val: "../data/Validation/Run_0001/images/frame_04610.png"
        string_val: "../data/Validation/Run_0001/images/frame_03885.png"
        string_val: "../data/Validation/Run_0001/images/frame_03912.png"
        string_val: "../data/Validation/Run_0001/images/frame_01137.png"
        string_val: "../data/Validation/Run_0001/images/frame_04174.png"
        string_val: "../data/Validation/Run_0001/images/frame_02046.png"
        string_val: "../data/Validation/Run_0001/images/frame_03566.png"
        string_val: "../data/Validation/Run_0001/images/frame_01393.png"
        string_val: "../data/Validation/Run_0001/images/frame_03803.png"
        string_val: "../data/Validation/Run_0001/images/frame_00283.png"
        string_val: "../data/Validation/Run_0001/images/frame_02955.png"
        string_val: "../data/Validation/Run_0001/images/frame_01181.png"
        string_val: "../data/Validation/Run_0001/images/frame_04161.png"
        string_val: "../data/Validation/Run_0001/images/frame_03800.png"
        string_val: "../data/Validation/Run_0001/images/frame_00567.png"
        string_val: "../data/Validation/Run_0001/images/frame_01786.png"
        string_val: "../data/Validation/Run_0001/images/frame_02111.png"
        string_val: "../data/Validation/Run_0001/images/frame_03955.png"
        string_val: "../data/Validation/Run_0001/images/frame_02645.png"
        string_val: "../data/Validation/Run_0001/images/frame_04558.png"
        string_val: "../data/Validation/Run_0001/images/frame_03449.png"
        string_val: "../data/Validation/Run_0001/images/frame_02710.png"
        string_val: "../data/Validation/Run_0001/images/frame_04127.png"
        string_val: "../data/Validation/Run_0001/images/frame_03260.png"
        string_val: "../data/Validation/Run_0001/images/frame_05049.png"
        string_val: "../data/Validation/Run_0001/images/frame_00895.png"
        string_val: "../data/Validation/Run_0001/images/frame_00047.png"
        string_val: "../data/Validation/Run_0001/images/frame_03452.png"
        string_val: "../data/Validation/Run_0001/images/frame_04557.png"
        string_val: "../data/Validation/Run_0001/images/frame_04926.png"
        string_val: "../data/Validation/Run_0001/images/frame_02170.png"
        string_val: "../data/Validation/Run_0001/images/frame_04598.png"
        string_val: "../data/Validation/Run_0001/images/frame_02426.png"
        string_val: "../data/Validation/Run_0001/images/frame_05059.png"
        string_val: "../data/Validation/Run_0001/images/frame_01507.png"
        string_val: "../data/Validation/Run_0001/images/frame_04664.png"
        string_val: "../data/Validation/Run_0001/images/frame_04665.png"
        string_val: "../data/Validation/Run_0001/images/frame_00411.png"
        string_val: "../data/Validation/Run_0001/images/frame_02540.png"
        string_val: "../data/Validation/Run_0001/images/frame_01160.png"
        string_val: "../data/Validation/Run_0001/images/frame_01421.png"
        string_val: "../data/Validation/Run_0001/images/frame_04314.png"
        string_val: "../data/Validation/Run_0001/images/frame_03112.png"
        string_val: "../data/Validation/Run_0001/images/frame_02408.png"
        string_val: "../data/Validation/Run_0001/images/frame_02308.png"
        string_val: "../data/Validation/Run_0001/images/frame_03217.png"
        string_val: "../data/Validation/Run_0001/images/frame_01851.png"
        string_val: "../data/Validation/Run_0001/images/frame_03450.png"
        string_val: "../data/Validation/Run_0001/images/frame_00727.png"
        string_val: "../data/Validation/Run_0001/images/frame_01872.png"
        string_val: "../data/Validation/Run_0001/images/frame_01101.png"
        string_val: "../data/Validation/Run_0001/images/frame_03856.png"
        string_val: "../data/Validation/Run_0001/images/frame_00284.png"
        string_val: "../data/Validation/Run_0001/images/frame_00462.png"
        string_val: "../data/Validation/Run_0001/images/frame_00771.png"
        string_val: "../data/Validation/Run_0001/images/frame_04252.png"
        string_val: "../data/Validation/Run_0001/images/frame_00642.png"
        string_val: "../data/Validation/Run_0001/images/frame_00099.png"
        string_val: "../data/Validation/Run_0001/images/frame_03759.png"
        string_val: "../data/Validation/Run_0001/images/frame_01363.png"
        string_val: "../data/Validation/Run_0001/images/frame_01392.png"
        string_val: "../data/Validation/Run_0001/images/frame_03886.png"
        string_val: "../data/Validation/Run_0001/images/frame_01407.png"
        string_val: "../data/Validation/Run_0001/images/frame_04093.png"
        string_val: "../data/Validation/Run_0001/images/frame_00564.png"
        string_val: "../data/Validation/Run_0001/images/frame_01942.png"
        string_val: "../data/Validation/Run_0001/images/frame_04102.png"
        string_val: "../data/Validation/Run_0001/images/frame_04934.png"
        string_val: "../data/Validation/Run_0001/images/frame_03068.png"
        string_val: "../data/Validation/Run_0001/images/frame_00207.png"
        string_val: "../data/Validation/Run_0001/images/frame_01270.png"
        string_val: "../data/Validation/Run_0001/images/frame_01784.png"
        string_val: "../data/Validation/Run_0001/images/frame_04400.png"
        string_val: "../data/Validation/Run_0001/images/frame_03632.png"
        string_val: "../data/Validation/Run_0001/images/frame_04470.png"
        string_val: "../data/Validation/Run_0001/images/frame_04579.png"
        string_val: "../data/Validation/Run_0001/images/frame_01997.png"
        string_val: "../data/Validation/Run_0001/images/frame_04917.png"
        string_val: "../data/Validation/Run_0001/images/frame_02208.png"
        string_val: "../data/Validation/Run_0001/images/frame_04375.png"
        string_val: "../data/Validation/Run_0001/images/frame_04801.png"
        string_val: "../data/Validation/Run_0001/images/frame_01571.png"
        string_val: "../data/Validation/Run_0001/images/frame_02035.png"
        string_val: "../data/Validation/Run_0001/images/frame_01180.png"
        string_val: "../data/Validation/Run_0001/images/frame_00280.png"
        string_val: "../data/Validation/Run_0001/images/frame_00203.png"
        string_val: "../data/Validation/Run_0001/images/frame_02067.png"
        string_val: "../data/Validation/Run_0001/images/frame_02737.png"
        string_val: "../data/Validation/Run_0001/images/frame_04643.png"
        string_val: "../data/Validation/Run_0001/images/frame_01708.png"
        string_val: "../data/Validation/Run_0001/images/frame_03135.png"
        string_val: "../data/Validation/Run_0001/images/frame_00591.png"
        string_val: "../data/Validation/Run_0001/images/frame_02117.png"
        string_val: "../data/Validation/Run_0001/images/frame_04286.png"
        string_val: "../data/Validation/Run_0001/images/frame_02961.png"
        string_val: "../data/Validation/Run_0001/images/frame_03963.png"
        string_val: "../data/Validation/Run_0001/images/frame_04111.png"
        string_val: "../data/Validation/Run_0001/images/frame_04040.png"
        string_val: "../data/Validation/Run_0001/images/frame_02664.png"
        string_val: "../data/Validation/Run_0001/images/frame_00896.png"
        string_val: "../data/Validation/Run_0001/images/frame_00259.png"
        string_val: "../data/Validation/Run_0001/images/frame_00401.png"
        string_val: "../data/Validation/Run_0001/images/frame_04325.png"
        string_val: "../data/Validation/Run_0001/images/frame_00066.png"
        string_val: "../data/Validation/Run_0001/images/frame_03326.png"
        string_val: "../data/Validation/Run_0001/images/frame_00490.png"
        string_val: "../data/Validation/Run_0001/images/frame_00928.png"
        string_val: "../data/Validation/Run_0001/images/frame_03421.png"
        string_val: "../data/Validation/Run_0001/images/frame_03491.png"
        string_val: "../data/Validation/Run_0001/images/frame_00835.png"
        string_val: "../data/Validation/Run_0001/images/frame_05000.png"
        string_val: "../data/Validation/Run_0001/images/frame_03080.png"
        string_val: "../data/Validation/Run_0001/images/frame_01086.png"
        string_val: "../data/Validation/Run_0001/images/frame_03943.png"
        string_val: "../data/Validation/Run_0001/images/frame_02203.png"
        string_val: "../data/Validation/Run_0001/images/frame_02688.png"
        string_val: "../data/Validation/Run_0001/images/frame_04702.png"
        string_val: "../data/Validation/Run_0001/images/frame_01460.png"
        string_val: "../data/Validation/Run_0001/images/frame_01550.png"
        string_val: "../data/Validation/Run_0001/images/frame_03405.png"
        string_val: "../data/Validation/Run_0001/images/frame_03641.png"
        string_val: "../data/Validation/Run_0001/images/frame_00454.png"
        string_val: "../data/Validation/Run_0001/images/frame_02392.png"
        string_val: "../data/Validation/Run_0001/images/frame_03155.png"
        string_val: "../data/Validation/Run_0001/images/frame_00040.png"
        string_val: "../data/Validation/Run_0001/images/frame_02249.png"
        string_val: "../data/Validation/Run_0001/images/frame_00241.png"
        string_val: "../data/Validation/Run_0001/images/frame_01350.png"
        string_val: "../data/Validation/Run_0001/images/frame_01292.png"
        string_val: "../data/Validation/Run_0001/images/frame_01919.png"
        string_val: "../data/Validation/Run_0001/images/frame_04137.png"
        string_val: "../data/Validation/Run_0001/images/frame_03071.png"
        string_val: "../data/Validation/Run_0001/images/frame_00483.png"
        string_val: "../data/Validation/Run_0001/images/frame_03397.png"
        string_val: "../data/Validation/Run_0001/images/frame_04210.png"
        string_val: "../data/Validation/Run_0001/images/frame_00404.png"
        string_val: "../data/Validation/Run_0001/images/frame_01966.png"
        string_val: "../data/Validation/Run_0001/images/frame_00181.png"
        string_val: "../data/Validation/Run_0001/images/frame_03781.png"
        string_val: "../data/Validation/Run_0001/images/frame_03044.png"
        string_val: "../data/Validation/Run_0001/images/frame_04269.png"
        string_val: "../data/Validation/Run_0001/images/frame_00514.png"
        string_val: "../data/Validation/Run_0001/images/frame_04055.png"
        string_val: "../data/Validation/Run_0001/images/frame_02617.png"
        string_val: "../data/Validation/Run_0001/images/frame_00060.png"
        string_val: "../data/Validation/Run_0001/images/frame_03750.png"
        string_val: "../data/Validation/Run_0001/images/frame_04012.png"
        string_val: "../data/Validation/Run_0001/images/frame_03222.png"
        string_val: "../data/Validation/Run_0001/images/frame_02974.png"
        string_val: "../data/Validation/Run_0001/images/frame_02129.png"
        string_val: "../data/Validation/Run_0001/images/frame_00865.png"
        string_val: "../data/Validation/Run_0001/images/frame_04244.png"
        string_val: "../data/Validation/Run_0001/images/frame_04947.png"
        string_val: "../data/Validation/Run_0001/images/frame_02025.png"
        string_val: "../data/Validation/Run_0001/images/frame_00366.png"
        string_val: "../data/Validation/Run_0001/images/frame_00347.png"
        string_val: "../data/Validation/Run_0001/images/frame_04848.png"
        string_val: "../data/Validation/Run_0001/images/frame_04279.png"
        string_val: "../data/Validation/Run_0001/images/frame_03776.png"
        string_val: "../data/Validation/Run_0001/images/frame_01423.png"
        string_val: "../data/Validation/Run_0001/images/frame_01427.png"
        string_val: "../data/Validation/Run_0001/images/frame_01452.png"
        string_val: "../data/Validation/Run_0001/images/frame_03073.png"
        string_val: "../data/Validation/Run_0001/images/frame_03195.png"
        string_val: "../data/Validation/Run_0001/images/frame_03775.png"
        string_val: "../data/Validation/Run_0001/images/frame_03281.png"
        string_val: "../data/Validation/Run_0001/images/frame_02252.png"
        string_val: "../data/Validation/Run_0001/images/frame_01485.png"
        string_val: "../data/Validation/Run_0001/images/frame_01422.png"
        string_val: "../data/Validation/Run_0001/images/frame_00407.png"
        string_val: "../data/Validation/Run_0001/images/frame_03720.png"
        string_val: "../data/Validation/Run_0001/images/frame_00083.png"
        string_val: "../data/Validation/Run_0001/images/frame_04554.png"
        string_val: "../data/Validation/Run_0001/images/frame_03052.png"
        string_val: "../data/Validation/Run_0001/images/frame_04976.png"
        string_val: "../data/Validation/Run_0001/images/frame_03384.png"
        string_val: "../data/Validation/Run_0001/images/frame_01391.png"
        string_val: "../data/Validation/Run_0001/images/frame_03269.png"
        string_val: "../data/Validation/Run_0001/images/frame_00967.png"
        string_val: "../data/Validation/Run_0001/images/frame_04051.png"
        string_val: "../data/Validation/Run_0001/images/frame_01515.png"
        string_val: "../data/Validation/Run_0001/images/frame_00966.png"
        string_val: "../data/Validation/Run_0001/images/frame_03339.png"
        string_val: "../data/Validation/Run_0001/images/frame_04660.png"
        string_val: "../data/Validation/Run_0001/images/frame_00074.png"
        string_val: "../data/Validation/Run_0001/images/frame_03059.png"
        string_val: "../data/Validation/Run_0001/images/frame_01758.png"
        string_val: "../data/Validation/Run_0001/images/frame_00288.png"
        string_val: "../data/Validation/Run_0001/images/frame_03098.png"
        string_val: "../data/Validation/Run_0001/images/frame_01078.png"
        string_val: "../data/Validation/Run_0001/images/frame_01260.png"
        string_val: "../data/Validation/Run_0001/images/frame_02402.png"
        string_val: "../data/Validation/Run_0001/images/frame_04403.png"
        string_val: "../data/Validation/Run_0001/images/frame_01262.png"
        string_val: "../data/Validation/Run_0001/images/frame_04952.png"
        string_val: "../data/Validation/Run_0001/images/frame_01522.png"
        string_val: "../data/Validation/Run_0001/images/frame_02921.png"
        string_val: "../data/Validation/Run_0001/images/frame_02289.png"
        string_val: "../data/Validation/Run_0001/images/frame_01106.png"
        string_val: "../data/Validation/Run_0001/images/frame_00325.png"
        string_val: "../data/Validation/Run_0001/images/frame_02199.png"
        string_val: "../data/Validation/Run_0001/images/frame_00866.png"
        string_val: "../data/Validation/Run_0001/images/frame_02380.png"
        string_val: "../data/Validation/Run_0001/images/frame_00424.png"
        string_val: "../data/Validation/Run_0001/images/frame_05036.png"
        string_val: "../data/Validation/Run_0001/images/frame_02469.png"
        string_val: "../data/Validation/Run_0001/images/frame_03858.png"
        string_val: "../data/Validation/Run_0001/images/frame_04522.png"
        string_val: "../data/Validation/Run_0001/images/frame_03811.png"
        string_val: "../data/Validation/Run_0001/images/frame_00725.png"
        string_val: "../data/Validation/Run_0001/images/frame_01245.png"
        string_val: "../data/Validation/Run_0001/images/frame_00312.png"
        string_val: "../data/Validation/Run_0001/images/frame_01847.png"
        string_val: "../data/Validation/Run_0001/images/frame_01347.png"
        string_val: "../data/Validation/Run_0001/images/frame_04474.png"
        string_val: "../data/Validation/Run_0001/images/frame_02734.png"
        string_val: "../data/Validation/Run_0001/images/frame_02564.png"
        string_val: "../data/Validation/Run_0001/images/frame_02881.png"
        string_val: "../data/Validation/Run_0001/images/frame_04236.png"
        string_val: "../data/Validation/Run_0001/images/frame_03550.png"
        string_val: "../data/Validation/Run_0001/images/frame_02801.png"
        string_val: "../data/Validation/Run_0001/images/frame_03541.png"
        string_val: "../data/Validation/Run_0001/images/frame_01757.png"
        string_val: "../data/Validation/Run_0001/images/frame_01850.png"
        string_val: "../data/Validation/Run_0001/images/frame_02744.png"
        string_val: "../data/Validation/Run_0001/images/frame_02913.png"
        string_val: "../data/Validation/Run_0001/images/frame_00392.png"
        string_val: "../data/Validation/Run_0001/images/frame_01764.png"
        string_val: "../data/Validation/Run_0001/images/frame_02266.png"
        string_val: "../data/Validation/Run_0001/images/frame_04346.png"
        string_val: "../data/Validation/Run_0001/images/frame_01100.png"
        string_val: "../data/Validation/Run_0001/images/frame_03279.png"
        string_val: "../data/Validation/Run_0001/images/frame_03630.png"
        string_val: "../data/Validation/Run_0001/images/frame_01411.png"
        string_val: "../data/Validation/Run_0001/images/frame_01806.png"
        string_val: "../data/Validation/Run_0001/images/frame_04114.png"
        string_val: "../data/Validation/Run_0001/images/frame_01349.png"
        string_val: "../data/Validation/Run_0001/images/frame_01530.png"
        string_val: "../data/Validation/Run_0001/images/frame_02894.png"
        string_val: "../data/Validation/Run_0001/images/frame_02928.png"
        string_val: "../data/Validation/Run_0001/images/frame_01470.png"
        string_val: "../data/Validation/Run_0001/images/frame_03330.png"
        string_val: "../data/Validation/Run_0001/images/frame_02590.png"
        string_val: "../data/Validation/Run_0001/images/frame_02715.png"
        string_val: "../data/Validation/Run_0001/images/frame_02424.png"
        string_val: "../data/Validation/Run_0001/images/frame_03363.png"
        string_val: "../data/Validation/Run_0001/images/frame_04931.png"
        string_val: "../data/Validation/Run_0001/images/frame_03146.png"
        string_val: "../data/Validation/Run_0001/images/frame_00587.png"
        string_val: "../data/Validation/Run_0001/images/frame_00145.png"
        string_val: "../data/Validation/Run_0001/images/frame_00209.png"
        string_val: "../data/Validation/Run_0001/images/frame_03096.png"
        string_val: "../data/Validation/Run_0001/images/frame_01097.png"
        string_val: "../data/Validation/Run_0001/images/frame_03083.png"
        string_val: "../data/Validation/Run_0001/images/frame_03670.png"
        string_val: "../data/Validation/Run_0001/images/frame_03320.png"
        string_val: "../data/Validation/Run_0001/images/frame_00541.png"
        string_val: "../data/Validation/Run_0001/images/frame_00011.png"
        string_val: "../data/Validation/Run_0001/images/frame_03779.png"
        string_val: "../data/Validation/Run_0001/images/frame_03395.png"
        string_val: "../data/Validation/Run_0001/images/frame_01804.png"
        string_val: "../data/Validation/Run_0001/images/frame_01367.png"
        string_val: "../data/Validation/Run_0001/images/frame_00529.png"
        string_val: "../data/Validation/Run_0001/images/frame_04083.png"
        string_val: "../data/Validation/Run_0001/images/frame_02724.png"
        string_val: "../data/Validation/Run_0001/images/frame_02102.png"
        string_val: "../data/Validation/Run_0001/images/frame_04303.png"
        string_val: "../data/Validation/Run_0001/images/frame_02741.png"
        string_val: "../data/Validation/Run_0001/images/frame_01286.png"
        string_val: "../data/Validation/Run_0001/images/frame_04805.png"
        string_val: "../data/Validation/Run_0001/images/frame_01075.png"
        string_val: "../data/Validation/Run_0001/images/frame_03411.png"
        string_val: "../data/Validation/Run_0001/images/frame_03084.png"
        string_val: "../data/Validation/Run_0001/images/frame_02132.png"
        string_val: "../data/Validation/Run_0001/images/frame_04421.png"
        string_val: "../data/Validation/Run_0001/images/frame_04761.png"
        string_val: "../data/Validation/Run_0001/images/frame_00433.png"
        string_val: "../data/Validation/Run_0001/images/frame_00957.png"
        string_val: "../data/Validation/Run_0001/images/frame_03270.png"
        string_val: "../data/Validation/Run_0001/images/frame_03240.png"
        string_val: "../data/Validation/Run_0001/images/frame_03409.png"
        string_val: "../data/Validation/Run_0001/images/frame_00059.png"
        string_val: "../data/Validation/Run_0001/images/frame_04451.png"
        string_val: "../data/Validation/Run_0001/images/frame_01616.png"
        string_val: "../data/Validation/Run_0001/images/frame_04045.png"
        string_val: "../data/Validation/Run_0001/images/frame_04840.png"
        string_val: "../data/Validation/Run_0001/images/frame_00672.png"
        string_val: "../data/Validation/Run_0001/images/frame_00134.png"
        string_val: "../data/Validation/Run_0001/images/frame_02994.png"
        string_val: "../data/Validation/Run_0001/images/frame_02669.png"
        string_val: "../data/Validation/Run_0001/images/frame_01835.png"
        string_val: "../data/Validation/Run_0001/images/frame_03440.png"
        string_val: "../data/Validation/Run_0001/images/frame_02460.png"
        string_val: "../data/Validation/Run_0001/images/frame_03036.png"
        string_val: "../data/Validation/Run_0001/images/frame_02935.png"
        string_val: "../data/Validation/Run_0001/images/frame_03582.png"
        string_val: "../data/Validation/Run_0001/images/frame_02766.png"
        string_val: "../data/Validation/Run_0001/images/frame_03599.png"
        string_val: "../data/Validation/Run_0001/images/frame_00683.png"
        string_val: "../data/Validation/Run_0001/images/frame_05085.png"
        string_val: "../data/Validation/Run_0001/images/frame_03165.png"
        string_val: "../data/Validation/Run_0001/images/frame_01638.png"
        string_val: "../data/Validation/Run_0001/images/frame_02871.png"
        string_val: "../data/Validation/Run_0001/images/frame_01548.png"
        string_val: "../data/Validation/Run_0001/images/frame_01278.png"
        string_val: "../data/Validation/Run_0001/images/frame_01281.png"
        string_val: "../data/Validation/Run_0001/images/frame_01867.png"
        string_val: "../data/Validation/Run_0001/images/frame_01895.png"
        string_val: "../data/Validation/Run_0001/images/frame_00456.png"
        string_val: "../data/Validation/Run_0001/images/frame_03446.png"
        string_val: "../data/Validation/Run_0001/images/frame_03198.png"
        string_val: "../data/Validation/Run_0001/images/frame_02173.png"
        string_val: "../data/Validation/Run_0001/images/frame_03899.png"
        string_val: "../data/Validation/Run_0001/images/frame_02790.png"
        string_val: "../data/Validation/Run_0001/images/frame_01459.png"
        string_val: "../data/Validation/Run_0001/images/frame_04448.png"
        string_val: "../data/Validation/Run_0001/images/frame_03710.png"
        string_val: "../data/Validation/Run_0001/images/frame_03586.png"
        string_val: "../data/Validation/Run_0001/images/frame_00386.png"
        string_val: "../data/Validation/Run_0001/images/frame_02335.png"
        string_val: "../data/Validation/Run_0001/images/frame_00890.png"
        string_val: "../data/Validation/Run_0001/images/frame_03289.png"
        string_val: "../data/Validation/Run_0001/images/frame_04977.png"
        string_val: "../data/Validation/Run_0001/images/frame_04824.png"
        string_val: "../data/Validation/Run_0001/images/frame_03114.png"
        string_val: "../data/Validation/Run_0001/images/frame_04447.png"
        string_val: "../data/Validation/Run_0001/images/frame_03138.png"
        string_val: "../data/Validation/Run_0001/images/frame_00884.png"
        string_val: "../data/Validation/Run_0001/images/frame_00615.png"
        string_val: "../data/Validation/Run_0001/images/frame_03287.png"
        string_val: "../data/Validation/Run_0001/images/frame_03828.png"
        string_val: "../data/Validation/Run_0001/images/frame_01956.png"
        string_val: "../data/Validation/Run_0001/images/frame_02593.png"
        string_val: "../data/Validation/Run_0001/images/frame_04307.png"
        string_val: "../data/Validation/Run_0001/images/frame_02198.png"
        string_val: "../data/Validation/Run_0001/images/frame_04999.png"
        string_val: "../data/Validation/Run_0001/images/frame_04466.png"
        string_val: "../data/Validation/Run_0001/images/frame_01442.png"
        string_val: "../data/Validation/Run_0001/images/frame_00905.png"
        string_val: "../data/Validation/Run_0001/images/frame_00231.png"
        string_val: "../data/Validation/Run_0001/images/frame_02148.png"
        string_val: "../data/Validation/Run_0001/images/frame_01300.png"
        string_val: "../data/Validation/Run_0001/images/frame_01746.png"
        string_val: "../data/Validation/Run_0001/images/frame_04358.png"
        string_val: "../data/Validation/Run_0001/images/frame_01655.png"
        string_val: "../data/Validation/Run_0001/images/frame_03782.png"
        string_val: "../data/Validation/Run_0001/images/frame_03721.png"
        string_val: "../data/Validation/Run_0001/images/frame_04452.png"
        string_val: "../data/Validation/Run_0001/images/frame_05074.png"
        string_val: "../data/Validation/Run_0001/images/frame_01416.png"
        string_val: "../data/Validation/Run_0001/images/frame_03319.png"
        string_val: "../data/Validation/Run_0001/images/frame_03954.png"
        string_val: "../data/Validation/Run_0001/images/frame_02300.png"
        string_val: "../data/Validation/Run_0001/images/frame_04082.png"
        string_val: "../data/Validation/Run_0001/images/frame_03556.png"
        string_val: "../data/Validation/Run_0001/images/frame_01311.png"
        string_val: "../data/Validation/Run_0001/images/frame_02267.png"
        string_val: "../data/Validation/Run_0001/images/frame_00380.png"
        string_val: "../data/Validation/Run_0001/images/frame_00988.png"
        string_val: "../data/Validation/Run_0001/images/frame_04126.png"
        string_val: "../data/Validation/Run_0001/images/frame_01552.png"
        string_val: "../data/Validation/Run_0001/images/frame_02337.png"
        string_val: "../data/Validation/Run_0001/images/frame_00487.png"
        string_val: "../data/Validation/Run_0001/images/frame_04513.png"
        string_val: "../data/Validation/Run_0001/images/frame_04153.png"
        string_val: "../data/Validation/Run_0001/images/frame_01098.png"
        string_val: "../data/Validation/Run_0001/images/frame_04883.png"
        string_val: "../data/Validation/Run_0001/images/frame_02370.png"
        string_val: "../data/Validation/Run_0001/images/frame_03848.png"
        string_val: "../data/Validation/Run_0001/images/frame_00340.png"
        string_val: "../data/Validation/Run_0001/images/frame_00982.png"
        string_val: "../data/Validation/Run_0001/images/frame_01088.png"
        string_val: "../data/Validation/Run_0001/images/frame_01337.png"
        string_val: "../data/Validation/Run_0001/images/frame_04599.png"
        string_val: "../data/Validation/Run_0001/images/frame_02180.png"
        string_val: "../data/Validation/Run_0001/images/frame_01050.png"
        string_val: "../data/Validation/Run_0001/images/frame_00538.png"
        string_val: "../data/Validation/Run_0001/images/frame_04757.png"
        string_val: "../data/Validation/Run_0001/images/frame_02663.png"
        string_val: "../data/Validation/Run_0001/images/frame_01159.png"
        string_val: "../data/Validation/Run_0001/images/frame_03589.png"
        string_val: "../data/Validation/Run_0001/images/frame_03806.png"
        string_val: "../data/Validation/Run_0001/images/frame_02675.png"
        string_val: "../data/Validation/Run_0001/images/frame_03700.png"
        string_val: "../data/Validation/Run_0001/images/frame_02735.png"
        string_val: "../data/Validation/Run_0001/images/frame_04066.png"
        string_val: "../data/Validation/Run_0001/images/frame_01650.png"
        string_val: "../data/Validation/Run_0001/images/frame_04285.png"
        string_val: "../data/Validation/Run_0001/images/frame_01555.png"
        string_val: "../data/Validation/Run_0001/images/frame_03773.png"
        string_val: "../data/Validation/Run_0001/images/frame_02126.png"
        string_val: "../data/Validation/Run_0001/images/frame_03729.png"
        string_val: "../data/Validation/Run_0001/images/frame_00481.png"
        string_val: "../data/Validation/Run_0001/images/frame_00723.png"
        string_val: "../data/Validation/Run_0001/images/frame_02219.png"
        string_val: "../data/Validation/Run_0001/images/frame_01374.png"
        string_val: "../data/Validation/Run_0001/images/frame_02787.png"
        string_val: "../data/Validation/Run_0001/images/frame_02731.png"
        string_val: "../data/Validation/Run_0001/images/frame_03786.png"
        string_val: "../data/Validation/Run_0001/images/frame_02903.png"
        string_val: "../data/Validation/Run_0001/images/frame_04512.png"
        string_val: "../data/Validation/Run_0001/images/frame_00397.png"
        string_val: "../data/Validation/Run_0001/images/frame_00211.png"
        string_val: "../data/Validation/Run_0001/images/frame_02647.png"
        string_val: "../data/Validation/Run_0001/images/frame_02958.png"
        string_val: "../data/Validation/Run_0001/images/frame_04389.png"
        string_val: "../data/Validation/Run_0001/images/frame_00425.png"
        string_val: "../data/Validation/Run_0001/images/frame_02432.png"
        string_val: "../data/Validation/Run_0001/images/frame_04873.png"
        string_val: "../data/Validation/Run_0001/images/frame_04647.png"
        string_val: "../data/Validation/Run_0001/images/frame_04243.png"
        string_val: "../data/Validation/Run_0001/images/frame_00050.png"
        string_val: "../data/Validation/Run_0001/images/frame_01496.png"
        string_val: "../data/Validation/Run_0001/images/frame_00420.png"
        string_val: "../data/Validation/Run_0001/images/frame_02856.png"
        string_val: "../data/Validation/Run_0001/images/frame_02418.png"
        string_val: "../data/Validation/Run_0001/images/frame_03633.png"
        string_val: "../data/Validation/Run_0001/images/frame_04832.png"
        string_val: "../data/Validation/Run_0001/images/frame_05070.png"
        string_val: "../data/Validation/Run_0001/images/frame_00039.png"
        string_val: "../data/Validation/Run_0001/images/frame_02253.png"
        string_val: "../data/Validation/Run_0001/images/frame_02105.png"
        string_val: "../data/Validation/Run_0001/images/frame_04333.png"
        string_val: "../data/Validation/Run_0001/images/frame_04906.png"
        string_val: "../data/Validation/Run_0001/images/frame_02749.png"
        string_val: "../data/Validation/Run_0001/images/frame_01768.png"
        string_val: "../data/Validation/Run_0001/images/frame_00413.png"
        string_val: "../data/Validation/Run_0001/images/frame_04656.png"
        string_val: "../data/Validation/Run_0001/images/frame_02282.png"
        string_val: "../data/Validation/Run_0001/images/frame_00452.png"
        string_val: "../data/Validation/Run_0001/images/frame_04086.png"
        string_val: "../data/Validation/Run_0001/images/frame_01087.png"
        string_val: "../data/Validation/Run_0001/images/frame_02383.png"
        string_val: "../data/Validation/Run_0001/images/frame_02629.png"
        string_val: "../data/Validation/Run_0001/images/frame_02138.png"
        string_val: "../data/Validation/Run_0001/images/frame_00030.png"
        string_val: "../data/Validation/Run_0001/images/frame_02504.png"
        string_val: "../data/Validation/Run_0001/images/frame_00438.png"
        string_val: "../data/Validation/Run_0001/images/frame_03047.png"
        string_val: "../data/Validation/Run_0001/images/frame_04284.png"
        string_val: "../data/Validation/Run_0001/images/frame_04068.png"
        string_val: "../data/Validation/Run_0001/images/frame_00903.png"
        string_val: "../data/Validation/Run_0001/images/frame_03113.png"
        string_val: "../data/Validation/Run_0001/images/frame_01146.png"
        string_val: "../data/Validation/Run_0001/images/frame_03006.png"
        string_val: "../data/Validation/Run_0001/images/frame_04405.png"
        string_val: "../data/Validation/Run_0001/images/frame_01944.png"
        string_val: "../data/Validation/Run_0001/images/frame_00573.png"
        string_val: "../data/Validation/Run_0001/images/frame_02901.png"
        string_val: "../data/Validation/Run_0001/images/frame_02528.png"
        string_val: "../data/Validation/Run_0001/images/frame_03157.png"
        string_val: "../data/Validation/Run_0001/images/frame_00807.png"
        string_val: "../data/Validation/Run_0001/images/frame_02406.png"
        string_val: "../data/Validation/Run_0001/images/frame_03733.png"
        string_val: "../data/Validation/Run_0001/images/frame_02839.png"
        string_val: "../data/Validation/Run_0001/images/frame_00709.png"
        string_val: "../data/Validation/Run_0001/images/frame_01176.png"
        string_val: "../data/Validation/Run_0001/images/frame_03893.png"
        string_val: "../data/Validation/Run_0001/images/frame_02209.png"
        string_val: "../data/Validation/Run_0001/images/frame_00124.png"
        string_val: "../data/Validation/Run_0001/images/frame_00826.png"
        string_val: "../data/Validation/Run_0001/images/frame_04272.png"
        string_val: "../data/Validation/Run_0001/images/frame_04436.png"
        string_val: "../data/Validation/Run_0001/images/frame_04485.png"
        string_val: "../data/Validation/Run_0001/images/frame_03712.png"
        string_val: "../data/Validation/Run_0001/images/frame_03189.png"
        string_val: "../data/Validation/Run_0001/images/frame_03103.png"
        string_val: "../data/Validation/Run_0001/images/frame_01499.png"
        string_val: "../data/Validation/Run_0001/images/frame_03181.png"
        string_val: "../data/Validation/Run_0001/images/frame_00353.png"
        string_val: "../data/Validation/Run_0001/images/frame_04734.png"
        string_val: "../data/Validation/Run_0001/images/frame_00416.png"
        string_val: "../data/Validation/Run_0001/images/frame_02855.png"
        string_val: "../data/Validation/Run_0001/images/frame_01938.png"
        string_val: "../data/Validation/Run_0001/images/frame_02223.png"
        string_val: "../data/Validation/Run_0001/images/frame_03182.png"
        string_val: "../data/Validation/Run_0001/images/frame_04812.png"
        string_val: "../data/Validation/Run_0001/images/frame_00468.png"
        string_val: "../data/Validation/Run_0001/images/frame_03990.png"
        string_val: "../data/Validation/Run_0001/images/frame_00624.png"
        string_val: "../data/Validation/Run_0001/images/frame_01044.png"
        string_val: "../data/Validation/Run_0001/images/frame_00543.png"
        string_val: "../data/Validation/Run_0001/images/frame_00822.png"
        string_val: "../data/Validation/Run_0001/images/frame_02490.png"
        string_val: "../data/Validation/Run_0001/images/frame_00869.png"
        string_val: "../data/Validation/Run_0001/images/frame_03220.png"
        string_val: "../data/Validation/Run_0001/images/frame_00307.png"
        string_val: "../data/Validation/Run_0001/images/frame_02244.png"
        string_val: "../data/Validation/Run_0001/images/frame_03349.png"
        string_val: "../data/Validation/Run_0001/images/frame_01326.png"
        string_val: "../data/Validation/Run_0001/images/frame_02366.png"
        string_val: "../data/Validation/Run_0001/images/frame_02546.png"
        string_val: "../data/Validation/Run_0001/images/frame_04631.png"
        string_val: "../data/Validation/Run_0001/images/frame_04583.png"
        string_val: "../data/Validation/Run_0001/images/frame_03749.png"
        string_val: "../data/Validation/Run_0001/images/frame_02420.png"
        string_val: "../data/Validation/Run_0001/images/frame_03185.png"
        string_val: "../data/Validation/Run_0001/images/frame_02215.png"
        string_val: "../data/Validation/Run_0001/images/frame_04865.png"
        string_val: "../data/Validation/Run_0001/images/frame_04056.png"
        string_val: "../data/Validation/Run_0001/images/frame_01130.png"
        string_val: "../data/Validation/Run_0001/images/frame_00243.png"
        string_val: "../data/Validation/Run_0001/images/frame_00016.png"
        string_val: "../data/Validation/Run_0001/images/frame_03725.png"
        string_val: "../data/Validation/Run_0001/images/frame_02906.png"
        string_val: "../data/Validation/Run_0001/images/frame_00690.png"
        string_val: "../data/Validation/Run_0001/images/frame_01205.png"
        string_val: "../data/Validation/Run_0001/images/frame_04160.png"
        string_val: "../data/Validation/Run_0001/images/frame_00140.png"
        string_val: "../data/Validation/Run_0001/images/frame_03447.png"
        string_val: "../data/Validation/Run_0001/images/frame_03948.png"
        string_val: "../data/Validation/Run_0001/images/frame_00322.png"
        string_val: "../data/Validation/Run_0001/images/frame_03741.png"
        string_val: "../data/Validation/Run_0001/images/frame_02918.png"
        string_val: "../data/Validation/Run_0001/images/frame_03980.png"
        string_val: "../data/Validation/Run_0001/images/frame_04498.png"
        string_val: "../data/Validation/Run_0001/images/frame_01041.png"
        string_val: "../data/Validation/Run_0001/images/frame_03697.png"
        string_val: "../data/Validation/Run_0001/images/frame_02557.png"
        string_val: "../data/Validation/Run_0001/images/frame_00999.png"
        string_val: "../data/Validation/Run_0001/images/frame_01207.png"
        string_val: "../data/Validation/Run_0001/images/frame_01840.png"
        string_val: "../data/Validation/Run_0001/images/frame_04667.png"
        string_val: "../data/Validation/Run_0001/images/frame_02057.png"
        string_val: "../data/Validation/Run_0001/images/frame_00820.png"
        string_val: "../data/Validation/Run_0001/images/frame_04271.png"
        string_val: "../data/Validation/Run_0001/images/frame_04953.png"
        string_val: "../data/Validation/Run_0001/images/frame_01951.png"
        string_val: "../data/Validation/Run_0001/images/frame_04164.png"
        string_val: "../data/Validation/Run_0001/images/frame_01617.png"
        string_val: "../data/Validation/Run_0001/images/frame_04334.png"
        string_val: "../data/Validation/Run_0001/images/frame_03961.png"
        string_val: "../data/Validation/Run_0001/images/frame_00110.png"
        string_val: "../data/Validation/Run_0001/images/frame_02784.png"
        string_val: "../data/Validation/Run_0001/images/frame_03280.png"
        string_val: "../data/Validation/Run_0001/images/frame_01621.png"
        string_val: "../data/Validation/Run_0001/images/frame_02488.png"
        string_val: "../data/Validation/Run_0001/images/frame_01795.png"
        string_val: "../data/Validation/Run_0001/images/frame_04535.png"
        string_val: "../data/Validation/Run_0001/images/frame_04490.png"
        string_val: "../data/Validation/Run_0001/images/frame_04831.png"
        string_val: "../data/Validation/Run_0001/images/frame_03897.png"
        string_val: "../data/Validation/Run_0001/images/frame_02537.png"
        string_val: "../data/Validation/Run_0001/images/frame_02165.png"
        string_val: "../data/Validation/Run_0001/images/frame_00351.png"
        string_val: "../data/Validation/Run_0001/images/frame_02188.png"
        string_val: "../data/Validation/Run_0001/images/frame_01538.png"
        string_val: "../data/Validation/Run_0001/images/frame_00449.png"
        string_val: "../data/Validation/Run_0001/images/frame_04500.png"
        string_val: "../data/Validation/Run_0001/images/frame_03796.png"
        string_val: "../data/Validation/Run_0001/images/frame_00041.png"
        string_val: "../data/Validation/Run_0001/images/frame_01526.png"
        string_val: "../data/Validation/Run_0001/images/frame_02324.png"
        string_val: "../data/Validation/Run_0001/images/frame_01772.png"
        string_val: "../data/Validation/Run_0001/images/frame_04030.png"
        string_val: "../data/Validation/Run_0001/images/frame_01832.png"
        string_val: "../data/Validation/Run_0001/images/frame_02005.png"
        string_val: "../data/Validation/Run_0001/images/frame_02573.png"
        string_val: "../data/Validation/Run_0001/images/frame_01577.png"
        string_val: "../data/Validation/Run_0001/images/frame_02612.png"
        string_val: "../data/Validation/Run_0001/images/frame_02012.png"
        string_val: "../data/Validation/Run_0001/images/frame_02940.png"
        string_val: "../data/Validation/Run_0001/images/frame_01848.png"
        string_val: "../data/Validation/Run_0001/images/frame_00873.png"
        string_val: "../data/Validation/Run_0001/images/frame_01316.png"
        string_val: "../data/Validation/Run_0001/images/frame_00285.png"
        string_val: "../data/Validation/Run_0001/images/frame_01435.png"
        string_val: "../data/Validation/Run_0001/images/frame_03663.png"
        string_val: "../data/Validation/Run_0001/images/frame_02625.png"
        string_val: "../data/Validation/Run_0001/images/frame_02194.png"
        string_val: "../data/Validation/Run_0001/images/frame_02385.png"
        string_val: "../data/Validation/Run_0001/images/frame_03412.png"
        string_val: "../data/Validation/Run_0001/images/frame_01261.png"
        string_val: "../data/Validation/Run_0001/images/frame_04963.png"
        string_val: "../data/Validation/Run_0001/images/frame_04860.png"
        string_val: "../data/Validation/Run_0001/images/frame_04974.png"
        string_val: "../data/Validation/Run_0001/images/frame_02762.png"
        string_val: "../data/Validation/Run_0001/images/frame_04151.png"
        string_val: "../data/Validation/Run_0001/images/frame_03147.png"
        string_val: "../data/Validation/Run_0001/images/frame_01190.png"
        string_val: "../data/Validation/Run_0001/images/frame_03495.png"
        string_val: "../data/Validation/Run_0001/images/frame_01352.png"
        string_val: "../data/Validation/Run_0001/images/frame_05009.png"
        string_val: "../data/Validation/Run_0001/images/frame_02017.png"
        string_val: "../data/Validation/Run_0001/images/frame_01732.png"
        string_val: "../data/Validation/Run_0001/images/frame_04331.png"
        string_val: "../data/Validation/Run_0001/images/frame_04703.png"
        string_val: "../data/Validation/Run_0001/images/frame_03516.png"
        string_val: "../data/Validation/Run_0001/images/frame_01415.png"
        string_val: "../data/Validation/Run_0001/images/frame_00811.png"
        string_val: "../data/Validation/Run_0001/images/frame_02939.png"
        string_val: "../data/Validation/Run_0001/images/frame_01559.png"
        string_val: "../data/Validation/Run_0001/images/frame_04212.png"
        string_val: "../data/Validation/Run_0001/images/frame_03244.png"
        string_val: "../data/Validation/Run_0001/images/frame_03647.png"
        string_val: "../data/Validation/Run_0001/images/frame_00142.png"
        string_val: "../data/Validation/Run_0001/images/frame_03145.png"
        string_val: "../data/Validation/Run_0001/images/frame_01099.png"
        string_val: "../data/Validation/Run_0001/images/frame_00043.png"
        string_val: "../data/Validation/Run_0001/images/frame_00844.png"
        string_val: "../data/Validation/Run_0001/images/frame_00851.png"
        string_val: "../data/Validation/Run_0001/images/frame_03192.png"
        string_val: "../data/Validation/Run_0001/images/frame_00678.png"
        string_val: "../data/Validation/Run_0001/images/frame_02674.png"
        string_val: "../data/Validation/Run_0001/images/frame_03751.png"
        string_val: "../data/Validation/Run_0001/images/frame_02679.png"
        string_val: "../data/Validation/Run_0001/images/frame_04612.png"
        string_val: "../data/Validation/Run_0001/images/frame_04422.png"
        string_val: "../data/Validation/Run_0001/images/frame_01468.png"
        string_val: "../data/Validation/Run_0001/images/frame_01405.png"
        string_val: "../data/Validation/Run_0001/images/frame_05025.png"
        string_val: "../data/Validation/Run_0001/images/frame_01641.png"
        string_val: "../data/Validation/Run_0001/images/frame_04730.png"
        string_val: "../data/Validation/Run_0001/images/frame_00090.png"
        string_val: "../data/Validation/Run_0001/images/frame_03149.png"
        string_val: "../data/Validation/Run_0001/images/frame_03092.png"
        string_val: "../data/Validation/Run_0001/images/frame_05057.png"
        string_val: "../data/Validation/Run_0001/images/frame_02553.png"
        string_val: "../data/Validation/Run_0001/images/frame_00656.png"
        string_val: "../data/Validation/Run_0001/images/frame_03882.png"
        string_val: "../data/Validation/Run_0001/images/frame_02359.png"
        string_val: "../data/Validation/Run_0001/images/frame_01273.png"
        string_val: "../data/Validation/Run_0001/images/frame_02375.png"
        string_val: "../data/Validation/Run_0001/images/frame_00502.png"
        string_val: "../data/Validation/Run_0001/images/frame_01432.png"
        string_val: "../data/Validation/Run_0001/images/frame_02258.png"
        string_val: "../data/Validation/Run_0001/images/frame_00008.png"
        string_val: "../data/Validation/Run_0001/images/frame_02657.png"
        string_val: "../data/Validation/Run_0001/images/frame_02296.png"
        string_val: "../data/Validation/Run_0001/images/frame_00001.png"
        string_val: "../data/Validation/Run_0001/images/frame_04529.png"
        string_val: "../data/Validation/Run_0001/images/frame_02563.png"
        string_val: "../data/Validation/Run_0001/images/frame_04653.png"
        string_val: "../data/Validation/Run_0001/images/frame_02006.png"
        string_val: "../data/Validation/Run_0001/images/frame_00756.png"
        string_val: "../data/Validation/Run_0001/images/frame_03705.png"
        string_val: "../data/Validation/Run_0001/images/frame_00986.png"
        string_val: "../data/Validation/Run_0001/images/frame_02660.png"
        string_val: "../data/Validation/Run_0001/images/frame_02802.png"
        string_val: "../data/Validation/Run_0001/images/frame_00355.png"
        string_val: "../data/Validation/Run_0001/images/frame_00267.png"
        string_val: "../data/Validation/Run_0001/images/frame_01857.png"
        string_val: "../data/Validation/Run_0001/images/frame_02349.png"
        string_val: "../data/Validation/Run_0001/images/frame_02206.png"
        string_val: "../data/Validation/Run_0001/images/frame_02233.png"
        string_val: "../data/Validation/Run_0001/images/frame_02220.png"
        string_val: "../data/Validation/Run_0001/images/frame_00236.png"
        string_val: "../data/Validation/Run_0001/images/frame_04027.png"
        string_val: "../data/Validation/Run_0001/images/frame_03888.png"
        string_val: "../data/Validation/Run_0001/images/frame_01807.png"
        string_val: "../data/Validation/Run_0001/images/frame_02210.png"
        string_val: "../data/Validation/Run_0001/images/frame_01803.png"
        string_val: "../data/Validation/Run_0001/images/frame_02992.png"
        string_val: "../data/Validation/Run_0001/images/frame_02692.png"
        string_val: "../data/Validation/Run_0001/images/frame_01308.png"
        string_val: "../data/Validation/Run_0001/images/frame_02933.png"
        string_val: "../data/Validation/Run_0001/images/frame_03614.png"
        string_val: "../data/Validation/Run_0001/images/frame_02547.png"
        string_val: "../data/Validation/Run_0001/images/frame_04050.png"
        string_val: "../data/Validation/Run_0001/images/frame_02133.png"
        string_val: "../data/Validation/Run_0001/images/frame_02192.png"
        string_val: "../data/Validation/Run_0001/images/frame_01466.png"
        string_val: "../data/Validation/Run_0001/images/frame_04041.png"
        string_val: "../data/Validation/Run_0001/images/frame_02106.png"
        string_val: "../data/Validation/Run_0001/images/frame_02791.png"
        string_val: "../data/Validation/Run_0001/images/frame_01965.png"
        string_val: "../data/Validation/Run_0001/images/frame_00583.png"
        string_val: "../data/Validation/Run_0001/images/frame_04264.png"
        string_val: "../data/Validation/Run_0001/images/frame_04809.png"
        string_val: "../data/Validation/Run_0001/images/frame_03839.png"
        string_val: "../data/Validation/Run_0001/images/frame_00689.png"
        string_val: "../data/Validation/Run_0001/images/frame_03318.png"
        string_val: "../data/Validation/Run_0001/images/frame_00655.png"
        string_val: "../data/Validation/Run_0001/images/frame_00647.png"
        string_val: "../data/Validation/Run_0001/images/frame_00551.png"
        string_val: "../data/Validation/Run_0001/images/frame_04411.png"
        string_val: "../data/Validation/Run_0001/images/frame_02872.png"
        string_val: "../data/Validation/Run_0001/images/frame_01340.png"
        string_val: "../data/Validation/Run_0001/images/frame_03164.png"
        string_val: "../data/Validation/Run_0001/images/frame_01332.png"
        string_val: "../data/Validation/Run_0001/images/frame_02570.png"
        string_val: "../data/Validation/Run_0001/images/frame_04085.png"
        string_val: "../data/Validation/Run_0001/images/frame_03389.png"
        string_val: "../data/Validation/Run_0001/images/frame_05006.png"
        string_val: "../data/Validation/Run_0001/images/frame_03660.png"
        string_val: "../data/Validation/Run_0001/images/frame_01892.png"
        string_val: "../data/Validation/Run_0001/images/frame_01196.png"
        string_val: "../data/Validation/Run_0001/images/frame_00294.png"
        string_val: "../data/Validation/Run_0001/images/frame_01940.png"
        string_val: "../data/Validation/Run_0001/images/frame_01230.png"
        string_val: "../data/Validation/Run_0001/images/frame_03398.png"
        string_val: "../data/Validation/Run_0001/images/frame_02481.png"
        string_val: "../data/Validation/Run_0001/images/frame_03681.png"
        string_val: "../data/Validation/Run_0001/images/frame_02004.png"
        string_val: "../data/Validation/Run_0001/images/frame_03125.png"
        string_val: "../data/Validation/Run_0001/images/frame_00446.png"
        string_val: "../data/Validation/Run_0001/images/frame_03833.png"
        string_val: "../data/Validation/Run_0001/images/frame_02049.png"
        string_val: "../data/Validation/Run_0001/images/frame_04287.png"
        string_val: "../data/Validation/Run_0001/images/frame_00257.png"
        string_val: "../data/Validation/Run_0001/images/frame_00167.png"
        string_val: "../data/Validation/Run_0001/images/frame_02953.png"
        string_val: "../data/Validation/Run_0001/images/frame_04668.png"
        string_val: "../data/Validation/Run_0001/images/frame_00524.png"
        string_val: "../data/Validation/Run_0001/images/frame_04229.png"
        string_val: "../data/Validation/Run_0001/images/frame_00845.png"
        string_val: "../data/Validation/Run_0001/images/frame_02506.png"
        string_val: "../data/Validation/Run_0001/images/frame_02584.png"
        string_val: "../data/Validation/Run_0001/images/frame_03967.png"
        string_val: "../data/Validation/Run_0001/images/frame_00472.png"
        string_val: "../data/Validation/Run_0001/images/frame_03496.png"
        string_val: "../data/Validation/Run_0001/images/frame_00855.png"
        string_val: "../data/Validation/Run_0001/images/frame_00962.png"
        string_val: "../data/Validation/Run_0001/images/frame_00850.png"
        string_val: "../data/Validation/Run_0001/images/frame_01009.png"
        string_val: "../data/Validation/Run_0001/images/frame_00324.png"
        string_val: "../data/Validation/Run_0001/images/frame_01713.png"
        string_val: "../data/Validation/Run_0001/images/frame_05055.png"
        string_val: "../data/Validation/Run_0001/images/frame_04438.png"
        string_val: "../data/Validation/Run_0001/images/frame_01532.png"
        string_val: "../data/Validation/Run_0001/images/frame_03515.png"
        string_val: "../data/Validation/Run_0001/images/frame_04147.png"
        string_val: "../data/Validation/Run_0001/images/frame_02925.png"
        string_val: "../data/Validation/Run_0001/images/frame_05076.png"
        string_val: "../data/Validation/Run_0001/images/frame_03569.png"
        string_val: "../data/Validation/Run_0001/images/frame_04460.png"
        string_val: "../data/Validation/Run_0001/images/frame_03895.png"
        string_val: "../data/Validation/Run_0001/images/frame_04217.png"
        string_val: "../data/Validation/Run_0001/images/frame_00290.png"
        string_val: "../data/Validation/Run_0001/images/frame_02592.png"
        string_val: "../data/Validation/Run_0001/images/frame_00109.png"
        string_val: "../data/Validation/Run_0001/images/frame_00229.png"
        string_val: "../data/Validation/Run_0001/images/frame_02001.png"
        string_val: "../data/Validation/Run_0001/images/frame_02452.png"
        string_val: "../data/Validation/Run_0001/images/frame_04514.png"
        string_val: "../data/Validation/Run_0001/images/frame_01361.png"
        string_val: "../data/Validation/Run_0001/images/frame_03227.png"
        string_val: "../data/Validation/Run_0001/images/frame_02078.png"
        string_val: "../data/Validation/Run_0001/images/frame_04562.png"
        string_val: "../data/Validation/Run_0001/images/frame_00681.png"
        string_val: "../data/Validation/Run_0001/images/frame_01958.png"
        string_val: "../data/Validation/Run_0001/images/frame_04676.png"
        string_val: "../data/Validation/Run_0001/images/frame_01917.png"
        string_val: "../data/Validation/Run_0001/images/frame_03345.png"
        string_val: "../data/Validation/Run_0001/images/frame_00273.png"
        string_val: "../data/Validation/Run_0001/images/frame_01495.png"
        string_val: "../data/Validation/Run_0001/images/frame_02303.png"
        string_val: "../data/Validation/Run_0001/images/frame_04427.png"
        string_val: "../data/Validation/Run_0001/images/frame_04762.png"
        string_val: "../data/Validation/Run_0001/images/frame_00348.png"
        string_val: "../data/Validation/Run_0001/images/frame_01208.png"
        string_val: "../data/Validation/Run_0001/images/frame_04037.png"
        string_val: "../data/Validation/Run_0001/images/frame_03127.png"
        string_val: "../data/Validation/Run_0001/images/frame_02464.png"
        string_val: "../data/Validation/Run_0001/images/frame_04724.png"
        string_val: "../data/Validation/Run_0001/images/frame_02365.png"
        string_val: "../data/Validation/Run_0001/images/frame_01353.png"
        string_val: "../data/Validation/Run_0001/images/frame_03933.png"
        string_val: "../data/Validation/Run_0001/images/frame_02655.png"
        string_val: "../data/Validation/Run_0001/images/frame_05063.png"
        string_val: "../data/Validation/Run_0001/images/frame_03591.png"
        string_val: "../data/Validation/Run_0001/images/frame_04989.png"
        string_val: "../data/Validation/Run_0001/images/frame_01317.png"
        string_val: "../data/Validation/Run_0001/images/frame_03416.png"
        string_val: "../data/Validation/Run_0001/images/frame_04295.png"
        string_val: "../data/Validation/Run_0001/images/frame_02524.png"
        string_val: "../data/Validation/Run_0001/images/frame_00183.png"
        string_val: "../data/Validation/Run_0001/images/frame_00334.png"
        string_val: "../data/Validation/Run_0001/images/frame_04717.png"
        string_val: "../data/Validation/Run_0001/images/frame_02357.png"
        string_val: "../data/Validation/Run_0001/images/frame_01201.png"
        string_val: "../data/Validation/Run_0001/images/frame_02329.png"
        string_val: "../data/Validation/Run_0001/images/frame_00789.png"
        string_val: "../data/Validation/Run_0001/images/frame_00753.png"
        string_val: "../data/Validation/Run_0001/images/frame_04654.png"
        string_val: "../data/Validation/Run_0001/images/frame_03865.png"
        string_val: "../data/Validation/Run_0001/images/frame_04492.png"
        string_val: "../data/Validation/Run_0001/images/frame_02687.png"
        string_val: "../data/Validation/Run_0001/images/frame_04531.png"
        string_val: "../data/Validation/Run_0001/images/frame_01991.png"
        string_val: "../data/Validation/Run_0001/images/frame_02714.png"
        string_val: "../data/Validation/Run_0001/images/frame_02039.png"
        string_val: "../data/Validation/Run_0001/images/frame_02222.png"
        string_val: "../data/Validation/Run_0001/images/frame_01745.png"
        string_val: "../data/Validation/Run_0001/images/frame_04851.png"
        string_val: "../data/Validation/Run_0001/images/frame_02838.png"
        string_val: "../data/Validation/Run_0001/images/frame_04815.png"
        string_val: "../data/Validation/Run_0001/images/frame_04313.png"
        string_val: "../data/Validation/Run_0001/images/frame_00227.png"
        string_val: "../data/Validation/Run_0001/images/frame_01104.png"
        string_val: "../data/Validation/Run_0001/images/frame_00336.png"
        string_val: "../data/Validation/Run_0001/images/frame_03170.png"
        string_val: "../data/Validation/Run_0001/images/frame_00963.png"
        string_val: "../data/Validation/Run_0001/images/frame_04443.png"
        string_val: "../data/Validation/Run_0001/images/frame_00053.png"
        string_val: "../data/Validation/Run_0001/images/frame_01089.png"
        string_val: "../data/Validation/Run_0001/images/frame_02523.png"
        string_val: "../data/Validation/Run_0001/images/frame_03199.png"
        string_val: "../data/Validation/Run_0001/images/frame_01314.png"
        string_val: "../data/Validation/Run_0001/images/frame_04895.png"
        string_val: "../data/Validation/Run_0001/images/frame_03095.png"
        string_val: "../data/Validation/Run_0001/images/frame_05019.png"
        string_val: "../data/Validation/Run_0001/images/frame_02792.png"
        string_val: "../data/Validation/Run_0001/images/frame_00919.png"
        string_val: "../data/Validation/Run_0001/images/frame_03827.png"
        string_val: "../data/Validation/Run_0001/images/frame_01179.png"
        string_val: "../data/Validation/Run_0001/images/frame_00057.png"
        string_val: "../data/Validation/Run_0001/images/frame_02860.png"
        string_val: "../data/Validation/Run_0001/images/frame_03159.png"
        string_val: "../data/Validation/Run_0001/images/frame_01448.png"
        string_val: "../data/Validation/Run_0001/images/frame_04642.png"
        string_val: "../data/Validation/Run_0001/images/frame_05004.png"
        string_val: "../data/Validation/Run_0001/images/frame_00292.png"
        string_val: "../data/Validation/Run_0001/images/frame_02422.png"
        string_val: "../data/Validation/Run_0001/images/frame_04774.png"
        string_val: "../data/Validation/Run_0001/images/frame_00628.png"
        string_val: "../data/Validation/Run_0001/images/frame_04864.png"
        string_val: "../data/Validation/Run_0001/images/frame_01123.png"
        string_val: "../data/Validation/Run_0001/images/frame_03257.png"
        string_val: "../data/Validation/Run_0001/images/frame_04246.png"
        string_val: "../data/Validation/Run_0001/images/frame_04199.png"
        string_val: "../data/Validation/Run_0001/images/frame_02930.png"
        string_val: "../data/Validation/Run_0001/images/frame_01523.png"
        string_val: "../data/Validation/Run_0001/images/frame_04978.png"
        string_val: "../data/Validation/Run_0001/images/frame_00788.png"
        string_val: "../data/Validation/Run_0001/images/frame_01629.png"
        string_val: "../data/Validation/Run_0001/images/frame_04690.png"
        string_val: "../data/Validation/Run_0001/images/frame_02127.png"
        string_val: "../data/Validation/Run_0001/images/frame_02205.png"
        string_val: "../data/Validation/Run_0001/images/frame_04818.png"
        string_val: "../data/Validation/Run_0001/images/frame_00808.png"
        string_val: "../data/Validation/Run_0001/images/frame_04406.png"
        string_val: "../data/Validation/Run_0001/images/frame_01981.png"
        string_val: "../data/Validation/Run_0001/images/frame_03731.png"
        string_val: "../data/Validation/Run_0001/images/frame_00637.png"
        string_val: "../data/Validation/Run_0001/images/frame_05007.png"
        string_val: "../data/Validation/Run_0001/images/frame_04587.png"
        string_val: "../data/Validation/Run_0001/images/frame_01740.png"
        string_val: "../data/Validation/Run_0001/images/frame_00073.png"
        string_val: "../data/Validation/Run_0001/images/frame_01909.png"
        string_val: "../data/Validation/Run_0001/images/frame_03040.png"
        string_val: "../data/Validation/Run_0001/images/frame_04902.png"
        string_val: "../data/Validation/Run_0001/images/frame_04954.png"
        string_val: "../data/Validation/Run_0001/images/frame_02542.png"
        string_val: "../data/Validation/Run_0001/images/frame_04407.png"
        string_val: "../data/Validation/Run_0001/images/frame_04652.png"
        string_val: "../data/Validation/Run_0001/images/frame_01494.png"
        string_val: "../data/Validation/Run_0001/images/frame_02304.png"
        string_val: "../data/Validation/Run_0001/images/frame_03845.png"
        string_val: "../data/Validation/Run_0001/images/frame_02639.png"
        string_val: "../data/Validation/Run_0001/images/frame_01069.png"
        string_val: "../data/Validation/Run_0001/images/frame_04867.png"
        string_val: "../data/Validation/Run_0001/images/frame_01318.png"
        string_val: "../data/Validation/Run_0001/images/frame_00019.png"
        string_val: "../data/Validation/Run_0001/images/frame_01976.png"
        string_val: "../data/Validation/Run_0001/images/frame_03931.png"
        string_val: "../data/Validation/Run_0001/images/frame_04979.png"
        string_val: "../data/Validation/Run_0001/images/frame_04172.png"
        string_val: "../data/Validation/Run_0001/images/frame_03520.png"
        string_val: "../data/Validation/Run_0001/images/frame_01688.png"
        string_val: "../data/Validation/Run_0001/images/frame_00192.png"
        string_val: "../data/Validation/Run_0001/images/frame_03559.png"
        string_val: "../data/Validation/Run_0001/images/frame_01889.png"
        string_val: "../data/Validation/Run_0001/images/frame_00576.png"
        string_val: "../data/Validation/Run_0001/images/frame_03711.png"
        string_val: "../data/Validation/Run_0001/images/frame_00349.png"
        string_val: "../data/Validation/Run_0001/images/frame_02179.png"
        string_val: "../data/Validation/Run_0001/images/frame_01642.png"
        string_val: "../data/Validation/Run_0001/images/frame_04613.png"
        string_val: "../data/Validation/Run_0001/images/frame_02485.png"
        string_val: "../data/Validation/Run_0001/images/frame_03246.png"
        string_val: "../data/Validation/Run_0001/images/frame_04226.png"
        string_val: "../data/Validation/Run_0001/images/frame_03048.png"
        string_val: "../data/Validation/Run_0001/images/frame_04459.png"
        string_val: "../data/Validation/Run_0001/images/frame_01760.png"
        string_val: "../data/Validation/Run_0001/images/frame_04786.png"
        string_val: "../data/Validation/Run_0001/images/frame_02182.png"
        string_val: "../data/Validation/Run_0001/images/frame_01693.png"
        string_val: "../data/Validation/Run_0001/images/frame_00450.png"
        string_val: "../data/Validation/Run_0001/images/frame_03509.png"
        string_val: "../data/Validation/Run_0001/images/frame_03489.png"
        string_val: "../data/Validation/Run_0001/images/frame_04596.png"
        string_val: "../data/Validation/Run_0001/images/frame_04145.png"
        string_val: "../data/Validation/Run_0001/images/frame_02883.png"
        string_val: "../data/Validation/Run_0001/images/frame_01096.png"
        string_val: "../data/Validation/Run_0001/images/frame_04076.png"
        string_val: "../data/Validation/Run_0001/images/frame_04115.png"
        string_val: "../data/Validation/Run_0001/images/frame_00485.png"
        string_val: "../data/Validation/Run_0001/images/frame_02713.png"
        string_val: "../data/Validation/Run_0001/images/frame_04173.png"
        string_val: "../data/Validation/Run_0001/images/frame_03965.png"
        string_val: "../data/Validation/Run_0001/images/frame_00589.png"
        string_val: "../data/Validation/Run_0001/images/frame_02586.png"
        string_val: "../data/Validation/Run_0001/images/frame_04969.png"
        string_val: "../data/Validation/Run_0001/images/frame_03154.png"
        string_val: "../data/Validation/Run_0001/images/frame_00713.png"
        string_val: "../data/Validation/Run_0001/images/frame_02885.png"
        string_val: "../data/Validation/Run_0001/images/frame_02302.png"
        string_val: "../data/Validation/Run_0001/images/frame_04373.png"
        string_val: "../data/Validation/Run_0001/images/frame_03896.png"
        string_val: "../data/Validation/Run_0001/images/frame_01714.png"
        string_val: "../data/Validation/Run_0001/images/frame_02331.png"
        string_val: "../data/Validation/Run_0001/images/frame_04042.png"
        string_val: "../data/Validation/Run_0001/images/frame_02596.png"
        string_val: "../data/Validation/Run_0001/images/frame_01516.png"
        string_val: "../data/Validation/Run_0001/images/frame_04112.png"
        string_val: "../data/Validation/Run_0001/images/frame_00329.png"
        string_val: "../data/Validation/Run_0001/images/frame_03597.png"
        string_val: "../data/Validation/Run_0001/images/frame_02016.png"
        string_val: "../data/Validation/Run_0001/images/frame_00686.png"
        string_val: "../data/Validation/Run_0001/images/frame_02128.png"
        string_val: "../data/Validation/Run_0001/images/frame_03923.png"
        string_val: "../data/Validation/Run_0001/images/frame_03191.png"
        string_val: "../data/Validation/Run_0001/images/frame_03553.png"
        string_val: "../data/Validation/Run_0001/images/frame_00582.png"
        string_val: "../data/Validation/Run_0001/images/frame_00488.png"
        string_val: "../data/Validation/Run_0001/images/frame_03413.png"
        string_val: "../data/Validation/Run_0001/images/frame_03351.png"
        string_val: "../data/Validation/Run_0001/images/frame_00605.png"
        string_val: "../data/Validation/Run_0001/images/frame_01868.png"
        string_val: "../data/Validation/Run_0001/images/frame_00435.png"
        string_val: "../data/Validation/Run_0001/images/frame_04414.png"
        string_val: "../data/Validation/Run_0001/images/frame_01193.png"
        string_val: "../data/Validation/Run_0001/images/frame_02155.png"
        string_val: "../data/Validation/Run_0001/images/frame_01614.png"
        string_val: "../data/Validation/Run_0001/images/frame_02777.png"
        string_val: "../data/Validation/Run_0001/images/frame_04013.png"
        string_val: "../data/Validation/Run_0001/images/frame_01636.png"
        string_val: "../data/Validation/Run_0001/images/frame_00911.png"
        string_val: "../data/Validation/Run_0001/images/frame_00936.png"
        string_val: "../data/Validation/Run_0001/images/frame_01446.png"
        string_val: "../data/Validation/Run_0001/images/frame_03795.png"
        string_val: "../data/Validation/Run_0001/images/frame_04936.png"
        string_val: "../data/Validation/Run_0001/images/frame_03766.png"
        string_val: "../data/Validation/Run_0001/images/frame_05079.png"
        string_val: "../data/Validation/Run_0001/images/frame_00795.png"
        string_val: "../data/Validation/Run_0001/images/frame_02196.png"
        string_val: "../data/Validation/Run_0001/images/frame_04450.png"
        string_val: "../data/Validation/Run_0001/images/frame_01404.png"
        string_val: "../data/Validation/Run_0001/images/frame_03571.png"
        string_val: "../data/Validation/Run_0001/images/frame_04622.png"
        string_val: "../data/Validation/Run_0001/images/frame_03310.png"
        string_val: "../data/Validation/Run_0001/images/frame_01579.png"
        string_val: "../data/Validation/Run_0001/images/frame_00764.png"
        string_val: "../data/Validation/Run_0001/images/frame_03843.png"
        string_val: "../data/Validation/Run_0001/images/frame_00563.png"
        string_val: "../data/Validation/Run_0001/images/frame_04399.png"
        string_val: "../data/Validation/Run_0001/images/frame_02651.png"
        string_val: "../data/Validation/Run_0001/images/frame_05034.png"
        string_val: "../data/Validation/Run_0001/images/frame_00153.png"
        string_val: "../data/Validation/Run_0001/images/frame_04031.png"
        string_val: "../data/Validation/Run_0001/images/frame_00775.png"
        string_val: "../data/Validation/Run_0001/images/frame_03354.png"
        string_val: "../data/Validation/Run_0001/images/frame_01946.png"
        string_val: "../data/Validation/Run_0001/images/frame_04008.png"
        string_val: "../data/Validation/Run_0001/images/frame_00703.png"
        string_val: "../data/Validation/Run_0001/images/frame_04419.png"
        string_val: "../data/Validation/Run_0001/images/frame_04023.png"
        string_val: "../data/Validation/Run_0001/images/frame_01908.png"
        string_val: "../data/Validation/Run_0001/images/frame_00796.png"
        string_val: "../data/Validation/Run_0001/images/frame_01592.png"
        string_val: "../data/Validation/Run_0001/images/frame_04074.png"
        string_val: "../data/Validation/Run_0001/images/frame_03443.png"
        string_val: "../data/Validation/Run_0001/images/frame_00949.png"
        string_val: "../data/Validation/Run_0001/images/frame_02476.png"
        string_val: "../data/Validation/Run_0001/images/frame_00068.png"
        string_val: "../data/Validation/Run_0001/images/frame_01082.png"
        string_val: "../data/Validation/Run_0001/images/frame_03540.png"
        string_val: "../data/Validation/Run_0001/images/frame_00469.png"
        string_val: "../data/Validation/Run_0001/images/frame_02312.png"
        string_val: "../data/Validation/Run_0001/images/frame_02391.png"
        string_val: "../data/Validation/Run_0001/images/frame_00783.png"
        string_val: "../data/Validation/Run_0001/images/frame_01664.png"
        string_val: "../data/Validation/Run_0001/images/frame_02493.png"
        string_val: "../data/Validation/Run_0001/images/frame_03920.png"
        string_val: "../data/Validation/Run_0001/images/frame_00741.png"
        string_val: "../data/Validation/Run_0001/images/frame_01426.png"
        string_val: "../data/Validation/Run_0001/images/frame_00478.png"
        string_val: "../data/Validation/Run_0001/images/frame_01632.png"
        string_val: "../data/Validation/Run_0001/images/frame_02318.png"
        string_val: "../data/Validation/Run_0001/images/frame_00476.png"
        string_val: "../data/Validation/Run_0001/images/frame_03410.png"
        string_val: "../data/Validation/Run_0001/images/frame_04901.png"
        string_val: "../data/Validation/Run_0001/images/frame_05067.png"
        string_val: "../data/Validation/Run_0001/images/frame_01060.png"
        string_val: "../data/Validation/Run_0001/images/frame_00182.png"
        string_val: "../data/Validation/Run_0001/images/frame_03946.png"
        string_val: "../data/Validation/Run_0001/images/frame_01565.png"
        string_val: "../data/Validation/Run_0001/images/frame_01214.png"
        string_val: "../data/Validation/Run_0001/images/frame_04525.png"
        string_val: "../data/Validation/Run_0001/images/frame_01829.png"
        string_val: "../data/Validation/Run_0001/images/frame_01595.png"
        string_val: "../data/Validation/Run_0001/images/frame_03241.png"
        string_val: "../data/Validation/Run_0001/images/frame_03233.png"
        string_val: "../data/Validation/Run_0001/images/frame_02942.png"
        string_val: "../data/Validation/Run_0001/images/frame_04911.png"
        string_val: "../data/Validation/Run_0001/images/frame_00168.png"
        string_val: "../data/Validation/Run_0001/images/frame_02470.png"
        string_val: "../data/Validation/Run_0001/images/frame_04299.png"
        string_val: "../data/Validation/Run_0001/images/frame_04471.png"
        string_val: "../data/Validation/Run_0001/images/frame_03951.png"
        string_val: "../data/Validation/Run_0001/images/frame_01490.png"
        string_val: "../data/Validation/Run_0001/images/frame_02355.png"
        string_val: "../data/Validation/Run_0001/images/frame_00106.png"
        string_val: "../data/Validation/Run_0001/images/frame_01070.png"
        string_val: "../data/Validation/Run_0001/images/frame_01916.png"
        string_val: "../data/Validation/Run_0001/images/frame_00032.png"
        string_val: "../data/Validation/Run_0001/images/frame_02937.png"
        string_val: "../data/Validation/Run_0001/images/frame_03043.png"
        string_val: "../data/Validation/Run_0001/images/frame_03724.png"
        string_val: "../data/Validation/Run_0001/images/frame_00320.png"
        string_val: "../data/Validation/Run_0001/images/frame_02159.png"
        string_val: "../data/Validation/Run_0001/images/frame_00810.png"
        string_val: "../data/Validation/Run_0001/images/frame_03716.png"
        string_val: "../data/Validation/Run_0001/images/frame_03831.png"
        string_val: "../data/Validation/Run_0001/images/frame_03703.png"
        string_val: "../data/Validation/Run_0001/images/frame_02021.png"
        string_val: "../data/Validation/Run_0001/images/frame_03798.png"
        string_val: "../data/Validation/Run_0001/images/frame_00122.png"
        string_val: "../data/Validation/Run_0001/images/frame_05045.png"
        string_val: "../data/Validation/Run_0001/images/frame_00916.png"
        string_val: "../data/Validation/Run_0001/images/frame_01154.png"
        string_val: "../data/Validation/Run_0001/images/frame_04685.png"
        string_val: "../data/Validation/Run_0001/images/frame_04518.png"
        string_val: "../data/Validation/Run_0001/images/frame_01802.png"
        string_val: "../data/Validation/Run_0001/images/frame_00034.png"
        string_val: "../data/Validation/Run_0001/images/frame_00148.png"
        string_val: "../data/Validation/Run_0001/images/frame_01716.png"
        string_val: "../data/Validation/Run_0001/images/frame_01000.png"
        string_val: "../data/Validation/Run_0001/images/frame_00198.png"
        string_val: "../data/Validation/Run_0001/images/frame_00409.png"
        string_val: "../data/Validation/Run_0001/images/frame_02728.png"
        string_val: "../data/Validation/Run_0001/images/frame_03554.png"
        string_val: "../data/Validation/Run_0001/images/frame_04897.png"
        string_val: "../data/Validation/Run_0001/images/frame_00222.png"
        string_val: "../data/Validation/Run_0001/images/frame_01608.png"
        string_val: "../data/Validation/Run_0001/images/frame_01982.png"
        string_val: "../data/Validation/Run_0001/images/frame_01084.png"
        string_val: "../data/Validation/Run_0001/images/frame_03988.png"
        string_val: "../data/Validation/Run_0001/images/frame_00870.png"
        string_val: "../data/Validation/Run_0001/images/frame_01235.png"
        string_val: "../data/Validation/Run_0001/images/frame_00762.png"
        string_val: "../data/Validation/Run_0001/images/frame_03056.png"
        string_val: "../data/Validation/Run_0001/images/frame_04843.png"
        string_val: "../data/Validation/Run_0001/images/frame_00978.png"
        string_val: "../data/Validation/Run_0001/images/frame_01226.png"
        string_val: "../data/Validation/Run_0001/images/frame_01822.png"
        string_val: "../data/Validation/Run_0001/images/frame_01752.png"
        string_val: "../data/Validation/Run_0001/images/frame_00719.png"
        string_val: "../data/Validation/Run_0001/images/frame_04089.png"
        string_val: "../data/Validation/Run_0001/images/frame_00595.png"
        string_val: "../data/Validation/Run_0001/images/frame_03527.png"
        string_val: "../data/Validation/Run_0001/images/frame_02673.png"
        string_val: "../data/Validation/Run_0001/images/frame_02347.png"
        string_val: "../data/Validation/Run_0001/images/frame_02717.png"
        string_val: "../data/Validation/Run_0001/images/frame_02265.png"
        string_val: "../data/Validation/Run_0001/images/frame_01025.png"
        string_val: "../data/Validation/Run_0001/images/frame_01987.png"
        string_val: "../data/Validation/Run_0001/images/frame_02473.png"
        string_val: "../data/Validation/Run_0001/images/frame_01926.png"
        string_val: "../data/Validation/Run_0001/images/frame_02671.png"
        string_val: "../data/Validation/Run_0001/images/frame_03359.png"
        string_val: "../data/Validation/Run_0001/images/frame_00166.png"
        string_val: "../data/Validation/Run_0001/images/frame_02055.png"
        string_val: "../data/Validation/Run_0001/images/frame_04779.png"
        string_val: "../data/Validation/Run_0001/images/frame_05073.png"
        string_val: "../data/Validation/Run_0001/images/frame_04764.png"
        string_val: "../data/Validation/Run_0001/images/frame_03539.png"
        string_val: "../data/Validation/Run_0001/images/frame_04597.png"
        string_val: "../data/Validation/Run_0001/images/frame_03802.png"
        string_val: "../data/Validation/Run_0001/images/frame_03061.png"
        string_val: "../data/Validation/Run_0001/images/frame_03925.png"
        string_val: "../data/Validation/Run_0001/images/frame_01544.png"
        string_val: "../data/Validation/Run_0001/images/frame_00414.png"
        string_val: "../data/Validation/Run_0001/images/frame_00352.png"
        string_val: "../data/Validation/Run_0001/images/frame_01761.png"
        string_val: "../data/Validation/Run_0001/images/frame_04370.png"
        string_val: "../data/Validation/Run_0001/images/frame_01020.png"
        string_val: "../data/Validation/Run_0001/images/frame_00856.png"
        string_val: "../data/Validation/Run_0001/images/frame_01227.png"
        string_val: "../data/Validation/Run_0001/images/frame_04594.png"
        string_val: "../data/Validation/Run_0001/images/frame_04495.png"
        string_val: "../data/Validation/Run_0001/images/frame_02494.png"
        string_val: "../data/Validation/Run_0001/images/frame_04122.png"
        string_val: "../data/Validation/Run_0001/images/frame_03838.png"
        string_val: "../data/Validation/Run_0001/images/frame_03050.png"
        string_val: "../data/Validation/Run_0001/images/frame_04808.png"
        string_val: "../data/Validation/Run_0001/images/frame_04010.png"
        string_val: "../data/Validation/Run_0001/images/frame_04781.png"
        string_val: "../data/Validation/Run_0001/images/frame_00204.png"
        string_val: "../data/Validation/Run_0001/images/frame_03595.png"
        string_val: "../data/Validation/Run_0001/images/frame_04120.png"
        string_val: "../data/Validation/Run_0001/images/frame_02585.png"
        string_val: "../data/Validation/Run_0001/images/frame_01674.png"
        string_val: "../data/Validation/Run_0001/images/frame_00523.png"
        string_val: "../data/Validation/Run_0001/images/frame_01672.png"
        string_val: "../data/Validation/Run_0001/images/frame_01401.png"
        string_val: "../data/Validation/Run_0001/images/frame_03510.png"
        string_val: "../data/Validation/Run_0001/images/frame_03448.png"
        string_val: "../data/Validation/Run_0001/images/frame_03314.png"
        string_val: "../data/Validation/Run_0001/images/frame_03892.png"
        string_val: "../data/Validation/Run_0001/images/frame_03528.png"
        string_val: "../data/Validation/Run_0001/images/frame_00138.png"
        string_val: "../data/Validation/Run_0001/images/frame_00451.png"
        string_val: "../data/Validation/Run_0001/images/frame_00186.png"
        string_val: "../data/Validation/Run_0001/images/frame_01884.png"
        string_val: "../data/Validation/Run_0001/images/frame_01004.png"
        string_val: "../data/Validation/Run_0001/images/frame_00782.png"
        string_val: "../data/Validation/Run_0001/images/frame_02666.png"
        string_val: "../data/Validation/Run_0001/images/frame_02327.png"
        string_val: "../data/Validation/Run_0001/images/frame_00427.png"
        string_val: "../data/Validation/Run_0001/images/frame_02969.png"
        string_val: "../data/Validation/Run_0001/images/frame_02658.png"
        string_val: "../data/Validation/Run_0001/images/frame_01277.png"
        string_val: "../data/Validation/Run_0001/images/frame_02479.png"
        string_val: "../data/Validation/Run_0001/images/frame_04544.png"
        string_val: "../data/Validation/Run_0001/images/frame_01691.png"
        string_val: "../data/Validation/Run_0001/images/frame_01342.png"
        string_val: "../data/Validation/Run_0001/images/frame_03651.png"
        string_val: "../data/Validation/Run_0001/images/frame_00868.png"
        string_val: "../data/Validation/Run_0001/images/frame_02577.png"
        string_val: "../data/Validation/Run_0001/images/frame_03984.png"
        string_val: "../data/Validation/Run_0001/images/frame_02091.png"
        string_val: "../data/Validation/Run_0001/images/frame_04464.png"
        string_val: "../data/Validation/Run_0001/images/frame_02014.png"
        string_val: "../data/Validation/Run_0001/images/frame_02396.png"
        string_val: "../data/Validation/Run_0001/images/frame_02786.png"
        string_val: "../data/Validation/Run_0001/images/frame_02150.png"
        string_val: "../data/Validation/Run_0001/images/frame_03173.png"
        string_val: "../data/Validation/Run_0001/images/frame_00946.png"
        string_val: "../data/Validation/Run_0001/images/frame_01994.png"
        string_val: "../data/Validation/Run_0001/images/frame_03922.png"
        string_val: "../data/Validation/Run_0001/images/frame_03265.png"
        string_val: "../data/Validation/Run_0001/images/frame_01788.png"
        string_val: "../data/Validation/Run_0001/images/frame_04662.png"
        string_val: "../data/Validation/Run_0001/images/frame_04186.png"
        string_val: "../data/Validation/Run_0001/images/frame_01013.png"
        string_val: "../data/Validation/Run_0001/images/frame_03371.png"
        string_val: "../data/Validation/Run_0001/images/frame_01484.png"
        string_val: "../data/Validation/Run_0001/images/frame_00374.png"
        string_val: "../data/Validation/Run_0001/images/frame_03598.png"
        string_val: "../data/Validation/Run_0001/images/frame_02043.png"
        string_val: "../data/Validation/Run_0001/images/frame_04357.png"
        string_val: "../data/Validation/Run_0001/images/frame_01888.png"
        string_val: "../data/Validation/Run_0001/images/frame_04413.png"
        string_val: "../data/Validation/Run_0001/images/frame_00473.png"
        string_val: "../data/Validation/Run_0001/images/frame_02092.png"
        string_val: "../data/Validation/Run_0001/images/frame_04189.png"
        string_val: "../data/Validation/Run_0001/images/frame_00157.png"
        string_val: "../data/Validation/Run_0001/images/frame_00436.png"
        string_val: "../data/Validation/Run_0001/images/frame_02869.png"
        string_val: "../data/Validation/Run_0001/images/frame_01127.png"
        string_val: "../data/Validation/Run_0001/images/frame_01834.png"
        string_val: "../data/Validation/Run_0001/images/frame_02646.png"
        string_val: "../data/Validation/Run_0001/images/frame_01967.png"
        string_val: "../data/Validation/Run_0001/images/frame_00801.png"
        string_val: "../data/Validation/Run_0001/images/frame_03175.png"
        string_val: "../data/Validation/Run_0001/images/frame_01289.png"
        string_val: "../data/Validation/Run_0001/images/frame_02421.png"
        string_val: "../data/Validation/Run_0001/images/frame_02995.png"
        string_val: "../data/Validation/Run_0001/images/frame_04776.png"
        string_val: "../data/Validation/Run_0001/images/frame_03381.png"
        string_val: "../data/Validation/Run_0001/images/frame_04683.png"
        string_val: "../data/Validation/Run_0001/images/frame_01017.png"
        string_val: "../data/Validation/Run_0001/images/frame_03669.png"
        string_val: "../data/Validation/Run_0001/images/frame_04577.png"
        string_val: "../data/Validation/Run_0001/images/frame_00264.png"
        string_val: "../data/Validation/Run_0001/images/frame_03857.png"
        string_val: "../data/Validation/Run_0001/images/frame_00685.png"
        string_val: "../data/Validation/Run_0001/images/frame_02095.png"
        string_val: "../data/Validation/Run_0001/images/frame_03812.png"
        string_val: "../data/Validation/Run_0001/images/frame_03462.png"
        string_val: "../data/Validation/Run_0001/images/frame_00743.png"
        string_val: "../data/Validation/Run_0001/images/frame_03296.png"
        string_val: "../data/Validation/Run_0001/images/frame_01567.png"
        string_val: "../data/Validation/Run_0001/images/frame_04903.png"
        string_val: "../data/Validation/Run_0001/images/frame_04863.png"
        string_val: "../data/Validation/Run_0001/images/frame_04245.png"
        string_val: "../data/Validation/Run_0001/images/frame_01928.png"
        string_val: "../data/Validation/Run_0001/images/frame_01863.png"
        string_val: "../data/Validation/Run_0001/images/frame_00603.png"
        string_val: "../data/Validation/Run_0001/images/frame_04755.png"
        string_val: "../data/Validation/Run_0001/images/frame_02502.png"
        string_val: "../data/Validation/Run_0001/images/frame_00382.png"
        string_val: "../data/Validation/Run_0001/images/frame_03655.png"
        string_val: "../data/Validation/Run_0001/images/frame_04388.png"
        string_val: "../data/Validation/Run_0001/images/frame_03156.png"
        string_val: "../data/Validation/Run_0001/images/frame_03464.png"
        string_val: "../data/Validation/Run_0001/images/frame_00691.png"
        string_val: "../data/Validation/Run_0001/images/frame_04311.png"
        string_val: "../data/Validation/Run_0001/images/frame_04204.png"
        string_val: "../data/Validation/Run_0001/images/frame_01605.png"
        string_val: "../data/Validation/Run_0001/images/frame_02556.png"
        string_val: "../data/Validation/Run_0001/images/frame_00917.png"
        string_val: "../data/Validation/Run_0001/images/frame_01351.png"
        string_val: "../data/Validation/Run_0001/images/frame_03292.png"
        string_val: "../data/Validation/Run_0001/images/frame_01871.png"
        string_val: "../data/Validation/Run_0001/images/frame_03866.png"
        string_val: "../data/Validation/Run_0001/images/frame_00114.png"
        string_val: "../data/Validation/Run_0001/images/frame_04921.png"
        string_val: "../data/Validation/Run_0001/images/frame_01414.png"
        string_val: "../data/Validation/Run_0001/images/frame_00530.png"
        string_val: "../data/Validation/Run_0001/images/frame_04586.png"
        string_val: "../data/Validation/Run_0001/images/frame_03572.png"
        string_val: "../data/Validation/Run_0001/images/frame_02053.png"
        string_val: "../data/Validation/Run_0001/images/frame_01542.png"
        string_val: "../data/Validation/Run_0001/images/frame_05012.png"
        string_val: "../data/Validation/Run_0001/images/frame_01231.png"
        string_val: "../data/Validation/Run_0001/images/frame_01924.png"
        string_val: "../data/Validation/Run_0001/images/frame_01058.png"
        string_val: "../data/Validation/Run_0001/images/frame_05093.png"
        string_val: "../data/Validation/Run_0001/images/frame_00888.png"
        string_val: "../data/Validation/Run_0001/images/frame_02246.png"
        string_val: "../data/Validation/Run_0001/images/frame_01509.png"
        string_val: "../data/Validation/Run_0001/images/frame_00915.png"
        string_val: "../data/Validation/Run_0001/images/frame_00710.png"
        string_val: "../data/Validation/Run_0001/images/frame_01686.png"
        string_val: "../data/Validation/Run_0001/images/frame_01249.png"
        string_val: "../data/Validation/Run_0001/images/frame_02045.png"
        string_val: "../data/Validation/Run_0001/images/frame_03391.png"
        string_val: "../data/Validation/Run_0001/images/frame_01564.png"
        string_val: "../data/Validation/Run_0001/images/frame_01512.png"
        string_val: "../data/Validation/Run_0001/images/frame_00886.png"
        string_val: "../data/Validation/Run_0001/images/frame_03513.png"
        string_val: "../data/Validation/Run_0001/images/frame_01524.png"
        string_val: "../data/Validation/Run_0001/images/frame_03628.png"
        string_val: "../data/Validation/Run_0001/images/frame_00344.png"
        string_val: "../data/Validation/Run_0001/images/frame_03727.png"
        string_val: "../data/Validation/Run_0001/images/frame_00549.png"
        string_val: "../data/Validation/Run_0001/images/frame_04291.png"
        string_val: "../data/Validation/Run_0001/images/frame_01553.png"
        string_val: "../data/Validation/Run_0001/images/frame_04100.png"
        string_val: "../data/Validation/Run_0001/images/frame_04510.png"
        string_val: "../data/Validation/Run_0001/images/frame_03291.png"
        string_val: "../data/Validation/Run_0001/images/frame_03942.png"
        string_val: "../data/Validation/Run_0001/images/frame_03388.png"
        string_val: "../data/Validation/Run_0001/images/frame_00572.png"
        string_val: "../data/Validation/Run_0001/images/frame_03921.png"
        string_val: "../data/Validation/Run_0001/images/frame_01247.png"
        string_val: "../data/Validation/Run_0001/images/frame_01583.png"
        string_val: "../data/Validation/Run_0001/images/frame_04571.png"
        string_val: "../data/Validation/Run_0001/images/frame_02332.png"
        string_val: "../data/Validation/Run_0001/images/frame_03231.png"
        string_val: "../data/Validation/Run_0001/images/frame_02755.png"
        string_val: "../data/Validation/Run_0001/images/frame_00813.png"
        string_val: "../data/Validation/Run_0001/images/frame_02175.png"
        string_val: "../data/Validation/Run_0001/images/frame_02051.png"
        string_val: "../data/Validation/Run_0001/images/frame_01266.png"
        string_val: "../data/Validation/Run_0001/images/frame_04175.png"
        string_val: "../data/Validation/Run_0001/images/frame_01651.png"
        string_val: "../data/Validation/Run_0001/images/frame_03295.png"
        string_val: "../data/Validation/Run_0001/images/frame_01197.png"
        string_val: "../data/Validation/Run_0001/images/frame_01643.png"
        string_val: "../data/Validation/Run_0001/images/frame_02326.png"
        string_val: "../data/Validation/Run_0001/images/frame_03210.png"
        string_val: "../data/Validation/Run_0001/images/frame_02857.png"
        string_val: "../data/Validation/Run_0001/images/frame_00136.png"
        string_val: "../data/Validation/Run_0001/images/frame_00299.png"
        string_val: "../data/Validation/Run_0001/images/frame_00976.png"
        string_val: "../data/Validation/Run_0001/images/frame_03732.png"
        string_val: "../data/Validation/Run_0001/images/frame_00944.png"
        string_val: "../data/Validation/Run_0001/images/frame_03576.png"
        string_val: "../data/Validation/Run_0001/images/frame_04354.png"
        string_val: "../data/Validation/Run_0001/images/frame_03087.png"
        string_val: "../data/Validation/Run_0001/images/frame_01915.png"
        string_val: "../data/Validation/Run_0001/images/frame_03578.png"
        string_val: "../data/Validation/Run_0001/images/frame_03400.png"
        string_val: "../data/Validation/Run_0001/images/frame_03316.png"
        string_val: "../data/Validation/Run_0001/images/frame_04156.png"
        string_val: "../data/Validation/Run_0001/images/frame_02704.png"
        string_val: "../data/Validation/Run_0001/images/frame_00022.png"
        string_val: "../data/Validation/Run_0001/images/frame_02026.png"
        string_val: "../data/Validation/Run_0001/images/frame_04751.png"
        string_val: "../data/Validation/Run_0001/images/frame_04363.png"
        string_val: "../data/Validation/Run_0001/images/frame_05039.png"
        string_val: "../data/Validation/Run_0001/images/frame_04048.png"
        string_val: "../data/Validation/Run_0001/images/frame_04049.png"
        string_val: "../data/Validation/Run_0001/images/frame_03914.png"
        string_val: "../data/Validation/Run_0001/images/frame_01244.png"
        string_val: "../data/Validation/Run_0001/images/frame_03621.png"
        string_val: "../data/Validation/Run_0001/images/frame_03126.png"
        string_val: "../data/Validation/Run_0001/images/frame_00932.png"
        string_val: "../data/Validation/Run_0001/images/frame_00626.png"
        string_val: "../data/Validation/Run_0001/images/frame_00980.png"
        string_val: "../data/Validation/Run_0001/images/frame_03001.png"
        string_val: "../data/Validation/Run_0001/images/frame_02036.png"
        string_val: "../data/Validation/Run_0001/images/frame_02238.png"
        string_val: "../data/Validation/Run_0001/images/frame_02191.png"
        string_val: "../data/Validation/Run_0001/images/frame_00385.png"
        string_val: "../data/Validation/Run_0001/images/frame_01753.png"
        string_val: "../data/Validation/Run_0001/images/frame_01005.png"
        string_val: "../data/Validation/Run_0001/images/frame_04504.png"
        string_val: "../data/Validation/Run_0001/images/frame_00854.png"
        string_val: "../data/Validation/Run_0001/images/frame_03327.png"
        string_val: "../data/Validation/Run_0001/images/frame_02339.png"
        string_val: "../data/Validation/Run_0001/images/frame_01662.png"
        string_val: "../data/Validation/Run_0001/images/frame_04687.png"
        string_val: "../data/Validation/Run_0001/images/frame_02571.png"
        string_val: "../data/Validation/Run_0001/images/frame_04548.png"
        string_val: "../data/Validation/Run_0001/images/frame_01501.png"
        string_val: "../data/Validation/Run_0001/images/frame_04595.png"
        string_val: "../data/Validation/Run_0001/images/frame_00726.png"
        string_val: "../data/Validation/Run_0001/images/frame_03458.png"
        string_val: "../data/Validation/Run_0001/images/frame_02008.png"
        string_val: "../data/Validation/Run_0001/images/frame_04402.png"
        string_val: "../data/Validation/Run_0001/images/frame_04437.png"
        string_val: "../data/Validation/Run_0001/images/frame_00696.png"
        string_val: "../data/Validation/Run_0001/images/frame_00688.png"
        string_val: "../data/Validation/Run_0001/images/frame_00017.png"
        string_val: "../data/Validation/Run_0001/images/frame_03841.png"
        string_val: "../data/Validation/Run_0001/images/frame_00496.png"
        string_val: "../data/Validation/Run_0001/images/frame_04032.png"
        string_val: "../data/Validation/Run_0001/images/frame_05029.png"
        string_val: "../data/Validation/Run_0001/images/frame_01628.png"
        string_val: "../data/Validation/Run_0001/images/frame_00871.png"
        string_val: "../data/Validation/Run_0001/images/frame_02576.png"
        string_val: "../data/Validation/Run_0001/images/frame_03575.png"
        string_val: "../data/Validation/Run_0001/images/frame_01793.png"
        string_val: "../data/Validation/Run_0001/images/frame_02463.png"
        string_val: "../data/Validation/Run_0001/images/frame_02400.png"
        string_val: "../data/Validation/Run_0001/images/frame_03665.png"
        string_val: "../data/Validation/Run_0001/images/frame_02613.png"
        string_val: "../data/Validation/Run_0001/images/frame_00510.png"
        string_val: "../data/Validation/Run_0001/images/frame_00359.png"
        string_val: "../data/Validation/Run_0001/images/frame_02066.png"
        string_val: "../data/Validation/Run_0001/images/frame_02806.png"
        string_val: "../data/Validation/Run_0001/images/frame_01907.png"
        string_val: "../data/Validation/Run_0001/images/frame_02733.png"
        string_val: "../data/Validation/Run_0001/images/frame_02800.png"
        string_val: "../data/Validation/Run_0001/images/frame_04496.png"
        string_val: "../data/Validation/Run_0001/images/frame_03672.png"
        string_val: "../data/Validation/Run_0001/images/frame_01905.png"
        string_val: "../data/Validation/Run_0001/images/frame_01117.png"
        string_val: "../data/Validation/Run_0001/images/frame_02495.png"
        string_val: "../data/Validation/Run_0001/images/frame_04417.png"
        string_val: "../data/Validation/Run_0001/images/frame_01406.png"
        string_val: "../data/Validation/Run_0001/images/frame_02379.png"
        string_val: "../data/Validation/Run_0001/images/frame_01222.png"
        string_val: "../data/Validation/Run_0001/images/frame_01195.png"
        string_val: "../data/Validation/Run_0001/images/frame_03607.png"
        string_val: "../data/Validation/Run_0001/images/frame_03451.png"
        string_val: "../data/Validation/Run_0001/images/frame_03108.png"
        string_val: "../data/Validation/Run_0001/images/frame_00912.png"
        string_val: "../data/Validation/Run_0001/images/frame_00504.png"
        string_val: "../data/Validation/Run_0001/images/frame_04970.png"
        string_val: "../data/Validation/Run_0001/images/frame_01081.png"
        string_val: "../data/Validation/Run_0001/images/frame_00823.png"
        string_val: "../data/Validation/Run_0001/images/frame_05032.png"
        string_val: "../data/Validation/Run_0001/images/frame_02231.png"
        string_val: "../data/Validation/Run_0001/images/frame_00516.png"
        string_val: "../data/Validation/Run_0001/images/frame_00220.png"
        string_val: "../data/Validation/Run_0001/images/frame_00132.png"
        string_val: "../data/Validation/Run_0001/images/frame_03525.png"
        string_val: "../data/Validation/Run_0001/images/frame_03212.png"
        string_val: "../data/Validation/Run_0001/images/frame_03747.png"
        string_val: "../data/Validation/Run_0001/images/frame_01218.png"
        string_val: "../data/Validation/Run_0001/images/frame_04241.png"
        string_val: "../data/Validation/Run_0001/images/frame_03472.png"
        string_val: "../data/Validation/Run_0001/images/frame_04841.png"
        string_val: "../data/Validation/Run_0001/images/frame_02654.png"
        string_val: "../data/Validation/Run_0001/images/frame_03616.png"
        string_val: "../data/Validation/Run_0001/images/frame_00971.png"
        string_val: "../data/Validation/Run_0001/images/frame_02549.png"
        string_val: "../data/Validation/Run_0001/images/frame_04725.png"
        string_val: "../data/Validation/Run_0001/images/frame_03769.png"
        string_val: "../data/Validation/Run_0001/images/frame_00650.png"
        string_val: "../data/Validation/Run_0001/images/frame_03887.png"
        string_val: "../data/Validation/Run_0001/images/frame_01255.png"
        string_val: "../data/Validation/Run_0001/images/frame_02299.png"
        string_val: "../data/Validation/Run_0001/images/frame_04770.png"
        string_val: "../data/Validation/Run_0001/images/frame_04432.png"
        string_val: "../data/Validation/Run_0001/images/frame_02395.png"
        string_val: "../data/Validation/Run_0001/images/frame_02880.png"
        string_val: "../data/Validation/Run_0001/images/frame_02270.png"
        string_val: "../data/Validation/Run_0001/images/frame_03814.png"
        string_val: "../data/Validation/Run_0001/images/frame_00364.png"
        string_val: "../data/Validation/Run_0001/images/frame_03242.png"
        string_val: "../data/Validation/Run_0001/images/frame_02954.png"
        string_val: "../data/Validation/Run_0001/images/frame_00492.png"
        string_val: "../data/Validation/Run_0001/images/frame_00242.png"
        string_val: "../data/Validation/Run_0001/images/frame_03470.png"
        string_val: "../data/Validation/Run_0001/images/frame_01839.png"
        string_val: "../data/Validation/Run_0001/images/frame_00680.png"
        string_val: "../data/Validation/Run_0001/images/frame_02139.png"
        string_val: "../data/Validation/Run_0001/images/frame_03919.png"
        string_val: "../data/Validation/Run_0001/images/frame_00754.png"
        string_val: "../data/Validation/Run_0001/images/frame_05013.png"
        string_val: "../data/Validation/Run_0001/images/frame_04892.png"
        string_val: "../data/Validation/Run_0001/images/frame_00277.png"
        string_val: "../data/Validation/Run_0001/images/frame_00534.png"
        string_val: "../data/Validation/Run_0001/images/frame_01034.png"
        string_val: "../data/Validation/Run_0001/images/frame_04425.png"
        string_val: "../data/Validation/Run_0001/images/frame_00774.png"
        string_val: "../data/Validation/Run_0001/images/frame_02346.png"
        string_val: "../data/Validation/Run_0001/images/frame_03370.png"
        string_val: "../data/Validation/Run_0001/images/frame_03224.png"
        string_val: "../data/Validation/Run_0001/images/frame_03713.png"
        string_val: "../data/Validation/Run_0001/images/frame_00721.png"
        string_val: "../data/Validation/Run_0001/images/frame_05081.png"
        string_val: "../data/Validation/Run_0001/images/frame_03392.png"
        string_val: "../data/Validation/Run_0001/images/frame_02574.png"
        string_val: "../data/Validation/Run_0001/images/frame_04859.png"
        string_val: "../data/Validation/Run_0001/images/frame_04605.png"
        string_val: "../data/Validation/Run_0001/images/frame_03941.png"
        string_val: "../data/Validation/Run_0001/images/frame_03609.png"
        string_val: "../data/Validation/Run_0001/images/frame_02854.png"
        string_val: "../data/Validation/Run_0001/images/frame_00009.png"
        string_val: "../data/Validation/Run_0001/images/frame_02916.png"
        string_val: "../data/Validation/Run_0001/images/frame_01815.png"
        string_val: "../data/Validation/Run_0001/images/frame_04439.png"
        string_val: "../data/Validation/Run_0001/images/frame_04823.png"
        string_val: "../data/Validation/Run_0001/images/frame_03629.png"
        string_val: "../data/Validation/Run_0001/images/frame_02977.png"
        string_val: "../data/Validation/Run_0001/images/frame_00765.png"
        string_val: "../data/Validation/Run_0001/images/frame_03642.png"
        string_val: "../data/Validation/Run_0001/images/frame_01431.png"
        string_val: "../data/Validation/Run_0001/images/frame_04618.png"
        string_val: "../data/Validation/Run_0001/images/frame_02147.png"
        string_val: "../data/Validation/Run_0001/images/frame_00840.png"
        string_val: "../data/Validation/Run_0001/images/frame_02478.png"
        string_val: "../data/Validation/Run_0001/images/frame_01818.png"
        string_val: "../data/Validation/Run_0001/images/frame_04769.png"
        string_val: "../data/Validation/Run_0001/images/frame_03493.png"
        string_val: "../data/Validation/Run_0001/images/frame_01521.png"
        string_val: "../data/Validation/Run_0001/images/frame_02345.png"
        string_val: "../data/Validation/Run_0001/images/frame_03627.png"
        string_val: "../data/Validation/Run_0001/images/frame_03860.png"
        string_val: "../data/Validation/Run_0001/images/frame_02442.png"
        string_val: "../data/Validation/Run_0001/images/frame_03024.png"
        string_val: "../data/Validation/Run_0001/images/frame_01056.png"
        string_val: "../data/Validation/Run_0001/images/frame_03760.png"
        string_val: "../data/Validation/Run_0001/images/frame_04043.png"
        string_val: "../data/Validation/Run_0001/images/frame_02794.png"
        string_val: "../data/Validation/Run_0001/images/frame_01910.png"
        string_val: "../data/Validation/Run_0001/images/frame_04058.png"
        string_val: "../data/Validation/Run_0001/images/frame_01990.png"
        string_val: "../data/Validation/Run_0001/images/frame_04383.png"
        string_val: "../data/Validation/Run_0001/images/frame_01269.png"
        string_val: "../data/Validation/Run_0001/images/frame_04732.png"
        string_val: "../data/Validation/Run_0001/images/frame_04168.png"
        string_val: "../data/Validation/Run_0001/images/frame_00071.png"
        string_val: "../data/Validation/Run_0001/images/frame_00028.png"
        string_val: "../data/Validation/Run_0001/images/frame_02419.png"
        string_val: "../data/Validation/Run_0001/images/frame_04209.png"
        string_val: "../data/Validation/Run_0001/images/frame_04615.png"
        string_val: "../data/Validation/Run_0001/images/frame_03835.png"
        string_val: "../data/Validation/Run_0001/images/frame_04046.png"
        string_val: "../data/Validation/Run_0001/images/frame_03254.png"
        string_val: "../data/Validation/Run_0001/images/frame_02982.png"
        string_val: "../data/Validation/Run_0001/images/frame_03317.png"
        string_val: "../data/Validation/Run_0001/images/frame_02947.png"
        string_val: "../data/Validation/Run_0001/images/frame_02868.png"
        string_val: "../data/Validation/Run_0001/images/frame_02608.png"
        string_val: "../data/Validation/Run_0001/images/frame_02776.png"
        string_val: "../data/Validation/Run_0001/images/frame_03624.png"
        string_val: "../data/Validation/Run_0001/images/frame_00331.png"
        string_val: "../data/Validation/Run_0001/images/frame_00732.png"
        string_val: "../data/Validation/Run_0001/images/frame_04572.png"
        string_val: "../data/Validation/Run_0001/images/frame_01766.png"
        string_val: "../data/Validation/Run_0001/images/frame_01606.png"
        string_val: "../data/Validation/Run_0001/images/frame_02183.png"
        string_val: "../data/Validation/Run_0001/images/frame_02184.png"
        string_val: "../data/Validation/Run_0001/images/frame_02207.png"
        string_val: "../data/Validation/Run_0001/images/frame_00531.png"
        string_val: "../data/Validation/Run_0001/images/frame_01304.png"
        string_val: "../data/Validation/Run_0001/images/frame_00729.png"
        string_val: "../data/Validation/Run_0001/images/frame_00508.png"
        string_val: "../data/Validation/Run_0001/images/frame_01613.png"
        string_val: "../data/Validation/Run_0001/images/frame_00675.png"
        string_val: "../data/Validation/Run_0001/images/frame_03235.png"
        string_val: "../data/Validation/Run_0001/images/frame_04649.png"
        string_val: "../data/Validation/Run_0001/images/frame_04026.png"
        string_val: "../data/Validation/Run_0001/images/frame_02272.png"
        string_val: "../data/Validation/Run_0001/images/frame_00069.png"
        string_val: "../data/Validation/Run_0001/images/frame_03211.png"
        string_val: "../data/Validation/Run_0001/images/frame_04949.png"
        string_val: "../data/Validation/Run_0001/images/frame_00526.png"
        string_val: "../data/Validation/Run_0001/images/frame_02283.png"
        string_val: "../data/Validation/Run_0001/images/frame_03419.png"
        string_val: "../data/Validation/Run_0001/images/frame_02298.png"
        string_val: "../data/Validation/Run_0001/images/frame_01689.png"
        string_val: "../data/Validation/Run_0001/images/frame_04775.png"
        string_val: "../data/Validation/Run_0001/images/frame_02760.png"
        string_val: "../data/Validation/Run_0001/images/frame_00784.png"
        string_val: "../data/Validation/Run_0001/images/frame_03809.png"
        string_val: "../data/Validation/Run_0001/images/frame_01875.png"
        string_val: "../data/Validation/Run_0001/images/frame_02516.png"
        string_val: "../data/Validation/Run_0001/images/frame_03460.png"
        string_val: "../data/Validation/Run_0001/images/frame_03225.png"
        string_val: "../data/Validation/Run_0001/images/frame_02846.png"
        string_val: "../data/Validation/Run_0001/images/frame_02533.png"
        string_val: "../data/Validation/Run_0001/images/frame_03696.png"
        string_val: "../data/Validation/Run_0001/images/frame_03282.png"
        string_val: "../data/Validation/Run_0001/images/frame_03854.png"
        string_val: "../data/Validation/Run_0001/images/frame_03985.png"
        string_val: "../data/Validation/Run_0001/images/frame_01974.png"
        string_val: "../data/Validation/Run_0001/images/frame_04704.png"
        string_val: "../data/Validation/Run_0001/images/frame_04616.png"
        string_val: "../data/Validation/Run_0001/images/frame_03358.png"
        string_val: "../data/Validation/Run_0001/images/frame_04322.png"
        string_val: "../data/Validation/Run_0001/images/frame_01578.png"
        string_val: "../data/Validation/Run_0001/images/frame_04339.png"
        string_val: "../data/Validation/Run_0001/images/frame_04712.png"
        string_val: "../data/Validation/Run_0001/images/frame_03471.png"
        string_val: "../data/Validation/Run_0001/images/frame_04929.png"
        string_val: "../data/Validation/Run_0001/images/frame_03124.png"
        string_val: "../data/Validation/Run_0001/images/frame_02962.png"
        string_val: "../data/Validation/Run_0001/images/frame_01259.png"
        string_val: "../data/Validation/Run_0001/images/frame_03286.png"
        string_val: "../data/Validation/Run_0001/images/frame_02538.png"
        string_val: "../data/Validation/Run_0001/images/frame_00302.png"
        string_val: "../data/Validation/Run_0001/images/frame_02867.png"
        string_val: "../data/Validation/Run_0001/images/frame_02829.png"
        string_val: "../data/Validation/Run_0001/images/frame_02637.png"
        string_val: "../data/Validation/Run_0001/images/frame_03466.png"
        string_val: "../data/Validation/Run_0001/images/frame_04107.png"
        string_val: "../data/Validation/Run_0001/images/frame_03626.png"
        string_val: "../data/Validation/Run_0001/images/frame_01913.png"
        string_val: "../data/Validation/Run_0001/images/frame_01683.png"
        string_val: "../data/Validation/Run_0001/images/frame_00983.png"
        string_val: "../data/Validation/Run_0001/images/frame_02382.png"
        string_val: "../data/Validation/Run_0001/images/frame_00244.png"
        string_val: "../data/Validation/Run_0001/images/frame_02482.png"
        string_val: "../data/Validation/Run_0001/images/frame_02912.png"
        string_val: "../data/Validation/Run_0001/images/frame_03957.png"
        string_val: "../data/Validation/Run_0001/images/frame_01536.png"
        string_val: "../data/Validation/Run_0001/images/frame_02075.png"
        string_val: "../data/Validation/Run_0001/images/frame_02513.png"
        string_val: "../data/Validation/Run_0001/images/frame_04080.png"
        string_val: "../data/Validation/Run_0001/images/frame_01933.png"
        string_val: "../data/Validation/Run_0001/images/frame_03730.png"
        string_val: "../data/Validation/Run_0001/images/frame_00457.png"
        string_val: "../data/Validation/Run_0001/images/frame_01811.png"
        string_val: "../data/Validation/Run_0001/images/frame_00361.png"
        string_val: "../data/Validation/Run_0001/images/frame_05077.png"
        string_val: "../data/Validation/Run_0001/images/frame_03436.png"
        string_val: "../data/Validation/Run_0001/images/frame_04478.png"
        string_val: "../data/Validation/Run_0001/images/frame_01018.png"
        string_val: "../data/Validation/Run_0001/images/frame_00974.png"
        string_val: "../data/Validation/Run_0001/images/frame_03169.png"
        string_val: "../data/Validation/Run_0001/images/frame_02416.png"
        string_val: "../data/Validation/Run_0001/images/frame_03917.png"
        string_val: "../data/Validation/Run_0001/images/frame_00627.png"
        string_val: "../data/Validation/Run_0001/images/frame_00046.png"
        string_val: "../data/Validation/Run_0001/images/frame_03480.png"
        string_val: "../data/Validation/Run_0001/images/frame_02807.png"
        string_val: "../data/Validation/Run_0001/images/frame_02631.png"
        string_val: "../data/Validation/Run_0001/images/frame_01330.png"
        string_val: "../data/Validation/Run_0001/images/frame_02845.png"
        string_val: "../data/Validation/Run_0001/images/frame_04034.png"
        string_val: "../data/Validation/Run_0001/images/frame_03953.png"
        string_val: "../data/Validation/Run_0001/images/frame_02541.png"
        string_val: "../data/Validation/Run_0001/images/frame_03026.png"
        string_val: "../data/Validation/Run_0001/images/frame_00584.png"
        string_val: "../data/Validation/Run_0001/images/frame_02849.png"
        string_val: "../data/Validation/Run_0001/images/frame_00102.png"
        string_val: "../data/Validation/Run_0001/images/frame_04094.png"
        string_val: "../data/Validation/Run_0001/images/frame_01419.png"
        string_val: "../data/Validation/Run_0001/images/frame_01620.png"
        string_val: "../data/Validation/Run_0001/images/frame_00503.png"
        string_val: "../data/Validation/Run_0001/images/frame_03132.png"
        string_val: "../data/Validation/Run_0001/images/frame_00735.png"
        string_val: "../data/Validation/Run_0001/images/frame_02810.png"
        string_val: "../data/Validation/Run_0001/images/frame_02284.png"
        string_val: "../data/Validation/Run_0001/images/frame_00661.png"
        string_val: "../data/Validation/Run_0001/images/frame_02874.png"
        string_val: "../data/Validation/Run_0001/images/frame_03722.png"
        string_val: "../data/Validation/Run_0001/images/frame_02702.png"
        string_val: "../data/Validation/Run_0001/images/frame_01111.png"
        string_val: "../data/Validation/Run_0001/images/frame_04159.png"
        string_val: "../data/Validation/Run_0001/images/frame_01563.png"
        string_val: "../data/Validation/Run_0001/images/frame_03768.png"
        string_val: "../data/Validation/Run_0001/images/frame_03343.png"
        string_val: "../data/Validation/Run_0001/images/frame_00575.png"
        string_val: "../data/Validation/Run_0001/images/frame_03379.png"
        string_val: "../data/Validation/Run_0001/images/frame_03275.png"
        string_val: "../data/Validation/Run_0001/images/frame_04503.png"
        string_val: "../data/Validation/Run_0001/images/frame_03909.png"
        string_val: "../data/Validation/Run_0001/images/frame_02384.png"
        string_val: "../data/Validation/Run_0001/images/frame_03030.png"
        string_val: "../data/Validation/Run_0001/images/frame_03958.png"
        string_val: "../data/Validation/Run_0001/images/frame_04185.png"
        string_val: "../data/Validation/Run_0001/images/frame_03851.png"
        string_val: "../data/Validation/Run_0001/images/frame_02200.png"
        string_val: "../data/Validation/Run_0001/images/frame_00279.png"
        string_val: "../data/Validation/Run_0001/images/frame_04298.png"
        string_val: "../data/Validation/Run_0001/images/frame_04961.png"
        string_val: "../data/Validation/Run_0001/images/frame_03130.png"
        string_val: "../data/Validation/Run_0001/images/frame_03991.png"
        string_val: "../data/Validation/Run_0001/images/frame_02449.png"
        string_val: "../data/Validation/Run_0001/images/frame_02122.png"
        string_val: "../data/Validation/Run_0001/images/frame_01232.png"
        string_val: "../data/Validation/Run_0001/images/frame_05027.png"
        string_val: "../data/Validation/Run_0001/images/frame_02536.png"
        string_val: "../data/Validation/Run_0001/images/frame_02770.png"
        string_val: "../data/Validation/Run_0001/images/frame_00608.png"
        string_val: "../data/Validation/Run_0001/images/frame_05002.png"
        string_val: "../data/Validation/Run_0001/images/frame_01483.png"
        string_val: "../data/Validation/Run_0001/images/frame_01479.png"
        string_val: "../data/Validation/Run_0001/images/frame_00634.png"
        string_val: "../data/Validation/Run_0001/images/frame_04887.png"
        string_val: "../data/Validation/Run_0001/images/frame_01717.png"
        string_val: "../data/Validation/Run_0001/images/frame_04288.png"
        string_val: "../data/Validation/Run_0001/images/frame_04429.png"
        string_val: "../data/Validation/Run_0001/images/frame_03657.png"
        string_val: "../data/Validation/Run_0001/images/frame_03902.png"
        string_val: "../data/Validation/Run_0001/images/frame_05092.png"
        string_val: "../data/Validation/Run_0001/images/frame_01336.png"
        string_val: "../data/Validation/Run_0001/images/frame_03777.png"
        string_val: "../data/Validation/Run_0001/images/frame_00437.png"
        string_val: "../data/Validation/Run_0001/images/frame_05056.png"
        string_val: "../data/Validation/Run_0001/images/frame_03002.png"
        string_val: "../data/Validation/Run_0001/images/frame_02264.png"
        string_val: "../data/Validation/Run_0001/images/frame_00554.png"
        string_val: "../data/Validation/Run_0001/images/frame_02268.png"
        string_val: "../data/Validation/Run_0001/images/frame_03588.png"
        string_val: "../data/Validation/Run_0001/images/frame_01045.png"
        string_val: "../data/Validation/Run_0001/images/frame_01865.png"
        string_val: "../data/Validation/Run_0001/images/frame_02966.png"
        string_val: "../data/Validation/Run_0001/images/frame_01706.png"
        string_val: "../data/Validation/Run_0001/images/frame_01980.png"
        string_val: "../data/Validation/Run_0001/images/frame_02015.png"
        string_val: "../data/Validation/Run_0001/images/frame_04118.png"
        string_val: "../data/Validation/Run_0001/images/frame_02475.png"
        string_val: "../data/Validation/Run_0001/images/frame_01584.png"
        string_val: "../data/Validation/Run_0001/images/frame_04944.png"
        string_val: "../data/Validation/Run_0001/images/frame_00479.png"
        string_val: "../data/Validation/Run_0001/images/frame_00317.png"
        string_val: "../data/Validation/Run_0001/images/frame_03077.png"
        string_val: "../data/Validation/Run_0001/images/frame_00711.png"
        string_val: "../data/Validation/Run_0001/images/frame_01885.png"
        string_val: "../data/Validation/Run_0001/images/frame_03368.png"
        string_val: "../data/Validation/Run_0001/images/frame_01068.png"
        string_val: "../data/Validation/Run_0001/images/frame_01977.png"
        string_val: "../data/Validation/Run_0001/images/frame_04336.png"
        string_val: "../data/Validation/Run_0001/images/frame_02543.png"
        string_val: "../data/Validation/Run_0001/images/frame_02847.png"
        string_val: "../data/Validation/Run_0001/images/frame_02465.png"
        string_val: "../data/Validation/Run_0001/images/frame_01394.png"
        string_val: "../data/Validation/Run_0001/images/frame_04374.png"
        string_val: "../data/Validation/Run_0001/images/frame_02757.png"
        string_val: "../data/Validation/Run_0001/images/frame_01750.png"
        string_val: "../data/Validation/Run_0001/images/frame_04177.png"
        string_val: "../data/Validation/Run_0001/images/frame_01566.png"
        string_val: "../data/Validation/Run_0001/images/frame_02064.png"
        string_val: "../data/Validation/Run_0001/images/frame_02783.png"
        string_val: "../data/Validation/Run_0001/images/frame_01500.png"
        string_val: "../data/Validation/Run_0001/images/frame_01206.png"
        string_val: "../data/Validation/Run_0001/images/frame_04588.png"
        string_val: "../data/Validation/Run_0001/images/frame_03565.png"
        string_val: "../data/Validation/Run_0001/images/frame_02707.png"
        string_val: "../data/Validation/Run_0001/images/frame_03907.png"
        string_val: "../data/Validation/Run_0001/images/frame_02291.png"
        string_val: "../data/Validation/Run_0001/images/frame_02832.png"
        string_val: "../data/Validation/Run_0001/images/frame_03532.png"
        string_val: "../data/Validation/Run_0001/images/frame_01869.png"
        string_val: "../data/Validation/Run_0001/images/frame_00907.png"
        string_val: "../data/Validation/Run_0001/images/frame_03315.png"
        string_val: "../data/Validation/Run_0001/images/frame_02256.png"
        string_val: "../data/Validation/Run_0001/images/frame_01333.png"
        string_val: "../data/Validation/Run_0001/images/frame_04072.png"
        string_val: "../data/Validation/Run_0001/images/frame_03230.png"
        string_val: "../data/Validation/Run_0001/images/frame_00154.png"
        string_val: "../data/Validation/Run_0001/images/frame_01376.png"
        string_val: "../data/Validation/Run_0001/images/frame_04875.png"
        string_val: "../data/Validation/Run_0001/images/frame_04237.png"
        string_val: "../data/Validation/Run_0001/images/frame_02261.png"
        string_val: "../data/Validation/Run_0001/images/frame_02115.png"
        string_val: "../data/Validation/Run_0001/images/frame_02388.png"
        string_val: "../data/Validation/Run_0001/images/frame_01513.png"
        string_val: "../data/Validation/Run_0001/images/frame_00054.png"
        string_val: "../data/Validation/Run_0001/images/frame_03303.png"
        string_val: "../data/Validation/Run_0001/images/frame_01303.png"
        string_val: "../data/Validation/Run_0001/images/frame_02605.png"
        string_val: "../data/Validation/Run_0001/images/frame_01242.png"
        string_val: "../data/Validation/Run_0001/images/frame_00623.png"
        string_val: "../data/Validation/Run_0001/images/frame_01897.png"
        string_val: "../data/Validation/Run_0001/images/frame_04266.png"
        string_val: "../data/Validation/Run_0001/images/frame_00213.png"
        string_val: "../data/Validation/Run_0001/images/frame_01625.png"
        string_val: "../data/Validation/Run_0001/images/frame_03264.png"
        string_val: "../data/Validation/Run_0001/images/frame_03819.png"
        string_val: "../data/Validation/Run_0001/images/frame_01975.png"
        string_val: "../data/Validation/Run_0001/images/frame_03208.png"
        string_val: "../data/Validation/Run_0001/images/frame_00131.png"
        string_val: "../data/Validation/Run_0001/images/frame_03180.png"
        string_val: "../data/Validation/Run_0001/images/frame_03737.png"
        string_val: "../data/Validation/Run_0001/images/frame_00185.png"
        string_val: "../data/Validation/Run_0001/images/frame_01615.png"
        string_val: "../data/Validation/Run_0001/images/frame_04113.png"
        string_val: "../data/Validation/Run_0001/images/frame_01894.png"
        string_val: "../data/Validation/Run_0001/images/frame_00506.png"
        string_val: "../data/Validation/Run_0001/images/frame_02217.png"
        string_val: "../data/Validation/Run_0001/images/frame_03767.png"
        string_val: "../data/Validation/Run_0001/images/frame_02765.png"
        string_val: "../data/Validation/Run_0001/images/frame_01114.png"
        string_val: "../data/Validation/Run_0001/images/frame_02361.png"
        string_val: "../data/Validation/Run_0001/images/frame_04729.png"
        string_val: "../data/Validation/Run_0001/images/frame_01961.png"
        string_val: "../data/Validation/Run_0001/images/frame_04061.png"
        string_val: "../data/Validation/Run_0001/images/frame_02080.png"
        string_val: "../data/Validation/Run_0001/images/frame_02236.png"
        string_val: "../data/Validation/Run_0001/images/frame_00600.png"
        string_val: "../data/Validation/Run_0001/images/frame_04830.png"
        string_val: "../data/Validation/Run_0001/images/frame_03536.png"
        string_val: "../data/Validation/Run_0001/images/frame_04087.png"
        string_val: "../data/Validation/Run_0001/images/frame_01918.png"
        string_val: "../data/Validation/Run_0001/images/frame_04379.png"
        string_val: "../data/Validation/Run_0001/images/frame_01076.png"
        string_val: "../data/Validation/Run_0001/images/frame_00447.png"
        string_val: "../data/Validation/Run_0001/images/frame_01462.png"
        string_val: "../data/Validation/Run_0001/images/frame_01021.png"
        string_val: "../data/Validation/Run_0001/images/frame_01813.png"
        string_val: "../data/Validation/Run_0001/images/frame_02343.png"
        string_val: "../data/Validation/Run_0001/images/frame_03935.png"
        string_val: "../data/Validation/Run_0001/images/frame_00525.png"
        string_val: "../data/Validation/Run_0001/images/frame_04821.png"
        string_val: "../data/Validation/Run_0001/images/frame_00779.png"
        string_val: "../data/Validation/Run_0001/images/frame_02079.png"
        string_val: "../data/Validation/Run_0001/images/frame_04065.png"
        string_val: "../data/Validation/Run_0001/images/frame_00803.png"
        string_val: "../data/Validation/Run_0001/images/frame_04711.png"
        string_val: "../data/Validation/Run_0001/images/frame_03970.png"
        string_val: "../data/Validation/Run_0001/images/frame_04565.png"
        string_val: "../data/Validation/Run_0001/images/frame_01124.png"
        string_val: "../data/Validation/Run_0001/images/frame_01145.png"
        string_val: "../data/Validation/Run_0001/images/frame_03313.png"
        string_val: "../data/Validation/Run_0001/images/frame_02530.png"
        string_val: "../data/Validation/Run_0001/images/frame_00614.png"
        string_val: "../data/Validation/Run_0001/images/frame_01626.png"
        string_val: "../data/Validation/Run_0001/images/frame_03996.png"
        string_val: "../data/Validation/Run_0001/images/frame_03401.png"
        string_val: "../data/Validation/Run_0001/images/frame_01587.png"
        string_val: "../data/Validation/Run_0001/images/frame_00581.png"
        string_val: "../data/Validation/Run_0001/images/frame_02305.png"
        string_val: "../data/Validation/Run_0001/images/frame_02145.png"
        string_val: "../data/Validation/Run_0001/images/frame_02510.png"
        string_val: "../data/Validation/Run_0001/images/frame_01156.png"
        string_val: "../data/Validation/Run_0001/images/frame_02251.png"
        string_val: "../data/Validation/Run_0001/images/frame_01035.png"
        string_val: "../data/Validation/Run_0001/images/frame_02927.png"
        string_val: "../data/Validation/Run_0001/images/frame_04143.png"
        string_val: "../data/Validation/Run_0001/images/frame_01030.png"
        string_val: "../data/Validation/Run_0001/images/frame_02314.png"
        string_val: "../data/Validation/Run_0001/images/frame_03300.png"
        string_val: "../data/Validation/Run_0001/images/frame_01725.png"
        string_val: "../data/Validation/Run_0001/images/frame_04837.png"
        string_val: "../data/Validation/Run_0001/images/frame_04657.png"
        string_val: "../data/Validation/Run_0001/images/frame_04501.png"
        string_val: "../data/Validation/Run_0001/images/frame_02769.png"
        string_val: "../data/Validation/Run_0001/images/frame_00421.png"
        string_val: "../data/Validation/Run_0001/images/frame_04195.png"
        string_val: "../data/Validation/Run_0001/images/frame_04777.png"
        string_val: "../data/Validation/Run_0001/images/frame_00633.png"
        string_val: "../data/Validation/Run_0001/images/frame_02281.png"
        string_val: "../data/Validation/Run_0001/images/frame_05042.png"
        string_val: "../data/Validation/Run_0001/images/frame_02817.png"
        string_val: "../data/Validation/Run_0001/images/frame_05091.png"
        string_val: "../data/Validation/Run_0001/images/frame_00991.png"
        string_val: "../data/Validation/Run_0001/images/frame_04971.png"
        string_val: "../data/Validation/Run_0001/images/frame_02431.png"
        string_val: "../data/Validation/Run_0001/images/frame_02404.png"
        string_val: "../data/Validation/Run_0001/images/frame_01498.png"
        string_val: "../data/Validation/Run_0001/images/frame_01898.png"
        string_val: "../data/Validation/Run_0001/images/frame_01774.png"
        string_val: "../data/Validation/Run_0001/images/frame_01223.png"
        string_val: "../data/Validation/Run_0001/images/frame_03385.png"
        string_val: "../data/Validation/Run_0001/images/frame_02716.png"
        string_val: "../data/Validation/Run_0001/images/frame_04394.png"
        string_val: "../data/Validation/Run_0001/images/frame_00418.png"
        string_val: "../data/Validation/Run_0001/images/frame_02354.png"
        string_val: "../data/Validation/Run_0001/images/frame_03916.png"
        string_val: "../data/Validation/Run_0001/images/frame_00652.png"
        string_val: "../data/Validation/Run_0001/images/frame_01178.png"
        string_val: "../data/Validation/Run_0001/images/frame_03966.png"
        string_val: "../data/Validation/Run_0001/images/frame_00757.png"
        string_val: "../data/Validation/Run_0001/images/frame_00189.png"
        string_val: "../data/Validation/Run_0001/images/frame_00328.png"
        string_val: "../data/Validation/Run_0001/images/frame_02397.png"
        string_val: "../data/Validation/Run_0001/images/frame_03372.png"
        string_val: "../data/Validation/Run_0001/images/frame_01719.png"
        string_val: "../data/Validation/Run_0001/images/frame_03613.png"
        string_val: "../data/Validation/Run_0001/images/frame_02852.png"
        string_val: "../data/Validation/Run_0001/images/frame_01754.png"
        string_val: "../data/Validation/Run_0001/images/frame_03542.png"
        string_val: "../data/Validation/Run_0001/images/frame_01240.png"
        string_val: "../data/Validation/Run_0001/images/frame_02821.png"
        string_val: "../data/Validation/Run_0001/images/frame_02185.png"
        string_val: "../data/Validation/Run_0001/images/frame_03490.png"
        string_val: "../data/Validation/Run_0001/images/frame_04834.png"
        string_val: "../data/Validation/Run_0001/images/frame_03693.png"
        string_val: "../data/Validation/Run_0001/images/frame_00070.png"
        string_val: "../data/Validation/Run_0001/images/frame_00100.png"
        string_val: "../data/Validation/Run_0001/images/frame_04722.png"
        string_val: "../data/Validation/Run_0001/images/frame_00354.png"
        string_val: "../data/Validation/Run_0001/images/frame_01879.png"
        string_val: "../data/Validation/Run_0001/images/frame_04619.png"
        string_val: "../data/Validation/Run_0001/images/frame_04101.png"
        string_val: "../data/Validation/Run_0001/images/frame_05018.png"
        string_val: "../data/Validation/Run_0001/images/frame_00128.png"
        string_val: "../data/Validation/Run_0001/images/frame_00667.png"
        string_val: "../data/Validation/Run_0001/images/frame_02508.png"
        string_val: "../data/Validation/Run_0001/images/frame_04768.png"
        string_val: "../data/Validation/Run_0001/images/frame_00892.png"
        string_val: "../data/Validation/Run_0001/images/frame_02070.png"
        string_val: "../data/Validation/Run_0001/images/frame_03924.png"
        string_val: "../data/Validation/Run_0001/images/frame_02895.png"
        string_val: "../data/Validation/Run_0001/images/frame_00171.png"
        string_val: "../data/Validation/Run_0001/images/frame_03652.png"
        string_val: "../data/Validation/Run_0001/images/frame_03979.png"
        string_val: "../data/Validation/Run_0001/images/frame_04455.png"
        string_val: "../data/Validation/Run_0001/images/frame_00403.png"
        string_val: "../data/Validation/Run_0001/images/frame_00159.png"
        string_val: "../data/Validation/Run_0001/images/frame_03109.png"
        string_val: "../data/Validation/Run_0001/images/frame_02374.png"
        string_val: "../data/Validation/Run_0001/images/frame_03005.png"
        string_val: "../data/Validation/Run_0001/images/frame_01092.png"
        string_val: "../data/Validation/Run_0001/images/frame_00676.png"
        string_val: "../data/Validation/Run_0001/images/frame_00568.png"
        string_val: "../data/Validation/Run_0001/images/frame_01937.png"
        string_val: "../data/Validation/Run_0001/images/frame_04555.png"
        string_val: "../data/Validation/Run_0001/images/frame_01150.png"
        string_val: "../data/Validation/Run_0001/images/frame_04017.png"
        string_val: "../data/Validation/Run_0001/images/frame_02169.png"
        string_val: "../data/Validation/Run_0001/images/frame_01063.png"
        string_val: "../data/Validation/Run_0001/images/frame_00491.png"
        string_val: "../data/Validation/Run_0001/images/frame_00556.png"
        string_val: "../data/Validation/Run_0001/images/frame_05088.png"
        string_val: "../data/Validation/Run_0001/images/frame_00728.png"
        string_val: "../data/Validation/Run_0001/images/frame_00585.png"
        string_val: "../data/Validation/Run_0001/images/frame_03904.png"
        string_val: "../data/Validation/Run_0001/images/frame_02467.png"
        string_val: "../data/Validation/Run_0001/images/frame_01133.png"
        string_val: "../data/Validation/Run_0001/images/frame_03674.png"
        string_val: "../data/Validation/Run_0001/images/frame_04408.png"
        string_val: "../data/Validation/Run_0001/images/frame_03837.png"
        string_val: "../data/Validation/Run_0001/images/frame_00848.png"
        string_val: "../data/Validation/Run_0001/images/frame_04117.png"
        string_val: "../data/Validation/Run_0001/images/frame_02527.png"
        string_val: "../data/Validation/Run_0001/images/frame_01403.png"
        string_val: "../data/Validation/Run_0001/images/frame_05022.png"
        string_val: "../data/Validation/Run_0001/images/frame_00092.png"
        string_val: "../data/Validation/Run_0001/images/frame_00013.png"
        string_val: "../data/Validation/Run_0001/images/frame_01670.png"
        string_val: "../data/Validation/Run_0001/images/frame_03791.png"
        string_val: "../data/Validation/Run_0001/images/frame_01952.png"
        string_val: "../data/Validation/Run_0001/images/frame_04625.png"
        string_val: "../data/Validation/Run_0001/images/frame_02841.png"
        string_val: "../data/Validation/Run_0001/images/frame_02828.png"
        string_val: "../data/Validation/Run_0001/images/frame_03485.png"
        string_val: "../data/Validation/Run_0001/images/frame_02917.png"
        string_val: "../data/Validation/Run_0001/images/frame_00405.png"
        string_val: "../data/Validation/Run_0001/images/frame_01652.png"
        string_val: "../data/Validation/Run_0001/images/frame_02098.png"
        string_val: "../data/Validation/Run_0001/images/frame_04469.png"
        string_val: "../data/Validation/Run_0001/images/frame_04985.png"
        string_val: "../data/Validation/Run_0001/images/frame_03560.png"
        string_val: "../data/Validation/Run_0001/images/frame_03829.png"
        string_val: "../data/Validation/Run_0001/images/frame_04537.png"
        string_val: "../data/Validation/Run_0001/images/frame_04108.png"
        string_val: "../data/Validation/Run_0001/images/frame_00297.png"
        string_val: "../data/Validation/Run_0001/images/frame_02890.png"
        string_val: "../data/Validation/Run_0001/images/frame_03304.png"
        string_val: "../data/Validation/Run_0001/images/frame_02522.png"
        string_val: "../data/Validation/Run_0001/images/frame_00378.png"
        string_val: "../data/Validation/Run_0001/images/frame_04793.png"
        string_val: "../data/Validation/Run_0001/images/frame_03102.png"
        string_val: "../data/Validation/Run_0001/images/frame_00612.png"
        string_val: "../data/Validation/Run_0001/images/frame_01143.png"
        string_val: "../data/Validation/Run_0001/images/frame_04630.png"
        string_val: "../data/Validation/Run_0001/images/frame_01528.png"
        string_val: "../data/Validation/Run_0001/images/frame_03143.png"
        string_val: "../data/Validation/Run_0001/images/frame_00670.png"
        string_val: "../data/Validation/Run_0001/images/frame_03099.png"
        string_val: "../data/Validation/Run_0001/images/frame_02887.png"
        string_val: "../data/Validation/Run_0001/images/frame_04681.png"
        string_val: "../data/Validation/Run_0001/images/frame_04458.png"
        string_val: "../data/Validation/Run_0001/images/frame_02976.png"
        string_val: "../data/Validation/Run_0001/images/frame_03383.png"
        string_val: "../data/Validation/Run_0001/images/frame_03977.png"
        string_val: "../data/Validation/Run_0001/images/frame_02381.png"
        string_val: "../data/Validation/Run_0001/images/frame_04461.png"
        string_val: "../data/Validation/Run_0001/images/frame_02697.png"
        string_val: "../data/Validation/Run_0001/images/frame_00033.png"
        string_val: "../data/Validation/Run_0001/images/frame_04024.png"
        string_val: "../data/Validation/Run_0001/images/frame_01475.png"
        string_val: "../data/Validation/Run_0001/images/frame_04211.png"
        string_val: "../data/Validation/Run_0001/images/frame_00038.png"
        string_val: "../data/Validation/Run_0001/images/frame_02950.png"
        string_val: "../data/Validation/Run_0001/images/frame_02393.png"
        string_val: "../data/Validation/Run_0001/images/frame_02453.png"
        string_val: "../data/Validation/Run_0001/images/frame_03874.png"
        string_val: "../data/Validation/Run_0001/images/frame_02505.png"
        string_val: "../data/Validation/Run_0001/images/frame_04833.png"
        string_val: "../data/Validation/Run_0001/images/frame_04132.png"
        string_val: "../data/Validation/Run_0001/images/frame_01071.png"
        string_val: "../data/Validation/Run_0001/images/frame_00739.png"
        string_val: "../data/Validation/Run_0001/images/frame_02695.png"
        string_val: "../data/Validation/Run_0001/images/frame_04259.png"
        string_val: "../data/Validation/Run_0001/images/frame_03805.png"
        string_val: "../data/Validation/Run_0001/images/frame_00859.png"
        string_val: "../data/Validation/Run_0001/images/frame_01067.png"
        string_val: "../data/Validation/Run_0001/images/frame_00356.png"
        string_val: "../data/Validation/Run_0001/images/frame_03830.png"
        string_val: "../data/Validation/Run_0001/images/frame_01825.png"
        string_val: "../data/Validation/Run_0001/images/frame_00234.png"
        string_val: "../data/Validation/Run_0001/images/frame_02842.png"
        string_val: "../data/Validation/Run_0001/images/frame_01288.png"
        string_val: "../data/Validation/Run_0001/images/frame_04880.png"
        string_val: "../data/Validation/Run_0001/images/frame_03557.png"
        string_val: "../data/Validation/Run_0001/images/frame_01243.png"
        string_val: "../data/Validation/Run_0001/images/frame_03487.png"
        string_val: "../data/Validation/Run_0001/images/frame_00205.png"
        string_val: "../data/Validation/Run_0001/images/frame_04733.png"
        string_val: "../data/Validation/Run_0001/images/frame_01588.png"
        string_val: "../data/Validation/Run_0001/images/frame_01505.png"
        string_val: "../data/Validation/Run_0001/images/frame_03686.png"
        string_val: "../data/Validation/Run_0001/images/frame_04530.png"
        string_val: "../data/Validation/Run_0001/images/frame_02162.png"
        string_val: "../data/Validation/Run_0001/images/frame_02459.png"
        string_val: "../data/Validation/Run_0001/images/frame_00770.png"
        string_val: "../data/Validation/Run_0001/images/frame_04924.png"
        string_val: "../data/Validation/Run_0001/images/frame_03089.png"
        string_val: "../data/Validation/Run_0001/images/frame_03992.png"
        string_val: "../data/Validation/Run_0001/images/frame_02225.png"
        string_val: "../data/Validation/Run_0001/images/frame_00777.png"
        string_val: "../data/Validation/Run_0001/images/frame_00179.png"
        string_val: "../data/Validation/Run_0001/images/frame_04795.png"
        string_val: "../data/Validation/Run_0001/images/frame_04352.png"
        string_val: "../data/Validation/Run_0001/images/frame_01272.png"
        string_val: "../data/Validation/Run_0001/images/frame_03020.png"
        string_val: "../data/Validation/Run_0001/images/frame_01541.png"
        string_val: "../data/Validation/Run_0001/images/frame_01109.png"
        string_val: "../data/Validation/Run_0001/images/frame_02853.png"
        string_val: "../data/Validation/Run_0001/images/frame_04945.png"
        string_val: "../data/Validation/Run_0001/images/frame_01387.png"
        string_val: "../data/Validation/Run_0001/images/frame_03816.png"
        string_val: "../data/Validation/Run_0001/images/frame_03548.png"
        string_val: "../data/Validation/Run_0001/images/frame_01384.png"
        string_val: "../data/Validation/Run_0001/images/frame_01503.png"
        string_val: "../data/Validation/Run_0001/images/frame_03456.png"
        string_val: "../data/Validation/Run_0001/images/frame_04330.png"
        string_val: "../data/Validation/Run_0001/images/frame_02519.png"
        string_val: "../data/Validation/Run_0001/images/frame_04103.png"
        string_val: "../data/Validation/Run_0001/images/frame_00542.png"
        string_val: "../data/Validation/Run_0001/images/frame_01153.png"
        string_val: "../data/Validation/Run_0001/images/frame_03074.png"
        string_val: "../data/Validation/Run_0001/images/frame_01775.png"
        string_val: "../data/Validation/Run_0001/images/frame_04171.png"
        string_val: "../data/Validation/Run_0001/images/frame_00466.png"
        string_val: "../data/Validation/Run_0001/images/frame_03196.png"
        string_val: "../data/Validation/Run_0001/images/frame_02501.png"
        string_val: "../data/Validation/Run_0001/images/frame_03365.png"
        string_val: "../data/Validation/Run_0001/images/frame_04428.png"
        string_val: "../data/Validation/Run_0001/images/frame_01029.png"
        string_val: "../data/Validation/Run_0001/images/frame_04609.png"
        string_val: "../data/Validation/Run_0001/images/frame_01187.png"
        string_val: "../data/Validation/Run_0001/images/frame_01923.png"
        string_val: "../data/Validation/Run_0001/images/frame_02951.png"
        string_val: "../data/Validation/Run_0001/images/frame_01007.png"
        string_val: "../data/Validation/Run_0001/images/frame_00751.png"
        string_val: "../data/Validation/Run_0001/images/frame_02588.png"
        string_val: "../data/Validation/Run_0001/images/frame_01580.png"
        string_val: "../data/Validation/Run_0001/images/frame_04938.png"
        string_val: "../data/Validation/Run_0001/images/frame_03761.png"
        string_val: "../data/Validation/Run_0001/images/frame_00399.png"
        string_val: "../data/Validation/Run_0001/images/frame_01702.png"
        string_val: "../data/Validation/Run_0001/images/frame_03350.png"
        string_val: "../data/Validation/Run_0001/images/frame_00929.png"
        string_val: "../data/Validation/Run_0001/images/frame_01694.png"
        string_val: "../data/Validation/Run_0001/images/frame_01756.png"
        string_val: "../data/Validation/Run_0001/images/frame_00119.png"
        string_val: "../data/Validation/Run_0001/images/frame_03706.png"
        string_val: "../data/Validation/Run_0001/images/frame_01128.png"
        string_val: "../data/Validation/Run_0001/images/frame_04541.png"
        string_val: "../data/Validation/Run_0001/images/frame_03859.png"
        string_val: "../data/Validation/Run_0001/images/frame_03593.png"
        string_val: "../data/Validation/Run_0001/images/frame_03631.png"
        string_val: "../data/Validation/Run_0001/images/frame_02826.png"
        string_val: "../data/Validation/Run_0001/images/frame_01773.png"
        string_val: "../data/Validation/Run_0001/images/frame_01039.png"
        string_val: "../data/Validation/Run_0001/images/frame_01102.png"
        string_val: "../data/Validation/Run_0001/images/frame_00323.png"
        string_val: "../data/Validation/Run_0001/images/frame_03529.png"
        string_val: "../data/Validation/Run_0001/images/frame_04193.png"
        string_val: "../data/Validation/Run_0001/images/frame_03852.png"
        string_val: "../data/Validation/Run_0001/images/frame_04309.png"
        string_val: "../data/Validation/Run_0001/images/frame_04679.png"
        string_val: "../data/Validation/Run_0001/images/frame_04207.png"
        string_val: "../data/Validation/Run_0001/images/frame_04014.png"
        string_val: "../data/Validation/Run_0001/images/frame_02689.png"
        string_val: "../data/Validation/Run_0001/images/frame_00210.png"
        string_val: "../data/Validation/Run_0001/images/frame_00831.png"
        string_val: "../data/Validation/Run_0001/images/frame_04275.png"
        string_val: "../data/Validation/Run_0001/images/frame_01003.png"
        string_val: "../data/Validation/Run_0001/images/frame_03762.png"
        string_val: "../data/Validation/Run_0001/images/frame_00698.png"
        string_val: "../data/Validation/Run_0001/images/frame_02960.png"
        string_val: "../data/Validation/Run_0001/images/frame_00994.png"
        string_val: "../data/Validation/Run_0001/images/frame_03394.png"
        string_val: "../data/Validation/Run_0001/images/frame_00177.png"
        string_val: "../data/Validation/Run_0001/images/frame_03684.png"
        string_val: "../data/Validation/Run_0001/images/frame_00266.png"
        string_val: "../data/Validation/Run_0001/images/frame_01162.png"
        string_val: "../data/Validation/Run_0001/images/frame_05086.png"
        string_val: "../data/Validation/Run_0001/images/frame_04959.png"
        string_val: "../data/Validation/Run_0001/images/frame_04047.png"
        string_val: "../data/Validation/Run_0001/images/frame_03654.png"
        string_val: "../data/Validation/Run_0001/images/frame_02678.png"
        string_val: "../data/Validation/Run_0001/images/frame_02706.png"
        string_val: "../data/Validation/Run_0001/images/frame_02187.png"
        string_val: "../data/Validation/Run_0001/images/frame_01144.png"
        string_val: "../data/Validation/Run_0001/images/frame_02997.png"
        string_val: "../data/Validation/Run_0001/images/frame_00163.png"
        string_val: "../data/Validation/Run_0001/images/frame_00064.png"
        string_val: "../data/Validation/Run_0001/images/frame_02517.png"
        string_val: "../data/Validation/Run_0001/images/frame_02313.png"
        string_val: "../data/Validation/Run_0001/images/frame_01730.png"
        string_val: "../data/Validation/Run_0001/images/frame_04412.png"
        string_val: "../data/Validation/Run_0001/images/frame_04223.png"
        string_val: "../data/Validation/Run_0001/images/frame_01841.png"
        string_val: "../data/Validation/Run_0001/images/frame_00191.png"
        string_val: "../data/Validation/Run_0001/images/frame_04960.png"
        string_val: "../data/Validation/Run_0001/images/frame_04560.png"
        string_val: "../data/Validation/Run_0001/images/frame_02789.png"
        string_val: "../data/Validation/Run_0001/images/frame_01276.png"
        string_val: "../data/Validation/Run_0001/images/frame_04372.png"
        string_val: "../data/Validation/Run_0001/images/frame_04203.png"
        string_val: "../data/Validation/Run_0001/images/frame_03771.png"
        string_val: "../data/Validation/Run_0001/images/frame_03817.png"
        string_val: "../data/Validation/Run_0001/images/frame_04465.png"
        string_val: "../data/Validation/Run_0001/images/frame_01461.png"
        string_val: "../data/Validation/Run_0001/images/frame_02840.png"
        string_val: "../data/Validation/Run_0001/images/frame_00218.png"
        string_val: "../data/Validation/Run_0001/images/frame_03973.png"
        string_val: "../data/Validation/Run_0001/images/frame_02882.png"
        string_val: "../data/Validation/Run_0001/images/frame_00188.png"
        string_val: "../data/Validation/Run_0001/images/frame_05008.png"
        string_val: "../data/Validation/Run_0001/images/frame_01798.png"
        string_val: "../data/Validation/Run_0001/images/frame_04878.png"
        string_val: "../data/Validation/Run_0001/images/frame_01338.png"
        string_val: "../data/Validation/Run_0001/images/frame_00677.png"
        string_val: "../data/Validation/Run_0001/images/frame_02275.png"
        string_val: "../data/Validation/Run_0001/images/frame_03986.png"
        string_val: "../data/Validation/Run_0001/images/frame_03987.png"
        string_val: "../data/Validation/Run_0001/images/frame_02342.png"
        string_val: "../data/Validation/Run_0001/images/frame_00246.png"
        string_val: "../data/Validation/Run_0001/images/frame_01305.png"
        string_val: "../data/Validation/Run_0001/images/frame_04742.png"
        string_val: "../data/Validation/Run_0001/images/frame_04844.png"
        string_val: "../data/Validation/Run_0001/images/frame_04713.png"
        string_val: "../data/Validation/Run_0001/images/frame_04000.png"
        string_val: "../data/Validation/Run_0001/images/frame_00913.png"
        string_val: "../data/Validation/Run_0001/images/frame_04912.png"
        string_val: "../data/Validation/Run_0001/images/frame_00906.png"
        string_val: "../data/Validation/Run_0001/images/frame_01094.png"
        string_val: "../data/Validation/Run_0001/images/frame_00708.png"
        string_val: "../data/Validation/Run_0001/images/frame_04747.png"
        string_val: "../data/Validation/Run_0001/images/frame_00139.png"
        string_val: "../data/Validation/Run_0001/images/frame_02626.png"
        string_val: "../data/Validation/Run_0001/images/frame_01312.png"
        string_val: "../data/Validation/Run_0001/images/frame_01458.png"
        string_val: "../data/Validation/Run_0001/images/frame_04350.png"
        string_val: "../data/Validation/Run_0001/images/frame_00088.png"
        string_val: "../data/Validation/Run_0001/images/frame_02782.png"
        string_val: "../data/Validation/Run_0001/images/frame_03137.png"
        string_val: "../data/Validation/Run_0001/images/frame_04754.png"
        string_val: "../data/Validation/Run_0001/images/frame_02009.png"
        string_val: "../data/Validation/Run_0001/images/frame_01267.png"
        string_val: "../data/Validation/Run_0001/images/frame_03430.png"
        string_val: "../data/Validation/Run_0001/images/frame_01219.png"
        string_val: "../data/Validation/Run_0001/images/frame_03849.png"
        string_val: "../data/Validation/Run_0001/images/frame_01986.png"
        string_val: "../data/Validation/Run_0001/images/frame_04222.png"
        string_val: "../data/Validation/Run_0001/images/frame_00314.png"
        string_val: "../data/Validation/Run_0001/images/frame_03763.png"
        string_val: "../data/Validation/Run_0001/images/frame_04980.png"
        string_val: "../data/Validation/Run_0001/images/frame_03338.png"
        string_val: "../data/Validation/Run_0001/images/frame_01493.png"
        string_val: "../data/Validation/Run_0001/images/frame_03063.png"
        string_val: "../data/Validation/Run_0001/images/frame_02705.png"
        string_val: "../data/Validation/Run_0001/images/frame_00922.png"
        string_val: "../data/Validation/Run_0001/images/frame_01126.png"
        string_val: "../data/Validation/Run_0001/images/frame_01246.png"
        string_val: "../data/Validation/Run_0001/images/frame_03022.png"
        string_val: "../data/Validation/Run_0001/images/frame_00660.png"
        string_val: "../data/Validation/Run_0001/images/frame_03664.png"
        string_val: "../data/Validation/Run_0001/images/frame_00881.png"
        string_val: "../data/Validation/Run_0001/images/frame_02076.png"
        string_val: "../data/Validation/Run_0001/images/frame_01395.png"
        string_val: "../data/Validation/Run_0001/images/frame_03662.png"
        string_val: "../data/Validation/Run_0001/images/frame_02108.png"
        string_val: "../data/Validation/Run_0001/images/frame_03213.png"
        string_val: "../data/Validation/Run_0001/images/frame_00365.png"
        string_val: "../data/Validation/Run_0001/images/frame_03884.png"
        string_val: "../data/Validation/Run_0001/images/frame_01251.png"
        string_val: "../data/Validation/Run_0001/images/frame_04941.png"
        string_val: "../data/Validation/Run_0001/images/frame_03058.png"
        string_val: "../data/Validation/Run_0001/images/frame_04431.png"
        string_val: "../data/Validation/Run_0001/images/frame_01491.png"
        string_val: "../data/Validation/Run_0001/images/frame_00429.png"
        string_val: "../data/Validation/Run_0001/images/frame_04850.png"
        string_val: "../data/Validation/Run_0001/images/frame_04096.png"
        string_val: "../data/Validation/Run_0001/images/frame_01295.png"
        string_val: "../data/Validation/Run_0001/images/frame_03671.png"
        string_val: "../data/Validation/Run_0001/images/frame_00461.png"
        string_val: "../data/Validation/Run_0001/images/frame_03387.png"
        string_val: "../data/Validation/Run_0001/images/frame_02034.png"
        string_val: "../data/Validation/Run_0001/images/frame_02276.png"
        string_val: "../data/Validation/Run_0001/images/frame_02441.png"
        string_val: "../data/Validation/Run_0001/images/frame_02892.png"
        string_val: "../data/Validation/Run_0001/images/frame_04119.png"
        string_val: "../data/Validation/Run_0001/images/frame_03694.png"
        string_val: "../data/Validation/Run_0001/images/frame_02032.png"
        string_val: "../data/Validation/Run_0001/images/frame_01220.png"
        string_val: "../data/Validation/Run_0001/images/frame_05054.png"
        string_val: "../data/Validation/Run_0001/images/frame_04362.png"
        string_val: "../data/Validation/Run_0001/images/frame_03640.png"
        string_val: "../data/Validation/Run_0001/images/frame_00604.png"
        string_val: "../data/Validation/Run_0001/images/frame_00544.png"
        string_val: "../data/Validation/Run_0001/images/frame_02429.png"
        string_val: "../data/Validation/Run_0001/images/frame_03545.png"
        string_val: "../data/Validation/Run_0001/images/frame_03197.png"
        string_val: "../data/Validation/Run_0001/images/frame_00513.png"
        string_val: "../data/Validation/Run_0001/images/frame_00798.png"
        string_val: "../data/Validation/Run_0001/images/frame_01334.png"
        string_val: "../data/Validation/Run_0001/images/frame_00150.png"
        string_val: "../data/Validation/Run_0001/images/frame_04340.png"
        string_val: "../data/Validation/Run_0001/images/frame_01465.png"
        string_val: "../data/Validation/Run_0001/images/frame_05017.png"
        string_val: "../data/Validation/Run_0001/images/frame_04511.png"
        string_val: "../data/Validation/Run_0001/images/frame_02445.png"
        string_val: "../data/Validation/Run_0001/images/frame_01388.png"
        string_val: "../data/Validation/Run_0001/images/frame_04884.png"
        string_val: "../data/Validation/Run_0001/images/frame_02058.png"
        string_val: "../data/Validation/Run_0001/images/frame_04131.png"
        string_val: "../data/Validation/Run_0001/images/frame_01396.png"
        string_val: "../data/Validation/Run_0001/images/frame_00018.png"
        string_val: "../data/Validation/Run_0001/images/frame_00700.png"
        string_val: "../data/Validation/Run_0001/images/frame_01673.png"
        string_val: "../data/Validation/Run_0001/images/frame_00942.png"
        string_val: "../data/Validation/Run_0001/images/frame_02751.png"
        string_val: "../data/Validation/Run_0001/images/frame_04646.png"
        string_val: "../data/Validation/Run_0001/images/frame_03118.png"
        string_val: "../data/Validation/Run_0001/images/frame_02816.png"
        string_val: "../data/Validation/Run_0001/images/frame_02526.png"
        string_val: "../data/Validation/Run_0001/images/frame_04788.png"
        string_val: "../data/Validation/Run_0001/images/frame_03842.png"
        string_val: "../data/Validation/Run_0001/images/frame_04519.png"
        string_val: "../data/Validation/Run_0001/images/frame_04871.png"
        string_val: "../data/Validation/Run_0001/images/frame_00894.png"
        string_val: "../data/Validation/Run_0001/images/frame_03752.png"
        string_val: "../data/Validation/Run_0001/images/frame_04169.png"
        string_val: "../data/Validation/Run_0001/images/frame_01943.png"
        string_val: "../data/Validation/Run_0001/images/frame_01724.png"
        string_val: "../data/Validation/Run_0001/images/frame_00872.png"
        string_val: "../data/Validation/Run_0001/images/frame_03507.png"
        string_val: "../data/Validation/Run_0001/images/frame_03863.png"
        string_val: "../data/Validation/Run_0001/images/frame_01534.png"
        string_val: "../data/Validation/Run_0001/images/frame_00555.png"
        string_val: "../data/Validation/Run_0001/images/frame_02411.png"
        string_val: "../data/Validation/Run_0001/images/frame_04057.png"
        string_val: "../data/Validation/Run_0001/images/frame_01955.png"
        string_val: "../data/Validation/Run_0001/images/frame_01043.png"
        string_val: "../data/Validation/Run_0001/images/frame_03821.png"
        string_val: "../data/Validation/Run_0001/images/frame_03085.png"
        string_val: "../data/Validation/Run_0001/images/frame_01659.png"
        string_val: "../data/Validation/Run_0001/images/frame_03207.png"
        string_val: "../data/Validation/Run_0001/images/frame_01454.png"
        string_val: "../data/Validation/Run_0001/images/frame_02048.png"
        string_val: "../data/Validation/Run_0001/images/frame_04581.png"
        string_val: "../data/Validation/Run_0001/images/frame_03726.png"
        string_val: "../data/Validation/Run_0001/images/frame_01398.png"
        string_val: "../data/Validation/Run_0001/images/frame_04568.png"
        string_val: "../data/Validation/Run_0001/images/frame_02934.png"
        string_val: "../data/Validation/Run_0001/images/frame_02915.png"
        string_val: "../data/Validation/Run_0001/images/frame_00184.png"
        string_val: "../data/Validation/Run_0001/images/frame_04817.png"
        string_val: "../data/Validation/Run_0001/images/frame_03121.png"
        string_val: "../data/Validation/Run_0001/images/frame_01891.png"
        string_val: "../data/Validation/Run_0001/images/frame_00540.png"
        string_val: "../data/Validation/Run_0001/images/frame_02020.png"
        string_val: "../data/Validation/Run_0001/images/frame_03017.png"
        string_val: "../data/Validation/Run_0001/images/frame_03804.png"
        string_val: "../data/Validation/Run_0001/images/frame_03190.png"
        string_val: "../data/Validation/Run_0001/images/frame_03853.png"
        string_val: "../data/Validation/Run_0001/images/frame_04310.png"
        string_val: "../data/Validation/Run_0001/images/frame_04589.png"
        string_val: "../data/Validation/Run_0001/images/frame_02497.png"
        string_val: "../data/Validation/Run_0001/images/frame_00952.png"
        string_val: "../data/Validation/Run_0001/images/frame_03023.png"
        string_val: "../data/Validation/Run_0001/images/frame_04633.png"
        string_val: "../data/Validation/Run_0001/images/frame_02474.png"
        string_val: "../data/Validation/Run_0001/images/frame_02136.png"
        string_val: "../data/Validation/Run_0001/images/frame_01136.png"
        string_val: "../data/Validation/Run_0001/images/frame_03148.png"
        string_val: "../data/Validation/Run_0001/images/frame_04849.png"
        string_val: "../data/Validation/Run_0001/images/frame_03461.png"
        string_val: "../data/Validation/Run_0001/images/frame_01744.png"
        string_val: "../data/Validation/Run_0001/images/frame_02062.png"
        string_val: "../data/Validation/Run_0001/images/frame_00372.png"
        string_val: "../data/Validation/Run_0001/images/frame_04198.png"
        string_val: "../data/Validation/Run_0001/images/frame_00358.png"
        string_val: "../data/Validation/Run_0001/images/frame_02967.png"
        string_val: "../data/Validation/Run_0001/images/frame_04477.png"
        string_val: "../data/Validation/Run_0001/images/frame_02685.png"
        string_val: "../data/Validation/Run_0001/images/frame_03057.png"
        string_val: "../data/Validation/Run_0001/images/frame_01575.png"
        string_val: "../data/Validation/Run_0001/images/frame_01256.png"
        string_val: "../data/Validation/Run_0001/images/frame_01603.png"
        string_val: "../data/Validation/Run_0001/images/frame_00953.png"
        string_val: "../data/Validation/Run_0001/images/frame_04084.png"
        string_val: "../data/Validation/Run_0001/images/frame_02582.png"
        string_val: "../data/Validation/Run_0001/images/frame_01619.png"
        string_val: "../data/Validation/Run_0001/images/frame_02636.png"
        string_val: "../data/Validation/Run_0001/images/frame_02141.png"
        string_val: "../data/Validation/Run_0001/images/frame_02503.png"
        string_val: "../data/Validation/Run_0001/images/frame_01173.png"
        string_val: "../data/Validation/Run_0001/images/frame_00037.png"
        string_val: "../data/Validation/Run_0001/images/frame_01995.png"
        string_val: "../data/Validation/Run_0001/images/frame_03878.png"
        string_val: "../data/Validation/Run_0001/images/frame_02309.png"
        string_val: "../data/Validation/Run_0001/images/frame_04069.png"
        string_val: "../data/Validation/Run_0001/images/frame_04098.png"
        string_val: "../data/Validation/Run_0001/images/frame_00617.png"
        string_val: "../data/Validation/Run_0001/images/frame_02202.png"
        string_val: "../data/Validation/Run_0001/images/frame_04573.png"
        string_val: "../data/Validation/Run_0001/images/frame_01623.png"
        string_val: "../data/Validation/Run_0001/images/frame_04105.png"
        string_val: "../data/Validation/Run_0001/images/frame_02956.png"
        string_val: "../data/Validation/Run_0001/images/frame_00201.png"
        string_val: "../data/Validation/Run_0001/images/frame_04130.png"
        string_val: "../data/Validation/Run_0001/images/frame_01253.png"
        string_val: "../data/Validation/Run_0001/images/frame_04270.png"
        string_val: "../data/Validation/Run_0001/images/frame_02986.png"
        string_val: "../data/Validation/Run_0001/images/frame_03715.png"
        string_val: "../data/Validation/Run_0001/images/frame_04828.png"
        string_val: "../data/Validation/Run_0001/images/frame_02808.png"
        string_val: "../data/Validation/Run_0001/images/frame_00111.png"
        string_val: "../data/Validation/Run_0001/images/frame_04940.png"
        string_val: "../data/Validation/Run_0001/images/frame_02368.png"
        string_val: "../data/Validation/Run_0001/images/frame_00509.png"
        string_val: "../data/Validation/Run_0001/images/frame_02902.png"
        string_val: "../data/Validation/Run_0001/images/frame_03692.png"
        string_val: "../data/Validation/Run_0001/images/frame_00501.png"
        string_val: "../data/Validation/Run_0001/images/frame_02229.png"
        string_val: "../data/Validation/Run_0001/images/frame_00638.png"
        string_val: "../data/Validation/Run_0001/images/frame_04813.png"
        string_val: "../data/Validation/Run_0001/images/frame_04629.png"
        string_val: "../data/Validation/Run_0001/images/frame_03600.png"
        string_val: "../data/Validation/Run_0001/images/frame_02779.png"
        string_val: "../data/Validation/Run_0001/images/frame_01877.png"
        string_val: "../data/Validation/Run_0001/images/frame_03019.png"
        string_val: "../data/Validation/Run_0001/images/frame_00313.png"
        string_val: "../data/Validation/Run_0001/images/frame_01738.png"
        string_val: "../data/Validation/Run_0001/images/frame_01265.png"
        string_val: "../data/Validation/Run_0001/images/frame_01684.png"
        string_val: "../data/Validation/Run_0001/images/frame_00602.png"
        string_val: "../data/Validation/Run_0001/images/frame_02120.png"
        string_val: "../data/Validation/Run_0001/images/frame_04706.png"
        string_val: "../data/Validation/Run_0001/images/frame_02680.png"
        string_val: "../data/Validation/Run_0001/images/frame_00251.png"
        string_val: "../data/Validation/Run_0001/images/frame_00679.png"
        string_val: "../data/Validation/Run_0001/images/frame_04178.png"
        string_val: "../data/Validation/Run_0001/images/frame_03826.png"
        string_val: "../data/Validation/Run_0001/images/frame_00671.png"
        string_val: "../data/Validation/Run_0001/images/frame_03658.png"
        string_val: "../data/Validation/Run_0001/images/frame_03293.png"
        string_val: "../data/Validation/Run_0001/images/frame_01599.png"
        string_val: "../data/Validation/Run_0001/images/frame_04430.png"
        string_val: "../data/Validation/Run_0001/images/frame_03889.png"
        string_val: "../data/Validation/Run_0001/images/frame_00898.png"
        string_val: "../data/Validation/Run_0001/images/frame_03687.png"
        string_val: "../data/Validation/Run_0001/images/frame_02010.png"
        string_val: "../data/Validation/Run_0001/images/frame_03770.png"
        string_val: "../data/Validation/Run_0001/images/frame_00129.png"
        string_val: "../data/Validation/Run_0001/images/frame_02007.png"
        string_val: "../data/Validation/Run_0001/images/frame_02437.png"
        string_val: "../data/Validation/Run_0001/images/frame_04059.png"
        string_val: "../data/Validation/Run_0001/images/frame_03531.png"
        string_val: "../data/Validation/Run_0001/images/frame_04701.png"
        string_val: "../data/Validation/Run_0001/images/frame_03151.png"
        string_val: "../data/Validation/Run_0001/images/frame_02972.png"
        string_val: "../data/Validation/Run_0001/images/frame_04278.png"
        string_val: "../data/Validation/Run_0001/images/frame_03564.png"
        string_val: "../data/Validation/Run_0001/images/frame_01849.png"
        string_val: "../data/Validation/Run_0001/images/frame_01472.png"
        string_val: "../data/Validation/Run_0001/images/frame_01934.png"
        string_val: "../data/Validation/Run_0001/images/frame_04386.png"
        string_val: "../data/Validation/Run_0001/images/frame_00674.png"
        string_val: "../data/Validation/Run_0001/images/frame_02653.png"
        string_val: "../data/Validation/Run_0001/images/frame_04528.png"
        string_val: "../data/Validation/Run_0001/images/frame_04739.png"
        string_val: "../data/Validation/Run_0001/images/frame_02813.png"
        string_val: "../data/Validation/Run_0001/images/frame_03046.png"
        string_val: "../data/Validation/Run_0001/images/frame_01354.png"
        string_val: "../data/Validation/Run_0001/images/frame_03455.png"
        string_val: "../data/Validation/Run_0001/images/frame_01576.png"
        string_val: "../data/Validation/Run_0001/images/frame_04149.png"
        string_val: "../data/Validation/Run_0001/images/frame_03167.png"
        string_val: "../data/Validation/Run_0001/images/frame_04606.png"
        string_val: "../data/Validation/Run_0001/images/frame_01444.png"
        string_val: "../data/Validation/Run_0001/images/frame_04323.png"
        string_val: "../data/Validation/Run_0001/images/frame_01209.png"
        string_val: "../data/Validation/Run_0001/images/frame_04962.png"
        string_val: "../data/Validation/Run_0001/images/frame_02213.png"
        string_val: "../data/Validation/Run_0001/images/frame_04224.png"
        string_val: "../data/Validation/Run_0001/images/frame_01690.png"
        string_val: "../data/Validation/Run_0001/images/frame_02056.png"
        string_val: "../data/Validation/Run_0001/images/frame_02250.png"
        string_val: "../data/Validation/Run_0001/images/frame_01591.png"
        string_val: "../data/Validation/Run_0001/images/frame_03511.png"
        string_val: "../data/Validation/Run_0001/images/frame_00247.png"
        string_val: "../data/Validation/Run_0001/images/frame_04910.png"
        string_val: "../data/Validation/Run_0001/images/frame_03959.png"
        string_val: "../data/Validation/Run_0001/images/frame_03306.png"
        string_val: "../data/Validation/Run_0001/images/frame_01216.png"
        string_val: "../data/Validation/Run_0001/images/frame_00175.png"
        string_val: "../data/Validation/Run_0001/images/frame_02548.png"
        string_val: "../data/Validation/Run_0001/images/frame_03719.png"
        string_val: "../data/Validation/Run_0001/images/frame_02514.png"
        string_val: "../data/Validation/Run_0001/images/frame_03194.png"
        string_val: "../data/Validation/Run_0001/images/frame_04319.png"
        string_val: "../data/Validation/Run_0001/images/frame_05058.png"
        string_val: "../data/Validation/Run_0001/images/frame_04150.png"
        string_val: "../data/Validation/Run_0001/images/frame_00981.png"
        string_val: "../data/Validation/Run_0001/images/frame_03606.png"
        string_val: "../data/Validation/Run_0001/images/frame_01046.png"
        string_val: "../data/Validation/Run_0001/images/frame_04445.png"
        string_val: "../data/Validation/Run_0001/images/frame_00706.png"
        string_val: "../data/Validation/Run_0001/images/frame_03414.png"
        string_val: "../data/Validation/Run_0001/images/frame_01639.png"
        string_val: "../data/Validation/Run_0001/images/frame_01792.png"
        string_val: "../data/Validation/Run_0001/images/frame_02628.png"
        string_val: "../data/Validation/Run_0001/images/frame_01161.png"
        string_val: "../data/Validation/Run_0001/images/frame_00360.png"
        string_val: "../data/Validation/Run_0001/images/frame_00147.png"
        string_val: "../data/Validation/Run_0001/images/frame_02525.png"
        string_val: "../data/Validation/Run_0001/images/frame_04387.png"
        string_val: "../data/Validation/Run_0001/images/frame_01778.png"
        string_val: "../data/Validation/Run_0001/images/frame_02999.png"
        string_val: "../data/Validation/Run_0001/images/frame_00026.png"
        string_val: "../data/Validation/Run_0001/images/frame_04123.png"
        string_val: "../data/Validation/Run_0001/images/frame_04235.png"
        string_val: "../data/Validation/Run_0001/images/frame_02401.png"
        string_val: "../data/Validation/Run_0001/images/frame_00448.png"
        string_val: "../data/Validation/Run_0001/images/frame_00758.png"
        string_val: "../data/Validation/Run_0001/images/frame_02356.png"
        string_val: "../data/Validation/Run_0001/images/frame_00718.png"
        string_val: "../data/Validation/Run_0001/images/frame_01697.png"
        string_val: "../data/Validation/Run_0001/images/frame_01057.png"
        string_val: "../data/Validation/Run_0001/images/frame_04338.png"
        string_val: "../data/Validation/Run_0001/images/frame_03635.png"
        string_val: "../data/Validation/Run_0001/images/frame_02096.png"
        string_val: "../data/Validation/Run_0001/images/frame_03573.png"
        string_val: "../data/Validation/Run_0001/images/frame_04998.png"
        string_val: "../data/Validation/Run_0001/images/frame_00108.png"
        string_val: "../data/Validation/Run_0001/images/frame_04021.png"
        string_val: "../data/Validation/Run_0001/images/frame_01800.png"
        string_val: "../data/Validation/Run_0001/images/frame_04682.png"
        string_val: "../data/Validation/Run_0001/images/frame_02386.png"
        string_val: "../data/Validation/Run_0001/images/frame_00176.png"
        string_val: "../data/Validation/Run_0001/images/frame_00239.png"
        string_val: "../data/Validation/Run_0001/images/frame_02686.png"
        string_val: "../data/Validation/Run_0001/images/frame_04129.png"
        string_val: "../data/Validation/Run_0001/images/frame_02910.png"
        string_val: "../data/Validation/Run_0001/images/frame_02242.png"
        string_val: "../data/Validation/Run_0001/images/frame_04213.png"
        string_val: "../data/Validation/Run_0001/images/frame_04343.png"
        string_val: "../data/Validation/Run_0001/images/frame_05038.png"
        string_val: "../data/Validation/Run_0001/images/frame_02904.png"
        string_val: "../data/Validation/Run_0001/images/frame_04766.png"
        string_val: "../data/Validation/Run_0001/images/frame_02240.png"
        string_val: "../data/Validation/Run_0001/images/frame_04981.png"
        string_val: "../data/Validation/Run_0001/images/frame_01817.png"
        string_val: "../data/Validation/Run_0001/images/frame_04392.png"
        string_val: "../data/Validation/Run_0001/images/frame_00899.png"
        string_val: "../data/Validation/Run_0001/images/frame_02684.png"
        string_val: "../data/Validation/Run_0001/images/frame_02031.png"
        string_val: "../data/Validation/Run_0001/images/frame_00258.png"
        string_val: "../data/Validation/Run_0001/images/frame_04128.png"
        string_val: "../data/Validation/Run_0001/images/frame_00853.png"
        string_val: "../data/Validation/Run_0001/images/frame_02909.png"
        string_val: "../data/Validation/Run_0001/images/frame_01055.png"
        string_val: "../data/Validation/Run_0001/images/frame_04201.png"
        string_val: "../data/Validation/Run_0001/images/frame_04196.png"
        string_val: "../data/Validation/Run_0001/images/frame_04247.png"
        string_val: "../data/Validation/Run_0001/images/frame_04183.png"
        string_val: "../data/Validation/Run_0001/images/frame_03369.png"
        string_val: "../data/Validation/Run_0001/images/frame_04526.png"
        string_val: "../data/Validation/Run_0001/images/frame_01838.png"
        string_val: "../data/Validation/Run_0001/images/frame_04524.png"
        string_val: "../data/Validation/Run_0001/images/frame_01836.png"
        string_val: "../data/Validation/Run_0001/images/frame_01263.png"
        string_val: "../data/Validation/Run_0001/images/frame_01696.png"
        string_val: "../data/Validation/Run_0001/images/frame_04948.png"
        string_val: "../data/Validation/Run_0001/images/frame_02743.png"
        string_val: "../data/Validation/Run_0001/images/frame_02948.png"
        string_val: "../data/Validation/Run_0001/images/frame_04814.png"
        string_val: "../data/Validation/Run_0001/images/frame_02018.png"
        string_val: "../data/Validation/Run_0001/images/frame_04144.png"
        string_val: "../data/Validation/Run_0001/images/frame_04281.png"
        string_val: "../data/Validation/Run_0001/images/frame_00101.png"
        string_val: "../data/Validation/Run_0001/images/frame_03131.png"
        string_val: "../data/Validation/Run_0001/images/frame_04986.png"
        string_val: "../data/Validation/Run_0001/images/frame_00305.png"
        string_val: "../data/Validation/Run_0001/images/frame_01611.png"
        string_val: "../data/Validation/Run_0001/images/frame_04765.png"
        string_val: "../data/Validation/Run_0001/images/frame_01912.png"
        string_val: "../data/Validation/Run_0001/images/frame_03738.png"
        string_val: "../data/Validation/Run_0001/images/frame_02866.png"
        string_val: "../data/Validation/Run_0001/images/frame_00287.png"
        string_val: "../data/Validation/Run_0001/images/frame_02491.png"
        string_val: "../data/Validation/Run_0001/images/frame_00379.png"
        string_val: "../data/Validation/Run_0001/images/frame_00230.png"
        string_val: "../data/Validation/Run_0001/images/frame_02809.png"
        string_val: "../data/Validation/Run_0001/images/frame_02896.png"
        string_val: "../data/Validation/Run_0001/images/frame_02911.png"
        string_val: "../data/Validation/Run_0001/images/frame_00406.png"
        string_val: "../data/Validation/Run_0001/images/frame_01950.png"
        string_val: "../data/Validation/Run_0001/images/frame_04785.png"
        string_val: "../data/Validation/Run_0001/images/frame_04898.png"
        string_val: "../data/Validation/Run_0001/images/frame_01001.png"
        string_val: "../data/Validation/Run_0001/images/frame_03708.png"
        string_val: "../data/Validation/Run_0001/images/frame_02963.png"
        string_val: "../data/Validation/Run_0001/images/frame_02979.png"
        string_val: "../data/Validation/Run_0001/images/frame_01858.png"
        string_val: "../data/Validation/Run_0001/images/frame_04092.png"
        string_val: "../data/Validation/Run_0001/images/frame_02555.png"
        string_val: "../data/Validation/Run_0001/images/frame_04261.png"
        string_val: "../data/Validation/Run_0001/images/frame_02084.png"
        string_val: "../data/Validation/Run_0001/images/frame_01185.png"
        string_val: "../data/Validation/Run_0001/images/frame_03968.png"
        string_val: "../data/Validation/Run_0001/images/frame_03944.png"
        string_val: "../data/Validation/Run_0001/images/frame_02121.png"
        string_val: "../data/Validation/Run_0001/images/frame_01700.png"
        string_val: "../data/Validation/Run_0001/images/frame_03890.png"
        string_val: "../data/Validation/Run_0001/images/frame_03508.png"
        string_val: "../data/Validation/Run_0001/images/frame_04221.png"
        string_val: "../data/Validation/Run_0001/images/frame_01386.png"
        string_val: "../data/Validation/Run_0001/images/frame_04215.png"
        string_val: "../data/Validation/Run_0001/images/frame_00996.png"
        string_val: "../data/Validation/Run_0001/images/frame_02274.png"
        string_val: "../data/Validation/Run_0001/images/frame_00860.png"
        string_val: "../data/Validation/Run_0001/images/frame_03328.png"
        string_val: "../data/Validation/Run_0001/images/frame_02002.png"
        string_val: "../data/Validation/Run_0001/images/frame_03949.png"
        string_val: "../data/Validation/Run_0001/images/frame_00371.png"
        string_val: "../data/Validation/Run_0001/images/frame_03457.png"
        string_val: "../data/Validation/Run_0001/images/frame_01776.png"
        string_val: "../data/Validation/Run_0001/images/frame_01377.png"
        string_val: "../data/Validation/Run_0001/images/frame_00821.png"
        string_val: "../data/Validation/Run_0001/images/frame_04988.png"
        string_val: "../data/Validation/Run_0001/images/frame_00494.png"
        string_val: "../data/Validation/Run_0001/images/frame_04905.png"
        string_val: "../data/Validation/Run_0001/images/frame_04029.png"
        string_val: "../data/Validation/Run_0001/images/frame_03396.png"
        string_val: "../data/Validation/Run_0001/images/frame_04502.png"
        string_val: "../data/Validation/Run_0001/images/frame_04476.png"
        string_val: "../data/Validation/Run_0001/images/frame_03936.png"
        string_val: "../data/Validation/Run_0001/images/frame_04650.png"
        string_val: "../data/Validation/Run_0001/images/frame_03871.png"
        string_val: "../data/Validation/Run_0001/images/frame_04694.png"
        string_val: "../data/Validation/Run_0001/images/frame_00240.png"
        string_val: "../data/Validation/Run_0001/images/frame_01174.png"
        string_val: "../data/Validation/Run_0001/images/frame_02428.png"
        string_val: "../data/Validation/Run_0001/images/frame_04005.png"
        string_val: "../data/Validation/Run_0001/images/frame_00839.png"
        string_val: "../data/Validation/Run_0001/images/frame_01903.png"
        string_val: "../data/Validation/Run_0001/images/frame_02409.png"
        string_val: "../data/Validation/Run_0001/images/frame_03133.png"
        string_val: "../data/Validation/Run_0001/images/frame_00261.png"
        string_val: "../data/Validation/Run_0001/images/frame_01359.png"
        string_val: "../data/Validation/Run_0001/images/frame_04975.png"
        string_val: "../data/Validation/Run_0001/images/frame_01315.png"
        string_val: "../data/Validation/Run_0001/images/frame_01116.png"
        string_val: "../data/Validation/Run_0001/images/frame_03617.png"
        string_val: "../data/Validation/Run_0001/images/frame_01734.png"
        string_val: "../data/Validation/Run_0001/images/frame_00663.png"
        string_val: "../data/Validation/Run_0001/images/frame_02292.png"
        string_val: "../data/Validation/Run_0001/images/frame_04737.png"
        string_val: "../data/Validation/Run_0001/images/frame_02227.png"
        string_val: "../data/Validation/Run_0001/images/frame_05030.png"
        string_val: "../data/Validation/Run_0001/images/frame_03128.png"
        string_val: "../data/Validation/Run_0001/images/frame_00776.png"
        string_val: "../data/Validation/Run_0001/images/frame_00248.png"
        string_val: "../data/Validation/Run_0001/images/frame_04773.png"
        string_val: "../data/Validation/Run_0001/images/frame_02286.png"
        string_val: "../data/Validation/Run_0001/images/frame_04167.png"
        string_val: "../data/Validation/Run_0001/images/frame_01152.png"
        string_val: "../data/Validation/Run_0001/images/frame_00343.png"
        string_val: "../data/Validation/Run_0001/images/frame_01382.png"
        string_val: "../data/Validation/Run_0001/images/frame_05031.png"
        string_val: "../data/Validation/Run_0001/images/frame_03584.png"
        string_val: "../data/Validation/Run_0001/images/frame_04695.png"
        string_val: "../data/Validation/Run_0001/images/frame_00970.png"
        string_val: "../data/Validation/Run_0001/images/frame_03476.png"
        string_val: "../data/Validation/Run_0001/images/frame_01079.png"
        string_val: "../data/Validation/Run_0001/images/frame_00987.png"
        string_val: "../data/Validation/Run_0001/images/frame_02280.png"
        string_val: "../data/Validation/Run_0001/images/frame_02711.png"
        string_val: "../data/Validation/Run_0001/images/frame_02239.png"
        string_val: "../data/Validation/Run_0001/images/frame_04410.png"
        string_val: "../data/Validation/Run_0001/images/frame_05089.png"
        string_val: "../data/Validation/Run_0001/images/frame_01241.png"
        string_val: "../data/Validation/Run_0001/images/frame_03861.png"
        string_val: "../data/Validation/Run_0001/images/frame_01726.png"
        string_val: "../data/Validation/Run_0001/images/frame_05090.png"
        string_val: "../data/Validation/Run_0001/images/frame_03082.png"
        string_val: "../data/Validation/Run_0001/images/frame_04434.png"
        string_val: "../data/Validation/Run_0001/images/frame_04420.png"
        string_val: "../data/Validation/Run_0001/images/frame_01668.png"
        string_val: "../data/Validation/Run_0001/images/frame_01518.png"
        string_val: "../data/Validation/Run_0001/images/frame_04919.png"
        string_val: "../data/Validation/Run_0001/images/frame_01661.png"
        string_val: "../data/Validation/Run_0001/images/frame_02805.png"
        string_val: "../data/Validation/Run_0001/images/frame_04480.png"
        string_val: "../data/Validation/Run_0001/images/frame_02780.png"
        string_val: "../data/Validation/Run_0001/images/frame_01819.png"
        string_val: "../data/Validation/Run_0001/images/frame_03497.png"
        string_val: "../data/Validation/Run_0001/images/frame_00921.png"
        string_val: "../data/Validation/Run_0001/images/frame_04810.png"
        string_val: "../data/Validation/Run_0001/images/frame_01371.png"
        string_val: "../data/Validation/Run_0001/images/frame_05020.png"
        string_val: "../data/Validation/Run_0001/images/frame_04035.png"
        string_val: "../data/Validation/Run_0001/images/frame_02725.png"
        string_val: "../data/Validation/Run_0001/images/frame_00415.png"
        string_val: "../data/Validation/Run_0001/images/frame_04355.png"
        string_val: "../data/Validation/Run_0001/images/frame_02110.png"
        string_val: "../data/Validation/Run_0001/images/frame_04233.png"
        string_val: "../data/Validation/Run_0001/images/frame_04758.png"
        string_val: "../data/Validation/Run_0001/images/frame_02774.png"
        string_val: "../data/Validation/Run_0001/images/frame_03880.png"
        string_val: "../data/Validation/Run_0001/images/frame_04958.png"
        string_val: "../data/Validation/Run_0001/images/frame_03551.png"
        string_val: "../data/Validation/Run_0001/images/frame_04255.png"
        string_val: "../data/Validation/Run_0001/images/frame_00035.png"
        string_val: "../data/Validation/Run_0001/images/frame_01103.png"
        string_val: "../data/Validation/Run_0001/images/frame_03971.png"
        string_val: "../data/Validation/Run_0001/images/frame_04576.png"
        string_val: "../data/Validation/Run_0001/images/frame_00049.png"
        string_val: "../data/Validation/Run_0001/images/frame_01663.png"
        string_val: "../data/Validation/Run_0001/images/frame_00867.png"
        string_val: "../data/Validation/Run_0001/images/frame_01826.png"
        string_val: "../data/Validation/Run_0001/images/frame_04585.png"
        string_val: "../data/Validation/Run_0001/images/frame_02591.png"
        string_val: "../data/Validation/Run_0001/images/frame_02316.png"
        string_val: "../data/Validation/Run_0001/images/frame_00750.png"
        string_val: "../data/Validation/Run_0001/images/frame_02943.png"
        string_val: "../data/Validation/Run_0001/images/frame_02825.png"
        string_val: "../data/Validation/Run_0001/images/frame_01167.png"
        string_val: "../data/Validation/Run_0001/images/frame_02863.png"
        string_val: "../data/Validation/Run_0001/images/frame_03090.png"
        string_val: "../data/Validation/Run_0001/images/frame_01743.png"
        string_val: "../data/Validation/Run_0001/images/frame_02797.png"
        string_val: "../data/Validation/Run_0001/images/frame_04540.png"
        string_val: "../data/Validation/Run_0001/images/frame_01408.png"
        string_val: "../data/Validation/Run_0001/images/frame_01712.png"
        string_val: "../data/Validation/Run_0001/images/frame_01701.png"
        string_val: "../data/Validation/Run_0001/images/frame_00861.png"
        string_val: "../data/Validation/Run_0001/images/frame_02328.png"
        string_val: "../data/Validation/Run_0001/images/frame_04238.png"
        string_val: "../data/Validation/Run_0001/images/frame_03174.png"
        string_val: "../data/Validation/Run_0001/images/frame_01581.png"
        string_val: "../data/Validation/Run_0001/images/frame_01375.png"
        string_val: "../data/Validation/Run_0001/images/frame_03903.png"
        string_val: "../data/Validation/Run_0001/images/frame_01413.png"
        string_val: "../data/Validation/Run_0001/images/frame_01675.png"
        string_val: "../data/Validation/Run_0001/images/frame_00773.png"
        string_val: "../data/Validation/Run_0001/images/frame_01177.png"
        string_val: "../data/Validation/Run_0001/images/frame_04811.png"
        string_val: "../data/Validation/Run_0001/images/frame_04641.png"
        string_val: "../data/Validation/Run_0001/images/frame_00104.png"
        string_val: "../data/Validation/Run_0001/images/frame_02638.png"
        string_val: "../data/Validation/Run_0001/images/frame_01644.png"
        string_val: "../data/Validation/Run_0001/images/frame_00836.png"
        string_val: "../data/Validation/Run_0001/images/frame_00819.png"
        string_val: "../data/Validation/Run_0001/images/frame_04280.png"
        string_val: "../data/Validation/Run_0001/images/frame_04234.png"
        string_val: "../data/Validation/Run_0001/images/frame_04930.png"
        string_val: "../data/Validation/Run_0001/images/frame_00548.png"
        string_val: "../data/Validation/Run_0001/images/frame_03467.png"
        string_val: "../data/Validation/Run_0001/images/frame_02621.png"
        string_val: "../data/Validation/Run_0001/images/frame_03908.png"
        string_val: "../data/Validation/Run_0001/images/frame_01189.png"
        string_val: "../data/Validation/Run_0001/images/frame_00078.png"
        string_val: "../data/Validation/Run_0001/images/frame_01436.png"
        string_val: "../data/Validation/Run_0001/images/frame_00716.png"
        string_val: "../data/Validation/Run_0001/images/frame_04845.png"
        string_val: "../data/Validation/Run_0001/images/frame_03139.png"
        string_val: "../data/Validation/Run_0001/images/frame_02614.png"
        string_val: "../data/Validation/Run_0001/images/frame_00625.png"
        string_val: "../data/Validation/Run_0001/images/frame_01455.png"
        string_val: "../data/Validation/Run_0001/images/frame_04780.png"
        string_val: "../data/Validation/Run_0001/images/frame_01287.png"
        string_val: "../data/Validation/Run_0001/images/frame_01047.png"
        string_val: "../data/Validation/Run_0001/images/frame_03997.png"
        string_val: "../data/Validation/Run_0001/images/frame_04639.png"
        string_val: "../data/Validation/Run_0001/images/frame_01010.png"
        string_val: "../data/Validation/Run_0001/images/frame_03117.png"
        string_val: "../data/Validation/Run_0001/images/frame_00893.png"
        string_val: "../data/Validation/Run_0001/images/frame_01729.png"
        string_val: "../data/Validation/Run_0001/images/frame_00170.png"
        string_val: "../data/Validation/Run_0001/images/frame_02708.png"
        string_val: "../data/Validation/Run_0001/images/frame_02099.png"
        string_val: "../data/Validation/Run_0001/images/frame_01188.png"
        string_val: "../data/Validation/Run_0001/images/frame_02050.png"
        string_val: "../data/Validation/Run_0001/images/frame_00985.png"
        string_val: "../data/Validation/Run_0001/images/frame_00238.png"
        string_val: "../data/Validation/Run_0001/images/frame_03623.png"
        string_val: "../data/Validation/Run_0001/images/frame_00887.png"
        string_val: "../data/Validation/Run_0001/images/frame_03228.png"
        string_val: "../data/Validation/Run_0001/images/frame_01705.png"
        string_val: "../data/Validation/Run_0001/images/frame_00443.png"
        string_val: "../data/Validation/Run_0001/images/frame_01656.png"
        string_val: "../data/Validation/Run_0001/images/frame_00455.png"
        string_val: "../data/Validation/Run_0001/images/frame_01527.png"
        string_val: "../data/Validation/Run_0001/images/frame_02619.png"
        string_val: "../data/Validation/Run_0001/images/frame_02676.png"
        string_val: "../data/Validation/Run_0001/images/frame_00841.png"
        string_val: "../data/Validation/Run_0001/images/frame_04534.png"
        string_val: "../data/Validation/Run_0001/images/frame_04304.png"
        string_val: "../data/Validation/Run_0001/images/frame_01290.png"
        string_val: "../data/Validation/Run_0001/images/frame_00281.png"
        string_val: "../data/Validation/Run_0001/images/frame_01028.png"
        string_val: "../data/Validation/Run_0001/images/frame_04620.png"
        string_val: "../data/Validation/Run_0001/images/frame_00828.png"
        string_val: "../data/Validation/Run_0001/images/frame_04932.png"
        string_val: "../data/Validation/Run_0001/images/frame_03172.png"
        string_val: "../data/Validation/Run_0001/images/frame_03065.png"
        string_val: "../data/Validation/Run_0001/images/frame_01685.png"
        string_val: "../data/Validation/Run_0001/images/frame_01771.png"
        string_val: "../data/Validation/Run_0001/images/frame_04022.png"
        string_val: "../data/Validation/Run_0001/images/frame_01199.png"
        string_val: "../data/Validation/Run_0001/images/frame_04052.png"
        string_val: "../data/Validation/Run_0001/images/frame_01649.png"
        string_val: "../data/Validation/Run_0001/images/frame_02348.png"
        string_val: "../data/Validation/Run_0001/images/frame_02691.png"
        string_val: "../data/Validation/Run_0001/images/frame_00950.png"
        string_val: "../data/Validation/Run_0001/images/frame_01570.png"
        string_val: "../data/Validation/Run_0001/images/frame_03956.png"
        string_val: "../data/Validation/Run_0001/images/frame_00959.png"
        string_val: "../data/Validation/Run_0001/images/frame_02484.png"
        string_val: "../data/Validation/Run_0001/images/frame_03685.png"
        string_val: "../data/Validation/Run_0001/images/frame_03348.png"
        string_val: "../data/Validation/Run_0001/images/frame_05016.png"
        string_val: "../data/Validation/Run_0001/images/frame_02330.png"
        string_val: "../data/Validation/Run_0001/images/frame_01978.png"
        string_val: "../data/Validation/Run_0001/images/frame_01038.png"
        string_val: "../data/Validation/Run_0001/images/frame_03444.png"
        string_val: "../data/Validation/Run_0001/images/frame_03620.png"
        string_val: "../data/Validation/Run_0001/images/frame_03500.png"
        string_val: "../data/Validation/Run_0001/images/frame_00842.png"
        string_val: "../data/Validation/Run_0001/images/frame_01859.png"
        string_val: "../data/Validation/Run_0001/images/frame_01389.png"
        string_val: "../data/Validation/Run_0001/images/frame_02772.png"
        string_val: "../data/Validation/Run_0001/images/frame_03792.png"
        string_val: "../data/Validation/Run_0001/images/frame_03218.png"
        string_val: "../data/Validation/Run_0001/images/frame_04360.png"
        string_val: "../data/Validation/Run_0001/images/frame_05069.png"
        string_val: "../data/Validation/Run_0001/images/frame_03744.png"
        string_val: "../data/Validation/Run_0001/images/frame_02650.png"
        string_val: "../data/Validation/Run_0001/images/frame_02611.png"
        string_val: "../data/Validation/Run_0001/images/frame_00155.png"
        string_val: "../data/Validation/Run_0001/images/frame_01949.png"
        string_val: "../data/Validation/Run_0001/images/frame_04957.png"
        string_val: "../data/Validation/Run_0001/images/frame_01165.png"
        string_val: "../data/Validation/Run_0001/images/frame_03592.png"
        string_val: "../data/Validation/Run_0001/images/frame_01984.png"
        string_val: "../data/Validation/Run_0001/images/frame_02462.png"
        string_val: "../data/Validation/Run_0001/images/frame_04064.png"
        string_val: "../data/Validation/Run_0001/images/frame_01072.png"
        string_val: "../data/Validation/Run_0001/images/frame_04951.png"
        string_val: "../data/Validation/Run_0001/images/frame_03393.png"
        string_val: "../data/Validation/Run_0001/images/frame_00048.png"
        string_val: "../data/Validation/Run_0001/images/frame_01930.png"
        string_val: "../data/Validation/Run_0001/images/frame_04396.png"
        string_val: "../data/Validation/Run_0001/images/frame_02851.png"
        string_val: "../data/Validation/Run_0001/images/frame_00158.png"
        string_val: "../data/Validation/Run_0001/images/frame_00393.png"
        string_val: "../data/Validation/Run_0001/images/frame_03021.png"
        string_val: "../data/Validation/Run_0001/images/frame_01609.png"
        string_val: "../data/Validation/Run_0001/images/frame_03596.png"
        string_val: "../data/Validation/Run_0001/images/frame_01959.png"
        string_val: "../data/Validation/Run_0001/images/frame_02317.png"
        string_val: "../data/Validation/Run_0001/images/frame_02294.png"
        string_val: "../data/Validation/Run_0001/images/frame_00044.png"
        string_val: "../data/Validation/Run_0001/images/frame_02455.png"
        string_val: "../data/Validation/Run_0001/images/frame_04882.png"
        string_val: "../data/Validation/Run_0001/images/frame_03570.png"
        string_val: "../data/Validation/Run_0001/images/frame_04546.png"
        string_val: "../data/Validation/Run_0001/images/frame_01904.png"
        string_val: "../data/Validation/Run_0001/images/frame_03474.png"
        string_val: "../data/Validation/Run_0001/images/frame_00791.png"
        string_val: "../data/Validation/Run_0001/images/frame_04846.png"
        string_val: "../data/Validation/Run_0001/images/frame_04966.png"
        string_val: "../data/Validation/Run_0001/images/frame_04802.png"
        string_val: "../data/Validation/Run_0001/images/frame_01554.png"
        string_val: "../data/Validation/Run_0001/images/frame_01322.png"
        string_val: "../data/Validation/Run_0001/images/frame_00664.png"
        string_val: "../data/Validation/Run_0001/images/frame_00368.png"
        string_val: "../data/Validation/Run_0001/images/frame_03302.png"
        string_val: "../data/Validation/Run_0001/images/frame_01364.png"
        string_val: "../data/Validation/Run_0001/images/frame_03518.png"
        string_val: "../data/Validation/Run_0001/images/frame_01344.png"
        string_val: "../data/Validation/Run_0001/images/frame_00594.png"
        string_val: "../data/Validation/Run_0001/images/frame_04691.png"
        string_val: "../data/Validation/Run_0001/images/frame_03453.png"
        string_val: "../data/Validation/Run_0001/images/frame_04468.png"
        string_val: "../data/Validation/Run_0001/images/frame_02824.png"
        string_val: "../data/Validation/Run_0001/images/frame_02620.png"
        string_val: "../data/Validation/Run_0001/images/frame_03160.png"
        string_val: "../data/Validation/Run_0001/images/frame_00790.png"
        string_val: "../data/Validation/Run_0001/images/frame_04955.png"
        string_val: "../data/Validation/Run_0001/images/frame_00546.png"
        string_val: "../data/Validation/Run_0001/images/frame_04590.png"
        string_val: "../data/Validation/Run_0001/images/frame_03734.png"
        string_val: "../data/Validation/Run_0001/images/frame_04787.png"
        string_val: "../data/Validation/Run_0001/images/frame_01618.png"
        string_val: "../data/Validation/Run_0001/images/frame_04648.png"
        string_val: "../data/Validation/Run_0001/images/frame_04927.png"
        string_val: "../data/Validation/Run_0001/images/frame_05037.png"
        string_val: "../data/Validation/Run_0001/images/frame_00465.png"
        string_val: "../data/Validation/Run_0001/images/frame_03215.png"
        string_val: "../data/Validation/Run_0001/images/frame_02618.png"
        string_val: "../data/Validation/Run_0001/images/frame_04253.png"
        string_val: "../data/Validation/Run_0001/images/frame_03534.png"
        string_val: "../data/Validation/Run_0001/images/frame_01899.png"
        string_val: "../data/Validation/Run_0001/images/frame_01091.png"
        string_val: "../data/Validation/Run_0001/images/frame_00927.png"
        string_val: "../data/Validation/Run_0001/images/frame_00920.png"
        string_val: "../data/Validation/Run_0001/images/frame_04552.png"
        string_val: "../data/Validation/Run_0001/images/frame_02193.png"
        string_val: "../data/Validation/Run_0001/images/frame_05040.png"
        string_val: "../data/Validation/Run_0001/images/frame_02753.png"
        string_val: "../data/Validation/Run_0001/images/frame_03585.png"
        string_val: "../data/Validation/Run_0001/images/frame_00308.png"
        string_val: "../data/Validation/Run_0001/images/frame_00144.png"
        string_val: "../data/Validation/Run_0001/images/frame_04426.png"
        string_val: "../data/Validation/Run_0001/images/frame_02694.png"
        string_val: "../data/Validation/Run_0001/images/frame_00375.png"
        string_val: "../data/Validation/Run_0001/images/frame_00733.png"
        string_val: "../data/Validation/Run_0001/images/frame_02257.png"
        string_val: "../data/Validation/Run_0001/images/frame_00133.png"
        string_val: "../data/Validation/Run_0001/images/frame_03429.png"
        string_val: "../data/Validation/Run_0001/images/frame_00345.png"
        string_val: "../data/Validation/Run_0001/images/frame_01399.png"
        string_val: "../data/Validation/Run_0001/images/frame_02338.png"
        string_val: "../data/Validation/Run_0001/images/frame_01275.png"
        string_val: "../data/Validation/Run_0001/images/frame_00081.png"
        string_val: "../data/Validation/Run_0001/images/frame_02822.png"
        string_val: "../data/Validation/Run_0001/images/frame_02167.png"
        string_val: "../data/Validation/Run_0001/images/frame_01053.png"
        string_val: "../data/Validation/Run_0001/images/frame_01163.png"
        string_val: "../data/Validation/Run_0001/images/frame_03205.png"
        string_val: "../data/Validation/Run_0001/images/frame_04760.png"
        string_val: "../data/Validation/Run_0001/images/frame_03245.png"
        string_val: "../data/Validation/Run_0001/images/frame_00260.png"
        string_val: "../data/Validation/Run_0001/images/frame_00805.png"
        string_val: "../data/Validation/Run_0001/images/frame_01274.png"
        string_val: "../data/Validation/Run_0001/images/frame_04181.png"
        string_val: "../data/Validation/Run_0001/images/frame_03420.png"
        string_val: "../data/Validation/Run_0001/images/frame_01514.png"
        string_val: "../data/Validation/Run_0001/images/frame_01158.png"
        string_val: "../data/Validation/Run_0001/images/frame_03271.png"
        string_val: "../data/Validation/Run_0001/images/frame_05084.png"
        string_val: "../data/Validation/Run_0001/images/frame_02788.png"
        string_val: "../data/Validation/Run_0001/images/frame_02719.png"
        string_val: "../data/Validation/Run_0001/images/frame_02157.png"
        string_val: "../data/Validation/Run_0001/images/frame_01390.png"
        string_val: "../data/Validation/Run_0001/images/frame_00878.png"
        string_val: "../data/Validation/Run_0001/images/frame_04324.png"
        string_val: "../data/Validation/Run_0001/images/frame_01248.png"
        string_val: "../data/Validation/Run_0001/images/frame_00528.png"
        string_val: "../data/Validation/Run_0001/images/frame_04634.png"
        string_val: "../data/Validation/Run_0001/images/frame_00225.png"
        string_val: "../data/Validation/Run_0001/images/frame_00010.png"
        string_val: "../data/Validation/Run_0001/images/frame_04187.png"
        string_val: "../data/Validation/Run_0001/images/frame_04382.png"
        string_val: "../data/Validation/Run_0001/images/frame_00580.png"
        string_val: "../data/Validation/Run_0001/images/frame_01993.png"
        string_val: "../data/Validation/Run_0001/images/frame_02024.png"
        string_val: "../data/Validation/Run_0001/images/frame_04858.png"
        string_val: "../data/Validation/Run_0001/images/frame_01356.png"
        string_val: "../data/Validation/Run_0001/images/frame_03999.png"
        string_val: "../data/Validation/Run_0001/images/frame_03590.png"
        string_val: "../data/Validation/Run_0001/images/frame_03918.png"
        string_val: "../data/Validation/Run_0001/images/frame_00802.png"
        string_val: "../data/Validation/Run_0001/images/frame_04826.png"
        string_val: "../data/Validation/Run_0001/images/frame_03648.png"
        string_val: "../data/Validation/Run_0001/images/frame_00253.png"
        string_val: "../data/Validation/Run_0001/images/frame_04968.png"
        string_val: "../data/Validation/Run_0001/images/frame_01450.png"
        string_val: "../data/Validation/Run_0001/images/frame_00755.png"
        string_val: "../data/Validation/Run_0001/images/frame_02423.png"
        string_val: "../data/Validation/Run_0001/images/frame_01878.png"
        string_val: "../data/Validation/Run_0001/images/frame_04242.png"
        string_val: "../data/Validation/Run_0001/images/frame_00042.png"
        string_val: "../data/Validation/Run_0001/images/frame_00357.png"
        string_val: "../data/Validation/Run_0001/images/frame_02877.png"
        string_val: "../data/Validation/Run_0001/images/frame_00923.png"
        string_val: "../data/Validation/Run_0001/images/frame_00618.png"
        string_val: "../data/Validation/Run_0001/images/frame_02451.png"
        string_val: "../data/Validation/Run_0001/images/frame_03656.png"
        string_val: "../data/Validation/Run_0001/images/frame_04539.png"
        string_val: "../data/Validation/Run_0001/images/frame_03754.png"
        string_val: "../data/Validation/Run_0001/images/frame_02515.png"
        string_val: "../data/Validation/Run_0001/images/frame_02819.png"
        string_val: "../data/Validation/Run_0001/images/frame_00849.png"
        string_val: "../data/Validation/Run_0001/images/frame_03408.png"
        string_val: "../data/Validation/Run_0001/images/frame_00620.png"
        string_val: "../data/Validation/Run_0001/images/frame_04862.png"
        string_val: "../data/Validation/Run_0001/images/frame_00930.png"
        string_val: "../data/Validation/Run_0001/images/frame_00926.png"
        string_val: "../data/Validation/Run_0001/images/frame_00965.png"
        string_val: "../data/Validation/Run_0001/images/frame_04693.png"
        string_val: "../data/Validation/Run_0001/images/frame_01400.png"
        string_val: "../data/Validation/Run_0001/images/frame_00127.png"
        string_val: "../data/Validation/Run_0001/images/frame_00747.png"
        string_val: "../data/Validation/Run_0001/images/frame_02975.png"
        string_val: "../data/Validation/Run_0001/images/frame_01229.png"
        string_val: "../data/Validation/Run_0001/images/frame_01842.png"
        string_val: "../data/Validation/Run_0001/images/frame_01715.png"
        string_val: "../data/Validation/Run_0001/images/frame_00233.png"
        string_val: "../data/Validation/Run_0001/images/frame_02171.png"
        string_val: "../data/Validation/Run_0001/images/frame_01601.png"
        string_val: "../data/Validation/Run_0001/images/frame_00972.png"
        string_val: "../data/Validation/Run_0001/images/frame_00806.png"
        string_val: "../data/Validation/Run_0001/images/frame_03417.png"
        string_val: "../data/Validation/Run_0001/images/frame_04493.png"
        string_val: "../data/Validation/Run_0001/images/frame_01280.png"
        string_val: "../data/Validation/Run_0001/images/frame_01634.png"
        string_val: "../data/Validation/Run_0001/images/frame_00195.png"
        string_val: "../data/Validation/Run_0001/images/frame_02595.png"
        string_val: "../data/Validation/Run_0001/images/frame_00362.png"
        string_val: "../data/Validation/Run_0001/images/frame_00105.png"
        string_val: "../data/Validation/Run_0001/images/frame_03870.png"
        string_val: "../data/Validation/Run_0001/images/frame_02158.png"
        string_val: "../data/Validation/Run_0001/images/frame_01107.png"
        string_val: "../data/Validation/Run_0001/images/frame_03574.png"
        string_val: "../data/Validation/Run_0001/images/frame_04254.png"
        string_val: "../data/Validation/Run_0001/images/frame_04326.png"
        string_val: "../data/Validation/Run_0001/images/frame_05003.png"
        string_val: "../data/Validation/Run_0001/images/frame_02163.png"
        string_val: "../data/Validation/Run_0001/images/frame_02623.png"
        string_val: "../data/Validation/Run_0001/images/frame_02023.png"
        string_val: "../data/Validation/Run_0001/images/frame_04617.png"
        string_val: "../data/Validation/Run_0001/images/frame_03927.png"
        string_val: "../data/Validation/Run_0001/images/frame_04920.png"
        string_val: "../data/Validation/Run_0001/images/frame_04684.png"
        string_val: "../data/Validation/Run_0001/images/frame_01412.png"
        string_val: "../data/Validation/Run_0001/images/frame_02600.png"
        string_val: "../data/Validation/Run_0001/images/frame_02301.png"
        string_val: "../data/Validation/Run_0001/images/frame_02334.png"
        string_val: "../data/Validation/Run_0001/images/frame_00909.png"
        string_val: "../data/Validation/Run_0001/images/frame_03186.png"
        string_val: "../data/Validation/Run_0001/images/frame_02635.png"
        string_val: "../data/Validation/Run_0001/images/frame_03714.png"
        string_val: "../data/Validation/Run_0001/images/frame_05072.png"
        string_val: "../data/Validation/Run_0001/images/frame_00289.png"
        string_val: "../data/Validation/Run_0001/images/frame_04645.png"
        string_val: "../data/Validation/Run_0001/images/frame_01397.png"
        string_val: "../data/Validation/Run_0001/images/frame_04011.png"
        string_val: "../data/Validation/Run_0001/images/frame_01510.png"
        string_val: "../data/Validation/Run_0001/images/frame_02560.png"
        string_val: "../data/Validation/Run_0001/images/frame_03076.png"
        string_val: "../data/Validation/Run_0001/images/frame_00939.png"
        string_val: "../data/Validation/Run_0001/images/frame_03012.png"
        string_val: "../data/Validation/Run_0001/images/frame_04908.png"
        string_val: "../data/Validation/Run_0001/images/frame_02212.png"
        string_val: "../data/Validation/Run_0001/images/frame_02723.png"
        string_val: "../data/Validation/Run_0001/images/frame_04377.png"
        string_val: "../data/Validation/Run_0001/images/frame_00315.png"
        string_val: "../data/Validation/Run_0001/images/frame_00744.png"
        string_val: "../data/Validation/Run_0001/images/frame_02601.png"
        string_val: "../data/Validation/Run_0001/images/frame_01113.png"
        string_val: "../data/Validation/Run_0001/images/frame_03610.png"
        string_val: "../data/Validation/Run_0001/images/frame_05082.png"
        string_val: "../data/Validation/Run_0001/images/frame_03807.png"
        string_val: "../data/Validation/Run_0001/images/frame_01787.png"
        string_val: "../data/Validation/Run_0001/images/frame_04239.png"
        string_val: "../data/Validation/Run_0001/images/frame_02726.png"
        string_val: "../data/Validation/Run_0001/images/frame_04538.png"
        string_val: "../data/Validation/Run_0001/images/frame_00640.png"
        string_val: "../data/Validation/Run_0001/images/frame_03229.png"
        string_val: "../data/Validation/Run_0001/images/frame_00381.png"
        string_val: "../data/Validation/Run_0001/images/frame_04453.png"
        string_val: "../data/Validation/Run_0001/images/frame_02988.png"
        string_val: "../data/Validation/Run_0001/images/frame_04799.png"
        string_val: "../data/Validation/Run_0001/images/frame_02610.png"
        string_val: "../data/Validation/Run_0001/images/frame_02683.png"
        string_val: "../data/Validation/Run_0001/images/frame_03027.png"
        string_val: "../data/Validation/Run_0001/images/frame_02747.png"
        string_val: "../data/Validation/Run_0001/images/frame_02483.png"
        string_val: "../data/Validation/Run_0001/images/frame_01922.png"
        string_val: "../data/Validation/Run_0001/images/frame_00162.png"
        string_val: "../data/Validation/Run_0001/images/frame_04301.png"
        string_val: "../data/Validation/Run_0001/images/frame_00699.png"
        string_val: "../data/Validation/Run_0001/images/frame_04444.png"
        string_val: "../data/Validation/Run_0001/images/frame_03055.png"
        string_val: "../data/Validation/Run_0001/images/frame_03367.png"
        string_val: "../data/Validation/Run_0001/images/frame_01921.png"
        string_val: "../data/Validation/Run_0001/images/frame_02487.png"
        string_val: "../data/Validation/Run_0001/images/frame_00505.png"
        string_val: "../data/Validation/Run_0001/images/frame_02325.png"
        string_val: "../data/Validation/Run_0001/images/frame_04547.png"
        string_val: "../data/Validation/Run_0001/images/frame_01118.png"
        string_val: "../data/Validation/Run_0001/images/frame_03517.png"
        string_val: "../data/Validation/Run_0001/images/frame_04696.png"
        string_val: "../data/Validation/Run_0001/images/frame_03583.png"
        string_val: "../data/Validation/Run_0001/images/frame_01019.png"
        string_val: "../data/Validation/Run_0001/images/frame_00085.png"
        string_val: "../data/Validation/Run_0001/images/frame_00565.png"
        string_val: "../data/Validation/Run_0001/images/frame_02059.png"
        string_val: "../data/Validation/Run_0001/images/frame_01920.png"
        string_val: "../data/Validation/Run_0001/images/frame_00646.png"
        string_val: "../data/Validation/Run_0001/images/frame_02624.png"
        string_val: "../data/Validation/Run_0001/images/frame_02085.png"
        string_val: "../data/Validation/Run_0001/images/frame_01233.png"
        string_val: "../data/Validation/Run_0001/images/frame_03677.png"
        string_val: "../data/Validation/Run_0001/images/frame_04972.png"
        string_val: "../data/Validation/Run_0001/images/frame_04391.png"
        string_val: "../data/Validation/Run_0001/images/frame_02507.png"
        string_val: "../data/Validation/Run_0001/images/frame_04258.png"
        string_val: "../data/Validation/Run_0001/images/frame_03868.png"
        string_val: "../data/Validation/Run_0001/images/frame_00593.png"
        string_val: "../data/Validation/Run_0001/images/frame_01172.png"
        string_val: "../data/Validation/Run_0001/images/frame_04632.png"
        string_val: "../data/Validation/Run_0001/images/frame_02116.png"
        string_val: "../data/Validation/Run_0001/images/frame_03544.png"
        string_val: "../data/Validation/Run_0001/images/frame_04782.png"
        string_val: "../data/Validation/Run_0001/images/frame_02109.png"
        string_val: "../data/Validation/Run_0001/images/frame_00799.png"
        string_val: "../data/Validation/Run_0001/images/frame_01812.png"
        string_val: "../data/Validation/Run_0001/images/frame_04019.png"
        string_val: "../data/Validation/Run_0001/images/frame_04545.png"
        string_val: "../data/Validation/Run_0001/images/frame_00004.png"
        string_val: "../data/Validation/Run_0001/images/frame_00964.png"
        string_val: "../data/Validation/Run_0001/images/frame_04121.png"
        string_val: "../data/Validation/Run_0001/images/frame_02511.png"
        string_val: "../data/Validation/Run_0001/images/frame_01054.png"
        string_val: "../data/Validation/Run_0001/images/frame_01535.png"
        string_val: "../data/Validation/Run_0001/images/frame_00263.png"
        string_val: "../data/Validation/Run_0001/images/frame_02358.png"
        string_val: "../data/Validation/Run_0001/images/frame_03337.png"
        string_val: "../data/Validation/Run_0001/images/frame_01574.png"
        string_val: "../data/Validation/Run_0001/images/frame_04842.png"
        string_val: "../data/Validation/Run_0001/images/frame_01647.png"
        string_val: "../data/Validation/Run_0001/images/frame_04367.png"
        string_val: "../data/Validation/Run_0001/images/frame_03078.png"
        string_val: "../data/Validation/Run_0001/images/frame_01296.png"
        string_val: "../data/Validation/Run_0001/images/frame_03723.png"
        string_val: "../data/Validation/Run_0001/images/frame_02093.png"
        string_val: "../data/Validation/Run_0001/images/frame_02285.png"
        string_val: "../data/Validation/Run_0001/images/frame_04228.png"
        string_val: "../data/Validation/Run_0001/images/frame_00015.png"
        string_val: "../data/Validation/Run_0001/images/frame_00613.png"
        string_val: "../data/Validation/Run_0001/images/frame_00194.png"
        string_val: "../data/Validation/Run_0001/images/frame_03152.png"
        string_val: "../data/Validation/Run_0001/images/frame_01487.png"
        string_val: "../data/Validation/Run_0001/images/frame_03481.png"
        string_val: "../data/Validation/Run_0001/images/frame_02398.png"
        string_val: "../data/Validation/Run_0001/images/frame_04946.png"
        string_val: "../data/Validation/Run_0001/images/frame_02042.png"
        string_val: "../data/Validation/Run_0001/images/frame_00141.png"
        string_val: "../data/Validation/Run_0001/images/frame_01480.png"
        string_val: "../data/Validation/Run_0001/images/frame_04384.png"
        string_val: "../data/Validation/Run_0001/images/frame_04727.png"
        string_val: "../data/Validation/Run_0001/images/frame_00341.png"
        string_val: "../data/Validation/Run_0001/images/frame_04942.png"
        string_val: "../data/Validation/Run_0001/images/frame_02739.png"
        string_val: "../data/Validation/Run_0001/images/frame_04312.png"
        string_val: "../data/Validation/Run_0001/images/frame_01820.png"
        string_val: "../data/Validation/Run_0001/images/frame_02567.png"
        string_val: "../data/Validation/Run_0001/images/frame_04869.png"
        string_val: "../data/Validation/Run_0001/images/frame_03891.png"
        string_val: "../data/Validation/Run_0001/images/frame_04663.png"
        string_val: "../data/Validation/Run_0001/images/frame_02764.png"
        string_val: "../data/Validation/Run_0001/images/frame_04433.png"
        string_val: "../data/Validation/Run_0001/images/frame_04563.png"
        string_val: "../data/Validation/Run_0001/images/frame_03134.png"
        string_val: "../data/Validation/Run_0001/images/frame_00295.png"
        string_val: "../data/Validation/Run_0001/images/frame_01751.png"
        string_val: "../data/Validation/Run_0001/images/frame_02271.png"
        string_val: "../data/Validation/Run_0001/images/frame_01882.png"
        string_val: "../data/Validation/Run_0001/images/frame_03380.png"
        string_val: "../data/Validation/Run_0001/images/frame_01864.png"
        string_val: "../data/Validation/Run_0001/images/frame_04170.png"
        string_val: "../data/Validation/Run_0001/images/frame_01828.png"
        string_val: "../data/Validation/Run_0001/images/frame_02069.png"
        string_val: "../data/Validation/Run_0001/images/frame_04624.png"
        string_val: "../data/Validation/Run_0001/images/frame_02889.png"
        string_val: "../data/Validation/Run_0001/images/frame_03437.png"
        string_val: "../data/Validation/Run_0001/images/frame_00804.png"
        string_val: "../data/Validation/Run_0001/images/frame_04227.png"
        string_val: "../data/Validation/Run_0001/images/frame_05075.png"
        string_val: "../data/Validation/Run_0001/images/frame_01373.png"
        string_val: "../data/Validation/Run_0001/images/frame_02763.png"
        string_val: "../data/Validation/Run_0001/images/frame_01139.png"
        string_val: "../data/Validation/Run_0001/images/frame_00843.png"
        string_val: "../data/Validation/Run_0001/images/frame_01914.png"
        string_val: "../data/Validation/Run_0001/images/frame_02554.png"
        string_val: "../data/Validation/Run_0001/images/frame_03784.png"
        string_val: "../data/Validation/Run_0001/images/frame_01824.png"
        string_val: "../data/Validation/Run_0001/images/frame_01733.png"
        string_val: "../data/Validation/Run_0001/images/frame_01810.png"
        string_val: "../data/Validation/Run_0001/images/frame_03524.png"
        string_val: "../data/Validation/Run_0001/images/frame_00599.png"
        string_val: "../data/Validation/Run_0001/images/frame_03034.png"
        string_val: "../data/Validation/Run_0001/images/frame_03079.png"
        string_val: "../data/Validation/Run_0001/images/frame_01660.png"
        string_val: "../data/Validation/Run_0001/images/frame_03441.png"
        string_val: "../data/Validation/Run_0001/images/frame_02466.png"
        string_val: "../data/Validation/Run_0001/images/frame_04371.png"
        string_val: "../data/Validation/Run_0001/images/frame_00651.png"
        string_val: "../data/Validation/Run_0001/images/frame_03699.png"
        string_val: "../data/Validation/Run_0001/images/frame_01042.png"
        string_val: "../data/Validation/Run_0001/images/frame_04276.png"
        string_val: "../data/Validation/Run_0001/images/frame_01110.png"
        string_val: "../data/Validation/Run_0001/images/frame_03788.png"
        string_val: "../data/Validation/Run_0001/images/frame_02758.png"
        string_val: "../data/Validation/Run_0001/images/frame_01011.png"
        string_val: "../data/Validation/Run_0001/images/frame_04716.png"
        string_val: "../data/Validation/Run_0001/images/frame_03323.png"
        string_val: "../data/Validation/Run_0001/images/frame_03288.png"
        string_val: "../data/Validation/Run_0001/images/frame_03898.png"
        string_val: "../data/Validation/Run_0001/images/frame_02071.png"
        string_val: "../data/Validation/Run_0001/images/frame_04509.png"
        string_val: "../data/Validation/Run_0001/images/frame_03014.png"
        string_val: "../data/Validation/Run_0001/images/frame_03675.png"
        string_val: "../data/Validation/Run_0001/images/frame_03039.png"
        string_val: "../data/Validation/Run_0001/images/frame_00520.png"
        string_val: "../data/Validation/Run_0001/images/frame_04320.png"
        string_val: "../data/Validation/Run_0001/images/frame_02373.png"
        string_val: "../data/Validation/Run_0001/images/frame_01695.png"
        string_val: "../data/Validation/Run_0001/images/frame_02848.png"
        string_val: "../data/Validation/Run_0001/images/frame_04099.png"
        string_val: "../data/Validation/Run_0001/images/frame_02125.png"
        string_val: "../data/Validation/Run_0001/images/frame_01723.png"
        string_val: "../data/Validation/Run_0001/images/frame_01900.png"
        string_val: "../data/Validation/Run_0001/images/frame_04302.png"
        string_val: "../data/Validation/Run_0001/images/frame_00684.png"
        string_val: "../data/Validation/Run_0001/images/frame_00945.png"
        string_val: "../data/Validation/Run_0001/images/frame_04305.png"
        string_val: "../data/Validation/Run_0001/images/frame_02414.png"
        string_val: "../data/Validation/Run_0001/images/frame_04532.png"
        string_val: "../data/Validation/Run_0001/images/frame_02859.png"
        string_val: "../data/Validation/Run_0001/images/frame_04423.png"
        string_val: "../data/Validation/Run_0001/images/frame_02670.png"
        string_val: "../data/Validation/Run_0001/images/frame_03097.png"
        string_val: "../data/Validation/Run_0001/images/frame_01298.png"
        string_val: "../data/Validation/Run_0001/images/frame_02736.png"
        string_val: "../data/Validation/Run_0001/images/frame_01291.png"
        string_val: "../data/Validation/Run_0001/images/frame_02430.png"
        string_val: "../data/Validation/Run_0001/images/frame_02649.png"
        string_val: "../data/Validation/Run_0001/images/frame_01814.png"
        string_val: "../data/Validation/Run_0001/images/frame_01129.png"
        string_val: "../data/Validation/Run_0001/images/frame_00629.png"
        string_val: "../data/Validation/Run_0001/images/frame_01979.png"
        string_val: "../data/Validation/Run_0001/images/frame_01049.png"
        string_val: "../data/Validation/Run_0001/images/frame_01667.png"
        string_val: "../data/Validation/Run_0001/images/frame_02858.png"
        string_val: "../data/Validation/Run_0001/images/frame_01379.png"
        string_val: "../data/Validation/Run_0001/images/frame_00272.png"
        string_val: "../data/Validation/Run_0001/images/frame_00864.png"
        string_val: "../data/Validation/Run_0001/images/frame_00052.png"
        string_val: "../data/Validation/Run_0001/images/frame_02985.png"
        string_val: "../data/Validation/Run_0001/images/frame_04749.png"
        string_val: "../data/Validation/Run_0001/images/frame_01024.png"
        string_val: "../data/Validation/Run_0001/images/frame_02721.png"
        string_val: "../data/Validation/Run_0001/images/frame_04658.png"
        string_val: "../data/Validation/Run_0001/images/frame_00453.png"
        string_val: "../data/Validation/Run_0001/images/frame_03166.png"
        string_val: "../data/Validation/Run_0001/images/frame_04602.png"
        string_val: "../data/Validation/Run_0001/images/frame_04708.png"
        string_val: "../data/Validation/Run_0001/images/frame_01762.png"
        string_val: "../data/Validation/Run_0001/images/frame_02616.png"
        string_val: "../data/Validation/Run_0001/images/frame_01720.png"
        string_val: "../data/Validation/Run_0001/images/frame_04090.png"
        string_val: "../data/Validation/Run_0001/images/frame_03407.png"
        string_val: "../data/Validation/Run_0001/images/frame_00426.png"
        string_val: "../data/Validation/Run_0001/images/frame_03587.png"
        string_val: "../data/Validation/Run_0001/images/frame_00489.png"
        string_val: "../data/Validation/Run_0001/images/frame_03494.png"
        string_val: "../data/Validation/Run_0001/images/frame_04856.png"
        string_val: "../data/Validation/Run_0001/images/frame_03221.png"
        string_val: "../data/Validation/Run_0001/images/frame_04836.png"
        string_val: "../data/Validation/Run_0001/images/frame_02532.png"
        string_val: "../data/Validation/Run_0001/images/frame_02811.png"
        string_val: "../data/Validation/Run_0001/images/frame_02924.png"
        string_val: "../data/Validation/Run_0001/images/frame_01755.png"
        string_val: "../data/Validation/Run_0001/images/frame_02295.png"
        string_val: "../data/Validation/Run_0001/images/frame_04079.png"
        string_val: "../data/Validation/Run_0001/images/frame_00337.png"
        string_val: "../data/Validation/Run_0001/images/frame_04376.png"
        string_val: "../data/Validation/Run_0001/images/frame_04232.png"
        string_val: "../data/Validation/Run_0001/images/frame_04621.png"
        string_val: "../data/Validation/Run_0001/images/frame_02668.png"
        string_val: "../data/Validation/Run_0001/images/frame_02468.png"
        string_val: "../data/Validation/Run_0001/images/frame_02161.png"
        string_val: "../data/Validation/Run_0001/images/frame_00212.png"
        string_val: "../data/Validation/Run_0001/images/frame_01211.png"
        string_val: "../data/Validation/Run_0001/images/frame_02279.png"
        string_val: "../data/Validation/Run_0001/images/frame_00082.png"
        string_val: "../data/Validation/Run_0001/images/frame_00125.png"
        string_val: "../data/Validation/Run_0001/images/frame_00477.png"
        string_val: "../data/Validation/Run_0001/images/frame_02100.png"
        string_val: "../data/Validation/Run_0001/images/frame_02949.png"
        string_val: "../data/Validation/Run_0001/images/frame_00423.png"
        string_val: "../data/Validation/Run_0001/images/frame_03501.png"
        string_val: "../data/Validation/Run_0001/images/frame_01823.png"
        string_val: "../data/Validation/Run_0001/images/frame_03161.png"
        string_val: "../data/Validation/Run_0001/images/frame_01989.png"
        string_val: "../data/Validation/Run_0001/images/frame_04714.png"
        string_val: "../data/Validation/Run_0001/images/frame_02060.png"
        string_val: "../data/Validation/Run_0001/images/frame_00648.png"
        string_val: "../data/Validation/Run_0001/images/frame_04028.png"
        string_val: "../data/Validation/Run_0001/images/frame_01805.png"
        string_val: "../data/Validation/Run_0001/images/frame_02815.png"
        string_val: "../data/Validation/Run_0001/images/frame_02146.png"
        string_val: "../data/Validation/Run_0001/images/frame_00327.png"
        string_val: "../data/Validation/Run_0001/images/frame_03855.png"
        string_val: "../data/Validation/Run_0001/images/frame_01022.png"
        string_val: "../data/Validation/Run_0001/images/frame_04140.png"
        string_val: "../data/Validation/Run_0001/images/frame_02319.png"
        string_val: "../data/Validation/Run_0001/images/frame_01048.png"
        string_val: "../data/Validation/Run_0001/images/frame_04915.png"
        string_val: "../data/Validation/Run_0001/images/frame_02027.png"
        string_val: "../data/Validation/Run_0001/images/frame_03668.png"
        string_val: "../data/Validation/Run_0001/images/frame_02369.png"
        string_val: "../data/Validation/Run_0001/images/frame_02642.png"
        string_val: "../data/Validation/Run_0001/images/frame_00722.png"
        string_val: "../data/Validation/Run_0001/images/frame_04106.png"
        string_val: "../data/Validation/Run_0001/images/frame_03366.png"
        string_val: "../data/Validation/Run_0001/images/frame_00908.png"
        string_val: "../data/Validation/Run_0001/images/frame_04666.png"
        string_val: "../data/Validation/Run_0001/images/frame_04771.png"
        string_val: "../data/Validation/Run_0001/images/frame_03256.png"
        string_val: "../data/Validation/Run_0001/images/frame_03322.png"
        string_val: "../data/Validation/Run_0001/images/frame_03869.png"
        string_val: "../data/Validation/Run_0001/images/frame_04482.png"
        string_val: "../data/Validation/Run_0001/images/frame_03702.png"
        string_val: "../data/Validation/Run_0001/images/frame_00304.png"
        string_val: "../data/Validation/Run_0001/images/frame_04409.png"
        string_val: "../data/Validation/Run_0001/images/frame_02798.png"
        string_val: "../data/Validation/Run_0001/images/frame_01985.png"
        string_val: "../data/Validation/Run_0001/images/frame_00036.png"
        string_val: "../data/Validation/Run_0001/images/frame_00276.png"
        string_val: "../data/Validation/Run_0001/images/frame_02905.png"
        string_val: "../data/Validation/Run_0001/images/frame_00045.png"
        string_val: "../data/Validation/Run_0001/images/frame_04192.png"
        string_val: "../data/Validation/Run_0001/images/frame_03140.png"
        string_val: "../data/Validation/Run_0001/images/frame_04327.png"
        string_val: "../data/Validation/Run_0001/images/frame_00924.png"
        string_val: "../data/Validation/Run_0001/images/frame_04738.png"
        string_val: "../data/Validation/Run_0001/images/frame_00428.png"
        string_val: "../data/Validation/Run_0001/images/frame_00096.png"
        string_val: "../data/Validation/Run_0001/images/frame_02991.png"
        string_val: "../data/Validation/Run_0001/images/frame_00507.png"
        string_val: "../data/Validation/Run_0001/images/frame_03163.png"
        string_val: "../data/Validation/Run_0001/images/frame_01936.png"
        string_val: "../data/Validation/Run_0001/images/frame_00814.png"
        string_val: "../data/Validation/Run_0001/images/frame_03364.png"
        string_val: "../data/Validation/Run_0001/images/frame_03266.png"
        string_val: "../data/Validation/Run_0001/images/frame_03567.png"
        string_val: "../data/Validation/Run_0001/images/frame_02341.png"
        string_val: "../data/Validation/Run_0001/images/frame_00891.png"
        string_val: "../data/Validation/Run_0001/images/frame_04268.png"
        string_val: "../data/Validation/Run_0001/images/frame_03183.png"
        string_val: "../data/Validation/Run_0001/images/frame_02211.png"
        string_val: "../data/Validation/Run_0001/images/frame_01789.png"
        string_val: "../data/Validation/Run_0001/images/frame_04337.png"
        string_val: "../data/Validation/Run_0001/images/frame_00024.png"
        string_val: "../data/Validation/Run_0001/images/frame_04854.png"
        string_val: "../data/Validation/Run_0001/images/frame_00460.png"
        string_val: "../data/Validation/Run_0001/images/frame_00780.png"
        string_val: "../data/Validation/Run_0001/images/frame_00321.png"
        string_val: "../data/Validation/Run_0001/images/frame_00904.png"
        string_val: "../data/Validation/Run_0001/images/frame_04899.png"
        string_val: "../data/Validation/Run_0001/images/frame_01710.png"
        string_val: "../data/Validation/Run_0001/images/frame_01331.png"
        string_val: "../data/Validation/Run_0001/images/frame_03110.png"
        string_val: "../data/Validation/Run_0001/images/frame_03463.png"
        string_val: "../data/Validation/Run_0001/images/frame_03158.png"
        string_val: "../data/Validation/Run_0001/images/frame_01492.png"
        string_val: "../data/Validation/Run_0001/images/frame_02509.png"
        string_val: "../data/Validation/Run_0001/images/frame_00767.png"
        string_val: "../data/Validation/Run_0001/images/frame_00518.png"
        string_val: "../data/Validation/Run_0001/images/frame_04925.png"
        string_val: "../data/Validation/Run_0001/images/frame_03825.png"
        string_val: "../data/Validation/Run_0001/images/frame_04885.png"
        string_val: "../data/Validation/Run_0001/images/frame_03533.png"
        string_val: "../data/Validation/Run_0001/images/frame_04893.png"
        string_val: "../data/Validation/Run_0001/images/frame_04728.png"
        string_val: "../data/Validation/Run_0001/images/frame_03404.png"
        string_val: "../data/Validation/Run_0001/images/frame_04578.png"
        string_val: "../data/Validation/Run_0001/images/frame_02367.png"
        string_val: "../data/Validation/Run_0001/images/frame_01425.png"
        string_val: "../data/Validation/Run_0001/images/frame_02512.png"
        string_val: "../data/Validation/Run_0001/images/frame_01799.png"
        string_val: "../data/Validation/Run_0001/images/frame_04900.png"
        string_val: "../data/Validation/Run_0001/images/frame_03844.png"
        string_val: "../data/Validation/Run_0001/images/frame_02353.png"
        string_val: "../data/Validation/Run_0001/images/frame_00707.png"
        string_val: "../data/Validation/Run_0001/images/frame_00118.png"
        string_val: "../data/Validation/Run_0001/images/frame_01870.png"
        string_val: "../data/Validation/Run_0001/images/frame_04735.png"
        string_val: "../data/Validation/Run_0001/images/frame_02652.png"
        string_val: "../data/Validation/Run_0001/images/frame_03690.png"
        string_val: "../data/Validation/Run_0001/images/frame_03037.png"
        string_val: "../data/Validation/Run_0001/images/frame_02615.png"
        string_val: "../data/Validation/Run_0001/images/frame_01320.png"
        string_val: "../data/Validation/Run_0001/images/frame_01964.png"
        string_val: "../data/Validation/Run_0001/images/frame_01202.png"
        string_val: "../data/Validation/Run_0001/images/frame_04561.png"
        string_val: "../data/Validation/Run_0001/images/frame_04157.png"
        string_val: "../data/Validation/Run_0001/images/frame_00961.png"
        string_val: "../data/Validation/Run_0001/images/frame_04078.png"
        string_val: "../data/Validation/Run_0001/images/frame_02929.png"
        string_val: "../data/Validation/Run_0001/images/frame_03846.png"
        string_val: "../data/Validation/Run_0001/images/frame_04533.png"
        string_val: "../data/Validation/Run_0001/images/frame_04740.png"
        string_val: "../data/Validation/Run_0001/images/frame_00271.png"
        string_val: "../data/Validation/Run_0001/images/frame_04401.png"
        string_val: "../data/Validation/Run_0001/images/frame_00536.png"
        string_val: "../data/Validation/Run_0001/images/frame_05023.png"
        string_val: "../data/Validation/Run_0001/images/frame_04152.png"
        string_val: "../data/Validation/Run_0001/images/frame_01736.png"
        string_val: "../data/Validation/Run_0001/images/frame_00519.png"
        string_val: "../data/Validation/Run_0001/images/frame_01707.png"
        string_val: "../data/Validation/Run_0001/images/frame_01645.png"
        string_val: "../data/Validation/Run_0001/images/frame_01368.png"
        string_val: "../data/Validation/Run_0001/images/frame_01257.png"
        string_val: "../data/Validation/Run_0001/images/frame_02131.png"
        string_val: "../data/Validation/Run_0001/images/frame_00223.png"
        string_val: "../data/Validation/Run_0001/images/frame_02472.png"
        string_val: "../data/Validation/Run_0001/images/frame_04543.png"
        string_val: "../data/Validation/Run_0001/images/frame_00598.png"
        string_val: "../data/Validation/Run_0001/images/frame_02315.png"
        string_val: "../data/Validation/Run_0001/images/frame_03283.png"
        string_val: "../data/Validation/Run_0001/images/frame_04983.png"
        string_val: "../data/Validation/Run_0001/images/frame_04197.png"
        string_val: "../data/Validation/Run_0001/images/frame_02471.png"
        string_val: "../data/Validation/Run_0001/images/frame_02823.png"
        string_val: "../data/Validation/Run_0001/images/frame_03873.png"
        string_val: "../data/Validation/Run_0001/images/frame_00086.png"
        string_val: "../data/Validation/Run_0001/images/frame_03104.png"
        string_val: "../data/Validation/Run_0001/images/frame_00072.png"
        string_val: "../data/Validation/Run_0001/images/frame_04188.png"
        string_val: "../data/Validation/Run_0001/images/frame_04752.png"
        string_val: "../data/Validation/Run_0001/images/frame_00724.png"
        string_val: "../data/Validation/Run_0001/images/frame_04680.png"
        string_val: "../data/Validation/Run_0001/images/frame_03969.png"
        string_val: "../data/Validation/Run_0001/images/frame_01299.png"
        string_val: "../data/Validation/Run_0001/images/frame_00180.png"
        string_val: "../data/Validation/Run_0001/images/frame_01948.png"
        string_val: "../data/Validation/Run_0001/images/frame_02447.png"
        string_val: "../data/Validation/Run_0001/images/frame_01026.png"
        string_val: "../data/Validation/Run_0001/images/frame_03011.png"
        string_val: "../data/Validation/Run_0001/images/frame_03611.png"
        string_val: "../data/Validation/Run_0001/images/frame_02224.png"
        string_val: "../data/Validation/Run_0001/images/frame_04987.png"
        string_val: "../data/Validation/Run_0001/images/frame_04784.png"
        string_val: "../data/Validation/Run_0001/images/frame_00020.png"
        string_val: "../data/Validation/Run_0001/images/frame_04378.png"
        string_val: "../data/Validation/Run_0001/images/frame_03468.png"
        string_val: "../data/Validation/Run_0001/images/frame_03035.png"
        string_val: "../data/Validation/Run_0001/images/frame_02968.png"
        string_val: "../data/Validation/Run_0001/images/frame_03998.png"
        string_val: "../data/Validation/Run_0001/images/frame_02865.png"
        string_val: "../data/Validation/Run_0001/images/frame_00760.png"
        string_val: "../data/Validation/Run_0001/images/frame_02837.png"
        string_val: "../data/Validation/Run_0001/images/frame_01467.png"
        string_val: "../data/Validation/Run_0001/images/frame_04857.png"
        string_val: "../data/Validation/Run_0001/images/frame_00161.png"
        string_val: "../data/Validation/Run_0001/images/frame_04791.png"
        string_val: "../data/Validation/Run_0001/images/frame_00734.png"
        string_val: "../data/Validation/Run_0001/images/frame_03604.png"
        string_val: "../data/Validation/Run_0001/images/frame_03983.png"
        string_val: "../data/Validation/Run_0001/images/frame_04463.png"
        string_val: "../data/Validation/Run_0001/images/frame_02000.png"
        string_val: "../data/Validation/Run_0001/images/frame_00498.png"
        string_val: "../data/Validation/Run_0001/images/frame_04904.png"
        string_val: "../data/Validation/Run_0001/images/frame_02908.png"
        string_val: "../data/Validation/Run_0001/images/frame_03378.png"
        string_val: "../data/Validation/Run_0001/images/frame_02427.png"
        string_val: "../data/Validation/Run_0001/images/frame_01537.png"
        string_val: "../data/Validation/Run_0001/images/frame_04674.png"
        string_val: "../data/Validation/Run_0001/images/frame_04134.png"
        string_val: "../data/Validation/Run_0001/images/frame_01517.png"
        string_val: "../data/Validation/Run_0001/images/frame_00644.png"
        string_val: "../data/Validation/Run_0001/images/frame_03728.png"
        string_val: "../data/Validation/Run_0001/images/frame_01433.png"
        string_val: "../data/Validation/Run_0001/images/frame_02844.png"
        string_val: "../data/Validation/Run_0001/images/frame_03526.png"
        string_val: "../data/Validation/Run_0001/images/frame_03465.png"
        string_val: "../data/Validation/Run_0001/images/frame_01886.png"
        string_val: "../data/Validation/Run_0001/images/frame_02998.png"
        string_val: "../data/Validation/Run_0001/images/frame_03106.png"
        string_val: "../data/Validation/Run_0001/images/frame_02405.png"
        string_val: "../data/Validation/Run_0001/images/frame_03424.png"
        string_val: "../data/Validation/Run_0001/images/frame_03638.png"
        string_val: "../data/Validation/Run_0001/images/frame_03273.png"
        string_val: "../data/Validation/Run_0001/images/frame_02862.png"
        string_val: "../data/Validation/Run_0001/images/frame_04689.png"
        string_val: "../data/Validation/Run_0001/images/frame_04521.png"
        string_val: "../data/Validation/Run_0001/images/frame_04369.png"
        string_val: "../data/Validation/Run_0001/images/frame_00193.png"
        string_val: "../data/Validation/Run_0001/images/frame_01073.png"
        string_val: "../data/Validation/Run_0001/images/frame_04398.png"
        string_val: "../data/Validation/Run_0001/images/frame_02606.png"
        string_val: "../data/Validation/Run_0001/images/frame_02269.png"
        string_val: "../data/Validation/Run_0001/images/frame_03331.png"
        string_val: "../data/Validation/Run_0001/images/frame_01737.png"
        string_val: "../data/Validation/Run_0001/images/frame_04002.png"
        string_val: "../data/Validation/Run_0001/images/frame_04341.png"
        string_val: "../data/Validation/Run_0001/images/frame_03004.png"
        string_val: "../data/Validation/Run_0001/images/frame_03789.png"
        string_val: "../data/Validation/Run_0001/images/frame_03947.png"
        string_val: "../data/Validation/Run_0001/images/frame_03678.png"
        string_val: "../data/Validation/Run_0001/images/frame_00682.png"
        string_val: "../data/Validation/Run_0001/images/frame_04700.png"
        string_val: "../data/Validation/Run_0001/images/frame_00968.png"
        string_val: "../data/Validation/Run_0001/images/frame_01855.png"
        string_val: "../data/Validation/Run_0001/images/frame_00956.png"
        string_val: "../data/Validation/Run_0001/images/frame_02443.png"
        string_val: "../data/Validation/Run_0001/images/frame_00947.png"
        string_val: "../data/Validation/Run_0001/images/frame_04937.png"
        string_val: "../data/Validation/Run_0001/images/frame_00061.png"
        string_val: "../data/Validation/Run_0001/images/frame_00006.png"
        string_val: "../data/Validation/Run_0001/images/frame_01224.png"
        string_val: "../data/Validation/Run_0001/images/frame_02672.png"
        string_val: "../data/Validation/Run_0001/images/frame_00794.png"
        string_val: "../data/Validation/Run_0001/images/frame_01860.png"
        string_val: "../data/Validation/Run_0001/images/frame_01191.png"
        string_val: "../data/Validation/Run_0001/images/frame_05011.png"
        string_val: "../data/Validation/Run_0001/images/frame_00533.png"
        string_val: "../data/Validation/Run_0001/images/frame_00165.png"
        string_val: "../data/Validation/Run_0001/images/frame_03069.png"
        string_val: "../data/Validation/Run_0001/images/frame_04441.png"
        string_val: "../data/Validation/Run_0001/images/frame_03475.png"
        string_val: "../data/Validation/Run_0001/images/frame_04351.png"
        string_val: "../data/Validation/Run_0001/images/frame_03785.png"
        string_val: "../data/Validation/Run_0001/images/frame_01366.png"
        string_val: "../data/Validation/Run_0001/images/frame_01095.png"
        string_val: "../data/Validation/Run_0001/images/frame_04110.png"
        string_val: "../data/Validation/Run_0001/images/frame_01302.png"
        string_val: "../data/Validation/Run_0001/images/frame_00539.png"
        string_val: "../data/Validation/Run_0001/images/frame_03488.png"
        string_val: "../data/Validation/Run_0001/images/frame_03119.png"
        string_val: "../data/Validation/Run_0001/images/frame_04549.png"
        string_val: "../data/Validation/Run_0001/images/frame_00809.png"
        string_val: "../data/Validation/Run_0001/images/frame_01478.png"
        string_val: "../data/Validation/Run_0001/images/frame_04293.png"
        string_val: "../data/Validation/Run_0001/images/frame_00935.png"
        string_val: "../data/Validation/Run_0001/images/frame_02254.png"
        string_val: "../data/Validation/Run_0001/images/frame_00692.png"
        string_val: "../data/Validation/Run_0001/images/frame_00369.png"
        string_val: "../data/Validation/Run_0001/images/frame_01809.png"
        string_val: "../data/Validation/Run_0001/images/frame_05048.png"
        string_val: "../data/Validation/Run_0001/images/frame_00206.png"
        string_val: "../data/Validation/Run_0001/images/frame_02489.png"
        string_val: "../data/Validation/Run_0001/images/frame_01935.png"
        string_val: "../data/Validation/Run_0001/images/frame_04580.png"
        string_val: "../data/Validation/Run_0001/images/frame_04570.png"
        string_val: "../data/Validation/Run_0001/images/frame_03649.png"
        string_val: "../data/Validation/Run_0001/images/frame_02456.png"
        string_val: "../data/Validation/Run_0001/images/frame_01074.png"
        string_val: "../data/Validation/Run_0001/images/frame_00748.png"
        string_val: "../data/Validation/Run_0001/images/frame_01727.png"
        string_val: "../data/Validation/Run_0001/images/frame_03032.png"
        string_val: "../data/Validation/Run_0001/images/frame_03492.png"
        string_val: "../data/Validation/Run_0001/images/frame_00077.png"
        string_val: "../data/Validation/Run_0001/images/frame_03834.png"
        string_val: "../data/Validation/Run_0001/images/frame_01931.png"
        string_val: "../data/Validation/Run_0001/images/frame_00910.png"
        string_val: "../data/Validation/Run_0001/images/frame_00641.png"
        string_val: "../data/Validation/Run_0001/images/frame_02562.png"
        string_val: "../data/Validation/Run_0001/images/frame_01170.png"
        string_val: "../data/Validation/Run_0001/images/frame_04550.png"
        string_val: "../data/Validation/Run_0001/images/frame_02164.png"
        string_val: "../data/Validation/Run_0001/images/frame_00084.png"
        string_val: "../data/Validation/Run_0001/images/frame_04600.png"
        string_val: "../data/Validation/Run_0001/images/frame_03013.png"
        string_val: "../data/Validation/Run_0001/images/frame_00749.png"
        string_val: "../data/Validation/Run_0001/images/frame_03259.png"
        string_val: "../data/Validation/Run_0001/images/frame_03093.png"
        string_val: "../data/Validation/Run_0001/images/frame_00897.png"
      }
    }
  }
}
node {
  name: "tensors_1/component_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5095
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5095
          }
          dim {
            size: 4
          }
        }
        tensor_content: "O\037\361>\310}\275?\354\243\323>Y\332\261\276\326\024\243?D\031\306?\013\010\345>\310[\256\276\364\305\215?\341B\004@\300]\346\276\261\336\320\276;\001\243?9\234\267?,\2661?\213\377\353\276q\014w?\242\324\362?R\360T>3\215\006>t\r\365?\250\001\331?\306\205\303=\253\352\275>W\036\031?6<\277?\364\2440?\235\327\230\2759\244_?\035\037\247?\023\361F\276Ow\216>!\337\350?hz\221?\251\2052\276\\\0350?\242\306v?8\237\312?\367r\377=m\2209>u\035\221?\217\216\323?.\306,\277\373\006\276\276~\234\334?\326\255\300?\233\251\330\276\305\214\270\276\033\036,?\t\211\252?\264\005t\276\333M\024?(2i>\206\217\270?\002J\213\276\370\375{>*)\260??6\345?\212\253\352>\370\371\033\277\202\200\372?\300\317\330?\252\234\022?\216\0363?F\310\341?W\353\274?\355\017\354\276\324\n\363\276\320H\237?K \271?\243[\317=H\026\020?\361\276\205?D\334\232?\026\276\336\275E\366\341>L]\360>\001\210\313?4/\247>\343\342\260>\026L\356?\265\306\312?6\004\367\276\235L\254\276\235]\236?xB\325?\254\341\312\276\323\274\253\276\234\370\202>\317\203\343?\260;\225>LO\340>!NE?T\032\217?S!6\277/i\254>\357\007\327?\310\226\002@\r\343\326>w\331\'?\314\307\353?3\374\257?lCE\275}>\322> \276\370?H\303\251?\321u\021?\340J6>\233C\302?\257]\330?\306\341\024\277\217\372\037?m\257\300?\244\374\244?C\0044?\310\261\035?8\033\356>\364\277\272?p\006\277\275S{1?\353\367\211?\317\371\315?\315\002\005?\316\305?\276\262L\277>`\352\307?\243\002\237>i\033?\275\376\255\026?_\357\320?3\214+>\354\300\271\274}\033\225?0\022\216?g\325\'\275|\267y\2761\345\250?\'\372\326?\001M\034\277e\246t>\033\370\226?\006\272\266?\271\0321?x\233\217\276\242\177\323?n\374\327?\254\217\007=\323\024\021?\312\362\345?W\260\233?\260s\007?\024\256\357\276[\272\375?\347\337\304?\232\013\024\277\210L\371\273`\332A?6;\332?\270\313\376>\246c\026\277\271\377\352?!X\263?\220\327\033?\231-1?\204\310\314?\204\363\257?\314*<>R\235\016\277\333\023\235?\"\247\301?\241\020\211\276k\363\037>\215\352\031?\356#\367?\016Oo\276\\:\246\276A\252\001@\362\356\224?$\227#\277\314C&;aj\204?U\024\231?\301\036S\2755\353\010\2773\303\316>7S\301?\327\243`\276e\375\"?\360B\020?Z\361\311?\313\363@\276\000\3769\276}\230\300?\2346\361?d\2560\2779*\027>B3i>\364\334\346?\300\256\022\277\264\217\225>\244\006\315?\341\321\350?\376\n\231=\220\367\002?\322\200\267?\360\332\315?u\002\"\277\305\252\351>V\335\310?:\315\246?2\346\036\276\270W\n\277\260\240\272>\242\357\300?\016,??\237Z\215\276\3605\347>\232\320\260?jM\017?]\027\336\276E\177\217?\177\245\313?\215\354\032?\016N\034?-0>?\366\007\244?:\313l=\'\237\376\275\253\3153?j\274\330?\266J\000?[\354\366<9\014\236>qT\304?\037\204\200;\036\306\254>\002\243\326>\027c\366?[\260\374>\373\006\226\276\205%\264?\007\014\330?\224\244[\276\350\365+\277\265\302\232?B\\\327?\010\343\'\277\363\256\002\277k\202\233?\235\177\311?f\205\232\276\316T\370>\360\221\210?p\262\327?\177L\263\276^J%\277@eQ>\376\235\231?\2276\334\276\245\026\026\277J@\254>#\242\324?i\214.\277\250\305\300>\t\203\277?\230h\306?\247\\\031\277\n\276\031\276hY\333?\300\225\350?z5(?\3127\233\275\370\303\017?c\355\275?\254\001\342\276(-\224\276U\030\344?\214\327\330?IK\205=\010\312\375\276\342\177\237?}\222\243?)%\204<\234l\303\275\332\334n?\257Z\323?\rT\006>\366|M=\002\357\301>\200\233\251?\325#\035>\372\2274>\376\342\023?;\214\347?\327\241z>\222\257\344>\372\031\250?\256\360\310?\375k\271\275\220\236\002>\033\304\343?\315\260\343?qt-\277\341\267\021>\354~\344?\352\006\264?\363\312u=\267\r#>\267\366\257?\304\261\342?\007\355\305\276\267$\033\277M\300\032?\303a\313?U\334(?\305<+\276\350{\235?W\227\311?\220\244\234>\353\252 \276\007\304\t?\224\336\307?\346\254\037>\213N\246\276\364\236\251?\311\216\261?\262H;?$\227?=\010\010\231>\223\307\275?\001\371:\277\037\333\022?\261tq?\353\213\256?\036T\302>k\017k\276\214u\273?\356\315\337?\321\352t\276>=\266\274\277\251*?\310$\247?\177\335\005?u\351\033?\"\004O>[$\277?\351\267\257=\302\371\004\277\031&n?\006G\323?\214\025\365\276\245/\004\275\242\236\231>\233\306\302?\335\316\006\277\3437\245\276\262j[?C\306\353?\013\317\313\274E\233\313\276Fn\331?p\265\352?\224\3006?m\3121?K\357\237?\317J\360?\325\316p\275\216s\243\276\371\002\225? }\337?v\342\n?\233\313\355\276\037\016\007?\020!\312?\220/\211>\235+\022\277\312 \271?-\223\305?\304\257\370\275n\302}=\017\202\261?\202r\303?^\020A>en\n\277\251X\353?\004\343\270?VHY\276\264r\337>\344\264@?\222\006\341?\tln\276;6&?\244O\244?\205z\276?i\031\301>\0220\352>\203\324\377?\305\215\353?\237\3460\277o\273\360\275y\234\346?R\362\224?\365\0223\276u\314I\276\006\306\270?V\364\345?\276\366\010\277\322\034\005\277c\357y?\027\364\246?\356\314\234\276\227\312\033\276k\037`?\020=\275?\354/\203\276\370\210 \277\353\346\275>\256.\313?\331x\024\277%\312\356>\277{\324?\004u\232?`>)\276\203\276\364>\267\256\303?H\245\302?\340\235\\>3\032\021?\264s\364?\320B\270?z\034f>\240\246*?\361\204\n?z\340\275?8/>\276\030@ \277\026\307\206?\263\225\305?\316\215i\2766wT\276\334\204\347?\351\n\314?\022i\013\277\272\366\355>~\023\217?\366\233\321?\355)\231\2763S:>\330l\346?Ot\233?\241\277\350\276Ug5:Tl\211>6=\320?O\224\304\275\215\354\032\276\\Q\357?\266\202\312?\244\245\372>)\354\212\276\334,\376>\350\366\330?\'\026\034?Z\360\022\276{\275\345?L\303\326?\n\024\251\276\023b\016\277\016u\310?\026\211\233?\003?j>\003\356\035?f\327\262?&\343\270?\034\322\030\276wM\350\276\334\017\340>\341|\316?\362\260\004?\034\013\032?\351\265\226?W{\274?bH\206\276\214\025\245>\327\251\363?\251N\301?\301\340\006?\222\316\360\276\337\211)?\304?\314?\212\004\323\275#\026\351\276\230\000\023?\006\364\254?\375\274%?\200dj>1[R?Y\334\321?\246c>?\177\240\234\275v\300\202>\211\t\300?\255\332\265\276]4\254\276\3232\250?@\245\342?Z\360\002\277\374\305\324\276b\316\355>\225D\260?\312\340\200>\237\310\323>\221x\026?\221\231\323?\031\311\036\276sh)\277\265{<?\315;\240?\017{A>\312\300\001?\246\\V?\034\352\335?\210\362\215>Yl\353>\343\260_?\216 \267?\351c.>\251\335/?/&\341?+\367\260?\277H\030\277J\2310\277\277\367\310?\367v\267?\215\264\324=\rl\001?9\221I? \264\266?\372\266\300>\022\237\303\276\273u\000?}\313\254?vR\237>Q\372\342\276\232C\256?\311;\277?\256\201\021\277gc\r?\2418\320?x\263\320?oI\366\276s\364\330\275\201\\\n?\277\234\277?\005n-\276\'\206\344\273VDF?|\232\303?\2129\014?\366b\020?\260\256\272>L\377\320?\357\034\352\275\023-\201>a\343\357?g\361\322?\241\364\r\277\256\363\017\277\354\345Z?\016\020\254?\016\366&\277\366\321\311\275\243\000\332?\303c\321?\274]\017\277E\325/\276t\303U?\372\263\361?\230\366}>\351\324\225<S\226\325?6\253\302?\355\357 ?_\265\252>\256\236\317?(\235\312?\001\212!?\242F\341\275U\033\357>x)\355?O\003\002?\251\210\033?\262\'\250?\335_\277?\221`j=\036T\002>\207N\301?\351d\311?\357\252+\277\267y\243=0\320\346?z6\247?\270\222\001?6\260U>\323\t\n?\301\215\316?\203\333\332=\323\243\211\275T\217L?C\342\352?LS\034\277\243#\301\276\277\367\360?J\266\264?y\351\306>\217\337\363\276\341\000\352?\007)\330?\325u\310\275\320\n\014=\200\360\221?\267\230\325?\0049\250\275\013\322\344\276\314\340\226>#g\325?\343\033J\276\\=\017?\267\272\255?\277\363\275?\246G7\277[z\000\277\354\337\211?\343\246\226?\270\311(\274\210\332\026\276\203\347\274>\236\227\300?\225a\264>E\274\255\2769\263\272>[_\304?%\346\201\276\334\331\003\277\335\351\276?\305\305\227?F\263\n\2772<6>J\302\264?\000\000\344?\321;\265\275-\'\251>\312\\\205?\376\360\335?7\372<\277\221\n#\276F!\276?\017E\315?\357\034\n?\241\021\244\276\317\302Q?\355c\315?j\276\322>Ln\014?>4\305>\336\313\255?\270\311 \277\220\334\n>\251/\355?\007\n\334?\327\024\034\277Ef\016>\271`\266?\262-\277?\230\337\221\276\004Z*\276\246\230\335?\272\020\307?\213\212\360\276\366\353\016>\246y\320?]Q\254?\'\276\032>\265\372j\276\021q\203?\216\315\262?\017^\313>Jb\311\276\370B_?\324\327\265?k\237\326>\016\276\340>E\350M?w\017\354?\363<\240\276\362\010\376>\305S\350?\013\t\276?\347\342\347\276\257@0\277\367\363p?h\315\307?\262+\315=\017\n\322>s=\027?\n\363\364?\013\361\030\277\375\331\'?*\035\336?-]\371?a4\033>\305\377\021\277\017Q\207?\377\006\327?\013\357\362\276\271\216\001\277\373F\376?O\007\312?\361\203s<g`\020?\2753\227>`w\334?M\2050?\26616>\016O\354?\256*\003@\036\213\205>\251\274m\276i\341^?\312\335\277?\334\330\324>o\201\030?\370\353\354>\376D\327?\237\252\222\276\214\023\337<G\0208?\233\001v?\r\337\272>*\217\016\277\'&\021?`\315\002@\354\336*?\254\002\265:\267F\220?\346W\263?9_\030?\374\3417\276\2402\023?\177\277\312?\356\007\274\276(\236s=Z9j>}\003\317? \322\347\276.\215?>\372\206%?\025\000\353?G\004\303>\017\232\t\277z\237\332?S\223\300?\250\035\n?\0221u\276\351<H?\301\312\327?\336<U\276\250\036\t\277o\337\022?\370\303\275?iTp>x(J=\036i\221?\026\302\264?\353U\304\275.W\227>\270\026\253?\\q\273?\010\034\261>`;\270\276\"l\371?\216;\331?s\201\333\276v\210o>AJw>0f\275?m\255\307\276^J}\276\020\000\257?\361\364\304?o\327+>q;D\276\2573\027?2;\257?\020\261\035?\215\361)?\312\020\324?;\035\316?.<;\277\347\214\250\276b6d?e\211\306?\265Q\235;\031\254x\276\320\305\326??\305\317?\316\375\325=\016\275\305\274\266|Y?\331^\265?\262\233\035\277\305\214\270\276>d$?\364M\256?\033\270\027\277\263a\375\276\363jr?1\357\305?-\2638>\177\026\233>z\336n?\335{\304?=_\033\277\243?\224\276C\000\220?\033\241\327?\205`\375>o\331!\276\311%=?\n\334\354?\272\367\020\277Z\273m=\326\343:?\033\365\304?\322\217\216> \325\230\276\301\313S?\342\005\341?S\256p\276FE4?\330vp?\242\317\325?\276\0264\275\321 u\276[\013.?\271\214\367?$a\277=\237!(?te\213?8\023\301?Ov\013\277\363\310+\277~WW?C7\257?\315\261\274>\022l\010?\360k\366?\271\247\273?\360\374\202>^\204-\27701\251>\006\366\334?\227\254\212:zT\000?3\r\314>\221+\303?\304A\036?\247\255a>\224\343\377?U\207\270?\254\003 \277\266\277\233>\313H\243?\367:\231?\210h\254>^\275\212=\024X5?\225\267\341?\000\035\266>\2656M\275\036\265\347?\260=\233?\346 H>\251\023\360\2757`b?\001L\265?\333\242\214=\373\315\304<\221_$?\034\226\320?\0047R>\"\246t>\313\347\326?&\341\336?Id\257>[\321V>\330\"\343?2U\310?\004\221-?\257\'\242\276d\214\270?|\360\332?Yn\311>J|\016?\353\276\226?\367\253\260?\351~\006?\367\257\374>\325\031i?`\307\275?T9]\276\031\004\036?\374?\366?\265\213\267?+\022\303>\257@t\276?\314\203?\326\252\303?Mg\'=\331\320\255>\017\261\352?\005\207\251?\353\213\034?\245\022\026?\223\370\233?\010s\277?m\345\005>\264\221\363\276X\231\257>\303\233\277?\366\265\016\276e\374\373\274\260\301;? }\237?\213\373\027?\021T\345\276\353\324\304?\273\265\324?\375f\026?.\215\307\276\326i\265?9\230\317?T\346f\276\267\013\031?\247ef?\026\372\260?\205_:\277bL&\277\302t\000?\274\353\346?\001\3404?\321u\031?\2430\255?: \273?,\274[>\201!k=~ \214>\202\250\251?hz\211\275\314B+\276J\236\332?\330\363\307?K\3506?\271R#\277\233\345\332?\220I\346?r\212>>\205\225\212<D\201\311?\344\365\346?Zb\305=9}\315\276\354\323w?\377X\266?\323\237->\216[\214=A\372\343?\237\312\275?6Y#<\253\\\034?\3219\216?\245\367\335?\254\345>?\0219]>\032\264m?\230\334\302?X\001n\276\340\205\315\275\337sw??S\301?\276\336}\275F{\030?\332\233\326>f\364\355?\014\002\023?\251\205\222\274\036\370\253?K<\270?*\2513>!\346&\2773\207]?\271\245\277?+h.\277\271\375\002>_@\350?\212\253\340?\334\016\265\276\003\263\302=\332i\315>\030\230\303?\032\247\005?\327\332\023?\'S\350?\020\263\277?\024A|>\272\365Z=\014\376\013?H\372\266?\242z\373\276\264W/>\033*\233?-z\365?\325!\227\276\242\016\243>\244HD?;\337\351?\225\364\330>\232D\r>Q\322\034?\020\260\322?\206\220#\276\354\336*\276\226\322\324?\'\277\345?6\350+>dx\224>\177^\202>U\027\300?6\312\332\275\263\316$?\246\321`?k\017\361?A\2330?mu\311\276\t\3210?\332\000\312?W\350\023>\016g\366\276\246\232\225?\275q\346?o\327C?\273\'\177\276\010\037\300?\\;\237?B$\373>\302\245C>C\224N?\301\036\313?\235/\266>F~=\276\245\206\304?\247=\357?\270\221\302\276\325Z\330\275\257b\204?,\327\257?Gv\245\274\004\004\007\277\224~\302?\3065\246?\332X\221>\002K~\276 \007\376?xb\242?\035U\275\276\230\301\250\276\\\203\344?\204f\331?\010ZQ>?\250\333>X\017\274?\024=\332?Z\273\021\277\210f\276>\262\325\271?\262\327\273?u\312\313\276\221b\020>-\032\206?\373\222\341?E\023\030\276\017\231B>\325x\237?\374\306\263?^\201H\2767\246\007?U\337\362?\205w\365?\306k\032?6\225U\27661\224?G\254\217?\211\007\244\276lZ\021\277\\\334\354?\276\203\313?\326W?\277t\321\004?\231\301\033?\373[\314?Y\026@?\330\363\265<Yg\277?,\014\321?\330\177\225\276h@\355\276\354-z?\274\003\340?\021\341\307>R\n\006?@\247\361?h\224\332?\327\205\357>\265\376\216>m{\257?qY\365?\232]\013?\366\230\210>\352?\227?\334\273\334?S\313\026\275\327\334\321<\364\263\277?\245\203\273?\207\374\363=\002\240*\276\363?\232??\255\326?\347r\203\275p\317\017\277y\322\245?\264V\264?=\'-\277\201\350Y\276\017Sm?\254\310\300?\317\207+?Y\371!?\340\377\327?\315\347\244?y=L\277\233\253F>\365%\266?D\303\346?t\\\355\276\257\356\330\276\263{\276?\374\344\310?\276-\300>\330\273\377\275A\340\233?\260\003\305?@\246\001?Q1\036\276o\316\325?\\\220\267?3\244\242>e8\036>\016K\361?,~\307?a\304\226\276\271\307\016?\256\216\260?b\365\223?\350\207\301>\371\273\307>\276\220H?\232\265\304?\322r,\277=\362\237>\334\014\200?\372\360\240?\370\335$\277\024\\\274>9\330\356?K<\346?\024\230\032\277\275\306&?\237\226\302>\231K\334?\210G\302\275\032\031\214\276Z\364\250?z\027\247?\233\252?\277\377^2?a\372^?\312\251\357?LQ.?\t84>\367C\257?\026\300\230?\345C \277\030\262\006\277\342D\245?79\324?X\343\354\275}vP\276>\235\001@\377B\307?\366\354i>\005\030\326\276\364\002\363?EF\327?\003Bk\275\226\262\000?\235\341\256?w\022\253?\377\257\332=\345\200\245>\354\007B?\344\276\303?H\212\200>\340H <\023\262\370>\341\r\231?\375j*?PP*\276\312\331\010?\340\022\266?w\2043?\372\356\356>zMp?\332\312\343?\027\266\306>r\212^\276\r\314\271?9\t\307?j3\036?\'i\016\277\352J\352>a\247\306?k}\t\277\240\207\032=\206?\300?|\362\270?\220\3003\277\\\346D>\357oh?B\n\266?\217\214)\277\214\332\005?\031\230\257?\245\333\302?t\013\r\276d\0361\277\022o\240?\003\314\276?m\343\357>\324\326\030\277@gw?\314B\321?\327\336\337\276\232\260=\276\343\265\263?\245\205\303?!@\206>\212U\223>:\344s?\030y\261?\306\3748\277<i\201\276uV\257?\236\316\273?\337j-\277 \324\025?\377\341\177?\326\376\340?\215\013\347\276\333\246$?\004R\311?\317\021\305?xD%?\237=7\276\374c\353?\306\212\264?\233\257\342>%\004+\274\210t\270?\034\322\304?\211\013\000\276\216\351I\275\036\316\006?[\357\357?\035W\203>\245g\016\277Z1\207?\010v\320?\360\207\237\275G\260q\275\355\334\221?\312\336\316?\033.\032?\034x\t?\2005\363?\241\017\276?\246{\215\276\337\341.\277\376\027\240?C\033\272?\352^\027?K\351\025\277\202\271\234>\352B\324?NB\231>\030\010\362\2762\324\327?MK\276?~\220%\275\222\256\231;\334\341\357?\013\323{?Uk\035\277\270#\014\277\217\262\264>pz\347?\244\3064>\013$\030?\336\334\201?\232?\344?*\033\306>O\260\317\276\363\354\247?\217\376\315?\272\275\334>\364\247\215>a\215*?$\321\333?jk\024>1\315\224>\010;\275>s\367\341?\226\\\315>\223\311I>\205}f?l\321\350?\344\022\367\276\273\271\200>\373F\350?\360\301\311?\243\345\034?\020\222)\277\375\302B?\000u\263?8e\276>n\241\033>/~\344>\240T\313?[\2657\277\224\204\324>T*2?\330D\256?\273E\024?\276\3343\277\010\n\233?\251\023\314?5)\225\276\362\323\310>a\021\024?[{\331?\353o\221>\351\016\322>\273\206c?\225-\274?a\376\252>\'\372\014\276\374\327\017?\333\334\322?b\367]=Y\244\025?\205X\n?c\177\365?\031\221(\276)&O>\203\342\202>\244q\266?\262\325I\277\034\266\335\276\031T\201?\027\323\270?\317\236\027?t\231\332>\032T\226?4\271\324?B\320\001>HR\022\277TQu?5\230\320?tF\224>\030\006(\277\232\317\247?\354\206\323?\034\225\223>C\341\223\276\372<\213>\'L\256?\240\303\334>W\004?\275+\253\252?\336X\316?\036\374\304>\305\346\333\276O\r\336?T:\254?L\341\341>\221\324\302=|\376\254?\337\212\322?\016e\014?\353\344\254=\271\330\301>=\356\355?\212Z\232\274\311:(\277\316\362\326>\010\260\310?\013&n\276\274!\035>\374\3657?\230\370\275?\017\324\r\277;\252\232\273\237}\361?\351\324\323?WvQ>\364\030\315>D\252\361?\244\250\301?3\210\217<\202\036\212\276\257I-?2\034\317?\256\020F\276\201Y\t\277\372\263\272?\032\027\220?\326\344\251=\377\351\266>5\354\247>>Y\275?\213\0337\274\312\301<\276k(\313?\341b\315?\374\340\214>\276\275\253\276\2339\336?\001\212\337?P7\360>\274=,?-\276\333?=\230\336?B\355\327\275\335\010\353=\341\337v?\311Z\215?\267|\020?~\030\321>\347\316\323?\366z\343?4g\001\277.S\003\276\177\341\314?\273}\226?\250\341\303\276\021\306\017\275\320\tY?\021\303\300?\211C\306\276\300\350\242\276\317\261\355?p[\335?\332T\021?9\361\035\2775>\366?\211\232\274?\312\336R>o\234\004\276\377\234\266?\024$\300?\253\005\036\277bj\273\276\263_#?c\013\277?[\357\227\275\006h\273>G\231\256?\245h\267?G\221\325=?U\245\275\016\026\351?\301W\250?\214/\032\276\325\3541\276\005\360t?\265\250\273?\252\020\023?ZGu\276\217\ts?Eg\367?z\212\314>\233Z\226>\365\025\331?\353\305\266?X\252\243>C\221\246\2767\202\361?\307\363\311?\250\310\005\277\203\245\272>z\363\223?\266\021\373?tB\014?j\210j=\323uo?%\353\316?\001n\226<\303}\000?\216$l?\204\324\271?\320\322\335\276\262\274\303>\037\363\271?\022\245\277?\021\306\'\277 \226M>\243\372\274?\245\366\274?\356{\324\276s\3310\277\036\321.?Y\304\346?\2071=?tE\025\277\2355\201?N\231\367?Re<?kFV>h\027\327?b\205\323?%\346!?\355\232\220\275\370\360F?\3165\376?\331[\n=\0014\212\275l\342\303?\352\315\256?NFU\275\034\3532\277\340n\\?~9\t@\344\272\005\2778i\262>\364\235\271>\233\036\324?\007B\"\277>&2>`\020\343?\363\000\260?\231\237\027\277\321x.?\247\016a?i\342\333?\010\343+\277\rPZ>e#\022?\201\226\334?P\3748?\302\204)\277\305\013\356?\016i\314?\300\256\006>o,h=/\256\343?\367!\305?\371\243\230\276\203\3726\276\253\340a>z\306\312?\024w\274=\353p\364\275\273\300\371?\270 \275?\355\327\205>_^\030\277\325n\233?\343\033\302?\224.\265>z\304\014?!D=?\313\333\337?\265\251:\275\321\226\213\276-^x?\320\322\307?\336\036 ?\267{\371\276\002\001\320?\226?\335?Re<?\206\342N>\314\177\234?\232?\364?\347\033%?e\310\261>\271M%?\374T\305?\333\243\367>O\0375?\035A\217?nm\251?C\214\377\276\325\257\004>\352\022\346?\372\263\345?S\316\007\276\371\370(?W\265\207>\204\364\364?k)$?s\237\020\2777i\343?{j\331?]m\305<P\211\253=a\360\334?s\204\326?CX\t\277\231\233\367\276\337\277\266>e\306\263?\375i#?m\310\013\277\266\312\202>\356\353\266?Zf%?\306\367\315\276\273\342C?\317\364\256?E\017\224\276\340\204\022>\'\005\216?\311\346\314?\227s\r?\274\352\201=\343Z\373>t\316\275?\241H\033\277\275U\027\277\300t/?\236\007\247?\001/\263>\216\"\003\277f\020\000?\330\235\306?\244m\334\275\232yR>\177\327|?\3269\252?\2657\004?n3\355\276\307z\227>}\003\333?E\022\205\276\314\361\272\276\370\350\305?\203\277\315?\252\271\\\275\225+\374\275\025\262\374?\344\241\273?\000\307:?E\271$>f\304\374?\237t\350?\374\374w:\327N\234\276K\344s?s\272\322?\021\343-?\341)$\276\351:\376?\n\201\306?\227p\260>^\203><~\270\367?7\341\314?/\246\031<\277\356\254>\032h\353>^\362\301?\266\240??\234\336\345\275N\323\227?J\317\330?\023GN>f\242\240>\222z\243?\234\025\337?\307\271\245\2761\353\325>\307\257A?\005\210\326?\366\356/?V\203\360=d\255a?\277\234\307?\340\362\220\276=EN=\307\267\274?O>\231?\362\261\273=JD\034?\205<\221?\016\367\265?\376\234\342>u\260\336=\310\331\227?>\316\264?U\204\273=\376*\014\277\352\363??\365\017\262?\3017\001?\277\271\377\275\327\220\206>%>\257?\010\343G\276\226\006\032\277\361J\n?\225\265\325?F\tz>\254\343\360\276\027g4?\354\301\326?\000\002\366>\265l\255>#C\275?\267\321\344?\344\022\217>^\204\211=\262\220>?\311\000\330?e\337\255>\013C\004>\373\257\'?|\357\273?m\251\223\276\240\372\367\276xK\211?\205\225\334?2sE\277C\255\031>\272\030\330?\030x\302?\211@\005>\337\213\257>\020\200\345?\'\335\276?\tO0?\330\235*?\310\203\223>\023\362\313?\204f\357\276`\004}>\343&Q?\023\014\317?\355\357,\275S\225\026\277\310\310\036?\350\332\253?\353\217<?i\376\230\273\316\237L?\"\376\265?\316lw>-\223\211>\303\274\237>o\275\002@\377\005.?\236\227:\277\232\332\332?\304B\301?\307\274\036>\313\362\275\276\372\016\n?\021\247\307?g\230*>\315v\205\2734\t\210>@O\225?\276\331\346=5\007H>\021\253\213?\324\325\331?\007\264\364\275\025\035!?;\254\216?\022\241\311?$d$\277\355F\013?kS\331?E\236\304?\2072\224\275\345}\374=\'\231*?7\000\267?\270\003\325=\001n&?m\213\331?\200}\320?\204\232\241\276q\037\331=.`\320>4\020\273?y>\213\276nM*?\245\250\246?\313\332\350?6s(>M\334J\276\331\017\330?\263\316\242?2U@\276B\314\345=\032J\252>L\340\312?\200\323K\276+\210Q>\332\231\356?\203\246\265?\372\232\t?\013\322\034>E\314\320?\224\333\256?\213T$\277\270\351O\276\302W\022?\256\327\270?\265\335\224>\035\311\345=)\307\327?\352\263\363?G\005\326>\032\333\013\277\272{\320?U\372\255?C\215\322\276\350\237(?G\005U?\\\223\240?\336\254\025\277\254\377\263\276\344\271\313>b/\264?\246\3227?h \n\277\364\306\266?\203\023\335?\204\240\263\276b\363\261>\2035\343?X\216\316?b\242\261\276\021\215\356\273\313\373#?\366D\227?\304B-<D\210{\276\227\364\305?\271S\276?\247\"\r\277A\327\216\276B\356j?\353\253\313?>\317\317\276\337\375\231\276qM[?S!\336?\244Rl>\253\225\351\276\347w\263?\233\000\323?\016h1\277(+\246=\217?\367>\331@\342?\020@\016?\211#/\277\260\037\n?\312\305\306?d\2234\277)\t\211;\257\357\366?\236\267\253?\3400\021\275\341|\362>\373Q\336?p\260\355?f\025\226>x\234\026\277I\t\246?/4\305?\243VX\276\025\031\005\277\301\276o?\221\200\221?<1\303\276$d,\277?2\362?7\212\330?\336\000\013\277\037\366\372\276\255\323\032?\036\301\345?\233Y\003??\345\340\276\320o\350?\350-\270?rj/?,D/\277p\335c?\333O\314?\254\250\341\275\010u\371\276B\325\237?y\037\313?+\337\243>\013\n\023>6;\362>\336Z\356?\277~<?\177\026\017?$\275G?\222Y\307?B\350p\2767\3733\276,\207\001?\232^\346?\r\304r>\243V\010\277\r\275\246?|\267\263?\\\252\016?<\021\000?(\226\001@\225H\220?\376|\373\276(a\276\276\"\304\257?M\020\311?\265\247\244\2769\014\032\277\304\352G?\331\315\352?\n\024-\277e\246\374>>Bh?C9\255?\300Z\021\277\361I#?\211e\376?p\"\240?\222vS>KZ\261\275\303Z\226>\'\372\326?\340\242\223\276\006d\217=\243!\313>\033J\207?\206\001K>\234\333\334>B\341\271?\355c\323?\364\032\333>\214f-?\212t\347>s\270\260?/\212:\277D\370\337>&\365\013?X\251\304?\216\345\r\276w1\315\273^\270\312?\255O\265?,(\354=\313\240\032\275\314~\303?7\377\267?\345\354\365>\036\251\376\275.\251\346?z\245\244?\327\300\036\277\r\212\316>\201\n\377?\222\255\330?\374\250\226\276[\'\216\275:\276\214?\311w\261?F|\007?Tp\330=\344y\342?\272\236\326?\300\316\235>\266\202\226\276\206<\372>\236\355\317?\253@\345\276\352\222\361\275\313%\273?\226%\320?W?\006\277\354\030\023?\301\235\215>-#\275?TU\340>\"\250.?M\336\355?]\031\260?$`\344\276\027\273\365\276O\204\017?\202\214\276?\2612\202>l\320W\276@a\332>\261\303\312?(\323\220>\020\006&\277\032\254\353>\234\300\266?\363\215\004\277\367\346\327\275A\232>?\277`\267?q\313\307<\'\335\026>{U\236?7\303\273?\240\032\037?\034|\005?\321\200h?\r\211\311?\250\254\022\2775{4\277\212\"\177?\206\257\337?+\207f\276tEA\277q\236\223>\032\373\330?\222\3164?\371\365\013?\373.\373>\333\334\234?p\316h>;\035\310\273^\340\321?&Q\243?l\230\035?HP\224\276\344\327\347?\213\211\341?\373>\264\276\006\201E>\016\027H?]\251\247?5^6\277b\327\236\276\325\017\260>\312\030\233?\307\274~\276I\022\004?\240\240y?\370\244\267?\223\036\376>\275\247\"\277\240\226\253?\336\000\311?E\267\336<Ox\021\277\3061\302>\'1\314?\200\330\262>{g\264\2754\261\202>,\327\327?\362\355\265>\366\324j\276\213\313\312?-\'\253?A)6?\374\340\374\274\216\r(?%]\275?\026\371\365\276f\025\326\275\227\230\365?\271\215\316?\230l4?4\333\021?\2040\272>\371\241\254?o\200\231>\013a\001\277\351^\212?\356%\307?\260\035\204>\010\255\267>\2332\020? {\213?\371\203\251\276\270\313^>\355Ri>0\366\316?*X\353>\206\345\377>\365(\243?/\250\305?\324\230\300>\315?\002?6h\025?x*\334?F\356\321\276\371\366\256\276\226\313\236>R\267\317?\213\373\003\277\\V\251\276t\373\177?\336=\272?\\\346\034?MH\013>\242\010\000@l\316\307?\251\243\343=\273\t.\277?z\202?*\342\320?\016M\231>\257CU>R\205.?\314\177\336?\3061\212>\206\037,\276w\310\273>DL\307?\304\007>?7q\272\276O\\\216>\255Q\263?$\230\212\275\232B\033\277\231\023_>t}\243?o\3658\277n\026/=dI;?\224\371\261?B!\002\276\2610\334\276\306\273|?m\342\252?S$\327>\376*\000\275\\\235\226?\237\220\315?\0366\t?\020\"\271=\014+\215?\262\023\260?3m\003?\235g\324\276\375\007\"?\361\237\330?\2240+\277\270\"\361\275> l?\035 \340?\246\232\311>\\\310\017?ph\314?\3601\250?U0\252\274\237\343c>\341\250\272??\306\352?\013\2300?\023\014\207\276\377\002\274?\337\303\277?\361\365-\277\257\260 \275\203;\253?)Y\272?\3168\215\276\336\003\014?\277,\020?m6\276?\372C\203\276\245-~\276\3605\357?\377\222\272?\212<E?\320C\355>yQ\261?\347P\322?\210\017\254\276V\014\377\276-\310\333>&\303\325?U\026\325>\301\0345?=\270\317?\033\366\213?b\365\027?\2201\377\276\301s\333?B\t\363?\204.Q\276\022\023\010?\227\354\253>\252\016\347? A\221=PV\224\276\371y\251?(C\277?]\305\342\275\204\326C\276\212\310\340>}<\332?0\270\036\277\006\023/>i\344o?\031\307\320?\t\246\312>G\252\247\276\t\332\311?\014\346\265?\202\221\227=\033\271\026?\030\2066?j\371\341?\362`;?f\026\331\276-\251\244>\003\007\316?:\221\220>\313\3707\275\034Y\224?$\235\315?\217\212\033?X\001\216\276\024\375\243>5\320\326?\303+=\277\237\220%\277Fp9?\332\033\262?c\nv\276\313\333\261\276\021\237)?em\367?\315#\277=J\'\222\275\004\272\346?\344\207\300?.8?\277\325\".?\316\267_>\203\030\226?S\312\333\276\322\373F\275\317\361\252?\365G\214?3\032\025\277\212\256\323\276\310n\374?\311U\334?\205\006R>\014\037\031\277\025\352\316?\326p\255?\3021\373>r\214\024\277>\r\177?\327\204\236?\266\332\013?[D\344>%\373Q?\254\346\004@OxI=\226]P\276\307B)?\274\350\003@\317\367\003>\026Mw\276\023\327\334?\311V\365?\004\033\357>\267\320\225\276[ \216?\302\244\322?\335\320\314>I\203\033\276V\030a?\360\370\242?\033\275\032=\330\232\275>A\231\013?F[\261?\323k/\277\271\336\002?\345\207 ?\265\302\310?!\223l>\204\274\016\276\037d\336?Q\205\317?\227u\307\276\"o\031?\001\267\320>\0008\232?\000s\215=|\361\205=\204\257}?\001\247\327?\306\336\353\276\363\253\221>\255QV?\211\013\264?\344\365\340\275m\002\354\276{\341A?\342\344\314?\035\253\224=Ie\202>\025\345B?\005\243\262?\226>\274>\t\030-\276\n\227\331?m\251\321?\300{\033?\343\247\035\277E\260\371?=\231\253?\031\310\027?\027\365\231\276N\023)?\264s\304?\306\304\022?1~\002?B\202\260?c\325\244?e\373\200\276\325\350%\276#\371\300?\271r\272?a\335\004\277\201\\\016?\271n\332?\370m\226?\212:\353>k)\260>\332\213\r?\004\344\315?\215B\n\277\362\226\033\276\036\267\025?\023\326\316?[\316\245<\223\216\016\277\264,V?\211\225\303?Xo\014\277\033\276\325>\340+\217?\200H\273?R\n2\277\211\'\003\277\\8\237?\007|\300?\326q|\276\357\214\022\277\222u\300?\310\267\367?\345D\333>\023H\231>\005\307\314?9*\341?:!\224\275E\017<\276\356\200\210?\325\006\245?<\242b>\3329=\276=a\315?\255P\254?o\362\273\2765\320\364\276k\363\033?\334\272\313?\3122\274>\270\"\221\275i\'\247?\\8\274?\037\276\354=\333\244b=v\242\205?<\336\256?h^\006?B\224\317>j\235\267?L\305\002@)A3\277\\9\333>\301\255\243?\276\277\235?\311\002\356\276iR\272\276\360\201\026?v\375\342?L\030\031?E\r\366>d\346j?W\262\321?\371\205;?\002\233\263\276\370\355\002?)\314\241?\227\344P>\321\007\007?l\016\321?\200\234\306?\207\372\005?\322n\234>?\327\242?\350\244\265?\177\301\306\276H\335\016?\204s\\?S\257\261?\262c+?y\254\t?n\r\n?\344\331\303?L\341\201\276Doq\274\245,\342?.X\322?)\263\341\276\256,\271\276w\332\264?\224N\322?)\260\024?M\371\310>\244\323\272?\255\210\264?\234\247F?\331\010\314>X\256\332>\237\220\315?6\221\231<\335\262\213>\223G\353?\006\366\256?+\211\004\277\347\027\375>\016\026\276>\300\226\277?v\300\025?\271\215\236\276\261\033\321?g\232\276?7q2\276\314\230\312>Z\337n??\344\237?\365i\005>\265\3354?\237`e>\246\230\261?Jy-\274\355\014S=\'\206\330?}?\225?\362\232\267>{\335\212>Q\344\221?5$\272?\016\242\225\276\017\013\025\276\207I\025?\234\304\346?\340\274\350>\320\322\205\276\370\306l?\346\223\275?\177\372\037?\376e\267>l\344\307?\tN\317?\233\376\244\276\024\223\023\277\016C\343?o\202\375?\344.\222>\304$0\277e\006\230?}^\255?O\261\032>\034}$?\360\235\365?\347V\246?\300\004*?\250r\242>\354\343\244>\027\272\340?,+\005\277\2075\025\277\337\225\235?\230h\304?\250\0316\277\343\373\212\276_\212\203?\373\311\302?\030\354\n\277L\377\022>\231\336\321>@3\330?\304|\341\276\326\346\037?)M\265?\356\225\335?Y\244\021\277\342\000\242\276\237\312\301>\263\360\273?\221\265*?\232|\037\277\376\227T?\315\313\257?p\3567\277}?\031\277\'\232\035?\314\263\274?\273H\301>B\263[\276hC\205?/k\276?\315\224\306\276\273\325\363<\204\025\336?\224/\276?\333\367\310\275\302\373z><\210\330?\032\212\273?\237q!?\2342\027?\323\300\207?\334,\254?J\225,\277\311\306\253>wg\345>W\321\317?\266\274&?\253=\000\277\2315\313?3Q\236?\307\272x\275\035\260\'?5\242N?\000\252\352?]5+\277\213\213\203=\316\245\350>\252\322\262?\242\013\022?\234\335\036?O\254\024?\235\270\324?_\r\260>\"P\365>\206X\301?\034^\314??9\252=FEl\276\307\244\340?\177\276\337?P6\315\276\253\226\304\276K\271\301>XU\263?\314\270\361>\253\317\265\275\200H\207?\355\017\272?\210\276+\277\370\336\317>\021\264\266?\234\030\304?\360\206$\276\274zU>\017c\016?\322\246\324?\362`k>\263\315\365\276x\326]?\355c\277?\001\337\255=\315\"\024>V\200\347>\275p\315?;U^\276\310\321\324\276\303\250b?p&\276?\351\r\327=\204f\017\277A\027\233>\007y\327?\350\367\375\2752\035J\276\247`\354?n3\351?HQ7>H\207\227>\035\201v?6\351\342?7\033\033>T\345\033>\276D\301>\3579\310?\241\235\333\2768,}\276\312\213\304>\014\006\301?\325\351\350\276\177\300\007\277\007\035b?j\332\263?#g)\2776\225\005>\256\321\227?\027\r\235?\225\r\353\274\355~\035\277\255v\263>\300[\304?-\227!\277\340\2020?+zE?\3171\266? )\242\276\371/\030?\026\212\307>\375\301\264?\314y\006?yu\016?9\362\210>\2031\352?\377\353\324\276\214\237\026>u\274\361?H\372\334?\352\317.?\241\362\207>R\375U?\301\375\304?{\020\006\277\265\025\013\277p\323\250?Ku\263?C\311 ?\357\214.?\361\377\231?\370\373\277?\240S\000\276N{\352\276\305\256\254?\240\213\312?9\322\371\276\300\010\006?\2752\324?W\257\326?y\036\234\2750h\035?\032\300\225?\341\265\235?\013\010\021\277\351~\022\277r\225q?\252\014\357?\356%\r?\331\315\214\276\361\364\232>\270\005\327?\242\353\032?\324F\225\276\300\333\016?\033.\302?3\026\031?\313\276\353\275N\226\305?\230\024\000@\221\200\r\277\"\3072\277\200\300\016?9d\275?\3060;\277\214j\221\276\246\'l>zP\306?\021n\002\276\222\010)\277\225l\203>\350/\356?\210\2709>\364\250 \277\\H2?GW\335?\353W\332\276\262\021\220\276vf\000@U\373\276?\035\314\276>I\3307\274#6\303?\354\022\323?AF\300>\020[\n\276\317\256\233?\335$\304?\326\217)?\314(\006?\010\203\231>\320\266\340?\234\3004\275\237\350\242\276\340\013\366?h\226\342?9\321\206\276\021\375\002?\236\224\260?\253@\317?7l\037?\316\306\252=\342\301`?\013^\352?si\314\276M,\010\277Y\372\324?#\363\236?J|\356\275D4z>\3115\354?D\027\326?\204\1771>\026\025\221=\016Z\326>\206\002\326?\336\343 \277F\231\r=43\366>oJ\235?K\221l>\237\343\253\276\034\265\240?\200-\251?;s3?Hlw>\rRp>\235\275\353?:\317\030=\322\253\241=]\230\235?\361,\257?v\250v\276\242\n\033?@b\300?\331\\\301?l\"S>\342t\342\276\362Z\224?a\337\370?:\351\375<R\272\254\276\223\233\375?\220\210\311?\266\242M\275\205\353Q\276u\'\327?\366\265\312?m\220y>\336\2572?\312Ug?\205\357\267?\272\236(?\350\244\003?Wn\205?\206<\360?\000\221.?\233\001.?%\361\250>\234\025\305?\304w2\2762\312\313>\020\033\263?^+\307?\265\251\036\277$%\305>\210\257\330>\020u\347?\301\255\027?\352\010\030?x\205\333?\265\304\000@i\214\206>73z>t?\014?\374S\322?S#\364>\2135l\276\217N\234?q\004\333?2\3431?\331\263\217\276\234\277\231?\251\023\322?<\274+?V,N\276\302\260\360?\003\317\317?\337\251\024\277G\037\303>L\343\262?T\303\316?\356]s>\200\016\273\276>\003\262?$&\232?=\325\351\276G8\355>jH\305?\277\323\264?\240\244\300;(\n\364>e|n>\017G\365?l\tY>\356\005\366\276H\273\302?g,\254?\265\0257?\220M\252>\032r\367>\247\\\010@Ujf\276\210*\374>)o\361>\304\"\236?\340\016\304\276M\240\004?M\363\323>Cr\274?a\372\036\276\246\017\r\277\024)\004?\025\217\335?\214+\356=\003\353\020\277}\341\364?\235F\216?\263\264S\276\201A\372\276#\301\261?A\323\246?)\224\325\276I\022\204>~\317\351?\203\207\317?\334\177\264\276\023\020\323=y\335L>8\202\274?\234\371U\273\351\013\371\276:\226\226?\244l\313?<2\266>b\237\014?\361\213q?L\305\320?x\232\004?QJh>q\036^?\300>\336?T\311P\276,b\030>=<y? \227\254?\321\006\210>\275S\021?#\301O>\225\265\301?:>\372\275\257@\364;\013\234\307?n\213\322?D\375\326\276\304\\2>\030h\325>\220\244\220?\301t&?7\216\000?X\021\315?\355\231\313?px\231\276\327l%>\"\377\300?\304\353\344?_\356;\277\263\263\350=\306\367\253?\250\252\252?\213\212\340>G\377\313=\373_\341?\242\325\323?\n1\227=\335\2324\275iyq?4\272\315?\264[\373\2765_\205=\306\331\311?S\007\265?q\035\333\276\004\215\211><\303\333?5@\353?2\036\275\276\325Y\255\275\377\350#?\025\342\273?\032\304\357>\002\021\342\275\275h\215?\324\234\224?\265Q-\276\241-\037?t+\201?tF\346?\264!\377=\270\007a\276z\3125?\202s\314?\220\202\227\276\374\250f\276Mq\223>\213m\252?\3226\256\276\356\\\270\276;\030\234?\261l\244?\276\365\211>\3232\002\277\215B\250?\222\\\362?-^\214>\267\320!?h\301\325>\322\215\324?\031\255\023?\2761\024\276\013x\206>\210*\272?\007\321:\277C:\334=\031\307\202?\345\014\335?\275nQ\275\260=\023\276Ps\032?\206\350\336?r\032.\277/\335\004>x\367\213?\314{\340?|\265C>\327K\023\275\247Y\370>L\307\254?l\006\000? \317\356=\027\2315?\267\r\243?\325\351\220\276@M\t\277hD\346?\264[\275?m\256\016?\277\236\007\277\335\'\033?\036\371\303?\035\223\005\275,-\263\276\0335\025?\224\366\300?\251h\234\276\320\013\217>\252\034\213?q\217\323?\327m\320\275\240\210\265\276\375\005\252?\235\332\257?\024\227\353\276\231\365\332>&M4?\261\371\320?r\341\200=H\376\300=\350\252\367>\007\356\364?%\003p\276\303,@\277r\3426?\020\223\266?UM\220\275G\221!\277PPB?r\300\320?\003C\206>\252\362\225>\025z\250?\312n\314?\247\262\014\277\022\023\364\275\010\314\371?&\216\320?\025t\273\276@\022\366\275\320Q\245?\362z\274?Nae=\376D\315\276\207m\033?\017}\311?\342\222/\277<\025\260\276S\366|?\216u\315?\236\231\340\274jP\354>\262\376\337?=)\343?\n\330\276>a\335\210\276\215\344D?\343\374\253?\267\317\032\276\321\222\027?\004^\217?\002K\256?\277\323\010?\361\363_<\007\352\264?\312\025\326?\t\250\260=t\265\025>`m\223?\0052\313?\354\212\t>_\267\020\277\032\242\315?z\304\312?\255\300\360\276\351\234\037?\001\3014?\302\370\363?\374\336\256>\233\220\002\277\333\344\211?\312\302\257?\006\022\364>\226&\335\276\323ZS?\377\353\302?(c0?p\265\306>\367\362\243?qs\302?\350.\271\276s\022\362\276\306\225\271>\255\027\267?\"\342\306\276\030\321*?2\"\271>\027\014\254?DR\013>3T\005\276\233w\277?\221\320\306?SX\351=\026ib>42\275?\032\246\314? \353\025\277\250T%\277\203\212\345?A\272\330?\013_\217\276\254X\304>\267\351\000?\327\331\350?\242\265\016?\t\207\336<\206:\000?\231\021\262?\022\336\326\276\370\215#\277\034\226\240?\312k\327?\247\005+\277@L\022?M\324+?\006*\311?w\023L>\271\343]\276\00773?\231\240\326?dW\332>\365\016\007\276)\322\352?\366F\277?\232\226\330\275t\007\371>\373\017\217?\270\345\231?\017\'@\276\032ok=#D\206>/\030\346?\\\350J=T\342&\277/\243\220>\313M\250?\243<\343>\373?\007=\266\277\331?=\016\245?\266\236\261>\3638\014\276\007\255\324?~7\253?3\030\363\276;\306\305\276\354\267#?\277E\213?`\352\'\275\374Q\364\276L\344E?\027\272\314?\222>\355=\343p\316\276U\035\375>I\242\271?-\227\255=\230\337\301\276\2303\315?s\274\254?\254\035)?8i\212>=x\242?\177j\330?(C\325>\203\246\235\276Z\010\243?\034\355\334?}\221\360\275\263#\205>(k\252?@\030\354?]\375\030=\214\327\274\276\250)\\?\301\001\223?U0\006\277\353\247\377\275>\372\230>\323\277\302?oF}>\343\343\363=C\243\211?\231\324\310?.<\317\275U\023\374\276\356F\206?X\312\340?L\303<?,c\037\277]\341\316?\240\026\335?\334\201\272\275\314{<>D\340\274?\006g\230?\021r\n?\246\355_\27527\206?\202\033\257?6\315#?\203h\235>\314\373\330?\211\266\307?X\216\250>\n\020\205>)\266\271?\267A\333?m\3433?:A\023\277\310(\177>D\212\313?YL\354\276|\355\211\276\014\235\375?\3705\334?\270u\357\276\027\016\014?\346\264R>\264u\003@\0162\221>\017\r\203>\222eK?\267\231\342?\251\371\222\276R\357\311>\0005V?#\026\303?\020\263G>\001M\004?e\241\350?Q\364\302?X\254\271> \270\022?\256\323\303?Q\273\303?X\222\274>DR\037?\266\335G?\232x\361?\342\3107?5\3240\277 @\303>\237W\302?i\217\'>j/\202=_\360 ?\206W\304?U\370\253\276^\273\344\276r\275\322?\031\347\321?\002a\307\275\370\306\320\275\024`\003?8h\325?\027*\307>>vW\276\023F\367?\201\263\254?\024\354\013\277\363\257\035?>\341\210?\215\231\312?n44\277\000\000\000\000\tN%?\365c\237?\031\003\323>\233q\312>\340\223\260?\037\331\274?@\371[>\373\037 \277!\267J?F\006\331?3\304\261<K\310\027\277\240\211\312?k\236\275?\254\305\247840b\276\333\234\337>x\321\325?d\315\030\277\250\032\035\277\256\361\273?g\n\275?\365\363f\275T\311\020?\321\215U>7q\252?\362|f\276\037i\004?\341L\372?\304$\310?^\017J?\237\344\336>\325\207\347>\214\326\267?-^\004?\026\333t>\367\375\342?\353\307\360?\272i\013?\277\363\313\276\352x\242?\353;\357?\366(\234\275\300Y\006\277\312\363\r?\210\326\244?\\\222\263>\276-\370>\017\320\310?\207\210\267?n\244\224\276\346\346\023\277\311?\230?l\354\254?\334-\351\275H\213\273\276P\352Q?4h\332?\322:\312\275N\232\026>\302g\226?X\312\244?\355\0212\277M/\001?c(\225?\214\020\326?<\300\003\277\006\205\251>\206\342\325?\246\232\257?B&\321\276\355\r\236\275\2778\310?\342[\310?\271\2129?\203\276\364\275\214WS?\032P\231?S\004\300>\2657\270\276D\033\337?\237\000\350?z\373\033\277MN=\277w\343\255?\276\332\002@>\2248\277\341\353\253>>3\344?\320\264\005@\202r;>8\275+?0\033\353>\177\336\334?z\376 \277!!J>\347>t?\030\t\251?\255\276*?\234\336E\274*\270\346?\224\373\263?,\271:>o\237\025=/\n\354>\353t\320?u\223\020\277o\326\370>\233\232\314?`\310\316?\355~E> y\207>\336\r8?\267b\333?\327\246\021?\241\364\375\276\357\275\005?\0220\356?\2717\027?Hj!?vF\335?W\\\366?\201|)>\014\225\377\274\310\347\"?C\343\331?~\217Z>\362\227\026=|\030\024?\252C\350?\034\357\216<D\024\023\276\332\033D?\200e\253?>\312\250=\213\211\r?J\023\321?\037\235\344?`\"\376\276\304\230 \277\261{\372?\177\365\262?\306\371{\2760G_>\225\r\271?\273\177\266?\204\327>\276\3024\234>\275Q\235?\330I\303?+\374=\277\264\343\032?\265k\212>B#\312?\005\370\"?X\376\214\276m\311\200?_\356\243?V\330\374>e7\033\277\361\202\014?\246\016\370?\245/\204\275\327h\341>\262\375~?\372\360\314?\250\216\375>\222\346\013?\314/~?a\251\346?7\245\374\275\327\245\246\275\204c\362?\240\334\302?\200\rx\276K\345\355=\336\017\250?\007\232\267?Sz\026\277z\302\252\276\323\213U?\271\026\301?q\347\002\276\037\333\222\275\303\235\373?e\305\250?\334\267:>\267\014\360\276\275~\202?r\374\256?\207\244\002?#\363\200\276\213\023,?\302\302\303?\217\216k>9a2\276\221i\304?\031\221\300?{\240\025\275\026/\006?<F\240?o\325\313?\030\353\213\276RI\375>\\Y\274? ]\302?l|\006\276\022\331\027\277\016S\272?\220h\316?\315v\205\275\261\300W\275\333l\250?QJ\332?l\263\035?\266\021\033?\221w\277?\350\237\276?\003\n\r\277\336\346\035\277\216\017\365?3\305\232?\2236\335\276\263\322\344\275 \241I?\352\224\245?K\222\207\276\363Z\211\274\201\361\363?\374\253\275?\277\270\024=k(u>|\r\235?G<\275?l@\204\273\204\201\307\276\036b\343?\225\357\303?c\271\035\277)@\000?$x\310>\245\202\364?\231\240&>\\\003\'\277\260H\207?\363\217\302?\304\355,?\214\206\264\2767\'\332?R\231\216?*\376\357=qv\353\274\267\363\240>=\360\351?\225\361\247>\311\310\221\276)u~>#\273\270?F\355>=\217P\027\277%\n\334?mU\330?8I#>\333M,\277R!\205?\026\030\360?Xq\032?\207\303b>*\003\316?\251M\224?\347\251\016\276\323\205\010>\224^\203?\3232\236?hu\262\276\375k\351>s\023\302?\033\364\257?\343\247\221\276\021\305\264>\212|\302>J\316\277?\\\314\013?Ef\246\276w\267g>\246\230\271?\002\323\301>`s&?\010\231\333?n\030\267?\004Y3\277)\352\314\275\277\362\374?\332\306\321?\320\322E>\362\'*>l\000\343>\263\230\354?\336!\031\277\203\210\264\275,\347\240?\262\023\340?\365\205\220\274\250\375\326=N4\222?\217\341\301?j\300\020\2763T\325\276\342\220\315?\020t\326?\020z\006?`\260\013\277^\271\377?\010\036\313?\004\252\227>\221,\210\276\347l\272?\203\027\277?\261\031\340<\t\251\323\276\030t\273?\213P\266?\003\231->gd$\277\013G\360?\333\373\324?\205x\244<\211\267.\277\016\242\225?\231\274\253?\303Ju>\317h\'\277\370X\025?.S\323?1\006\002\2771\227\354>\274\311\344?\203\243\340?\257\013\177>\347\375o>\273L\230>\344h\314?\314@u>\026j\t?\020\321\321?\352\317\304?\360\335>\277~\303\004?\005\005,?\343R\305?\353R#\277\002~\r>Gj[?\303\r\312?\"O&?\255n\031\277\225\r\245?\025\220\236?\260:\242>\217\374\001>\201\020\240?\251\333\267?\223\250\227\2752\312\363=\341p\260>u\006\003@k\364*\277\232A0\277\371\370\020?G\221\243?<\334\266\276\217Q\356>y\270\340>\311\223\274?]Sp\276\3438\350\276\221\231\221?\331\010\334?\264\345|\276\322\253\331\2765\020:?Id\365?\0109\337\276\200\2366?K\202\"?\325<\301?OW\013\277\271\034\037\277\365\211\327>e\342\316?\347\246\205>}\003\253>\\\006/?\214\273\345?\231\363L\276\324\361\230<)\366\266><\370\345?\357\034\222\276\322\304\273\274.[\230?\202\375\323?\024%9?\365h\342\276\005l\'?\273\230\270?[\224\t\276C\034\013?\021p\230?\366^\324?{\365!\277-@[<^\362??\200\235\305?\270\347\r\2773\245\375>\277\220\255?%\256\263?e8\276\275\226%\372\276VF\341?d\005\265?c\016\202<\227\304\311\276_\311\317?\013\266\255?\'\023\267<\244\377\205\276\251\327\334?\201\007\310?\365\237%>\2648\243\276\270\nA?\274!\271?\307K\337>\204\365\257\276\305\277i>\374\030\313?\\ \025?Z\022\014\277\352\362X?\310y\333?\205x$\277(\2349\277\377\274\225?\252~\361?\226\321H=\304\223\265>\246\334\303?\237\351\305?3\215&>d\350\014?g\002\213?cD\252?B\tS>Uj\276>(.\374?\372}\311?!x\274=\356C\016>\005t\022?\010\315\336?\267}_>c\227\250\273\002(\246?Kr\324?\031\000\332>:$%?t\222\200?\304\351\314?\037\363\321>\020\347\001\276+\315\372?\337\335\302?\256\363\277>L\033\022\277A\264{>[\316\275?\247Z;\277d\2628=\355\376\347?\210\331\257?\345d&\277Z\237\262\2751\220P?\021\343\375?\371\363\355=k\021%\277\251\3014?\035\347\364?X\306\"\277\022g\335\276\2121\262?\007{\321?\033\270\003?\366y\274>\314a\223?z\377\333?)\223\016?\020z6\276\256\337\252?d<\302?\\W\314\276\347\214 ?<\373\225?\376\013\356?\341B\236< ~\216>\321\031\255>\230\030\315?\312\214\023?Na\325\276\276\263\017?\377[\271?\266\271)?N\rD\276\356\251\344?\016e\360?\211a7\276\267\234K>\253\207\250?Y\301\301?\320\362\314\276`V0?Y\202\031?[\230\307?2U\270>n\371\330\276n\303\264?\004V\254?\225\363\001\277fJ\313>5\366\305?\3537\241?\235\016\024?\311\035\336\276@\360\362?\254\033\243?\345\r\260\276\214/z\276\241S\247?[\352\244?0\016\326\276\341C\021\277d5\000@N\264\325?\363\223:?\rS\343>\346c\266?\2507\243?\202\3757\277\335^\372\276\213\267\343?\352$\331?%\347\324\276#\242\360>~\372\232?-\225\331?\340,\345\276c\356\n>\226\326z?\241\243\277?\211y\326\275\216\222w\276\215\n\260?\301\251\333?\0324t=\031\253\255=\366\327\214?{\277\221?X\000c>\211#\347>\335\321\347>i\213\343?\330\325\324\276\350\333\212\276\355\265\307?9\t\213?\356\321\313>\324\020E>t2W?\245-\240?\263\355\014\277D\244\336\276X\315\364?\013\233\367?#\020/?\207\333\t\277\2623\206?RC\275?_z\233\276\273&\244<\275G_?\001\247\331?\213m\002>=H#?\235\371\210>aO\317?\202\345\260>\264\313g>;J\311?:\311\312?\303b\024?\233T\000?b\364\340?\254\003\312?\311\255%\277\023\273\276>f\250\237?@\370\302?j\301\013<7\376\224\276wO\363?@\276\320?\376{(?y\222\374\276\365z\337?<\204\323?\217\250 \277MJ\t?\304n\307?\235L\246?\235\2766?{i\n:\000@\353?S^\327?\205^/?\254\031\361>\000\304\225>\256\361\265?\006g\220\276\275\247\222\2768\270\363?\326t\307?\310#8?\017\362:\275\271\036$?\370\214\336?a\210|\276h\315O=\343\204\254?\337\033\343?\236\010\"\277aUm>i\206\371?CV\345?\340*\347>J\264\264\276\342M|?\265\033\317?\n/\301=\262K\324>\345\240\305?Q\336\237?\242A\"?\377yj>af\206?nn\264?\350\237\340\276\032m\365\275l\327\215?\016\274\312?\233\034\336>\rU%?\246N\264?@j\277?\326\215\237>.\343&<X\303\372?\360n\225?\r7\210\276 \321\004=\211\254\201?\270\256\326?9^\201\274\031\003\233>\020\271\314?\327\275\351?\343\335\321>\220\026\327\276\"\347\356?o\324\360?\232\263>= \266\224\275\251\307\224>AF\332?\250p$\277h#\267>Ai\337?\3606\253?=\235/?\370\030\214=\253,\217? `\333?\346 x>\365\270\'?\274\347\260>B\351\303?\274y\n?\037\204\250>Q\003\242?K\261\331? \266\030?.\035\263\276\006Y|?\004\256\275?\006J\n\276\031\222\323\276k\216\205>\360j\275?V\326\216\276\227\215\236\276\211\233\247?D\206\327?\241d\">\343\341\365\276\317?\215?\3639\257?4\274\371\275\257A\347>\272\340\315?\001\332\264?\302\244H\276\004\003\230>\314\277\374?Y\205\331?\ng7<A\266L>7\343\255?1|\326?\327m\000?\257A\307\276\235\205\356?n\247\213?\254\3403\277\233\216\030?\201\"\246>\365,\314?X\250\225>.\255\306=\207\222\255?\266\276\270?\271\253\277>5C\332\276\213\376\216?\205\225\212?;U\016>\033c\347=|\251\253?\301\253\361?\000U\030?\323\203\332>\006k\347?\030\352\004@\374\306\227=anw>/\341\312?\254<\301?f\206\r\276r\246I\276\255h\273>\356`\246?\216\311\302\275\000\215\372\276%;\374?\237\221\214?\253\263\n\277(\201M\274\3306o?\322\250\344?\325>M><\204\221\275\313\202A?\213T\244?\205C\027\277\031\307 \277\300\217\211?\007\355\317?\246+\034?\324EJ>\372\010\367?$\325\337?c~\006\277oF\t\277\262\217\354?\006.\361?\224\243P\276\020\351\267\276\236\032\001?\323\365\312?\332s9?7\215]>\253\302\304?\317h\307?\206\377\030\277\225\014\340=,N@?\223\251\310?j\246\313>\277,]>\271~[?P\030\306?\264\001\230>\255/R\275\244\342\177>N\263\310?\244r??\256\324\223>\362VR>\376a\315?\354\337\265\275e\341k<$\311\301?n\300\365?OZ\320\276\350\206\346\275\250\332H?\376b\306?\344\365P\276\257\005=<\357\236\221?.\036\316?\035\310\022\277\366\267$>\370,]?`=\326?K?\371\276\013\232.\277P\234\345?\375\206\275?\333\334\010\276h\263*>\202M\233?\007\320\253?]\277\000>\225f\037?\302:(?\300\315\262?\264\347\212><\274\227\276Pp\317??\251\332?\002\235\351\275\231HY>\202.\331?@\246\331?\"m3\2779*\017\277\251U\352?p\261\332?\212\216\344\273\224h\351\275\231m\272>\'\025\271?\375\273\016>\204~*\277\333C\304>\2129\312?\351\321\364\276\373\222-\277;\001\265>3\027\274?8\3715\277\225H\n\277\010f\323>i\251\264?\\\347\217\276\nf(?\032\312,?\246\270\304?\3542\014\276\304\261\026\277\230\017\205?J{\347?u\346\236>\026\205\245>\215\270\343>\326\306\326?\016\300\266\276B\352\266\275\231\025\317?_%\261?\226\257\203>\364O\330>\025p\335?\253Y\303?\242\317G\276\300\\\213<\331ja?\330\200\334?PS7?u=\261=5\220\216?i\307\263?H1<\277\034]%<\261\345\350?\313,\326?\341\2657\277\271U\240>\242\333\253?\364\032\255?\037\365W<\216?\005\2771\341)?\2758\265?\335\354_\276O\\~\2765\300\333?\271l\306?\304%\033\277\233\034\006\277\022\215\035?}\005\311?\227\307\026?\2756\363\276\363\210\357?[$\331?_]\025=\231\267\352>m_\306?\236\007\321?\301\2475?\316\340/\277\322w\270?\210\270\327?Qk\036\277\2405\377>9\322\341?^\024\253?\007\014\342>\306\336\003?\322b\026?\007B\t@~qi\276\354\024\253\273[D\270?\372a\342?\320\200\372<py\004?\374`\347?3\373\306?\243\312\330>\225\234\223\275\205\206\004?K>\312?=}\264>\211\007\024\275\214\226\307?\364\247\243?\324*\322>v\305L\276\322\030\312?o\016\277?Lq!?\214\272\226>\351\370\203?F{\354?\005m*\277\211x+\275\022\233|?\366)\273?\333OF<j\243\n?\211$\252>i\344\255?zV\222\276P7\250>\315\377\356?\333Q\264?\000\310\t\275\t\301.\277\004K\331?Yi\274?\214I\027\277&p+=\222\204\247?ZG\265?\"\032\265>wH\361>b\305\315?{\334\267?&\2177\277\315s4\276\236h\315?\256-\350?\316\303\361\276\262ei\276\037L\320??X\252?\315Yo\276K\037\302>\365\310\355?\306N\324?\210\274)?\220i\001?[c\267?q\253\300?\037\237\210>s\270\022\277|\314\364?\354\275\240?\346\222j\275\372)\326\276t\366\365?\236`\245?\036n\207>\312\207\010?\306=d?\207\214\317?\034\267<?G\005\016?\020\032\000@rm\330?C \'?\003?\342>|\363\305?N\267\336?n0d>Cu??a\211\343?\327\301\223?\212\350G?K\000\336\275\336\032\305?\304\356\245?\362#\376= D>?MO\253>%\314\234?\t\335\305\276sc\322\276Y\332\307?bL\232?\367\313\337\276u<\326>\344,\310?Q\204\314?5\227\037?\206Y\230\276m\377Z>\230\205\256?\366\177\256=\236\354f\276\264\227h?\201$\350?\025\034\006\277Y\025\331\276\346\310\341?\363>\272?\312\210\017\277+\370)?\237#\r?\201C\246?\337\340\233\276\002\r*\277F\201A?R\327\342?x\227\013?%\037[\276\311\305\327?\013\322\242?\376\n\031<f\240\016?\236\003`>/O\345?\362\224\335\276{\366\020?8e\"?\274\222\320?%;\006\277\276i\032\276_;\031?\354\366\303?W_}\276\272\334\200\275\027h\374?\307\022\356?\244n\227>0\332#\275_\023\325>\274\226\254?\214+\036>\240\377\346\276\\\211\227?\324e\311?\023|#\276\036N\000\277|\323\034?@\027\265?V\273\276>\307\0162\277\004|]?\322\216\251?\372A\335\274\357u\262\275\360\267W?H\373\355?\232\006\215\276\273&\334>\034\224\365?SA\335?\216X[\276\202q0>\252]\236?%\226\312?V\271\260=\214J\272>!\310\236?\326\305\311?A\365o\276H\031!\277p\366Q?m<\004@\312\303\222>c\322\277>L\'\'?=\363\204?\210\204o\275\324\232.\277\373\312\223?\034\267\346?\233\376\354>\217\245/?\333\321\363?9d\225?o\022s\276\251\367\010?}\261\215?\343\034\255?\243\255\002?ff\206\275\025u\361?\331\230\303?o\0176?\377\263f\275a+\220?\343p\242?\352x\354>\030\n\270>\207\273\367?\3328\334?Sx,?\255\0268>\255\275\206?\221\201\340?\214\274\024\277\024\352\t?\377\200}>i\247\270?^\272\031\277#\333\035?\244\331\317?\245\020\272?9+\026?\304\t\264>RL\303?O\224\322?\206v\316=\333\247\017?E\322\263>7\305\327?*\2163\276bf\247\276\t\355w?\234\245\252?-\010U\276g*\244>\246f\256?\370\211\315?Vf\032?\005\340O>\370\237\035?\2300\360?#e\033\277\017\265\305\276\257\301\370?i\001\322?\'\301\353\276Y\243\016\276\305\206\276?&n\311?\266\204\010\277@l5\277\201\215y?\314\007\212?_z\013\277I\326\r?\213\274q>\2178\366?ZG\335\276\341B\002?6\353\033?o\324\256?\255k\000\277B\005G\276\370*\257?\321u\247?#J\017?\216\223\"\276\240\004m?K!\272?\356\n\r\276\327j\357>\252\034\345?y>\337?\366\264\303\276\tQ2\277P\337\300??\251\304?\354\027\010?\301\377*?\317\027\236>]\374\307?\034\232\322\275\370\374\260<;\211\200?\264\035\251?\226]\010?\274\256_\276\345}4?I,\245?\300\262\022?!@\356>\313\374\306?\343\307\266?\316\372\014?\355\020\177<\371T\212?:=\353?\327m\260\276\326\376*?`x\215>\007\013\303?H\303\005?\366\013\246\276\201\207\020?K\000\332?\002\2003?\221\363\326\276\354.L? \233\326?g\n\025?\246&\341>h\340\221?\315\313\257?\215\321\372\276|\231h=\240\177\222?\250\250\256?s.\345\276\242z\213\276\001\377\333?q=\320?1\224\037?\037\333\"\276\030m\227?\276l\273?\205\"\275\276E\r.\277\310\307p?\315\036\374?\353U\014\277\254\213\333\275]UM?5%\002@\234\246\013\277\261\373\346\276\225\026\244>P\247\336?\323J1\2774\202\355>\256\321\365?\323j\350?\264\254\363\276\312S\236>r\243\353?#\334\302?\005Oa\276t\007\231>\314tA?\034\357\276?\'1X\276 z\026\277/hf?kd\317?\321vL\276*;\37592\316\001@\236\360\266?7\211\341\275\204e\324>q~\201>\004\311\251?#h\314\275\205y\327\276o5\351?\030?\301?\371\243\010?\275\304,\277\027\311\024?\222\006\315?\371\2760?\033HG>\026\340\200?\320{\251?D\375N>~\345\031\277&\247\016?\244\337\270?\236{\037\276\232]G\276\020\233\327?t\320\347?\207\027\004\276\341\225\020\277~^??\306N\324?\332\310u=\033\2721?R\277\246>\"\372\213?\335\231\t?\000s\255\275\\\037\320?\232\356\367?\260Y2\277\177\210\255\275\273\0339?\235\362\310?\304\265\026?pB\261>\341b\024?AJ\356?]5/?\357Y\377>\255\200\237>\315w\264?\316\212h=\210\362\345\275 \352\213>\353S\304?\026n\231=\203k2?\021\224\276>\032\206\353?@\302p=7\246\023\277\027Y\210?:\353\303?\016e\030\277=H\377>\265\346\276?t\007\307?%?\272\276\353T\021\277\334\\\231?\376\360\343?1\'8>Gq\036>\331\245+?\263?\264?`\003\242>\375\330$\275\002\246&?\025\340\367?\374\215\026>s\273\007?\r\313\370?~\303\320?\242\226&\277\242\317\007\275\330\232u?K\224\333?b\300&\277\330\202\336=\035\"\337?\313\332\352?\2133\256\276$E(\277b\204\356?\250p\302?\017\t\017\276,\232^>q\237\300?\334\272\355?\251\276c>\177\205L==\232>?@j\317?\305p5>\344\364\001\277\240c}?\225\020\324?h\312\n?\341\230!\277\233\371\321?\264\256\273?\270\311\350\276\270w\215>/X\265?\331\'\274?\373\002\022?\023\265\004?\"\277g?\245\366\232?\372_.\276\371\017\301\276J\201\200?*\220\317?\211|+?\310`-?\250M\207?\024\320\304?\\\2531?7l\333\275\322\211U?\035!\325?\276\300,\277\002\271\024\277\335\210\367?\023\357\324?\3126\220=\313\237\367\276\207M\321>\033\332\236?\206\034\023?\337\250\265=5\374\203?\211\355\374?\202\312\034?\242F\331\276{\025\245?\021\212\331?\214\205\001?\006\325\226\276Q\252\220>hX\312?\236B\036>R\017!\276\240\005\201?TT\247?\317k4\277\333\205f=\223\\\274?\206\033\326?@P*?\370ns=*<+?\016\300\346?W\005\352=\226\n\002?U\261\316?UL\341?o)\027?\356\257.\277\261\203\271?\371\241\312?\242\356\373>\354\206-\276\332\363\263>\0221\367?\275R\026\277*\220\021?\376\252\215>G\314\350?\354\242\320>\315w\034\277*\211\201?z\310\254?\347\310\272>\215\177\207\276bS\323?d\006\264?U\026\325\2762\306\307>\037\270\375?\341$\331?\r\341h\276k\013\257>\013FX?\317N\316?i\344\017\277\255\027\273>n\'w?\276\371\006@\022O\326>\342\2249<DQ\374?\201^\312?^\022C?a\343\002?\213@\213>G9\242?\334\200O<=\013*?\357\312\005?\032\367\324?\375\241\035?\212\002\225\276\333\213\261?f\273\306?\023\232\034?\020w\345\276s\2545?h\320\262?\316\375u\276\320\265\327>6\331\222?\"m\315?\300?%\277\322\034\031=J~\352?\242\262\317?\302\333c\276\021\0316>PU\207?\337\250\305?5\262+\275\250\220\033?7\211\221?1\231\266?j\276j\276\210\236\214\276\nw\222?F\227\343?\360\304,>\277\3564\276\227xs?\334c\327?|Ca\276m\217\306>\355\025a>\354/\323?\206\346\022\277J`\007\277\261\220\370?\377$\322?W\257b=\352y\003\277Y$\347>\263_\335?\257C\021?X<\215>\333\226;?\014\222\334?\210\203\004<,\324\252>\213q\300?\224j\311?\210L\371=5\355\262>G\262\360?\255\241\304?>\313\253\276\201_\313>,\334\265>\252)\251?L\212\257=G\256+\277O0Y?4h\320?G\3117?\246\177\t\277\212\224-?\214H\330?\237\313\214\276\276L\224>C\216\311?\335a\255?\226%\272=\000\035f\274\340\016\t?\022O\300?\224\245\226\275\005\245\200>\026\301\357>\314@\317?2\3500\277\217\341\r?\376\254\227?\255\334\337?!Z\323\276\271\032\005?.\234.?\361*\361?J\232W\277\023\324\260>\002~\206?\217\304\253?)\227F\274~\305j\276\26471?\rn\243?\374\213`=e\217\310\276\274\277\305?k\232\275?=\r\300\276\206\033\014?\227\331q?\271\304\333?\250o\341>\255\025\355\276\314r\353>AH\260?\335\0147=Eb\342=\353\000\264?\3016\354?\231\017(\277\031\254\000?\020X\315?\307f\305? \267?>\313\364{>7w\272?e\215\262?\330F<>\247\350\370>\340)\025?\373\262\300?\326\341h\274xE`\276\211\357\224?\251k\253?\301\3433\277=\327\013\277t\216O?\r\214\246?G\345\206>\242\264\367>?\\\221?\340e\266?\177\302\031>\321@\374\276\253S\324?\377\354\307?\272\2723\276I\022d\276X\235\314?\006\200\270?S\\\035\277\357<1>\006\241\017?\260\034\277?\254\3768?\034^$?\220\373\353?>>\357?{g\264\274\331w\265\276\366\211\312>\320B\260?E\0238\277\275\343\004\276\204\260\240?(\235\300?l[\024<r\340\325>\224\242\221?\002+\315?\362`[><\275\372\276{\311\355?Xu\236?\216\314\203>A\364,\277\261\242\256>j\334\325?\223\344\371>\264\001x\276\363d=?p[\315?H\245x>\257A\347\276\256\\\334>X\214\306?O\225\227\276\203\245z\2769\304\346>\324b\232?\030\'>>}#\272\274\352(z?q\035\267?\364\211\374\276\243\006\003\276/\231\226?\357o\350?^\330.\277\217\252\206\276\030\276l?\360\334\343??\255\322\276\260:\312\276\005\225W>\352\314\235?\245\022\326>Ec\315\275\277\215\252?N\231\275?ZE?=T\214\263\276uJ\254?\2132\257?a\340\221\276j\373#?\021\365t?\037\201\343?a\340\261>Q\204\010\277\206\225\327?_\264\237?,\266\301\276\326R\240\275\376\243N?d\350\262?Z~\300\276\367W\237>\312\246\342?\366\264\313?4L)\277\300\320\017\277>\257\372?4d\312?}\315\242\276S\262L\276\371h\217?\0011\325?\34426\277\2177\031>\210\325\226?f/\343?\372\266\004\277\247vv>\233\300\276?\314]\333?\n\023\346>~\000\242>3\276\352?t~\300?\202\214$?Ow\n?^\334E??\252\275?\301\304\367\276e4\272\276v\371v?N\234\316?\304\227Y\276\206\000\330\276kU\001?\027\271\357?m\375\264>\231f\322\276\2143\257?Y\335\334?8\025\035?\235,%>\3614\257>{j\217?Nd\346\276R\327\312>\300<\327?`\257\316?{/\032\277\312\027,\277\352\233\305?\330+\242?\352\006\002?\202\312\004\277\314V\304?\271\253\321?1\264\272\276\3600\215\275y\254R?\351\325\244?\354\204\007\277\267\0100\277q,\255?\253\\\300?\320\322%\277\354\024\363\276\335q\310?\333l\344?o-\'?\t\213\n=\375\003\323?\277\362\366?\324\r\010?\220\335\335>\366O\342?t^\271?\001\367\004\277\267\230\037\275.y\255?K\351\313?\203l\331\275\326\253H=JQ\274?\332\376\241?\303\202\313>g\325\317\276<:\276?\350\021\355?`\261\006=1\261\r?\325{\351?\316\214\332?4M8\277\256g\250>j\000~?\252\327\347?\306m\324\275H\337\354\276\to\367?\231F\357?:\2205\277\207\247\227=E\017\204?\013]\233?\350.\251\275\"\032=>\001\361\007?\037M\331?=\360Q\276\237\"\227>\210\351\304>\3476\325?\233\345.\277\350-\236\276\321\253\216?\3373\336?\"q+\277\t\247\335\276*Z\234>\304&\264?\342#2>)\227\206\276X\227\214?\273\270\253?\216\351!\277\337\025\251\276\262U\320>+\370\345?\322Q\276\276\204\016:>\337\335\320?%z\311?\361\360\306>\205$\253\276\030O\000@\274\257\276?\326\247\004\277\021\343)?\023\025M?R\324\257?\264\0009\277\221|\255\27654\300?GW\321?\342X\033\277z\213\347\275\253\352a?\326X\300?e\246D\276\312O\212\275\371e(?<\025\330?U/\177=\213Q\357>\213\207\217?\207\032\313?i:\333\275\307\233|>\n\017\254?4\206\277?6\352\035\277\344\332\360>~\371\217?p\260\333?\010Z\021?\002\234\376>\246\365\212?#h\370?F{L\276b\366\272\276\210\325\234>w\363\314?\237\0046\2753\340\254\275U\360\264?\216\"\257?\"\377H\277T\217d\276k\007\330>\004\343\320?/N\374\274<\332\024\277\"\322\265>\305\001\320?MgW>r\0266=UW|?\223S\273?t\353\265<V\231\361\276\306\014\230?j4\351?u\345\263<\324e\361>\350\301\376?\201\353\306?Q\245\022?4+\027\277{\310\356?\376C\334?\232|+\277\2444;\276\n\362d?T\035\346?!\316G\277q\344%?^\321\326?81\316?\363\037\212\276\231\240\356\276\272\313\240?\323i\327?Sw)?w\020\253>\005%F?\033c\317?yv=?c~\216\275\2774\237?\212W\325?|`7>\330(\023?X\372\235>\024[\255?\257Z\035?\245N\000\275\374\255\010?\265\300\264?\200\267@\276\251\240\352>\313[[?\375h\340?CV\367\275=\265\372;\220\363\221?\345\235\335?\034\357\356\275\240\3016>\221\177\342?*\034\303?\353q\247>\356x\'\277|\321\217?$&\302?\306\374\020?\023\265$>\260#\201>\307\271\307?\027~0\276\232\353 ?\274]\331?\376d\312?{\301\207\275\340\274\200\276\210\341\351?A\266\332?\312\250\322=\tnT\276\323n\317?\242\233\351?\350-\036=\355\236\234>C\257\376?\022\302\311?6\260\t?\351\272\310>=p\034?9E\315?\332 \223;nk\203\276\352S\207?\274v\343?[\261?>\333\372\005\277Z\034\256?\352\315\304?\213\250I=\306\205\'?r\327g?\024z\335?y$\016\277\221\234\\\276\026\007f?\310\323\274?\365\0205?\372\013\245\276q\321\374?Yn\251?v\247\333=\365.\226\276\342\014\307?\247\223\316?\020\222)\277\341Dd>#\236Q>\305s\302?\231F\313>\240\334\326>\246\227%?\332\001\243?\010\217\236>\227\312\203>m\036\351?\007\232\275?\261o;?\215zx\276\331\205\263?\302\367\346?\n\017J>b\300\262\276\317&\214?$\n\347?\022\242\024?\301W\274\276\241;#?l$\355?|\200\"\277)>n\276\263\365\362?,\330\322?+lF>\222@\003<\014@\022?\231\364\255?_\225K>7\031\265>j@\214?\351\014\212?\206\307\316>\232^\222\276\034!\360?\203m\304?\344\204)?\221\013N\2757\346`>\236&\265?\016\244#\277\003{\014>\231\224\357?\332:\330?i\306\302=:tJ>\322\252\316?\205A\323?\340\020J\276\253_\005\277\204\211\202>\243v\323?3Q4?0\362\016\277\322\033\334?\206\216\301?\374R\237>O\257\020\277\355\277\r?\242\322\376?4\242\020\277\025\037\023?\372\206$?^i\327?K9\377=\216\345\205>\364Ki>;\035\312?\371\274&\277\303d\252\275\341\352i?\352[\242?\270\315\364\276\030\223\036\277\002\260\245?r\373\347?UPA?\330}+?M\225\351>sg\242?\366\267\024\276\014x\371\275@\217\333?\030y\303?2\"\321=\2615{>\320\367\276>]\247\371?:\317\030?\330D\216>r\341\000@\002\r\344?\351\266 ?\317\371y>\226\253|?\276\277\247?\374p\030?\221*j>U\316}?0\r\251?\340c \276\033\331!\277o\302\211?B\'\340?8\366\254\276;\375\330>Pt\372?\357p\241?\251\335+?e\251\025?\201\031\215>\006\235\254?\271\336\316>d>`\2755;C?\343\374\313?\0214\022?\227\001\347>\276r\214?f\243\311?\243#\371\275.\222\316>\230\375\317?K\351\235?SB\350\2762\004,?\222\200\346?\270\222\325?\274\223\227>\025t\037\277L<G?\307H\316?\031\313\204>\255N\216\275\206T\260?e\307\276?(\270\200\276\237\005\r?\324\213|?\241H\273?\244\0005\277\350i(?\366B\335?\361\203\225?\200\271\266>\330\326/\276{\177\246?v\343\323?\254\3429\277\207O\n?\234\216\253?>!\371?\246\320)\277\026\366$>b\241\256>By\245?<\336\010?AH\256\276\177]\037?\202\037\303?L\211\004?\033\366\373=\3223\272?\324\r\270?\311u\027\277\327\301\331>S\340\344?\2715\347?\225\202\336>W\316^\275i\220\361?\225\'\222?v\245e=\037f\257<\321i\'?F\353\212?W\227\373>\371N\374>\356\234\273?\353t\234?\267\233 \276\225G\217\276&\275\363?\205\006\342?;\032\367>\312\250\002?r\214\030?Qg\360?\250R\363\275\"8\356\275\245(\302?d\346\246?<\206\237\276\005\341\322\276\303\226\265?\004\252\301?\036p]>\275\254I\276\207j\364?p\263\314?&6\247\276nl*?\237\205\316>\365g\305?7S\001>;\032\227\276\355:\321?\272\021\264?\222\353\246<\250\341+\277\364\3763?T\250\356?\220\026/?\350.\261>m\253\001?\013\317\325?\365-3=\307\270\272>V\316\315?\033\241\313?x\233\227\276\246\270\362\276\353 \372?\204\240\303?h\353P>\317\276\"\276\316\357N?\007_\242?\330\360@?\013_\003?\226\2701?R\355\247?U\205\346\276I\017\213\276\037\271\264?\336\034\340?\376\321\007?j\275\227\276\242\353\340?\314A\334?v\306\207>\267%\362>\260!\271??6\341?\363U\252\276\177\210\005\277d\372\207?\000\376\265?\267\010\014>\204\275\031?n\034\230?\033d\330?d;\337\274\224J\000\277\017\377\250?\275m\244?S\260\026\277\352\314\235\276+0L?4\241\247?\216>6\276\240N%?\206~P?2W\274?\334cY>\356\223\023\277\331\367\007?\020\010\230?\216\254\334\275M\2041?\366\277\314?\013*\320?8\371\255\276/\372z\276\343\346\367?Ts\345?nO\340>\211\t\352=G\247\213>\263\226\300?F{\304>\235\271\013?/e\265>\364\304\261?\036\030(?\342\221\230=\317os>{\334\353?@\023\021\276_C\300>ur\302?\240\212\345?\261\301\022>\211\267\206>\007\350\343>\207\277\334?)@\334\2763o\375\276\342.\326?\232\223\006@\030\263e>v\250F>$sv>Vb\246?,\235\247\276v\247\343\276m\001\231>\254\377\277?z\031\205\276\246\357\225\276:\365\351?E\274\311?\307)\342>\010\035,\277\324_\374?\267{\317?\212\255\034\277\267F\024\276\003\022\013?=F\303?\002,\002?\\\311\016=\226\213\n?\311\256\300?\316\336\031\275\r\377\351\275f\347\353?GY\327?I\205\035\277\227\000\034\277R\223\317?\227\035\220??8\177\276#\2428>\271n:?9{\303?\304\\\302\276/\244\243=\364\205\205?6u\342?\007\\\247>U\024\037\276~\332\340?q\253\344?i\341r\275z7\346\276\023\334\377?\033h\316?\352\226]>I\205\371>\302Y,?\273\326\304?pw\346\276\021\0352>\340\227\227>\312\372\317?\r3\274>\002H\255\275[\250\220?ke\244?\246\320\221\276\277\273%\277\000\275\314?\242\231\357?\327\210\034?NG\300>I\204\226?S\256\262?\347\340\201\276\232x\017\277\275\364p>\354.\342?\271\253\327\276P\3423\275[i\374?\276\372\254?\226\315\364>\316\375%>/\263\354?\273\200\267?\211\324\024?\245e\234\276n\021I?\032\211\306?\217\253\035?\314CF>\366\030\241?\231\233\341?O\257\314\276\376(\036\277J\233i?\325\222\344?\t\340\276>\257\264\014\274\216\310\355?\\\343\333?H\376,?\212\000\007\2766F\263?\215{\275?6\037\227\2758\237&\277\336\374\325?\002g\343?g\236<>\210*\374\276\317\343\022?\203k\274?K\253\301=\032o\223\276\351\363\332?B\261\265?3m\177=\025\342\321\276\037\345J?\317\363\323?N\357\032\277\324\265\026>\250K4?\335^\336?\3539\001\277\003Bk=<I\003?}\350\332?\355\266\033\277\223\215\007>\362\336\036?\217\341\315?\224\372\352>eR\213\276\323\n\225>\320\322\343?\211\261\020\277F\353(\276+\323a?7\342\303?flh\275\230L\001\277\367\351\367?\213R\264?\360\302\246>N\200!?7X[?s/\274?\226C\033?\2555\020\277\373\265\342?\017\r\335?\002.\370\276\177\336\000?\340\377]>\333\247\301?\311\307~>\202r\013?f\234{?\013^\324?\027\235,\275\225f\273>\360\370&?\314\270\333?4\206\221>\242$\000\277B\n\276?\"9\267?\210,\252\276z\337\000\2778\365\277?\234\027\313?J\265\317<\230O&>\027\211\337?\003\353\250?\027- \276\21766?\334\375\330>\031W\362?4\274\031\275,\234\374\276\344a\334?\360n\277?\241,\234\276\347R\034\277\207\n\327>\354\334\342?<\2774\277{\370\272>\013$\343?\200\231\221?\272J\267\276\002\233\223>\226:\343?\343\250\316?>%\307=\233\035\371>\266\216\230?i\001\342?\216;E\276\214\235\320\275x/\244?\022\302\267?\240\251\217>\363\034\241>\203.B?rN\274?\002c\005\277Va\223\276\216\035i>d\315\330?\340\203\357\276\225\201\033\277er\205>\035\313\307?\036\374 \277\362\224\005\277\3218\031?=c\323?\035\257\310>\213\027+\276\261R\024?H\304\312?\260\306Y\274\256\357\033?\300\\\017?%z\367?\266\272\030\277\256\363\367>\231\352\223>\241\327\303?E\237\033\277\216\003\257\2769\"\346?\263#\341?\222\316\200\2762\035&?\255\004\211>\346\352\331?\002\273\n\276\327Q\265\276F\014\314?z\000\325?\233<\335\276U4\316>\025z\034?U\333\303?\246\265\261\276k\014*\276E\320\235?\201%\307?\325\313\317\276\361\330?\276,,\246?\023*\340?\024\350S\276r\372\312>\331\316\277>\003\266\325?!\257\037\277\353\032}>5\254\302?\336u\270?\177\2435\277m\344\002?\344a\342?+\332\260?\337p\277\275&\212\020\277\234\022\353?\204\270\264?6\006\335=o\360\225\276\217\330\221?\333\212\261?\333\302\323=\317\204\306\276j\362\005?\'\366\352?\311>\000?\333\245->\376\345\200?\300<\334?;\001\215\276\276\204\n>\211\035\304?\255\246\337?V\322\222\276b\0213?;\371\355?\260\345\277?\r\251\222>\366b\310=%\271\250?\3747\323?\0263\362\276W$\276>eC}>\207\210\323?\336\306&\277\350J\354>\347\204\224?\351\323\324?\261N\215\276T8.\277\247\223\304>\200(\274?\311\"\225>\273B\007\277Z\271W?\220\370\337?g\357\\\276kI/\277\235\036\347?\214.\307?K \005?\250\343\331>\374V\312?\222\003\336?\330\272\010\277\244\301\235>)Z\365?\002\362\315?\315\223\253\276\374U\000\276m!\375?\227W\310?@\370\320\274\304[\'>\274\341\355?!\311\342?0\241r\276f\273\"\2765BO>Y\243\326?\233\253\032?~\252\006\277\371\205\261?\212\224\304?\267\rc=YiR\276,\377\202?\216\347\002@h^\036>\334/\377>\301\322\365?\205\316\263?\'\203\353>,+%?\245\014\345?\360\247\252?\033\200\375>\361\177\007\277\304\372\243?\232\264\323?\201\353\312\275-\352\343\276\005^\361?\306\301\337?\266f\313\276Y\333\010\277\026v/?\200a\317?TW\366>b1\232\276\013\247\177?\206\306\245?\315\221\275>\251\331\253><\205\220?^\201\274?\337\3421>N\362\037?\335\"=?R\017\307?\216#\n?\230P1?\203\002\255>M\203\326?\010\254\014\276\326\342\263\275\320\270\350?\325&\270?\226^;\277<\024U\276\347x\235?n\303\316?i\247\006\277<\242\022\277~S\014?B\"\333?4\325\017?\0009\211>\305Q\276>\305=\332?\013\263p\276\225G\337\276py\242?\336\252\331?KV\315>`\311\255\276\345\225\262?N\013\300?[\231\310>\247\350\370\276\334\275\354>{\277\313?i\033O>\006\275\027?P\215\227?\347p\303?\267&\035>h\",\275j\341u?\025\253\302?Z\201A\276\337\336%\276\351`}>\3579\232?\333\030+?\221+\031?\207B]?(\017\301?3\303\016\277$\013\004?#\327\354?\224\245\322?\203\335\020>\244\377!?\363a\276?N\'\255?\033\241\237\275\325\227\315\276M]\313>&\306\262?\361\273i=\2611\357\276\237):?si\300?\345\325\271\274\227\254\352\276N\353+?\276\365\311?\353\247+?GV~>\037H.?\232}\336?v\304\301=?\217%?7\225\213>\2403\311?\227\251\351\276Z\366\264>\"\366\220?\037\271\000@O!;\277\234n\005?\206\000\222?p\352\307?\010Y\032\2775\t\256\276C\327\311?&\304\316?>\350\321\276.Tn\276\346\241\020?$\271\272?\367\350\275>\362Ce>f-\334?\247[\350?\254\346=?\000\250\n?ye\377?\013b\274?=d\252>\310\263\353=\005\333\351?v\340\340?(\325\216\276\307\324\325>\201\314J?\236`\271?\256\271\037?}\005\301\276\254\363\t?/\341\326?a\376\262>\333\367\240\276\345\213\377?2\257\277?]\277\300=E\272\337>\037\320??uY\330?5\007\310>u9\345=+\020\314?f\202\271?\211\352=\276O\224\034\277o\027\235>}\263\305?\362|\036?\225\265\t?\177-@?\365/\331?\006\237*?1\320\325=\374Z\360?D1\325??\346\203=\220\205\330\276\r\330>?\202\344\327?\322\305\256\276,.>\2762n\357>\357\343\270?\202u\364>;\375\370>\374\344\363?@3\354?w\277\262\276\253w$?\244.\336>6\315\311?\340\022\230>Cs\335=\2271\352>\016\023\355?N+\325\276\220L\207=\244\252\261?\304\317\251?>\004\355>\332 \013\277\370\307\346>$\232\344?\260T?\277\377?\006?\233R\323>\364\300\263?Pn\363>\250\344\374\276JX\206?\320%\260?\014\2561?\312\303\202\276\"\266\372?\377B\004@1C#\275\310\225\032\276h\027e?o\330\304?0\237\364\276\307\270\032?\001\270\365?\304\351\254?\361\r5?#\274\365\276\n\300F?!\312\335?\310\354,\277\300\354\336=wLA?\010=\267?|\016\344>\251\367\364=\352@\"?\023\201\304?\340.7?\225\201\333>\233\234\320?\025X\340?$b2\277M\025(?K\254\204>(\364\344?\267\361\317>\343k\003?{\204\240?\354\023\330?_\r\340>\223W\247\276=\323\263>\004\343\336?\300\262B>H\027\263>\033\367\373?b\333\254?\264\346\277>\007\226\243<\305\317Z>\216s\341?\276\3702\277\206\255\211>\310\256\035?\004\003\334?\235K5\277%\260\261\276=\332\343>\361H\330?p\356?>\205\316+\275\031\337\020?e4\300?\344\331e>\252\265p>\302\246\245?\204\327\244?6\344O\276P\373\235>\337\377\350?\324\020\305?\364\250\020\277[%\340>/\333g?]\373\324?H\374\016\277\364\246\002?\230\220\341?\362\232\267?\215\'r\276\250\250\332\276\r\034\347?\336\003\302?\334\364\017\277Vd\314>;\343#?k\363\315?\225\017\301<\360\206t\275\212\250\206>;\215\324?\241\204=\277\237\216\377\276\037X\245?\256\240\323?\344\242:?\302\374\021\277#\206\365?YR\324?X\341*?Id\003?\032\013\374?B\006\272?\353T9\275\210,\"\277\013\263\324?\362\322\307?a\342\307\276D\246\364>\307\367`?\301\250\326?Y\3004?\237v,\277}\242a>\221\361\304?\231\270)?\352\t\363\276N\375\356?\215\232\321?\023\326\236>\365\023\216>7zk?\274\225\217?$a\337\274\013c\333\276O0\265?A\017\275?\233Z\226=\376\326\n\277\265\271\363>\rq\240?(\361\r?}?\245>\313\324y?\016\277\243?\376\361\306\276\314(\026<\261\372#?:>\356?\241\200\r\277\270\3101\277\226\036\312>MM\342?40\222>H\207+?>*-?\007%\266?L\307\034=\330HB\276\031\177=?1B\252?\010Y&\276[?\275\276\376C\320?\362\317\312?\261\207\276\276\223\306\260>W{\014?\336\311\327?\356\261\234>\235\361\001\277{f\350?h@\303?\323\367\352>\272\240N\276])\303?\2450\323?XW5>K\346\370=\374\256\327?\034\006\323?\241\200->\3328.\277Q\032\321?\224h\325?\277\201\025\277&s\214\275\327\350o?k\327\310?\300\007/?\233Td>\347\334\314?\334+\315?B\320!?\220\367\"?\314\007}?\034\'\231?R,\247\276Z\271\347>\233\341\177?\354\240\332?\347U\265\276\203\333\036\277\316\245\262?\337S\263?=G\304>\0358\277\276\363>\n?\036\211\325?\235\201\025?o\2375\276\245z\314?\212\005\262?W@\261>\365\022\343>\245J\364>\364\301\312?\257\265\327\275\3540\026\277>\004\315?\265l\347?\235\234!<\233vQ\276V_\312?\367\216\320?\233 j>\'\244\275\276_\251$?l\010\272?\366\n\033?~W\014?fO\224?F\352\231?\217P\007?{\204\006\277%n\371?w/\261?\345\264\'>\340.\363>z|\231?n\337\257?\177\022\027?\300\006\024?\245\370\304?\t\373\362?\372\265\r?4\275$\277r\252\366?\275m\001@\212\253\332>[\t->\326\262\222?\347\305\323?s\361;?\305\000!\277f\316\364?\277\327\326?\026\211I\275!W\032>\260;\241?\003&\272?\325\003\n?\006\016(>\010vX?\274\223\337?5\320 ?\210\205\212\276\210\255\260?\010\222\315?@\241\356\276\326\252\235\276c\\z?8\327\230?\352\256\314=\357 \026>\014\256\313?<\330\242?\244\027\325\275]\214\311\276\263\017\301?\231K\224?`\350\025\277\235\273\375=c\226\372?\243\257\354?Z\3303\276\246\017\031\277\200\351y?>\352\275?+\336$?\255j%?\004\310\300?;\342\320?\254\252\277>\253\257\246\276Ibz?=\273\304?\257\227*?\304&\032\277\036\321\336?\277\n\306?E,\342=\346\261*?\232$\256?\2343\330?YmN>\200\013\362\276M\3019?5\270\245?!\261\355>\215(\255=X\364$?I\016\326?\254t\'\277$\360\003?g;P>\"\343\251?8\371-\276s.\315>\323\356y?\323\335\251?&\303\031\277\320\231\000?\006\262\373>\234m\272?7P\034?\027\232\303>\361\303\000?wg\341?G\001\302=\257[\274>\006\3163?J\232\267?\021\033\354\275\tN\315>\303\t\201>\246\264\276?\035Wc\275\257\322\235\276 \302J?k\324\251?\202\305\251\276\210\271\004>6\331x?_\232\332?io\260\276\361\r\245>\020\037\240>)\223\370? |0?\253\005\002?HT\277?#\204\327?q\345\\\276Dj\016\277\264\261\265>\005\024\342?l\352,?_\316\024\277&\323\205?fl\220?\211`\374>U\022\005\277\323\352-?\023*\352?\014\254\303\275o\233\t\277\362@\304>\312\340\314?\013\360\031\277\323j\370\276V\203\255?\207l\254?\273HA>\256\200\272>h\211\347>\256\016\262?\200\3610\277\0325\217>Jj\327>d\037\310?\017b\007>\\\2548>\354J\310>|(\263?\210\362\r?\342\222\253\2767\234\037?\274\262\313?j\332\t?Ym.\277\2778[?\226B\262?g\357 \277\374\031\n?a\303G?\346?\332?\355I\014?\265\3410\274)B\302>\212\034\326?\310\322\307=?\035\017\277j\261\235?s\333\302?\344\201\024?\360\277\275\276\251\206\251?\274\006\305?6\217\303\274v\302\313\276I.\273?\343\216\315?\320Fn=\234\242\023\276<\215\351?c*\313?YR\226>\017\362&?B\313\375?n2\216?\025\216\200\276\350\334\t\277\265P\302?J\227\316?j\206\364>\366\225G\275\2505\254?\377\261\320?;m\355=aS\277\276\343\351|?4f\230?\277),\277\002\204o\276\321\244~?l\225\304?\253\0107\275\377>\273>l0s?4\017\002@\314D\021\275\032\367\306\275\3600\201?\001n\246?v\343=\277\221&\276=\375\000Z?\246\361\347?)\352\374\276\007^\255\276\352\362\226?\022L\231?T\306\277\276\365H\033\277\333\361\202?s\021\315?\204\203\275\275V)\r\276\365,T?\n\271\340?$^\226>\324\324\n\277\257\212\243?[\353\221?\377@Q?\217\253\321\275[M%?\235e\314?\347\307\247\276$)-\277\025\352\374?\254t\257?\352Z\323>\253#G>j\235\325?\331v\304?w\241\t\277\207\277v>\177\226x?\263\322\310?T\3417\277\374\216\t\277\337\032\230>\377B\303?\246\013\311>\365\362\233>\201\305n?t\354\302?n\374\035\277\277c\370\275W\335D?\374\310\321?J\317\030\2778\244\361\275igV?n\334\326?6V.?g\271l=\202\231\247?\"o\323?&67?\252\325\357\276\017u\340?\205\013\241?@\334\355>\256\272\036\277\001\201\033?x\010\337?\005\374\032\275\025\375\371\2767\211\223?fh\320?\377\257\312\276DP\275\276\032\343R?\233\037\365?!v\376\276\003\227w\276\213\240\250?*\037\302?\364o??\313hd\275%t\\?\t\306\271?:=7?\t\301\252>vb\276?\302\246\254?\235\332\221\2766!\355=\355@\266?Z\361\253?\263\262\305\276\322\035\004=>\201\202?\200(\320?\020\002\332\276s\367I\276\345\213\004?J\262\342?\315r\311\276,\234\024\277\216\252\303>>\257\322?;\2154\275,\017\262\275W\354\353?\216[\334?\223\3423>\346\345(?a?\212>b\364\316?\374\035\022?)\005\005?{>%?\004\004\265?\346\\j>\262g/>\006\304\234?6\351\326?\204\016\262\276C\346\332\2761\302\352>\'.\357?\2341\010?\361\364&\277\002%\274? \230\357?\341\270\\>\201\355\240>\"D\024?\000\305\312?m\346\320\275d\007%\276\205dh?\025\375\307?\021n\006\277\014\255\326\276\221\032m?\276\242\315?=\177Z=\353\2542?\325+\242?[\t\257?\336\037\'?\327m0\276\300Z\337?\304\223\301?\331Zo\276L\0267>\272\'\342?\372\200\342?\026\336\001?/3\034\277_\227\201?\005\337\336?\331\321 ?:\313\304\276\312\376\363?\022\274\315?\267\262<?wg\255\275?\033u?\016\020\326?\260\311\372>A,\233\276\250z ?T\310\331?\202\036\312\275s\367\351\276\314%\331?\227\002\270?\333\337I\276\363\005\355>\256\355\320?g\322\320?I\200\002?i\253\022=o@\200>;q\331?d\"%\274\262\016\307\275\016\361\336?\240\306\341?0,\217\276\367Z\260\276E\007\301>\217\030\323?\247@>\277\010\003\037\277:k\311?\320G\273?7q\242\276\366\'\221\276\267\226A?\031\033\354?\324\202\317\276\204\323R>C\217\372?K=\004@\307\177\301\275\303a)=%t\255?\376\321\333?v\336\206>\356\223c>W\252\353?\032Q\334?\\9\373\276\\r\\>\273\216\"?1$\335?\317\021y<\314C\306\2757\276\371?\337\031\303?A\272\030\275\357\253\202\276l\376\r?aQ\363?\317\243\022?\220\020\325\276\306\251\311?\016\024\324?\215\013g\276m\214\205\276\204\r\315?\177\210\263?\006d+\277\236\357\367>*\304\314?j\030\310?\242`\016\277\024\\\234\276\005\200\257>\3477\226?\234\245D\276\203\212\312\2759[\221?j\333\314?}?\345>\336\220F>`^\245?z\211\311?\256(1\277@\373\361\276M&\357?\312S\260?\352$K\276\211\263&\277~\364c?\031v\260?\310~&?}\353C\275\256rg?\261\247\335?\326\216\222>f\204\337>;@\234?\371\020\274?\261\367\342><\025p\276\331I\323>\301q\337?\314\317M=Ag\322\273\305\275\243?\224\203\307?\020\257\017\277\274\0377<\277\201\r?\022\302\345?\261\245\347>\273}\266=\246\t`?\263]\275?^c7>\027\236#\277\026\256\315>Eh\340?5\317\261\276\263\267\034?\006\r\246?\363Z\341?0\271\035?\013\227\t\277\275\367\254?\306\370\314?\203\302\340=4\021\326=\241\200\035?\025\221\303?p\317\323\275\'\370f=\336\317\220?5%\311?+3\305\275\255\246\253\275\217\017\\?\005\024\312?\362\266\262\275\016\333\n?;E\211?\244S\307?\013\267<\275\330+\020?~+\345?\253\223\265?\371-\022\277->5\276#\251\351?M\371\254?\2133\266>1\357\361\275\016)\221?\3371\364?\345\360%\277{\237\016\277\343\231a>\223U\245?\"\215*>\203\374,>\345\314\243?W\224\322?\004\217\327\276\325\2217?\rs\251?\333\027\260?\332\003\031\277\352%\006\276&\366\232?\212\001\276?\274\311\177\276\247u\313>\252k\354?7\032\312?\250\034\363\276\"\246\204>p\203`>\365\272\303?8\203\337\275v\343\325\276\235\r!?\214\326\271?\212\346A\277\233!\005\276*\352s?px\321?A\r\227\276]4\204=\2448\237?\262+\321?P7\260\275TT\275\275,\200\361?\233\221\267?\265\340\305\276\257!,\277\346\266\004?B#\262?\230\276\227=\315\037\343\276\202\017\237?\341&\311?\373\3479>\234O\005\277\2031\242?\211\322\310?\203\370\340\276\227V\023>\350\307\333?,\363\262?\361\177/\277\325\312\374>!\323y?\177k\267?\357\376\340>\257\n\024\277\351\334\255?%\225\231?\336\001*?\316\302*\27721\207>\335\006\331?v\247k\276\341\353\263\276\025\034\362?|\270\272?\303\232J>\362\n\244\276\233\334\222?H\374\270?\340\236\'=[x\246\276og\352>\002\017\244?T7\227<\366\177\002?\3674)?S\005\004@\246|\020\277\267\320\225:\313\235\332?\302\241\267?\262\021\230>\\\004\016?\005h\270?\330\021\275?\021\033|>Q\206\006?$\357<?j\244\277?\025\311\357\276^M\276>/\364A?\022/\327?\316\027\203\276\246^G>\316\374\356?\\\220\337?\301\213\036\277\236\360\362>N\202\310?:#\314?\375\372\251\276\033G\020?V\375 ?`\257\260?\332\342Z=\205B$?/\330\352>\031\377\336?\277\r)\277d\260\202\275\253\316\342?\r\251\330?\242\2322?\356\314\334\276MP.?\377\256\273?u\311\300\276a4\373>\212\201\232?\355\237\273?\222%\017?\350-\016>%\331\211>\363\343\337?]\032\037\276\340\333t\276\263cZ?iU\377?\351\272\230\276\253#7\276\nX\241>n\205\320?\031\037\002\277\363\311\342>\246\362\371>\001\277\276?\213mB\2767\307\001\277\350c\211?\234\277\273?\334\3313?P\250/?\372\375\263?\213\214\314?\330G7\277]\243\005\2764\215\010??\341\246?\2135<\277\271U`>\230\354e?|\267\271? \321\024\277\336\217\003?\307\003K?\230\275\212?\024y\352>3\342\312\276\260\326\216?\232\226\354?\235\327\020?\002e\023=\334\223\255?;\212\217?6\001>\277^\331\265\276\317G\372?(D\314?\347P\002?s\235\032?)X\300?\021\252\264?r47\276\257x\016\277\'\207\023?\271\342\254?!\347\305>\343\032\217>\225\033\007?\307F\310?\363;->@L\002\276\315]\002?\252\266\345?\221\355\024?\021\342\"?\332\211\377>\224J\244?\332\256\250>m\311\032\277\3327\320?\035u\302?\207\336\332\276\221\r\004?\342l\300?\221\362\225?\336\311\037\277\372b\247>\267\271\370?\026\301\301?\022\023\234>\007\264\274>\300\311\333>\272\334\332?\265\2100?\307\237H>\321 \235?\303D\311?Q\023\375=\246\n\306< \016\337?\226@\332?\034~\277\276\364M\262\276\355\252\303?\034?\300?\241\276\035?\341\322\361=h\226\324?|\234\311?0\331h\276\364m\321\276\177\272\202?\310~\312?\324*\272\276\300\260l>\217\325\375?\361\272\326?\221\363\346\276\014\347\342\276M=\330?.r\353??\3106?*q\275=%\367\324?\357<\343?\210\2402?\013\361\004?\205\266t?\\=\251?\337\027\003\2775a{>\000\270(?\"\031\320?\262\325E>z\212\244\276\244\232\343>\302\244\222?\3643\005\277\255\027\037\277/X\337?3\213\300?O\261\252\2769\360&\277K8!?\365\366\251?]\210\205\276\222v\037\277Q\272Y>\363\314\365?\337\212d>\210\r\006?\373\323\261>[\266\360?\014\224\014\277L\305F\274`\255\032?\216\311\342?\3747\217=\022\211\002\276\030\240\261?\306\025\257?F^\216>\234\027\347>T\333\036?i\377\331?Y\205M\270X\251@\276\217[#?D4\276?\315\3512>A\201\267\275]\214\273?\214i\322?\207\030\327>\342\002\320\272A\255\203>\322\250\312?\222\312\264\275\374\374\367\271Y\262i?\250\215\340?\222\3536\276j.\277>\207Sa?g~\321?6\344;?\267\230\033\2773\322\004?\364\334\314?\266\365\233>\037\370\200\276-\343\303>\264\001\310?y\004\227\275\3650$\277\215\\x?\'i\244?f\205\232\276\240\372+\277\361m\235?\316\305\335?y]\277;x\016\325>%\305\222?\266\367\323?W[\241\276\021\0000?W\3007?\000\255\267?s\237\334>e\374[>3\350\234?9~\336?PT6>2\222\255>\t\205\315?\340\364\260?I\275W\276\210e\223\276B\033\243?\325\257\254?.W+\277\225`\001\276Z\n\227?\nH\261?\216\262>\276\325&\206\276\313[g?(}\315?d\"\035\277[]>\276;\2012?|\266\242?\023E\250=\370\033!?q\3557?r\211\301?7\251\360\276\313.\330\275A\312\261><\367\342?H\250%\277\027H\014?\332\023\000@\344\334\342?K[\014>\327i\214>\324\017\322?\232\013\312?\r\336\377>\r\246\201\275Rb\023?:<\314?\246a0\277\005m\"?dwI?\335\010\271?\233\313\025\277\273\271(>{\202\264>\030\353\271?Po>?\351\272$\277\020*\361?\003^\302?\261\024\321\276\250\3770\277>0\326?\230\335\263?\035\037\035>\246\232\331>\025\242\266?<\026\301?^e\031\277@\026\222>\257{\023?\3605\274?\370\215\237\276=,\274\276\354\203\341>\263E\246?!x\214>\327g\366>\017^\215?[\006\274?\0362\365>5z)?\3436\364?\220\025\314?\3025\023?\202t-?\271\202\265?K9\301?v82?\247AQ\276eG\202?\321@\246?@Q\001?\270\223\200\276\360j\335?\347\214\326?\307e8\277}Z\025>\234\250\377?\272g\317?\247z\"?\273\265\214\276\006\230j?P\376\330?\351e\004?#N\357>\376\241\010?\\\345\315?C\254\022?\277\234\t\276\203\316\220?\307\016\332?\202\255r>z\343\024\276\225<\010?-\264\313?\037\206.?\023H\301>\376\326\230?\233\004\223?0\203\221=qv/?\333\377\263>K\217\302?t\321$\277<\205 \277\377jw?ke\306?]\027*?\331\t?>w\031\375?<\332\312?*r\030?H\246\023\276\365\271\327?\206\307\322?\367\004%?\363\257%\277N2\004?\273F\307?\020#@?\276\245\014>(\022\023?\315s\246?G>\217=\353\001\363\276\247;\234>]\334\310?\010\343\207=\254\252#\277\244C\230?\367\224\232?\306\335$?\222\312\020?V\315\224?\250\374\323?\264\307{>\241\367F\273\237\r\311?\206\037\360?!Wj=\017\016V\276\025\322p>j\333\240?\261\031\310>?\215\313\276z\236\221?\225\362\302?\025\217\023?\026\303)\277y\241\224?6u\302?b\237p><\372\337\275\230\217\323?\252\360\275?\211\227\247<\375\275\030\277\271[\220?\325\227\335?\267(\353>\235\203\277\276wX\221?\017\272\326?\314$\032>Kx\032?E\027\327?]\246\300?\245I%\277\270V\373<\030D\333?\001\374\271?\240\033\032\276E\r\346>\004\371\303>\355\361\332?\316S\t\277\277\233&?\330\203\333?\325\316\342?jKA\277RD\"?\035\374\311?x\t\260?\035t\021\277\027\326]>\210\241\357?\225\231\270?\361\201\001\277\316\306Z\276\270*\231?\222\352\331?&\345\216\275\203\026\006?\277\263\276?\353n\332?S\2212?!\\%\2774\007\276?\261\333\341?\343\303\274>I\020^>\003\362\370>\352\315\362?\340\332%?\304\257\220\276\016$\000@]\251\001@\264Z \276\203\333\262>\307\374\343?\353\033\270?\200\232>\277Z\202l>\371\257\247?\314\357\310?\337\370\312>\227\256\020?G\301\244?-\224\330?\217\030\345>\325{\312\276\023\274\020?Q\333\262?\000: \277z\027\317\276\372\310\241?+\373\322?\254r\361\276Rd\355>!\206\037?\306\210\336?fM<\276\221&n>\226\366\372?\222[\235?\261\210a=\276\241\340\276\217a\344>d\006\250?\222\2244>y\225\355>~\034m?/\247\246?\025\340\223\276\033\177r\276\203\374\004?\277\016\312?9\320\303\275;9\203=R\371\303?\003\"\246?\244\3740?<\275R=Ow\326>\303\271\352?\301p\002\277+\241;\275\364<\276?\372\321\250?\250\376\341\275\337\305\033?\326\256\230?\336\217\307?\375\244\262\276~5\013\277\003\224\364?\257\"\177?T\306\'?gH\001?;\'H?a\212\314?\374\336\246\275\364\334\n?r\331\021?\354\302\247?\334\364\'?\327K\253>\302\302\341?\236]\314?\304\314N>\351\271\365>\257\216X?AI\363?\350\332\037\277\213m\n\277&\243\027?u=\303?WvA=~9+\277\221\230<?t\354\256?\311\035\216>C\217\200\276?\226\242?Vf\302?\205\320\301=C\310\025?\347S\377>{\020\332?\266\016\002?\347\3020\277<\316r?|+\302?\375h,\277OW\277\276H\272\334?5y\352?K\3143?\307\364\204=\'\r\224?\376,\272?w\017\014\277\006*\243\276R\223\342>\244Q\257?\305\310\n?\031\253\255\275\337Y\256>I\330\315?i\3429\277\245\241\266\276\335\332\306?\3600\343?\303F9>vS\352\275A\345\321?\016\023\267?8\330+>\223\342c<\2263u?\036\027\341?\342\224E?R\3249\276\2308\t?\3124\236?\237s\003?\324E\212\274\027a_>\270\223\326?S\316\'\277\026\373\007\2777\346\262?\252\233\355?\022\367\014\277\340c\350\276\233\230i>(\201\275?S\225\246>\334J\017>\333\277\346?=~\275?\220\273\260\276be$\277\267\237G?\242E\356?g\234\206\276B\230\373>GW\231>\215\232\311?)[$\277\276g\244<\303r\222?v\304\237?m\032\027?\177\370\371\276x\010\365?=\200\301?\260=\023>\034\264\357\276\255\r\236?[&\347?\335\013\234\276x\2650\277t\240z?\261\210\343? CG\274\310\261u\276V<\275?<\203\320?cb\'\277\230\024\337=y\251\325>\216=\267?>\313c\276\277H(\275\353\376\301>(\265\303?\211y\306\276C8\366\276\024\025[?\233\346\331?,\202\177\276\327\027\001\277\013\330E?\026j\321?vm\307>\016\205\207\276\020\331\216>\251\372\323?\315\037;?\000\311\374\276\262\230\375>\035\252\273?\233 \026?\251\0230>\342\371\362?\177L\351?\022\367X>\235-$?Q\207M?u\261\251?\373\257\233\2765\361\346\276\232\023B?\357\251\330?;\030\221\275 \321\004?T\354B?\037j\261?\341_ ?|\360\n\276jiN?\335\013\266?\3333\007\277C \237>\226\356\337?1\226\341?V\233\007?N\356\367\275g2\274? \355\303?\222w\026\277Pp\261=\270S\313?\001\205\312?d\3522?\313\022\225\276,r\274?\255\374\354?\305\344\255\276\334\020\273>3\362\313?\306\374\252?\312\371\016\277TT1?\222(\213?\337\212\304?\312\337=\276\324C(?\035\203o?\307\204\310?\370\342;>@\240#>\252#\250?\034\n\301?_\014E>\253##?16\260?n\207\330?l>2\277S\222\365\276\202\361\334?\305\215\277?7\375\321>T\002\342>V\237\373>\nh\340?\325\004-?bf\237\274\016M\255?k\362\344?\3645{>\234k\300>\240\325\361?n\213\306?#\277\336\275j\242\327>ZEP?K\255\343?\212\351\302\276\315Y\347>\325\210R?\242\231\311?\331\260\346\275\326\311\005\277\022+\270?\215\231\356?\020\313*?\220I\316\276\002\t\231?\006\366\346?S\227\364>I\237\356>CW&?T\307\302?\234\245\224\276\2607\321>4E\315>\225\323\350?\201%\023?\266\274r\275\002\216K?\274X\336?\343\375\014?\305\313\'?KF\000?B\227\270?9\233N\275t}\227\276\024\316\304?\311X\251?\257C\001\277\r\245f\276\026\260s>\200\200\235?\031\311\276>;\344\326\276&/\210?ke\332?\277D\274=\322\217\026>\267\361C?h\350\303?Y\336-?\023\362\001\276h\006m?9\'\346?\006\177\227>\341\355A=\351\371\331>T\220\337?\332\341/\275\262\330\016\277u\024A?\332\255\307?\242\t\234\276\004q\306\276\001J\264?\000\306\343?j\206\344\276\006\023\367>cz\377>E\273\316?XU\217>5B\257\2767\005\360>\177P\261?\241\200\005?\201\257(?\224\0056?\020\224\301?\373$\257\276\306\367\375\276\021/\356?\356_\273?B\356\302\275\303\360Q\276\312h\341?\371M\361?/1\226=\346\353r=\301sw?\247;\327?\273d\\\276\327\301\001\275\332\243\236?/\031\337?C=\305\276k\0202\277\326\344\001?\nh\272?\222y\024>0)\006\277w\253\355?\330\233\300?\237\037v\276\225\364\310\276\n\326\325?\325^\254?.\034P\277!Z\033?5\237J?\246\270\306?d>\014?\371-\322>\252l\254?=\233\317?r4\007\276p\n\017?\005\320\032?`Z\314?h!\001\275+\303\320>\332\371\203>m\306\305?K\253Q>U0\342\276\322r\244?\370\377\325?G\220\032>\234\333\354\2761\361R?i\215\331?\212\343\004\277n\371\010\277P\031o>\3474\341?j\245\320\275\266\201\253\276g\362E?\037g\346?\007\n\364\276\352\224\307\276q\311=?\222\221\325?\265\246i\276\316\340\037>\316f\371?7R\364?<\277\024?!!\302\276\352\024\225?\224\027\253?\200\017\376=\003}\002>\201\221\352?\237X\307?\007\231$>\317\367\253\276\355f\317?\"\031\322?\211\n\025=$\234\246\276\366\303\222?i\341\272?*8\304>\356\351\342\276\230\t\310>\231E\314?M\236\322>~\342\310\276\005L]?\266\365\351?\245\024\344\276\340\364\276\276\242\374\333?\263\225\331?\305U\365>\212\"\234\276\354$D?\345\230\314?\304\356\'?\'J\342=\232BO?}\222\301?+\023\026\277\370k\322\275\352o\304?\026\242\335?i6+\277\326R\320\276\363\010\205?\250\213\304?q\036\376>?7\234>?\367j>Q\025\371?\254<\001?\262\276)?\252\022T?\342w\223?\222\007\342=b\364\364>\006h\370?\221`\246?v\304\341>\212\311+\276\003\2315?\337\250\333?;Q\002>\247\350\370\276\237\275\004?\356\'\367?\250\247_\276\370\302\000?\320\201\300>Xu\304?\267\355\273\275\230\030\013\277\302h\225?B{\255?\033K\010\277\257\354r>`\327!?\030}\361?\231\267J\276\002\326j\275D\003\214>\201^\246?\251\241\205>\315\255\220\274\210\010\211>\343n\354?\276f\261>\333PQ\276\314\220\364>\226\317\302?\276\023#\276*\247M>\245\245\313?>\347\222?\301s\'\277\376}\n?\331\351\267?\030\356\270?\271\212\335>U\332\006?/+!?\004\002\375?\304{\226\276Z\275\303\275\306\000,?\001\335\303?H4\311\276\3270\023?\337\263D?l\317\304?c_\302\276\326Rp\276\252\266\313>\001\245\301?<\243\t?|\362\004\277Z!v?+\333\357?l\"\363\276\037\206*\277N\262\210?\031p\340?\254\000\307\276\204\204(\276\036\234\201>\240\031\252?\000\255\371<Y\372(?\002\337\230?\242\361\314?\300B*\277\177\245\263>\246]\211>\300[\310?\\\346\344>\311\222\031\277\"U_>\353n\340?\221D7?\205\005\307>\201\301\307?\242\014\353?5y*?t\360\224\276\240\240\211>Qg\266?zR\366\276I\271\373\275^\232\275?\247\004\360?jj\031\277\274\255\344>H\253\335>Qk\260?5y\312\275\211~-\275\013\326\335?\365\325\307?\271Q\344\274\325x\035\277\237`\315?\252}\312?i\306\372\276d]\020?\034,\347>\243v\335?\312\244\376\276\377\0377>\037\230\220>\217\245\305?\317\201\031?\000t\370\276\032&\354?|G\303?EI\330>!?\233\274(\347\325>\251\210\313?\300\316\225\276\275q\262\275\371\260\234?\365\363\270?(\232\257\276\000\003\301\275\025\276#?\370m\302?\266\206\022=\202X\326=t\331O?\307\360\262?|C\021\276\3753\343>L\351\314>x\'\313?eU\004\274\023\234\362\276\\\306\320?\253\010\177?\326\000\355>K[L\276\256\017\365?\376\326\302?\225a\034\276{\366\\>\215\205\246?\360\207\257?\210f\236\275O$h>\356\013\327?\230\333\331?\245\333\232>o\270\207\276t\253a>\347\374\306?c%\316>\203L\222\275\230!\216?Ie\350?\031\222\023\275.\004\261>\200\014\223?\223\246\301?\037\202\016\277Q\021+?\232\271??u\312\307?i\304<\277\267\353\245>\353R\177?\313\200\273?^\275\026?5\267B=\014|\350>\211\323\303?<\275\362\275\361\327\000?5~]?\034\014\323?be \277~\310\363\276\221\336\330?\010\351\345?\211\013\300\274\351\361\203\276\331CZ?\366\266\261?D\244&\277\020\261%\277\ty\265?X\214\320?\030@\350\276\271p\240>P\034\260?\335\"\306?\345}\334=V,n\276\241M\377?\341\355\275?G\0012>b0\377\276\335\027\242?\350.\267?\370\372\202\276\337\244)?\312\3246?\251K\344?\377\346\305>\237s7<\201!\233?\264[\273?\207\212\021?u\216!?\374`\233?\376b\310?J\264t>y\352a\276\373\261\201>\243\224\310?\310{U\275I\234\335\276e\240\336?S\224\363?\016\202\336\276\336>\023\277K\325\214?\252\'\305?\316U\023\277\364\300\317\276\002\020\307?\365G\270?\227\255%\2778\240%= p\342?i\304\326?\200\357\206\276}%$?/\354\237>\211\267\322?\301\033\"?\251P\035\276\272.\216?\361~\340?&\212p\276\347p\t?\021\016\017?V)\307?\305\344)?r\206\342\275\267\026\272?V\233\213?:A\003\277\3126\230\276YJ\023?Lp\r@b\202\n?\226&\335\2763\306\312?\335z\301?\022\211\022\276n\304\023\276\365\254&?\314\n\275?\317H\364\276v\033\010?gr\377?M\366\263?>u,\275A\326\373\276$\324\350?U\334\340?e\250\302>\317I+?U\2613?\032k\315?\277\177\223\276\253\2641\277%_<?\2657\310?\361\324?\277\343\250\354\276\264\311\361>%\316\316?B\006\362\273\257\355\375>\360\271L?\355\326\306? \266d>f\333%\277 \330T?\340.\355?\275\250\255\276o\236\332>\262\376\025?\013E\240?\t\244\374\276\342!\224>\'\224\375?|\264\272?}\320/\277\224Oo> \366\241?\006d\331?\303\362#\277\0048\275\276F\357\317>\205\225\264?\210-\345\276\363\3506\276\213\357\211?e\251\315?\310\t\027?\320^\365\276%\220\201?M\242\272?\346\347\316>p#\205\275\361-0?5\010\311?\2028\307>\331\226\311>\267\002\257?\356\010\263?\033J\315>5\231\271>B~\305?\250\031\212?\241\242\022?4Il>U\220\363?\016\371\263?\346Z4;r\340\255\276\210V\221?\314\007\352?*7\311>\357\002\225>\265a\322?b\272\354?\370\373U\276F\227\007?\020\307\347?\345\234\344?\007\355\325>\020w\315\276^;\247?]4\350?[\3568\277\023\017\020?)\002\235?\242\233\263?\347\030$? \267\367>\246\357e>\333\024\223?\267`\201\276&:\373\276\020\310N?\355\363\226?\354\332\276\276Tq\003>\366\233\337?)\317\246?w\243/\277\352]\014\276\322_\026?s\364\264?\253A\004\277l\261\033=\207\377\335?\317\367\303?\337\0306?\311\037\014=\360\244\273?\035\035\301?\350\021\343>O\221+\277\341&s?}Y\264?\372^\007?\377\005\002\275I\376\334?\355\232\330?\024\225\001\2770I\001\277iF`?W#\313?\321#\002?\361E\273\275z\362v?\255\243\272?X\310\024?=\327\207\276\340\271\354>\036\304\336?\'\275\037?\213\027\027\277\206\274G?|C\325?\372`\211>7\246g\275s\200\317?\227\033\370?\244l\021\277${$>\212=\310?\321\352\266?)@t\276o\200\025?T\312\326?\267\361\267?0g\266=B\263k\276\351\320\276?\243\036\304?0\200\310\276\214H\324\275\252\013x?z\310\274?\236\n8\277\204\201\247\276Eu\346?\225\231\264?d\222\271>\360\242/\274\203\303\203?\256\203\255?fga\276oE\202=W3\376?\373!\254?\020;+\277\305s\226\275\320\375\277?W\354\343?\027\323,?\313\235)?\333\021\227?\247\260\306?\245\202\022\277wf\252>\332\003\005?\200\200\315?.\215\277>\356\264\215\276!\344\371>)u\305?,\233\031\276\354j\">\314f\221>\013\321\371?\346y\360=\266\235\316\276\017\022\353?t\263\267?ni\235>\362(\225\272\000M]?\227u\325?\351&\021>\266\204\304>\372\256Y?\000\215\344?\370\301A\277\264\220\330>\325x\343?\351\016\270?b\241\226\276\223s\"\276[\211\216?\343q\247?\002\204\007\277\023\271\030?\307z\327?Y4\313?\327\207E\276\335\354\347\276\344:\354>\0260\367?/\370<\277\n\023*?\242\005\207?\003%\271?\243\352\003\277\200\267\200\276M\n\203?n\304\333?\005l;\277\023\232\334\276\002\352\240?\030\230\255?\223\001\300\2769\227\312\276>^\370>LU\266?\237\221\004\277\374\342B>\233\033\333?X;\274?}<\020\277e\000$\277&K\264?\t\377\264?h#w>\343\335\021>\357\355\221?\217\211\322?d=U>\033\272\r\277@\241\226?\245/\330?e\344\354\275\233X\200=\257\326\366?6V\272?\303bd>\223\000\365>O\002\352?\253$\314?\242z\203\276#\327\335>\351\350!?E.\214?$\322v\276\276g\324>O\003\300?\354\336\352?\361\270\010\276w\022-?>\r/?\222\226\256?\323\024a\276\261\375\274\276\253,\224?\225\235\306?\231f&?0\237\254\273\327m\343?\313\366\313?\013$\350=p_\337\276\356\214`>lC\335?A\266\010?\"\251\001?G\\\301?\207\370\313?\224\244{>\016\204\334>=\300Y?\347\250\337?+\337\323\276\346x\325>\361\017\331?\366D\307?\316\301\373>\343\034\205>w\245<?e\373\314?\226\006.>\007\261\263<\177\210\221?\245\277\311?_a\311\276\332\003-9\205\307\363>\223V\316?\0215A>\300\222\253\275XpP?\254\341\330?\001\245)?\037\241&\277\032\362\274>\354\367\244?\014W\347=\026\300\204>~5\027?Y5\330?\2408\200>\330\273\277\274\302\311\024?\353\255\323?\t\301\212\276w\275\020\277o\003x>\216u\277?\244\2469?>Z\334=7\3263?\257\352\324?y\350{>A\234\347\276\257y\343?2\004\302?`V8\277\014\\\316>\266\211\310?\237\223\336?\255\332\205\276d\255\201>\224{{>\336\001\306?\\\216\227>\253\257\256\275N\311\003?\214\242\253?6\257\352\273\035\307\337\276e\305l?m\220\325?C\000`\276\344\025\260>\330\027\221?\210F\311?\225H\342>n\3723\275<\315\213>\204\021\311?\370\336\237=\'/&?\217l\240?\200\200\321?t\\\365>\337\214\272=\210\245\324?\203\277\331?n0,?\030\264P\276\271;6?\216:\306?%y\266\276\355\017T\275\316\346\342?J\264p?P\253\010?\265\305\031?\332\341\216?\243\257\304?\246\326\373=T\037 ?\300}\352?\240\025\312?\211C&\277sK\013>\002\350\221>\275T\326?\227\035R>>=\376\276\271\217\377?\000\251\357?\002\236\344>\252H\275\2768\017\274?8I\321?\337\025!\277H\032\274>\035X\346?x\230\254?\223\246\r?\240o\273>\373l\362?\210-\311?)Y\316\275\304\322@\275R\365\340?\356|\335?\211\\@\277\"\342.?\023\314\323?\375\274\277?\362^\365\276z\307\025?k\365x?\311r\344?l\351\r?\007)x=!\310\256>\211&\316?\310\265A?\213\371)?\256\361\371?\341C\235?;\373\332\276\225b\317>;\021z?(+\276?\035;\360>:;\371\275&Q\000@\257@\334?\372b\357=\334\021\036\276\020e\366?(\n\334?%x\373>\017\014\030?6\035\240?\273\016\277?\20307\275/\245\216=I\245\363?\371\021\237?\205\355\027>\006\241\014>\r\211\253?\202\254\351?\315\313\035?\374\252l>_\375\217?-^\276?xc\361\276\211{\374>\200\t\005?\251\240\234?\320\234\205>!>\000\276\232\346\306?IK\335?x}\022\277\030\226\003\277\226\211\034?1\267\303?\244\032\236>E\017\234=\023-\261>\267y\301?\033e)?\"\216\375>,G\350>\rp\315?W\t\006\277\307\177\361\276,m\217>4f\272?o\236\332\2766\310\244>\021$J?\366\265\256?\000\306\263\276\213\336\311\275\215\311\364?\021\214\277?4J\327=[#\252>\245x\216>@\336\313?\330\013E>\247\010$\277\356p\201?ZI\333?\320\325v>G\003x>3O\216?((\257?4\234\022\277\215c$>q\373n?D\030\237?\255\0273\2774\325\213\276\377\025\267?\004\034\226?\351\325\000\276\3540\366>\270g\314>\\>\264?N*\032?\256\240\361>>f\276?\230\276\313?4i\037?q\343\256\276}P\301>\3225\263?\374\216\331>\000:\254>\300\376\363?>w\254?*\375\344=\223\246\001\276\307\334,?\037\365\002@\361b%\277nL\003?`\227\364?3p\320?\030|\362\276\373\2577\277\252.w?\267\t\311?\225\326\037\275d\261\315\276\022\263`?z\211\241?\201\010\r\277\034\352\277>\341\232\273>\215a\276?EI\010?cB\354>!=\205?@\210\316?\301\036\033\277%vm=U\340_?\300\316\255?\235H4?\307J,\277\375\215%?\022\211\234?`\254\037\276\357\377\003?\311\t\312?^\271\242?F|\007>?t!\276\341\361\265>\016\236\263?\364\305\276\276\227\307\232\274<\337~?DQ\302?\275s$\277r\245\336=\320%\314>\341D\246?\016\332\233>-w\n\277\316\245\332?\311\377\260?(\324\353\276\335\321\307>j.8?\376\322\340?\207\337\035\276p{\n\277E\014\324?\331#\250?\361\274\204>\tn$>\250:\273?\227\037\264?zo\274\276I\020.\274\347f\267?1%\270?\252}\272<N\321%?V\363\220?\375\277\266?\251\300\201>Z\203G>\027\210\341>\271S\270?\005\340\217\276x\324\360>\274]\370?\315\222\366?\306o\272>O\316\330>\314\3615?mT\275?\361\235\034?\335\323\031\277\344N\375?A\203\277?\367\310>?\277,\335\276\205s\332?-\005\254?\2031\242\2761\356\216>\276\363p?\257\263\331?\0009\261>\024>\253\276\"\2263?:\005\313?P\310.\277h\227o\2752N\225?kG\315?By\237\275I-\024\274\302x\314?l^\273?\366\232\006\277\0257\006?u?V?~9\325?8\201!\277\236a\202>C\373\347?\266\272\330?\010\253\331\276\373\254*\277\003\373)?\377\262\353?\313i\357\276L\340\026\277\3737\202?\306k\346?\363\005\245>\373\225.>Lf\372?8H\336?\252\201:?\243\260\007?r3\204?6\222\320?\201\355\340\275\016Jh\276+\031O?\361\022\330?\2027 \277\365\023\336\276\312\000\343>\216\313\272?\332Y ?kE\333\2761U\216?\321\352\254?o\177.\277\316\252\013\277Uu\373?\203\023\337?\226=\311\276I\234!?\306\213A?~r\266?P\0279>b1\n\2769\315\003?6u\350?Z\274<\277\001\212\021\276\227\032\343?\332\311\320?P\340\205\276\222\257\010?\3744\361?\304\227\301?\203\245\272=1\263\023\277\223)\275>\324\322\250?\241/m\276\333RG\275xG\317?Z,\327?o\271*>\313\021\222\275\251\374\242?\253\264\317?\341\2310?|\014\266\275:\007\245?h\222\246?\211{\254<\233;\026?\314\233\210?0\200\244?1E\331\275=\177Z<\253\336\351?\360R\240?\024\223w\275\373\352\212\276ZF\304?\274x\333?[\"\377\276\237>\202\275\276\010\020?\356\224\266?\224\276\020>\232\315\203=T\320\263>\206 \275?\023-9\275\344f(\2779\346\300?\367\344\006@?9\312\275\224K\233>\2515\200>q\307\225?\326\033\305\276M\206\017\277\217\307\243?\312O\330?\277|r=\202\256\235\276\210A\264?\004\001\242?\211\357\304>\253x\243>#\315\315?\203\243\003@\226\223\330>tBx\276\202\273E?T\306\313?\253]\013\277\241\024\265\276\276\276n?\373@\316?\227\304\005\277\271S\202>}M\230>N\n\365?J\227\336=\013\320\"?\304\352\273?\327\371\325?\020[\272=\374\251\341\2762Yl>yW\271?VF\373\276\232Al>2V\321?c&\327?3\337\221>\032\211\260\276\350(\354>\270\007\275?\036\334}>e\001\263>\313\275\370?\351~\334?\\\252&?\213\250\321>i\214\324?iq\336?\244\034\334>-\261\n?h\025\337>\211%\343?\335\227\323>\361hc<1w\302?\t\303\216?\363\000\366>\257\264|> R\236?\2300\270?\277\325\022\277i6\017>\210\225\253>v\033\310?\230\275|> \320\311>\177Xm?{\364\322?;\211\340>\371\363\205\276\016\230\260?1}\313?\366\356/\276\024\320\214>\253w\262?\026\210\306?\246\233\324>73\262\276\013\373\236?P\001\272?\220i!?\017\360t>\323J2?\376_\335?\273\271\370<\237\3459=\200\2452?\300\006\342?@\207%\277\273\234\">W\\\346?\217\030\353?k\364\252\2764h\020\277c\242\230?\261N\341?fO\342=\0321\363>8\003\342?\024\314\274?9\016\324>S\003\r\275\352\357\204?(C\347?!\0035?\2379\213>\377\325\224?\236\322\267?\346\317\'\277\0222\270>\263{6?\321#\316?\213O=\277\017\322\363\275\017\256\342>4\024\307?^\2018\277\002\326\212=\324\230\350?\347R\374?\374\375\032\277\335\320\224=\006\241\226?\330d\275?\032\025 \277\240\304\267>\232\022\321?`\315\331?~\253\265\275\272\300\235>K,\207>\320+\340?6\005\322>kJ2\275m=\326?\246)\312?D\367\034\276\204\360\020?{\273\205?\343\210\353?\247x\034>\223\342c\274W\257n?\356C\310?M\237\205\276\230i\037\277\330G\221?\0214\266?\252\236\234>\351\356z>P_\261?mq\333?\365\202\013?\220\331\t\277\236b\270?\316\337\314?\333\025\312\276W\314\250\275\240\334\224?%\256\317?b\370\350>8M\327\276p\n\375?qU\313?\253y\256\276\347q8\277zg-?\000\217\270?\264\257\024\277\200\234\330>\246\317\245?o\330\244?\003\"\274>}\010\362>\377\375\326?\022J\265?\222])=\024Y/?\254f\247>P\341\270?$G\332\275\273\t\"?\243\305\204?\234\303\301?\206V\327\276\2173\255\276b\371\202?\010\003\311?\353\310!>\233\253\376\276r\226\250>\\Y\346?\316\373\177=\273\356\365\276#\n\375?\334\203\326?\240\342\010\276\226\227\014>IJ:?R\232\325?\347:\215\276\313\242\000?\017\236\360?d\352\244?W\262+?\266e\300\274\305\232(?\301\253\311?\344/\315>wg\r\277VJ.?\027\326\261?\003\n\021\277X\032\350\276)\375R?V\234\007@9\263\001?</\345>8\377\362>{/\350?D\212!?\236B\346>\274\010\320?\214\277\325?\250\252<\277;\375\240=\211b>?\320\232\257?\271\372\r\277\026\241\360\276\210?\266?\252\231\263?\202\305\371\276\263\225\037\277\355\375\206?\300>\354?\275\250\335\276N\264\373\276\331\241\266?$\200\311?\270u\037\277\244r\333>\"\216\311?\260\307\272?\304\320\252=\007\360\266=\216\366\362?:\224\341?\036N \276\221\266\311\276\371[\224?B>\276?3o1?d\317~>\363\315I?6\350\347?$\016Y9\3165\014\277\321\374{?8\331\360?y\312\342\2765\353\234>\352+n>z6\265?t\013!\277\017\266X\275\256\351\335?\313\235\311?N\271\342\275\305;\004?%\003\272?\031:\342?\005\207\'\277u;\273>\357#\362?\207\247\277?\010\004J\276\305\216\276>\366\233\374>%\225\313?\361\363\277=\257}q\276\252.\323?\327\275\345?\356=\274>\'\331\212\275z\017\333?\316Q\323?lA/\276?t\025\277\262F6?h\224\352?@3\230\276\364\371\330\276\370&\374?\352\\\265?a\0322?T\307\212>\375\210\213?\014!\235?\260\253\251\276\234\214\002\277\321\370\347>\256+\372?!\222)?<\243\325>\313\242P?\2451\304?\227\2524>\317\023\277>o\272\313?WZ\252?!!\342\276\347\374D\276x\337\321?g+\237?\037\235.\277!\315\020?f\347\237?\243\351\220?\203P^\276\304\224\034\2777k\211?9F\270?@\030\240\276\277\234!\277\361\001X?\350i\342?\336>\027?\315!\221\276\r\325\252?\205w\261?Z\270\344\276l\317\034?\025\206i?\257#\272?\273_)\277\271n\322\276\276=\032?R)\340?\004t\267>b\2720\277U\300\225>\237\311\332? a8\2768\277\201>\301|t?\246\266\276?\004\345\346>\327\245\002?~\226U?\234\031\247?\253A\200>\267\357\211\276\321\177A?\371i\356?\212u\222>\216;\235>\245f\017?\013(\334?\ni\305>6\254\211=\301P\254?z\374\330?\020\263\307>\332\217,?>\326\350?B\'\340?\203\244\227>k\'.\277\360\025\025?NG\264?K9o\276Gu:=*X\343>\211\013\306?\005\337\224=\337\032\030\276\246\0259?\261k\253?\243;(>=*N\276\366\213\257?\3060\251?\r\245\006\277\253\006\321\276\307W\354?Y\301\347?\\\034\025\276\313g\r?\271\253\245?\026Q\251?\332 \'\277\351\2356\277\342B\277?W\356\333?\020\260\036\277+\303 ?@\216\377?k\233\270?\356\261\274\276\302\245\003\276\213\360\310>NF\263?\216\220Q>\222!G\276\243b>?FE\244?\021\341;?\0221\025?\031\220\257?vq\307?\367\256\341=,\014\001?\326\320\324?\365\241\267?\310\320\341\276\224Jh\276\267\336\267?\307\023\321?\025\304\210\276\342\221\330\276w\025\201?\326\346\241?[\'.\277\002\323\261\276\r&\234?\257?\327?\255\0268>M\017\002?\324/\226?\315\316\300?-\260\317\276f\276\013\277\335\206\347>z\306\262?\237Z\005?4-q\275\325\\\212?\360\024\342?\322\247\021?JE\203\276Ql,?M\275\334?\201#1\276\313\242\330\276\021\354\320?\217l\372?\214H$\277a\377\001?\305B\203>\036\210\302?0\234\343>\255\370\216\276vd\302?$C~?\264V\344>\010\260(\276^\346e?\207o\273?1\323\376>~\036\253>j\3446?@Q\001@vO^=\372`\201>\237\305\263?\360\336\277?\235*\237\276SZ\377=;&\375?\262-\265?-\352\263=\277\235D=\334H\351?\332V\007@G\034R\276\215b\351>\210\356\370?\203\303\333?\036\2126?\312\335\357>]\025\307?#j\264?\357\346\031?\375h\010?p\222\367?\220\020\271?\354\335\367>2\223x>\302A\214?#\367\216?\037g\232\274\306md\276+~\274?9B\274?$\326\032\277^d\022\276b\275\365?\250\246\346?\330\236\005\277\365\276\341>\366\'\371>\013\016\243?\235\177;\275\374\252\234\275\035\006\376?\214\202\322?\215\231\020\277|\355\371\275\322\216W?\237r\330?;\343C\277\025;\006?:\221\266?\321\256\364?e\035.?\310?\223\276%\206\370?\274A\254?\030\321\246>H\025\345\276_\"\273>\336t\231?\212\344\313>N^\010?\206\215\253?m6\346?\207\244\376>\314~\325>\207\254\317?iQ\321?\004\257\236>\240O ?\351\361\303>\362\355\271?\300\2562\277\233\035!?\343\343\305?\005\247\320?\233Wu\276\237t\372\276\"\2537?\276P\340?\273\325S\276\005\211m\274p(\333?\024\227\343?\226\223\310>s\023U>\003\007\200?\247\351\253?\305\217-\277o\331\r\277\202\0001?\204\270\356?7\3017>\272\205\026\277V\231\215?\032R\271?\237\314\277<\0109\317=\332\206\224?S\261\323?\033\332\200\275r5B>\3554\204?P7\334?\366\013\266\275\371\363-?(\321\363?\307,\263?K\345\005?\021\305 \277\331\t\205?\\\221\332?Ig0?\216\350\226>v\203\235>\035>\000@\335{4\277t\r3\277\375P\324?\333\334\266?\006\177\247>\277\'f>f\264\331?\350\022\272?\362\226\263\276\375\333\375\276\356\014n>_D\237?\244\341\254>\270V\017?\374\234\344?y?\320?\345`\376\276\231J\307>\302j\314>`s\352?\243\256-?\312Q\250>\032}\206?\325<\265?\346?\020\277\365\273\360=\331\036\322?\"Q\344?\221Cd>d\353\311>\010A\352?\221\233\275?\276\203?\276F\316\242\276\235Y\214?\271m\325?\003\355*?\344J-?\216;\307?\333\206\255?\314\353\000\277\245-\316\276\023)\233?\\t\252?\300\003\003\276\267b\277\276\223\241\267>\217\305\302?\253=\020\277iT\020\277tz\316>^*\332?9\271\317\276\006\3325?\251p\207>\r5\264?\260T\023?_\324n=Do\344?\254T\250?\220\331\r\277\360\304L\276q\355\017?\'\244\341?\031\376\017?\266-*\276{\351\007?\274\314\366?&8\035\277\0324\324>y\211\207?\344\243\355?\022g\005\275Sz\376>\275E\326?\"4\310?\177\336\264\275\\V\035?\253\021\034?\000\252\300?X\343\374\276\356\315\277>\354\367\350?V\016\347?~\2123?F\261\314>\312\357\216>w\021\236?\306\367\021\277\254\377\353>\371\347\230>>=\336?\274\223\307>\211\357\020?-\242\346?\355\231\301?\345\264\347=\234j\235>\030\327\303>=+\277?\374o5> |,?\3339\034?\253\227\375?\2201\'>\207\250>\277\322\003z?R|\332?S{\361=K\2553?\001fg?m\347\307?\036\376\032\276 B\374\276\273\237:?\033H\325?U.\344>\200\235\343\276)\222@?a\375\315?\230\207\\\276aU\335=\201\330 ?\200\013\312?\003_\271\276\261\367\262\276_\021\231?\017d\303?\337\243\036>I\333\200\276\256\001\247?\204*\307?\357\255\250>\325w\002?\300\203\333?\304x\341?\201^8<,\240\270>\362R\207?\375/\355?\366\'\031\277/\304\242>\001A\234?\\\221\222?S\313\326\274\307\235\222=\t&\254?\263\227\331?\024Z\366>\276J\316\276P)\230?\334\362\317?I\367c>=\177\332\276\317y\213?\347q\250?\267c\252=\370\214\344>\305\346\241?T\001\323?\324\273\200>\205B\304>\r\224\235?\252|\227?\273}\306>\026\372 ?Q\034\210?\263\n\255?\023H\021\277\372|\314\276\377D\300>\327N\346?\033\233\001\277\266\022\302\276u\211\272?!\035\306?X;B?v\033\024>S<\313?X:\311?\374\252|>%A\310\276\263\203\316?\347\251\242?\336\256#\277\0258\001\277\002\262 ?\035[\243?-\"\352>\365\331\001=8Po?c\234\321? \226\265>\005\337\000\277p\244\262?\2451\326?\347\337:\277lC\355\276\370\260\225>\255\301\223?\014\221\023=]P\337\275\0172\217>9\016\244?\301\214\031?\344\205\004>\267\206\034?\316\373\261?\360\332\345=\017~.?\220a\366?\243\257\320?\317\331\372>\237\314\267\276p\254\276?\212\311\301?\307\274\006?t\233P\276\263;\271?\026\334\275?\272\201&?\323j\010?\351d\351>\245\334\327?\336X\000\276~\252\222>\202\227P?\371h\333?\220\275>>\227\376\305\275u&\324?\001\366\303?2r\256\276nm\201>\247\233\027??\216\332?\027\274\230>\370\3713?3\334\005?\217\375\262?\3478\237\276oJ9\276\345.\347?\243@\177?\272\371\246=g_y\275\240o\361?Pm\272?$\360\247>_}\314>e.\205?\301\221\310?\340\020\002?\261\032\013\277\244 \303?+n\340?Q\025\313>\374\302\013?\275\000\333?\240\026\277?i\034\342>\323\331\231\276\027\343\330?\t\026\325?Va#?\202\345\360\276\234\326\362>\243X\312?\2512\024?\253#\007>\036\033h?Q\273\345?XX\270>\020\224\233\275\017o\370?\236^\313?\034\360\251\276\020%\272\275m\2360?W\005\310?1\322\213>\374T\025?\231\325\227?\346\005\374?\010!@>\177\240\344>\364\235T?@\333\264?\277\270\000?\243\036\002\276\3421\327?`\315\235?\203\025\'<\020\263\027=\323\342\355?\033\332\362?z\340\037?\323J%\277i\261\243?\326\216\354?\345}|\276Z\201\211\276nw\357?\224h\265?\337\245,?\355\021\272>K\326\313?\245O\271?\237\003[\276o-\323\275\032U\317?\237\312\307?4\272\243=\006\022t>}\2250?\241\271\314?\224N\224>x\324\030?h\267\307?\371\022\304?4\332\302\276\214\275\247>\213\212\330>h\352\001@+\275v=\365\365\274\276\2165\255>m\306\277?\254WQ>z\211\361\275\350Ao?\235d\347?\010\312\355\275\2339\034?\214oO?#\243\323?\222\3523\277{\026<\277n\324\264>\253#\343?\333M\270\276B\005\357>\026:\311?k\021\343?\032Q\372\276\243s\336>I\375\255?s\022\304?\001\243\323\276\340\022 >\352y\337>\267\'\334?\307\235F?\t\376\207>\252\204\272>^\016\271?7\211\t\277\356Z\"?\230}\000?7\245\252?6\351v=\004\345\306>W\357\303?\326R\364?\306ix>S\010\224\2760\236\207?\221)\303?(e\n\277\242\262\311>\242A\251?\004\376\310?c\322\337>\030D\334>\356\342\254?\273^\226?\213\303I\276\324\231[>^\331\355?\3228\310? \321\024\276|)\024?8\'W?[}\303?\206\0026\274\360\2064=\\$\230>\315#\331?am\334>\346\317\003\277\274\225\273?\256)\340?\304\316 \277\316\033\377\2761\376\231?\267\014\330?\023,\n?K?\251>\214\200\267?u\221\362?O=\322>\265\306@>\240[\374?CW\340?\240\375\010\275c~\356\276\177o\244?\365\271\300?\325\003\226\276\327\372\036\277\370*\207?[\262\224?\334\325\033\276\312\032\275>{\210\244?C\346\274?l|\"?\251\021\372\276\312m\371?\274=\356? ]l>W\006\005>2\001\237?O\353\276?\225\'p\276) \345> !\315?\301\342\314?\034\357\346>\031t\202=\367\257D?7\373\255?\037\362&\2771`\001?\220\371\303>?;\007@\017~b=?:=\277\254\206\366>$\014\255?(\363\247\276\307\233\364>O\341\205>>Z\302?<0\200=Q\335\334\2757i\257?\257\321\344?\366^L\276\270\006V>\331\326\272?\246\230\257?]39\277\201>\201\276\265=\225>*\343\377?\200E\266\276TWN\276\320\017g?\213q\342?q\033\265\276\304Z\010?\002\304G?\201\316\326?\211\360\217>\021\246\030?\270\tN?\250n\274?0*\201\276\353\213\020?\323\237\001?\273\265\324?\003_\321\274fL\321\276\373\375\215?\342\312\301?\313\235\231=\331\223(?\274A\316?\366\230\344?l\224\265\275u\002\022\277\177r>?$)\347?\277\364\006\276-\224l\276\327\225x?\223\343\352?\257?\351=K\001\351\275\262\324\033?\'\207\277?\010\001y=;\032+\277S\253\246?\016\273\327?\271\337\321\276\354\277>\276\346\262P?1\263\301?\305:\225>\366\010\315>o\313\207?\321\226\277?\377\3148\277\226\224\233=\034c\242?\374q\267?\240\210E\2755\262+=\020\311\025?\370Q\251?Me\r?e\216e\275\000\256\274?*\341\341?D\242\320=ip\'?~\222r?\361\360\324?\311\312/?\253>W\275!^\306?\371\206\272?ZHp>#\207\220\276X\375\310?[\322\367?+\026\013\277\223\306\020\277+\264\263?\324}\256?\236\357\207=\225E\261>\367M\023?\000\214\255? z\032?A\200\244\276\222\263\225?)\004\256?\003\315\357>[\353\033\277n\240E?o\235\257?\340\237\232\276\225}\257>\2559{>\342\345\243?\342\346P?\201#\271\276/b\235?\324\270\321?\376e\277>F\232,?\216s\225?\303\201\244?\221,\034\277\013~\343\276bH\223>Y\336\277?\032\341\375\276\215\264\364\275T\376\201?\302\025\322?\311q+\277\270\257\'?\227\246\275?O\352\263?O\315\265>\361\204\276\275i$\035?\357X\240?~\220\021?\245k\276>\213O\271?&\031\361?\314\353\034\277X \002?\275\215}?\002\240\232?=*\032?rPB=\340F\373?\013\t\001@\304A\002>/\304\302>\307.\355?\\T\331?\231F+?\224h\311>\365z1?\255\247\266?\321\002\364\276F&\200=\344\366\271?A\362\244?\177\336$?7m\356>G\362\221?`:\237?\255\301[\276\2178$?\227\345\205?\365\203\314?|\265\037?\225\360\234\276l\202\000@\317j\271?\227;\243\276z\373s\275p\266|?\317\022\330?\213\246\013\277^-\033?|&\270>\035Z\272?\255\333\000?\303\272\221>M\312S?m\214\241?\n\274S\2769\'\266=\374\013\323>\273\360\355?#\022\001\277QL&?\271\260\372?\351\267\247?\206U\000\277\337\207\033?\207.%?\205\317\246?\201 \000\276\020\261\241>\000\024\265>*p\312?\0257\016\2775{8\277p\266\325?)$\321?\016\334)\277\225\364\360=\256\3569?EJ\341?\252\326\202\276\311\311D\274y\255\204>\275\036\306?\030\261\237>\313\327\245\275I\307\247?\311\256\326?\255\025-\275\035=2?\241\274\351?\313G\242?\014\217\001?\300\3178<\310i\220?\202:\331?\031\216\277\276\310\356B\276:o\024?\032\026\347?\016\206.?Aa0\277\321\021\321?6\310\320?II\347>\275\2523=\260\273z>k\232\215?\356\224\246>\t\030\025?\333\352\336?3\025\300?\2141\260\274\260:\002\277z\307\352?\004Y\313?K\261\363\276\334\177\034?\026\311\251?|\325\316?W\'\347\275\035!C\276D\247\032?Q\202\312?\301\344\366\276\001k\001\277\324\001\330?\204J\260?\323\243)>o\363\216>\327j\267>\272\276\267?\236C\031\275\016\0253>\232\366\303?\326\037\237?2v\322\276\026\0255?t\212\207>\215\n\226?\270\313\256\276V\267\352\276\330\326\265?\305\376\370?\276\245\020?V\357\034\277\342\241\341?\3372\331?7\340\003?\260\310\257>\025o\264>\374\253\261?\366\264\023\276\355\014\263=\357\022\276>\236)\270?^0\000\277\023\0203?\376\025\374?\200`\322?\0264\205>7\3048\2764\305\252>\216Y\352?\330D*?U\331\007?\342\230\236?\\\035\240?Hl#\277v\250&\2760n\346>+\244\334?\235f\201\275\332T\335<\330\344\252>+l\362?\252\232(?\261l&?\272\375Q?\r9\320?\312\210#?\303\r\370\274r\362\254?\324,\316?X\341\276>q\254\023\277\263\351\263?\037+\264?6\221\261>\313\367\324>\313\326\220?<\335\355?\356\261\204>\332\311$\277m`E?\3702\277?6=\000?\366\353~>\030\t\335>J\010\332?N\231+?\306l\025\277\337\310K?%\354\307?\223\250\227\275k\236C>\211v\302>\024x\277?\234M\327\276\375\244\262>\352\'\307>\341\226\317?\035\253T\275p\357\032\277\\\301;?m\255\251?\247\262\000?T\344\260=\214\177\224>\212\220\324?Z\2015?m\003\267>\217\035\226?y:\263?3\251)?R\n\036\277\205\016\317?\014\346\271?\004\003\230>\273\354+?\364\221\347>\362\"\315?7\304\300>4+\213>\023\3377?\375N\261?\277`\357>_\353\322=J\005\250?F\225\361?\1774,\277\272\332\"?\014\276\376?\'/\310?\314%\265=\276\276\n?\000\265\325?\330\326\261?P\217\355\275\300$\325=\006\003\223?\032\247\333?\'\275\217>n\206{\276\337\002\274?\264\216\306?I\326\301\275\035>\311\2751i\270?\306\277\273?\217q%>\035\312\210>\254\250\360?\027G\321?\301\2479\277<\331\365>\322e3?u9\267?\376\177\224>\222w\356=z7\206>\243?\350?)\260\024\277\347\211\367\276Y\000\316>;\000\372?\222\037\361\274\256g8\277q\371\271>\350\275\247?\364k+?\216\257=\276p\340\373?\177\243\355?\017d9?\306\213\005?7z\323>\200b\316?\203\277\337<=b\314>\022g\216?\207\026\311?\250\345\347=Mj$?\357\300-?\334\364\333?\274X\310>\024\352I\276\250\362\217>\304\356\247?*\002\034<\317\275\007<\365Z\262>\376e\257?\345d\212>\226\313\206\276L0\327?\301n\304?tA\355\276\232\013\014?r@)?\021\303\302?\265\211\037\277\233u\022\277 \257\214>6\261\322?\226!\236\276\367>%\277\226\365\271>Q\365\241?\362\315*?\247v&>r\257\272>D\300\317?\302\367\216>\014\006\007?\n\020\035?9&\301?\316O\361\275\274=\240>C\314\354?\374q\257?\377\317\031?%\010\037\277)\206\220?D\375\330?\207k\235\276\016I\235>\327\327O>\366\014\331?\325\223y=<\365\010\275L\022\306?\257`\265?P7\330\276\021\251I\276\307\244^?+j\300?\262\202\013?X\252+>^\313\345>=\356\333?\234\371\225=~\031L=-\330\344>\257?\321?\332W\256\276_\230\314\274t\254\370?\242c\343?\351~\"\277!;\257\276\351\264\033?\215z\252?\314*\030\277\274\263\326>9\036y?\266\272\310?\374U\004\277K\345=>\346\022\353?\216\310\271?\341\263-?\255j-?v]\322?\353\032\351?\243Z\234\276I\016\000?\230\321\323?\333\300\265?\032\031\344\276\031\377.?%e\301>\227\213\302?\232\261\330>*t^>op4?\250\342\272?\341\320\027\2779\356t\276z\340\213?\216\225\336?\017)\276\276\376\360\273\276sE\266?\347\302\272?=\327\257>\377\262\243\276\306\334\223?\205#\302?\007@\\\2744H\371\276\226\361\254?\344\207\354?\3168\005\277\335\356\025\276\246\314\224?@P\244?\346\\\212=\224h\251\276\341,t?\026\300\340?\213\026\240\276\216\002$\276.|\003?H\213\375?\370m\330\276\037jk\276h+\204?}x\322?u=\261>y\316\016\277\305d ?zU\331?\370p)\277\037\275\341\273\265\r\365?S!\336?\023~\251=\210\276+\276B\257k?\357t\277?\233\310\274\276\335\225\325>\257\"(?\332q\001@\360\276J\276\357\252\013\277b \211?\206;\363?o\274;\276\310#X\276\002E\236?0\200\306?.\003\356\276|\361\005\275Q\r\240>\325[\325?\213p\003\276+\244\000\277\366\316x>\227q\335?v\030S\275\2076\200\276lN\207>\304\261\344?y\313\225=\335?v>Fj\230?\310_\322?C\034{\276j\332E=\213\3742?dw\321?\315\254\315>\3650\004>Y\250\240?+1\321? (g>\355~\225=rA\314>K\002\304?2\220\037?/\210\034\277\332\310\235>%\261\264?xc%\277w/\003?Y\226\361>\342Z\243?\304\317C\277\224\372\362=_s\027?\010\315\342??;\320>9\361\235\276\262\001\365?\340g\376?\'PD\274\020$?\276\247\037E?\007\323\306?\260:\232\276\035r\263\274o\366f?an\301?^g#?\nI\316>K\377O?\037\201\275?l\356\014\277t\010\\>\376\201\264?\223\252\333?\372\013]>\376\357X>\312!\310? \360\344?dX\365>b\207q=\2540\321?[\007\347?\017\264\002>lC\355>\303\277\033?j\025\265?$%\235\275\246{1\277Q#\220?\266\370\332?x\266w\276@\302\024\277\233\337\255>\030\264\300?\322\254,?\223\311\261\276\372\016\236?Q\364\242??n\367\276\371\331\300\276C\036\357?\027\270\342?@j\333>\244\251\226\276N\022V>\333N\271?\340\200\246\276\314\n!?\361\372g>\t\375\340?\251\205\002\277A(\207>\317\n-?\304\n\253?\205^\017?\200*\006\277X\231\357>\377\260\331?\375N\243>\237\343\023>\204?\226?\023f\320?\336t\253\276^+\301\275\205\206\324>\262\362\315?\036\211\367=\335|+?p\204\327?\026\335\344?\254\340\267<\303\235\263>\331\272W?\0363\364?\306k\016>\274\006\335=c\341\307?p>\265?\222\223\371\276\3644@\276\333\363\367?H\335\344?\253\314\024\275\204\r\023?\013\203a?\271\305\242?\312\300\021\277\320D\024?\231\006\325?-\231\337?\317\371\t>\331%\232>0x\314?\002a\341?\034(\260\276\020\0048>\302L+?\320+\260?&\033\027\277U\337\261>8\376\257?\035\347\302?\'\021\025?\235\363S\275\017\021\244?\204\177\331?\224l9?\201\226*\277\022z\215?\005i\334?\010\2214?\331\316\'\2772\244\230?\341\r\305?\200\267\020\276\000\341\243>\261\317\312>\227;\303?\2720\"\276&\000\217>\205N\206>Hp\317?\014Z\034\277k\017\253\276b-\300?\274\262\305?\263}\000?\267\233\200=$\226\321>@\302\254?:\311\036?H\342\031\277\202\r\234?\344\206\301?\247\350 ?\031V\025\27771q?\227R\363?sg>\277q\306\260\276\"`\357?Pq\354?\246&q>\027\014\276\276\2437\001?y\352\257?\374\001\003\277\027H\230>\231:-?C\256\332?\n\236\312\276RI=>9!U?\2758\261?\350\277\'?\237\034\025>R\223\221?\003D\245?\360\277\365>\00541?\205\203\337?\373\346\264?c`\035\275\204\267G=a\370\367?\022\244\360?\021\341\317>\016L\036\277\341\366\275?o,\366?\376\235\355\275>v\207>Y\276\355?\362\n\256?\337n\351=\317j\261>U\325\212?\307-\274?\261\247\305\276}#\202\276\272\236\361?a\301\243?UQ|\276@\026\322\276\327k\206?\003\013\356?C=}=\335\266?\276u\373j?\206\000\326?\365\274+\276\252(^\276\327b\320?\215\'\332?\343\2500\277\251\300\211\2755\002\220?\224\370\264?\217\304\313\275\013D/?\210\022!?\036\335\334?`<\253\276,f\024\276\233>\226>Z\203\303?\316\247\016?\312\302\'?EF\315?\254\254\345?\347\035\017\277o\324\n\276\022\377\321?\2026\335?\204H\036\277qV\034?\306y\022?e\000\342?F\010\327>8e\226>TM\265>\234\031\337?W\353\244\275\026\301#?\301\004\257?$a\353?\017\272\374>\354.`>\013\243\331?(\265\323?D\031\252\273\2755\340>\222\366i?\345`\270?b\300\342\276\\\345Y\276X\206u?#g\277?\352v\026\276^\023\026?~/\333?\2446\313?\302h\326=\371\274\342\274Z\262\307>k\236\311?,\020\325>g\232\320=l\244\002?\342\314\305?\271\253\007\277\236\t=>=X\376?\376\324\332?x\354\227>\240\373\026?\201\005`>H\340\273?X8\341\276\277dc\275\026w\250?\377\352\337?\034\230\254\276\356\"\034\277#\t\344?/j\261?\276\245$\277\314`\214=\274\213\353?k`\345?{0\351>`\314\266\276!D\335?N\234\330?;\344\356\276\345\'\005\277\014\202\301?\371.\273?Ct\350=\271q#?\374\347\204?\001M\276?%tW\275\010\217F\276~%\312?G\215\225?S\347)?X\036\020?\003/\363?\223\035\371?\233;\"?dX\215>\227M\252>\263\354\327?R\326\327>C\036%\277\220\375\241?1[\312?\215\233\202>\2137\036?D\276\204?\t\371\242?,\365,?\004Z\022\277\240\333\330>\226\\\341?aQ\r\277<M\346\274\367;\274>{1\320?\217n\010?\240S8?:\214~?\222\352\231?\376|\033>\2238#?GAC?\376H\315?\030\262:\277D1!\277\337\231\226?MM\314?\345\357\216>Y\335\252=Ds\360?xc\317?\374\377\270=\250\000,\277\363\253\327?\270V\337?=c\257\2765%\231\276z\014$?\305\310\226?\333\276\307\274\242\016\203\276\350\303\n?+\371\364?\340\235\334>\306\341\214=\253\003\261?\2657\322?t}\347>\367\311A\276L\242\327?X\307\345?0\360\314>6W\275\276\362\247\017?\227;\257?\003\2658>\325\352\017?5r\'?^\240\256?/i\214;>&\322\274?SG?\000\375\274?\237X\017\277y\256\'\277\016\372y?0\361\321?@\026\302>\034\t\000\277L-\310?\272\240\334?\303\363\"\277{j\025>\260\300\370?\307F\232?\260X\017\277\305VP\274(/\223?ta\310?\337p\177>\226=!\277l/\346?)z\320?\037\017%?eo\351\276\0049\000?#\026\341?G9\320\276\024\007\014?\304\267\323>)\317\266?\237\252\202\275\3750\"\2763<}?\202\037\345?\367\314\002\277Ln\354>\020\337\003?\337\300\310?\207M0\277\242\n\017\276Wq\301?\261\334\326?\243\037\215>\340\201!>y\240D?\260\214\331?\252\267V>\000o\r?\026\232\311?\250\036\335?\344\331\005>\206\377\264\275\207\3255?\325Y\317?\214\367\363>\n\274\223\275N\351Y?\237\034\337?\264\003\316>0\021\307>RS\031?\231c\273?\352=\005\277v8:>\203c\207?\202\250\347?\004\036\230=\241\364\005:,\324\n?\014W\343?rlm>\027J\002?\010p\327>\005S\301?\316l\217\276\244\377\315>\220\223\375?\2345\342?Z)\204>J\230I\276Y\353\332>\035r\325?\000\214\027>\020v2\277\253_\324?\270\344\366?\317e\212\275\215`\223>\356@\331?\202:\377?\324\272=\277\2073\177\275\347Y\240?\211\265\356?>\"\246>\242\321\275>\377B\033?5b\306?-\010\245\275\2607\371>\277O\230?u9\267?\023\363\030?\313\016\261\275(\'c?Z\r\307?\2757\246=\371\237|\274\014\014\037?T\307\312?\341\263)?!t\020\276\245T\350>\235\235\262?\207\025\356=\366C\014>\3060\003?\327\242\335?X\214.\277I\024\342>\300\336\346?\327\371\343?\354\211\316\276\314\270)?MO\263?\227\003\261?\327\242U>\232{\000?\245\230\334?\215\013\307?\0007\303>\023\201j<\247u\201?\255\025\325?\212=\324\276\332\001\257\276\232\307O?E-\321?\264\001X\271\030\227\016\277G\364\332?B\265\313?\322:*<\253\004\313\275\363\267??\331^\327?\371,O\274am,>gC\235?H\336\301?z\310\264=\275\344\007\277\007\2100?\372|\260?-_\037\277\373w}>K~\262?\024_\363?\236(I>>\225\023\277!g\204?\250\251\271?h \336>?\035+?Z\331&?W\'\333?\303-\017\277\211` ?\030\333f?Y\373\273?\003\2277\277\310\321\\\276\341a\244?\377?\334?#\025\356\276\272f\252>\230@\327?\010<\276?\210-\205\2762u\327>\001I\347?Tq\261?\314\264\275=\010\347s\276\274\'\242?\005\302\362?\253\224n>\324_\027?\333\303\336?\2616\324?rn7\277\205\226\335\276\001\340\300?\340\365\251?\007\320\003\277\322\3406=\025\362\232?,\273\324?\344\022\207\276<J\001?\035\0314?\224\205\371?v8\372>\314B\353>\224\254\261>\214I\277?\364\304\363\276Y\245\010\277\302\202\260>\356\260\317?\n\3264?\365g\027\277\t|\177?C\003\315?\346\"\002\277]\206\177\274<K\370>\351}\333?\347\212\032\277\2301\355>\301Y\331?\260\217\330?\320{\253>i\032\014?\022_\373?i\304\276?\314z\351>o-\243>6\026\312?\266M\235?\217\343\013\277\r\212\336>\272\246\373?\366\010\361?\375/\267>X\001n\276?\253\202?*\253\267?\021\253\027?\253y\316\275A[\207?\337\243\274?\251j\002;P\373\t?w`\367?\376`\302?B%\206>\347\310\352>%i\220>\\\310\307?\274z1\277\245\2026\277(F\366?\007y\313?\006\235\360\276W\'\227\276\361>\360>\250\217\300?HO\321=\211\352M>\200\336Z>Gt\265?V~i\276\331^K=\027V\320>\333\337\261?\001\246\244>\035\310\252\276n]\370>D\242\346?\010\350:\277\361\361\211=\367\242\'?\371L\264?\350ip\276j\210\352=\r(5?\t\372\317?\203\243\304\276\212:/?\355\327\025?tC\275?v\246\350\276\317\207w\276,\230\347?T\303\360?U\030K\276S\003\305\276\251\204\'?\325\350\335?M\277\304\274\306\210\334\2769\376\255?->\265?\004\344\037\277\233tk\276#H\200?\212Y\006@+\023\036\276m\215\014?\262\264\024?\251g\245?+1\317\276}\257\361\276\246k\314>\266K\325?p\2652?\270 \333\275\327\251\r?\260\034\301?\201\355\024\277T\253\267\276)\272\311?u\351\331?\203j\343\275vR_\276]\3432?\266\235\314?\267\177\265\276\037\326\313>G\226\307>p\231\307?\312\342\226>\205{\205\275+Z\273?!\311\356?\264\035\027?9\267\005?\314q\252?)?\263?\036\212\312\276\201\314\276>[\302\213>\004\253\240?\270\221\"\276\235\330\333\276\352\204\376?\220\370\251?y\001\016\277\005\211\r?\375x\375?*;\275?\267\230/\277\362\007\003?6:\347>\371\241\310?\003\"\000?.\311\001\276F\317\275>\251\275\001@\024%\241\274\267\325\004?L\017\214>\247 \253?\3121i\276O\351`\2751&\341?\350\334\341?L\307\274=u:\300>[s\262?x\354\307?b\367\365\276\362\351\371>\205\3364?\265\244\313?\001\205\352>\231)\021\277V4\234?\307\365\263?V\322\252\276(\357/\277\303o\375?M\272\245?I\206\374=\327\2447\277\325\262\345>\313L\313?\r\214\334\275J\360\226\276\327m\243>e\245\343?EI\010\277\003$\362>\263y\232?\260\252\260?%@\255\276\200-\023?[\347T>\236\006\362?H\3039?\017a\204>\264\321\260?\243\313\331?OZX>\211\357D\273\263\325\270?\217P\301?\371\275\345>\031r\244>f\262\001?\343\214\277?+2:>e\344\000\277\0353-?5A\264?\216 \225\274\353\250\312>\'5\325?\177O\322?\224\2456\277\007D8>\017\001U?\320\324\323?\265\030\354\276\"\214\277=\272f\260?o\274\263?\277\201\331>\323/Q>\315\312\250?\223U\307?\007\233\212\276U\332\312>d\006\262?\\\003\273?s\276\250\276\200*\366\276\371Q,?^\016\253?\0219\335\276q\307\223\276\034t\306?\t\341\277?L\375<<\325 \030\277\221h\323?a\336\367?\304\317\377\275b\201/\277\201\363\230>3\341\235?M.\326>\240\251\247>9\037\216?\013\357\270?)!\270\275\"\304E\276\315.\310?\231\326\320?\206\217x\276\255m.\277\177v\274?\203m\212?\363\222\017\276\025W1?|\272\245>c\233\272?\266\016.\277\006c\324>\343\254??\254\255\276?\025U\337\275\032\373\022\274\010\375q>-\223\263?D\301\314=\212\004\323\274q\374\227??W\275?\310\\\361\276(\0164?\350\301\334?\204\237\344?\206\255\035?\"5m<\210\222\242?-\314\003@\242\014\255\276\327L.\276\344\336\307>\034\263\304?\344\024\r?D\207P\2762\211\263?[y\271?37\247>\260\343\237\276pI\377?`\312\316?\007\2301?\371\327\322=\3643\325>\222A\226?\241.\252>\243V\260>\276\000\305?;q\263?\014\223\251<\344\207\016\277\234Zh?\245\274\362?\010!\014\277R\014`>\230\031a>,\363\220?\305Y\351>3\215\002?a\235\256?\270Y\320?a\341\324\276\006e\006?\327\336\235?M\024\323?j0\355\276\'Nn>\010S\025?\251i\323?1\007\331>\316n-\275\201\036\027?3\373\264?\235\362\010>\235\327\210\276)M\375?7\252\271?\375K\222\276\222[\333\276\216?\025?\003\007\310?\274\\\224>\276\275\273>g<\203>\342\221\320?E\023\370\276M\021$\277V\020\'?\344\274\375?\342!\244\276S\313\036\277|\255\347? $\257?\363\033\032\277\273\235\021\277t\022\330?j\335\236?\n\274\203>b\017\355=/\241g>I\275\353?y\036 \277\344L\323=\356\275\356>o\271\312? \321\344=\203n\003?\3723\222?>&\270?@LB<\"\337\305>^\243\364?\303a\331?\306\340\001?\030z\020\277\301\306\271?!<\322?\037K+\277\232y\036\277\247RX?\312\341\317?\343\306\r\277c*\375=\017\261\274?\235\326\375?\225G\'>\260\3078\277\271Q\220?77\326?$c\355\276=\323\023\277\322\035\351?\020\260\306?M\3315?}z\\>W\351\242?\215B\330?4\365\232\276\317\021\271>\362\277\233>\271\033\250?\0219m\276\324\014\261\276\351\226\320?\255\244\261?\255\241\304>S\262\204\276:9\354?\365\204\311?\244\302X>\200\232\026\277(\344\020?\342<\001@\323\241\263=\0048\025?\274\212\306>\216\311\262?>\316\364>\374\374w:]\311\215?\342\352\244?\247u;\276\023\266\277=z\230\314?N\362\347?y<A?\316\337\204>\021|\324?\262\326\260?!>\320\275.7\020?\343\307\030?\177\332\370?\365i\235\276\373\347\035\277\n\236\372?I\240\305?\353R\263>\244\027\215>\264\211\200>\357\222\222?\303D\263>\024\354?\275v\235\251?\201\225\325?\251\243\363\276Q\367\001\275\020\213\307?\340\022\340?\206\2520\277\360l\217>o\t\357?\022l\324?\256\201\225\276G\314\254\276\344x\307>\324F\321?\361\241\364>U\025\032?\276)]?\335\007\272?\370\246!?\n\200\211>\005\324\001?\312\342\266?\022\302+\277\021\001\207\275\311\272\356>\330\234\307?\2654\357\276\230\2473=\2509\353?\350\276\310?\307\361\333\276\214\363\267\274\212S\036?\377\316\320?7\374\032\277\310\n\376\275:\244\230?\356z\201?\000\216\375>\265\372\026?\006wQ?l\315\312?\226\006~=\344\023\222\276\350~3?t\323\312?\2722\220>eq\277\275\006X\347?/\373\237?\351)\362=\202\346\263\275n \323?L\210\305?9\267\251=\004V\216\274\020~-?\276\371\321?\336\037_\276\374R\267>[(Y>\037K\313?\347\307\027?=*.\276W\242\212?\220\204\337?y#\003\276\036\247\030\277\201\361\357>\030\010\300?s\333*\277e\2459\276jV`?\263\323\301?\261\030\021\277:\350\"\277\366K\340?qs\272?\362\224\025\277o\2730\276\205\266\217?\321\037\350?\037\205{\276*\031\200\274\2570\223?\243\314\300?\177g\243>\233u\306\276\004E\250?\341^\277?\034C0?\tl\002?]\024\n?\342\003\275?\032\304\337\276\226\224{>\017\345\351?H\251\324?\315\257\206>\363\307\034\277b\"\267?4h\354?\272\330\014\277Uh\300\275\225*Q?\"\245\335?\355}\032>aQ1?\t\240\231?y\036\330?=(4\277\334-\251>>8\366?\202\216\346?\354L\271>\313\023\330\276\313c\266?\003|\271?\223\217\345\276\024\347\350\275\211\314\233?3k\331?\3433\271>\224\204\244\275S\362\230?\335\'\325?!\261\345>\000\217\000?\027\336\302?\016\364\322?*\376\037\276\205C\357>\014_\362>\262\332\266?S\010\204\276\233\342\341\276\260\257\370>p\321\327?\337\370Z>\000\032\325\276JH\245? *\235?Oy\364>V\357\320\275\346\004\025?\312\214\321?;\252\032?\272\365\242\276\035\301\177?GZ\312?\253\350??O\005\020\277\003\215\311?f\243\265?\367\217\001?\r\211\'\277S\247\311?r\371\301?\t\300\'\2777\373#?\307\006\234>\372%\310?}\256\036?\225\202\036>\251\225k?v\303\250?\23033\277\'\024\026\277\rw\021?\204\270\314?\247\226m>\233\306\366\276\2106\362?x\354\003@\331\n*>\226AE>p~^>\014@\261?\241\022/\277\031\312\371\276\347`\324>\3330\244?\274[=?\301\312!?H\246\343>o*\232?75\000?\204a\260>\027h\230?\243\001\302?{\301\307\276\313\276\027?\342\245\365>&\216\312?\275\001\276\276\242\325\201>\376s6?\023\200\303?\237\004\336>=\361\314\276\376t)?\2511\267?\372F\264>\n\203\222>\334\262`?\013(\320?U\245}\276\226{\341\276\240\275\027?{\240\335?\200e\245>W\"\200\276\206x\307>/P\354?\251.\360\276\t\305\256\276\276\256\321?\'N\322?)\005\035\27575`>/\302\024?Jz\324?\232[\261>M-\037?->.?$)\267?\027eV\276P:\221<Q7\207?4\236\332?e\033H>\261M\302\276*\003??\027J\310?\235\r9?\275r\215\276\345\321\315>\025\341\344?\223\254\273>\037LZ\276\000b\035?I\331\266?\336Z\206\276\r\252M=\211A\350?\355E\304?K\256:\277\234\245\304\275\201\270\204?b\274\252?w\241\031?4\277\372=]\334\235?H\033\273?\275\212\204>\004Y?\276\203>\343?X\307\265?\352B\314=\273\362\005?\316b\343?\265\212\262?#g!?=\360\221>\322\200S?\323\366\313?uuW>5_%=\"9(?\013\354\255?\273\t2\277\303,\254>\350:o?\376_\335?L\306\001?9\324\357=ML\267>\002\361\340?\371\2079?\310\n\366>\351`\367?nk\305?\0318,\277\274\225\005\276O\220\t?\231\232\242?\257\322]\275\215\232o=q\n\274?\356\354\253?\207\335\237\276u\313\216=\353\002\320?\232_\331?n\372\007?\231\233o=%0\262?\001\373\342?*p\342\276O\0041\277@\212\006?\272\300\005@\231d \277\374\211\006?\227a\036?\254\342\331?\340\203\207>\360\213\353=\336\335\325?\037\332\271??\250+\277\344\021<\276\332o>?\265R\230?\275\034\022?(\326\031?\177b\337?\014\006\335?Efn>\222\350\001\277x\370\205?l\314\325?\265\373U\275\251\204\'=\341N\370?\334\267\340?\307\200,\2763\210\337>p\330\323?\216\257\275?\206\345O<\211\267\236>\017|H?\017\357\245?&\253\"\277g\356\361>\032\003-?\227\377\274?\216w\347=\200\364\355\275\277\273 ?\316\373\301?\317\330\007>\362^\335>E\316\301?7\301\251?jj\t?\001\2776?\346\347\342?[\352\272?_C >\224\023\215=2\255\373?\rn\251?[D\274\276\244\336\353>L\303\004?\331\314\333?\334\234\302>\230\212\305>\265\017\326?\007\230\331?\207\372)?\334KZ=W\321\037?\305\377\317?\036n\227>\216\003+\277\243\227\302?Lq\373?\342\312\t?e\302\007\277\350\217\207>\202\250\257?\034\n\037=\305\313\023>\373 \233?>\225\335?\370\033\225>\342V\301>\344v\237?Ef\306?g\233+\276V\362\261\274\361\351\303>\212\346\315?\215\357#?\357 \316>\245\324\250?X\001\310?R\326\003\277\362\"+\277 \247\366>\235\275\303?S<\376>\231c\271\276\227n\257?5D\305?\242\n\267>\221\362\037?E\001\264?%\255\344?M\024Q\276\312\300\251>\250\374\020?\246b\315?\264\004\005?\004\312\n\277\310h\275?\361/\310?\000\307\276\276\330\360 ?\324\374\267?\341\360\256?\250m\373>\213T\330\275\350yQ?\027,\323?4\275\304;c\230\017?@\312\354?\270?\267?3\305\030\277\221\361\010\277\313G\252>F\006\245?b\023\231\2749}\031?+\274\250>MK\256?\244\337\256\276\r9v\2768\177\030?*\037\376?\201B}>\231\323e\276\211\356\237?\343\340\326?\236\225\304\276\365\364\021\275H\231\"?\350\365\323?\350\3002?.\256\331>\233F]?\021\030\257?\336\0029?\236\227\332>\225\273\303?G\312\336?:\225\004?\"\307\026?g\302\275?\356B\343?\2340a\275\271\343\345>\217\230\275?u\001\323?\314c\005\277\301T\223\275C\313\312>:\005\371?\227\220/>\213\377+?\360HI?9\200\274?@K\037\277\371\204L>\265Z\002?\373\353\315?y\314(?>\315\031\27712\271?\224\365\273?\370\374\014?\300\225\314=\227\335\272?\201Y\355?\013\177\376>,\357\262>\250\207M>\272\206\277?\256\326%?v\373\314=\263\222\203>Ag\376?Gu\202>1|\324\276\370\327\271?\265P\252?\375\024\307<\000\214\027\277\240\033\304?-@\365?\311\311\244>\034A\352=\300\263i?Q\206\336?\351\232\221>\310$\033?\315\201\340?\341\010\226?r\026\346>\352\222\361\276o\206\256>\\\311\326?\276\276V\275<\023\232\275\035;L?-\230\336?\364m\005?\266\271q\275|\326\357?\021\034\265?A\232\261\273\374\033\314>\364\347\331?\344\275\260?k\326\261>\305\222\322>^\322\221?\216s\303?gF\217>\262f\304=n\205a?t\266\230?t\232\205\275\207\304}=\321#\236?mu\337?\"\376a=\367\223\361=Pa\344?\021\305\324?\207S\306>y\347\260\276\212\\\257?\217\302\323?\354\333-\277\017F\304\276\025Z\245?\353\377\362?\272\276\037\2771\316o\276 \335\256?\005\373\311?\"\2511?\334\275\374\275R\240z?\243:\311?\242\361t>c~\256=G\222\250>\300?\267?QJ\240>K\312\275>\023I\273?\021\220\321?\344I\006?\245\276\204>\343\022\222?\352\260\304?\321\261\003=\326\311Y>\235\007a>9\t\345?\300Z5>&\375=?\324\307m?!\310\321?H\373\033\277\257\t\371>;\237\251?\027\232\267?\235-\250\276\274\0078\27648\256?c\267\251?f\240b>\010\345\031\277\372\027\271?\334\271\300?\306\250+\275p\231c>\207}\\?\244P\310?\033\361$?\r\252\245>\306\234\211?\351F\332?2\220\267\276\\V\251\276\353\201\000@\272h\300?A.\021\277\002\014\303>g\315\236?~\247\267?L\307\254\276\241\243\225\275-[\315?c\320\315?/\025\007\277E\332&?\025\337\257?\367Y\301?\037j\353\276\346\005h\276&\363\273?\246\014\362?\023\235\235\276\201\353\232>y\235\323?\204\364\310?\263\356#?J)\350\276\016-\376?m\037\310?\002\361\252\276\373w\275=*;\372?\230\300\271?]\245\253\2760\202\n?\233_\375?\251\245\263?\230\334\250\276\353t\020??\275\023?\262e\321?C<\022>\233\252\233\276e\323\325?\312\210\317?w\242\224>7\247\252>\262\235/?~S\330?\225\r\253>I\020.9\346G\374?\026L\316?B\260\212=\250\341\013\276.7\222? }\357?\261\374Y>\240\210\205\275\273Q\376?\306\205\311?[\315\272>\321y\315\276KR\254?Nb\312?x)%>\234j\225\276\325\0246?\264\005\312?\237\223\326>\241\327\357\276\355wu?vp\324?\020!\016?\221\363\236\276\014\373\317>\250W\322?nl\266=P\306\360>\037o\323?n\031\342?\221H[\276\230\335\023\275\nrR?\037\237\300?\000p4?\244\032\256>\307\310\250>\372_\276?N\267<>\261\250X\276nD\025?\036\244\237?\365\333W<\232\356\205\276ph`>\213\341\332?\273^\232=\246\265\261\276Ho@?ta\326?\234\334\217\276\206\344\254>i\2613?\225\013\271?DN\377>\330\236\031\275>\3330?\266\016\310?o\327k\276\037-\316\273\205\'\326?\275\217\231?\307\270\016?\252`4?\364j\300>\010!\272?\'K\215\275;\215\004\276\030\372\232?.:\325?s\364\030>\243\254\'\277\327\030\242?\341]\344?\346@??\257\356\270\275L\013M?\300w\273?\010\"\273>}\315r=1\\\313?Y\276\300?\225\266\010\276.\311!\276>\230K?\0007\253?R\236-?DM\024\276\317.\337>m\346\302?\237\344\316\275~\374-?\312\234\340?r\335\360?\014\217]\2767\216\200\2763\321*?\211&\334?\3751\005\277\357\344\303>\370Cr>\006L\302?\022\0269?\2450/\276\245\226\241?\370\212\346?\376\016\245=b\370(\276\362\374\013?`>\353?d@v\275\275\377\237>Z}\332>\023\356\353?\372\354`>\243x\335\276\364?\017?\205\\\237?\217\251\353\276z\000\373\276F^\206>\3127\347?\371K\363>7\307I>\037]\226>V\325\235?\260\350\326<\355\323\t\277\324\356\211?`!\315?\346[\017\276\370U\221\276\212\025\207>a\032\312?\373\315\374>\347\252\271>b\364\342?\371H\324?\341_\334\276N\271\352\276\257\254\267?\014:\257? \233\314>\303}\264\276\212(\020?\330\177\331?\021\030\303\276d\314\325>\313<\260>{\025\271?\307g2\276T8B>\362\345\304?6\312\310?(\017\213\275\3272-?\225\332\224?/o\266?r\244\363>\n\333_>\246~\026?\241\327\313?\334\330\010\277\"6\240>P\230\204?\353\306\365?k\360>=\005\277M\276\034\357n>^/\321?\035\254\177\275~\306\005?\312R\355?JE\263?)z\014?+\030\025\276^\225\325?\266\277\323?\n..?\37083\276\022\332r?\371e\300?BC\377\275\212\315\307\276\303\330\272>\310\230\351?\267bo>EJ\263\276~h\306?\273a\351?YQ\003\274O]\r?Z\030\271?\265\301\261?\235L\344>\246\323\332=j\223\325?\313\272\351?2\3149?\241\272\031?\016XD?\356\005\354?\232^6?\311<\222\275\030\353_?\2410\322?LO0?I\201\325\276\017\236\020?RH\262?\253x\343=\204\021\263\276\306\031\376?}@\324?\227X\001?v\026=<\332\361\365?bf\253?^i9\276~\036/\277sX\204?\234\246\353?\266+ \277\325\316\000?\261v\376?\361\240\323?)\261\363\276\327\211\033>>\222\263?\203\335\342?\203\027\205>N*\232=5\357\332?\331\350\364?p(0\277{1\224\274h\237\313?\240\376\265?`rs>\021m\013?\205\342\212?y;\260?\357\346-?8g\234>\323\237\262>E\235\245?\251\370\307>\346\314\256\276d\216\332?r\206\366?\360\371\201\275\037\2429?a\271\233?o\324\330?\345\177r<C\032E\276@\221\373?\226\"\303?\366~S>\021\215\346\276\206\223\317>\2132\305?\230\366M<\217\246\016\277\263\301\372?\237\346\310?O\352\313\274q\344\361>d\'\267?T\252\322?^\200\215>\335\232\364<\223\205\312?K\224\335?\n\327\003>X\035\271=\026\371\031?\350\301\345?s0\273\275%\311\373\276\233\236\246>3R\255?\376(\n>$\320\300=\241\351R?X\217\273?\022\242\274\275\265\334\321>\004\377\254?\023}\346?+KT>f\024{>\377r\310?\371\023\303?w\276G\277\316\340\013\277\236\321\032?\017\320\277?p`\362=\306j/?(\325\246?\244\377\307?\331\223\034\277\325\257\364<r\277X?\344N\315?@m\024=\250\337\215\276\017)\366>\365\205\260?\351\236!\277b\203\305=\361\"\323?\310&\355?\n+\225>]Q\372>?]\246?\201\227\235?\234M\003\277\265\371\307\276\030wc?5\265\306?\025\215\031\277\332\341\217\275\220\221\206?x\n\351?\256\236\313>h\347\000\277\003\351\232?\301\247\351?;\344V\276\002H-\275\241\240\324>\225~\324?\315u\002?Q\333\316\276\334\013\263?UO\372?\222\221#?\371\021\037\276\033\032\267?\252\270\273?\2760)?ds\345\276W\357;?\322\216\265?\177\207\222>\276\241\220=!F\206?\002\r\324?\344j\344=\031\252\n?\327x\273?{\244\343?aS\237\276\314D\t?@\225\314?I\274\352?\242\270\353>\220K\\>;\256\201?\276\240\361?;q\035\277\351\321\234>3\271r>\221(\250?\257C5>\202\256\375\276\373j\236?h\225\333?\023\020\363=\313\234\376\276\220\242\302?\2657\001@\262b\010\276\206\004\274>\023\322\327>\315\314\274?R(\027\277\330f\343\275\331\207\226><3\345?\351~\356>\302Q\212>\367\347\216?D\242\234?\241\3264>#\203\334\2757$\204>\033F\205?\020\002\312>\201\316\214\276\303\225\330>\253\"\252?PQ\305\2767\305\'?\273.\317?\302\205\272?\342:\236>\351\016\022\277l\327\216?\274>\255?\357qf\276\315\261l>~\223\317?o*\264?U/#\277\202\216\036\277\207r\031?\306\374\244?\346w\342\2767\000\203>w7\347?U\240\302?\016\206:\277Sx\310\276r\341\341?\023\235\217?\303\2707\277C\000(\277\305\177\350?I\366\270?U\334\230\276E\366\t?\277\002b?|\357\253?\220\210\t>\372|\304>\3413D?)\010\326?\303\233%\276[\321f<.B\341?H\211\335?\000\001;>\274\225\005>}2D?G\347\276?\345\234$\277pw\326<\250\233i?\325\257\302?\366\360=?\302\205 ?\304d\245?\202\214\332?\254\036\220>\023\236\330\276\256\033\005?Gw\326?\344\240\244=\334\271p\275\332,\362?\005\373\341?\3127\273=\332\037(?_4\260?lw\265?\224m@\276\332:\330\276\036\223g?\035v\333?\236C\r\277c\232\261>\017B\270>\t\215\200?\306\301\001\277\351(#\277\374\262\320?\200\236\336?\031\305\352>.Y!\277\334;\212?=\200\323?\264\036n>\313\242\340\276\017p\'?\306\242\301?@4\223=\222\224\364:M\037\210>M\240\322?\312\335\017?\266g\006>GD\226?k\270\324?\374\251A>IJJ\276G\001&?\016\026\240?sf\273\274\242a\371\276\003\0263?\rr\317?\33758?L\343\347>;#A?\325=\322?w\364\337>i6\017\274\265\342\246>*\305\250?\303E.=l\321.\277\247\024\277?\004=\340?\222\255\206>&\215\261=~\265\363?+\370\323?\247\037\314\276\307\r\003?\016=??\204K\313?\320\t\331\276\333\212\365\276\035@\370?\261m\331?j/\232>\272,\036\277\324\037\225?\320\326\373?D\207H\277]\3710\2779\r\255?\306\333\260?\310[.?\212s\014?\r\t\256?\'\371\337?P8\263>mW\230\276\335$\366?{\331\236?Fx[\276\324\177\226>8Lp?f\371\262?\256\234\275=\"\376\241\275\224\312\346?vl\300?\263\\\006?g\266\353\276\253\017\256?\205&\355?\231. \277\225\330\345>\366[\276?\303\270\357?\202\220\274\276\263\354\321\276W\351&?\224.\275?\252\n)?8\332\361=X>.?\371i\252?\2134!\277[(!\277\032A\365? \325\236?]5\277>I\326\351>A\246s?\n\243\303?0\235V\274\273\235}\275\274\377P?\031T\333?\336\217k>\255M\003\277\372\331O?: \271?\257%t\276,g\227\276\3010B?3\305\264?0\363\375\275\001\242\260>\334\316\250?\311\220\263?\313\2003<\206\254\226\276\301\264v?\323\335\335?\374\247\033>\226y\253\273) \213?\220\274\361?=\2010<g&\370=\231.\276?~Q\310?.qd=\247Z\013?H;\375?O\313\327?=\020\231>b\241\216>I\2410?f\372\377?\005\0246?-\350]\276+\341\202?\345\235\301?\354\277~>\205\353\321\274Q\265W?\347\304\342?K\222/\277%\354\333\275\266\302\265?\245/\250?\264\307K=\235\022\010?k`\256?\223p\000@\"o\301>\311\313*\277\204\021\263?\210\274\365?\333n\"\277\203\241N>\345\256\332>\276\366\272?\024\007`\276\210\275\360\276\352\365\235?1C\277?\342!\244\276\001k\025=oF\357?q\005\270?\240\342$\277i\3421?\360\201\244?A\232\225?\222v\003?\355E4?@g\345?\022\274\335?\375\364\247\276p|\255\275\200*\n?\335\265\310?\257C\365=/n\363\276\275\014\332?\351a\306?n\023n=\021\253\217\276?\363\313>\206<\264?p(\\\276\243\003\222\276\036\222<?\214\333\262?\313\276\017\277\324,\000>$\256\257?\326\251\340?{\334W>-&\366\276*\367\270?Yn\257?\230\024/>\326\306\270>W \217?\300\314\343?b\326\333>0*\031\277\227+R>B\316\325?\016e\320>\004s\264>.\333\310>l\261\321?>\257x\275\003[%\276\216\354\205?<\021\322?\340\021\235\276uv\202\276y\2558?\313\205\334?H\341\302>\200,\214> \r\222?\216\312\355?\201\263\334>\300\347G\275U\234\357?0-\266?\244\304\356\276;\373\036\277&\212\255?:W\304?@\204\370\276\306\374,?T\254\372>U\370\263?\316\343\000?K\350\"\277$\003\356?\243\257\240?q\036\022\277.\313\357\276q\335\323?F|\257?\373?7\277_\225\223>\177aS>\347V\372?4J\367=\376|{>\274\017\260?\253^\316?\200)\003\277+\244\234>\276\254\327>;\246\312?Wv\021\276\374\216a>\200\307\274?w\025\260?~\214\221\276\242$\014?\254\321\351?\300<\306?m\002 ?|,\035\277b,k?\000t\262?\213\342\025=6\311\347>\367s\302?\303f\310?\376e\247\276\276N\302\276\272V\243?\030x\272?U\277.?\224\301\231\276\201\266\256?\373=\337?!\350\230>\251\370?\276\274\347\270>\271p\306?\340\272\332>!\257\207\275\036c$?\274\037\363?\245\204\030\277\026\025\021\276\245\352\210??\033\355?\271n\202\276\273|+=\220!b?K>\306?\177O\034?\372`\211>\346.\200>\204\233\326?\010\004\262\276N\013\356>\336\306\366?/\244\341?\000\000\240>\203\367E>\235\262l?\'.\251?J\'\006?\037\021/?Qg6?y]\271?\357\345\246>\342\347\007\277x\223\264?\357\216\250?P\000\215\276\303\362\277>\207g\360?\315#\331?=\327\257>uY\\\276\360_\334?\251O\370?{\024\316=Z\234a>A\202\220?\235F\324?\036k\006\276\204\271\245>\375>\207?\2237\262?\010\224\315>\232`\350\276\037\214\227?\375\204\261?P\032\016?\374\250\376\276<\300\261?\200\325\255?\314\2705\277\276\205\245>\342&\366>g\321\315?\306\031\303;\251\277\236\275c\341\341?=_\243?\237\310\233\276\223\001\230\276\013\217\377>\323P\265?\037\362\306\276\023(2>\330\371F?8\300\310?\325\353\022\277K\255/?b\026m?\356A\326?\020\222\215\276\342\260\264\275\330\3653?\352\316\323?m\2553\277\240\244\360\2765\023\327?\002\330\264?(\017;\276!\\\201<\251\256\000@\336\314\356?N\362\253\276g\357\374\276\177\264=?\022\275\366?\014\005<>p$\220>\362\276\270>\264\313\273?\256\022\254=\"\250\032>J\2138?\031;\331?4\333\225\276\205\"]\275\230.\251?sG\303?w\207,?w\334\220>D\\\201?\256\271\251?\020]p>#e;>\352}\352?\026M\325?\301\253\205=q\307{>\220\262C?\220\364\273?\207\305\010>c\r\317\276\361\217\360?\231\267\324?\206T\321=\241\370\321>\275(\030?G\254\267?\323\3324\275]6z\275\257\216\373?6\345\322?\207\337\315\275P\215+\277P\2324?f\333\265?\213P\274>\335\262\203=\007\366\343>t\316\351?\262\327\343>\331\352\">E\252\302?\032\301\272?\177\302\331\274%\255x>\214\345\250?9\271\257?\264\311\221>\236@\014?+\267U?B&\321?\013z\017?2Y\374\275\003h\210?X\344\247?\327\241\022\277x}\"\277\2509\377?n\244\276?Y\375\031\277\350\242\251\276>\275\310?\245\021\333?=\232\352=\320b)\276\272\242\\?\357\342\371?5E\300\275\251\333)\276\341y\351?\225\330\335?\256\324\323=\027\326\205\276\023\002\313>-\314\340?\'\026\300\276\004\215\361\276\366\033w?\221\356\343?\345\232\202\276H1\270>?\341T?H\305\335?\232\353 ?+\301b=*\374\036?\032\370\257?\000\216\275\275\327\303\037?9\363\316>\261\304\333?\313\272\027\277q<\277\276\234H\233?O\350\271?\306\024\014>\354h<\276Av\300?\320B\342?\030\225\244\276\007\352\004?|&\304?\023\020\277?\331\352\342\276\272N\243\275\333\013\276?\360\244\331?\321!\020\276\241\206\257>\232\0348?\254\375\257?\260\002(\277\017~\332\276S\016\361>\236\321\344?!#\360>\347:\235>\325\n\250?i\247\240?&m\302>\324\327\243\276\235\200\234?\302\025\332?\352?#?g_\371>\234u\240?(\323\310?9\354~=\336\312\036?i\342\231?\006\330\303?\220K$?QL\276>\244\312\205?\202T\276?\020\"\031\277\246B\034?\227z\\?\251K\272?L\3437\276\306m\034?\335\233\316?(\364\304?\021\035\252\276)\010\006?\314\276e?\253B\225?3\372\t?}A\017?;\225\260?!\006\256?!\035.?\353\310\211\276\364aC?\272\201\356?\031\342\240>\232\n\001\277\372b\345?\252|\273?\336\216\024?\270\003\225>2Og?\327\204\324?w\236\330>\030\317\360\276i\277.?\255\276\266??\343\"\276@\332\'?\351f\260?\364\026\313?{J\036\276\263\227\265>\263\356\371?\261\300\277?5\360\203\275iS\325=\266\003\354?\373\261\325?\014#)\277\324\235\337\276,\014\213?K \241?\215\n\034\276\360\246+\277\232\021a?\224N\322?\"\377\204\276\256\234=\276\340\221\017?\237;\273?v2\370=\261\334R\276\020\301\032?\301\001\361?\025\037\247>Vf&\277v\037\367?\r\213\263?\253\t\222>\265\340\031\277&\220\271?\273b\234?p`\262>\360i\036\277\237o\324?&\342\301?\313\236@?=\236f>%\317p>k\177\353?\276\300\214\276\323\334\322\276\210>m?\335\321\257?\030z\214\2765\262\253\275v\341\303?W\007\310??\031\013\277H\246\203\276\257oE?\326\035\327?6\310\010\277p{\016\277J{\323?\361\366\256?I\024\372>\201>\341\276\211\275\357?6\261\344?x\227/?\035>\311>\225|\326?7\340\245?\255i\026\277Qf\343=+\301\006?\023\235\333?\377\037\277>j\204\326>\204\231\373>\007)\300?\357\216\014=\310_\202\276x\307\241?\200\201\344?\241\020\201\276{1D\276\354m\203>\032\244\320?;\341)\277b\025\003?m\212\304?\034\006\261?\364N\005\276\207\334\030\277\210\036g?\354\366\267?\r\344\221\276\362\352\234>iA\216>j/\300?\305\311\345>\023F\343\276M\342\'?A\013\277?f\366\341\276\347U\225>(\016\240>\225\356\266?G:\033?{\276*?\315\365\305?\265\250\273??\344\005?.\0375?Z\246\337?*\032\303?\n\205\230>ep$\276\235R8?[`\333?\256E#\277\311\2564\274\353\256\335?\354\302\313?\264W\227>\033F\271\276\007\006\253?IL\332?\031\344N>\017\n&\277g\035\367>\314\227\273?\254\342m\276\023\273v\276\201\376H?\267%\314?\007}\001?S\264*?\264\304\227?\257\005\267?\007\354\022\277\306\206\002\277\215\207\275?\203n\271?\214\243\362>B^\207\276\345Q\350?\215G\345?\270\035&\277\345c\007\277?\233\373>wL\335?_\316\234>\312\302\247\276\303\347h?\272\244\352?\372\320\375>\234\245\304>\321j\316?\2608\234?\356\351\002\277c&\211>\342#\365?\313\276\337?\037I)\277NF\225<%\220\301?O\"\246?;\302\211\275zlK\271\334h\323?Sx\312?\237\260d\276\274\263\326>h\207\r?\211\266\335?\276\245\034?\021V\023?\027\350@?l#\266?\222\352\353\276\035\221\317\275\221K\375?KW\356?\\\002P\276\317M\027\277]\327\310?$\016\351?73&?\204~\002\277\353\345\027?\356^\332?\365\016\367\276\245-\016>\211YX?\232\226\356?UM\020?\347\373\t\277\2222\273>\276\367\323?\0257\206\276\346;\360\276h\256\201?Uj\232?\220\331\241\276\014:\031?aR,?\017^\253?\352\347\235>-\227\315=\005 \367?/O\263?U33\277\366\n\223\276e/H?\215\270\344?\n\202C\277\251\206\t?\336\242\345?\322\342\342?\351\n\336>,\017\022\276/L\273>\243\315\353?\367v7?\261m\261\276\317\321\207?mU\346?{\277\211>Ho8>\244\316\242><\372\315?\223\220H=\347\214x>M\344\206?C\037\314?\256\360\316\275IM\023\277o\373\020?\205\266\272?r\207\265>\035\034\374\276G\262\266?\360\277\365?%\257\316>6\224\242\276C\277\353>`W\307?\\\221\370=\354\210\343\275R$\216?\0053\272?\307+ ?\317\236{\2769\224\214?\204)\262?\341{\023\277a6\005\277Q\216\232?d\006\236?d$\373\275\224j\237=\264\275\331?|&\245?j\302.?\264\310\316\276m\325`?\014V\324?\245\334]>R\266\330\276\372\177\305?\230\246\342?\337o4?\004W\t?B\306T?Nd\270?\031\220\355\276\300\264\270>\326+\222?u\347\355?\252\n\315=>\353\332\276\361\"\271?O\316\340?\221\017\332>\r\374\300\276\357\027\001@\203\340\267?\302\022\277>!;\027\277\025)\377?\026m\336?\364\301\372>\213\303\201\276\257\355\241?\006\363\375?3\245u=-\355\264\275?H\364?\225a\274?\376\233\357>Q\241\026\277\315\332\217?h?\336?6>\253\276\306\300\372\276Zs\035?>@\353?\320\362\324\276\366\177\256>2]\233>>\256\333?\310`E\274c\324\325\276\004\264G?\375\237\223?\030\t5\277@K\017\277\347\246\333?\230\023\360?w\024w\276\300\2566\276\210$\344?%\353\330?v\251\221\2763R#\277\271\306\327?\304$\326?^\023\262>\231b>\276\037\372\215?\020>\266?)\351\321\276a\342\017<H\364\317>7\216\001@\331\223\340\276\337\372\320\275\264\373\254?\230\301\366?W\006\025?\355\363\030\277 \352G?\034\227\321?\372\2316\2778/\216\276\002qe?6W\355?S\320]>\305\344\025?s\036\004?\324\017\322?\"3\207>\370\377\001\277\333\325\201?\264\035\267?\021V\017\277\323\371`\276)\240\'?\274\004\241?N\3206\276\033\362\347\276\021lu??\221\253?E\2351?g\014c>@\212\001@\343\337\325?B\356\322>\0326\242>\303\200\227?]\207\346?\031\306\035\2755{ ?\332\t\372>\336\002\241?\027.\273>\003\316\022\277\366h\250>p\315\331?\014x9\27782\037\276\267Nb??p\251?\315\222\330>\256\237\276\276\362\225\312?\212r\301?h\256\223=\216[\234\276\307Ns>\014\254\251?\323\026W<z6+\276n\024\031?\305q\304?\337\373\033?\305\037\235>6yE?i\304\322?\000\252H>u\220\247>\t\235=?\211{\272?A\013I>\205\265\241\276\325\243\016?\205\356\270?^\021\014\276\340\237\002\277\226\026\327?r\340\301?L\026?\277\366#%?@\260\377?L\343\301?t)\026\277\245\022n>\nG\025?\344\240\302?\221\230\200=\034\316,\277\254\351\363?A\266\336?\036T\342\273\331\261\021\277R*\r?0\234\337?&\252[\277\310{\305>e\333\356>\276j\305?\246\t+>\251\370\017?a\324\365?H\247\354?-%\013\275\205>\034\277\036(\203?\311\003\275?\232\260\r?\326\034\010\277r\326\361>\3119\277?\354\207H>R\322\303\273\2073\207>3\251\265?\002~%\277\377\004\227>\346{\301?\004T\362?U\244\302;\354\335\023\277E&9?#\240\270?%\263z>\305\002\337\275W\354\243?\021n\320?\014\346\037\276)\225\360\273Z\\\226?9\321\314?\200d\332=\223\376\356>\252M\365?\315Y\371?^\330J>\353\377\\\275\346\2450?hw\216?\313\273j=\211\\0\277k\205\204?\027)\274?\202p!\277\221\231\013?\245Th?\250\310\317?\261Q\022\277\212X\344\276N\207\322?\225\267\255?\224\244k\275\314B\003\277\020\357\030?\244m\310?\256\326\001\277\264\223\221\276N\373\210?\374V\347?\323\022[>\262\016\377\276\274c\200?rn\233?6\312\002?O\220\320\276=\231\215?\364\250\236?\007A\007?\327i4>dv\334?8\275\325?\252\266\333=\023H\211\274\331=b?\355\013\310?W\257&?=\362\023\277\376\005\371?k\020\260?\3708C>/\341\034\277\227\332\360?\236A\323?T\0013?\212\314\234\276\020S\365?\017\272\272?\252\236\010?zS\241>\212U\330>>\t\252?\025\305\203>#\274\215>\266\037g?\nL\357?8\366\234\276c\266\204\2754e\217>qT\266?Y\246;\277\266\016\016\277R\004\376?\302Q\256?\206v\206\276\027\234q\276m\340\233?\235L\346?m\002\020?\221\363\226>\332&d?l$\321?l\\\207>\336\256\367\275B\300\033?\204\022\276?\317H\364\276-\261\362\276ztv?R\325\304?\201\353\026?\035\2529\276\034C\376?<l\300?\037\364\274>GT0\277\3329\241?1\t\267?\016\363U\276H4\005\277\0021\222?\242\227\261?zR\206\275\233\344\217\276!\032\366?\0326\370?\272L)?T\217\034\277\322\323\230?\004\343\356?\000\304->\374\336\316\276\216\007\366>:\317\330?\247A\201\276\226Z\037\277$\352\304?\022\367\310?\217m\271\276\352%\346>\374\221\237?\367\351\210?\3021\203>\255\332\t\277\234CG?\360\211\307?3\250:?\246\'\314=F\323\354>\332p\322?\320&\277>\200\232\252>\361\013\272?\210\331\317?\370\343\226\275\270\0370\276\234\357\245?\300\260\001@\211^6\277\016k\n?\tIC?\245\242\273?\025\215\031\277\346\220D>*\340\242?2:\270?\3064;\277\253u\262\276v \016?~\307\316?n4@=\247\002\026?s\200\211?\371-\324?\312\215\006\277lv\204>\3455m?\345{\366?\261\0263\277\254\377;\277VR\205?\215c\232?\361\241\334>\343\215\314<\223\027\334?\203\302\350?\032\373\352\276\263~+?\206\004<?\025\251\266?7\301\013?\302N\221>\325;\225?1\357\245?~\307\270\276ut4\277RQ\227?k\360\274?\371\300\016\277x\360\253\276\302\301\"?\327\205\311?\2132\013\276\351\230\373>\367\177\264?\336\311\331?K\310\207\275/k\016\277\353?\334?\311\260\276?\303\271\216\276\242\262\371\276\370\313\362?=\r\264?\006/\n?U\206!\277E\374\207?l\230\313?4,\006?!w\031\277\326\211\352?\007y\345?\023\201\022?\341\324\013\277Qo\377?\033I\330?\032o\027?\371\363\275>L\006\374??r\345?\375\021\236\276\\\347\337;\230k\257?\317\237\314?\327h\201\276/\210\230>\177,\313?\234\025\313?\372\267\353=\"\372\031?\037\251\274?\344j\250?o-\037?\336\037\317=D\003c?m\342\246?K\005\t?~\304\247>\254C\222?\265\342\311?Z.\213>?\252\301=\323\006\341?\201x\225?\253w\240>n\336\270\275\036\330\316>\353\035\362?\326r3\277\257\006\000?\221n\300?\2140\301?\364\300\327>\366\267\374\276\005\333\000?*\002\302?u?/?KY\002\277Cq\007?;8\272?\344\364\t?Sv\252\276\017\232\315>\271\304\321?q\037\261>\005\335^>\tw\305?4\367\262?\303(\240>x\r\002\277\364!\256?\371-\256?\352\314\305\276f\371Z>+\206\201?N\270\301?\275V2>\375\333\r\277\214\236\343?\370k\252?\262\237\355\276\\\004V>|\226\326?\"6\324?}v,?9b}>K\303\255?AD\374?\307\020\020\276\214K\305>A\033\213?\325\256\325?\031V\331\276q<\037?\360\340\357>>w\334?r\2456?\327\302\214\276.\346\243?\332\253\351?\0258\361>h^\216\275\271D\244?\221D\265?\005\373\033?\344\273T\276\3028\355?\312\032\311?\247\260\036?\224L\016\277\225\n\277?\016K\327?;8\330\275c\177\031\277\003x\341?\257\n\302?\314B\263\2766\223\017>\032\204R?\231\022\325?Fx3\277\033\276!?\372\177q?\177L\303?\033\326\324>\276/\376\276\2053\354?\2031\350?\211@U\276&\000\277=\333\304\224?\r\213\331?\223\030\004?p\232\376\275T\\\250?d\002\340?\365\331\251\2768\334\227\276\030l\215?\013&\334?\014t\205\276M\272\315\276\244\232\034?\320a\222?\224\021\023?\227\250\216\276M\373\267?us\325?\000\217\250\275\214\3651?%/\271?\376\356\271?\362x\372\275pA\326\275\327r\352?\341a\356?N\267l\274p\227\235\275\334\316\354?\360\247\246?\0367|\275m\345E\2760<\370>\357\032\322?\353\305`\276n\213\026?\331\217\337?\177P\301?\302\372/>Zd\373=x\235\204?U\245\307?\205\263\333=\370\376\336>O\320\361?\267\325\320?M\275\016\277\340K\201=\204\312\241>\210\r\306?.\004\301>H\375\031\277\267\007n?\323\365\300?2\000\264\276\324_\237>~b\306?\212\315\307?\274u^>\225\362j\276\324\031f?\263\014\327?G\345\036?\212\"$\276\355\271\354>\035\312\344?76\273>\252\202\341\276G\350R>%\223\331?/\300\346\276\020\037,?`P\323?\013\016\261?d\226\035\276\032\374\235\276\315\360\262?\256\232\277?E)9\277\265\306\200>@\217\244>\314\320\252?]\210\265=\337\244\221\276\246+\374?\266+\270?>[\267\2769&\233>\314\010k?\216@\326?\323\022\263>7\210\266\276_\003\267?\304\351\324?<f\014\277\022\334\310=\317\215\317?\0013\311?\022\205\356\276\007\\#?\211\331\223?\353\034\263?\375\330\304\276\017\016.\277\027\014\370?\377y\342?\017\200$?UM\220<\213J_?J~\252?\343pV\276\333Q<>g\237\n?\212\217\305?\325^\004\276\330dM\275B\356\317?4\277\264?\240me>\320_\220\276\'}\316>\277I\341?E\237\037?\022\025\242>\340U\357?4i\317?\006L0\277?\215\233>\t\017D?\000\254\276?Ul\234>\002,\002?\2222o?~\305\310?\341@\270\276\337m\306\276F\234\335?\203\031\307?nm\201\276\340\205\265>\332\366W>\273\234\330?\3435\377\276\023\324@>O\340\372>\245\327\300?Eb\032\277\2129x\276<a\226>\357\312\324?h\257.>\307\325$?\313\364\371?\3266\327?t\360\000\277X\3122?W\033\247?,c\301?\036\341(\277\375\020\273>>\026\260?\n\327\363?$\013 \277<M\346<\337\353\364?\250q\307?|C\321>\353n.>\n\022\251?\021\376\243?\356\262+\277\253\006\005\277\200\000\217?4e\345?\300@\020?\004Y\027\277XY\222?r\340\225?@\367\025>\343\032\027\277>\231\362?\001\333\353?\374\0356?\014[3\275t-\337?\351\235\266?\364\374\251\275M0<>\361j\340?\234\025\321?5~\261>\370\026V>4\324\211?\201\264\253?U.\324<SY\204\276\342\272t?\236\323\322?!?;\276#\236\030\277\275\272\222?D2\236?\215`\343<\271p\000?\2506X?\232\230\360?\337\214\222\276\r5\342>Eo7?b\237\354?G\3062?C\311\254\276C\366\325?x\234\366?B\006\242\276w/\'>\373\364\302?\375l\354?\314\t\222>\036\027\025\277 \002d?\370\245\324?\t\335\025?5\014\227\276T\367\205>#\366\345?og\027\277\363:\252\276E\023\350>\222\221\345?Qh\351\276|FB\276J\233\223? \357\345?\321\313\024?\013*&? \224\254?\016k\226?/\026\346=>wb>\321z\231?)\006\350?\243\037\335\276\253y>\276\300Y\333?f2\312?\252a\037\276\350O[\276\001\236\215?s\200\340?\010\351\351=6\261\360>\r\271\353?\353\214\253?\344\017f\276\034\007\002\277\"\013\277?\007\232\333?\233\215\005?<\021\020\277\313d!??\216\336?8\364\226<p[/?\365\367\246?\314\227\355?\336\377\207\276\257`\313>j\371\367?]\027\272?C=\005\277\274<\235\275\253\r\335?!s\333?\022\203,\277\374\303\376\276\021\200Y?\000r\300?Tt\254\276\270\222\315\276\r\234\035?r6\223?\315\346a\276>Z\000?\277I\362?\235\240\321?S\261\021?\315!-?L!\007?\335\265\352?Y\023\027?\322\212\357<~x\267?[a\304?q\345\\>?\253(?\031\305\351?d\002\006@\305\377]\275\340-\220\275\033\3170?\024\315\257?\356AD\277\354\025V\275).\221?\252\177\240?7\247\362>\334+\353\276Ia_?\371\205\277?{\023\223>\r\374\350>\n\t\235?\016\370\326?y$*?\352<\n\276\312\022\264?\253\256\311?\256\2002\277\245,\013?\324}`>\272\364\313?b\331|\276\332q\203>S\035\243?\033\233\273?\270\006&>\254\345\036>\3354\303?m\003\341?\263\226\202\274Xr\275\276\232(9?3\025\234?h\260\321\276\\\313\354\276\355\3458?\022j\344?} =\277I\330\227\276\353\311\320?#N\225?Lp\036?m\3754\276c\245\340>0e\326?\220\365\224=\357\3469\276\001l\262?=)\243?\342\310\353\276\376\n5\277\231\n\340?m\221\310?\017&\t\277(\014\222>\021M\217?~\303\350?!X\205\276\034\267\360>\357\020\270?\306\341\334?\357\256\017\277\364O\020>\263 \333?w0\354?h<\021\277\021\212-<]\320\371>\240\305\224?\231\204C\277\222 $?\266\027\254>hv\271?\013a9\277_\232\342\276\031\312\271?\373\005\345?\343pf<\306\247\350\276h\t*?\314_\315?W\351.>\346\\\002?\022l\207>i\345\004@\263\225\217>2\377h=\250\010\n?\206W\342?}\320\333>a\301\335\276\265\300\326>\004 \326?}#\006\277{je>\225C8?H\277\317?\364M6\277o-\003\276U\344\273?\235\240\321?\016\364@\276\344\367\376>\354\220\213?\r\212\312?\r\376\236\2761\232\225\274\351\010\347? \357\265?`Y%?\370k\022>\\\033\362?\331\355\265?36\324=\363v$>\277\273\320>\027g\304?\205[\022\277\021\215^\276cI\256?\nf\264?_@\217=AI\201<Q\030S?]\340\250?O#\005\277bi\230>\271\377\360??\037\257?<\275\022\275\005\305\257\275:\262z?((\351?E\016\025\277\351\232I<\2232\340?\2132\241?\251\021\"?\262\020\345\276\031\367\344?\357V\310?\370\032\002\274\321#\036\277\234\\b>_`\316?=G4>E)1\276\304\313\364?3\213\t@3S\262>\323\243\351=m$\354>\0256\263?\004\0012>\020>\264>\247s\242>\241\363\324?\022.\214>h\",=LJ\036?\226\004\322?\257\320\017\277x%\271>i\254\245>\336\005\272?\337\301#\277\024\010\037?&\212\270>\207\025\346?\315\217?\276\205z.?\026W\311?fN\341?\002\236\224\275\342x\246\276\223\267\213?\224L\330?i\311S\276\376\236\004\277\331\250\224?\030\'\260??\3046\277\035\346\313<\250\265\277?x\325\261?\273H\271>\256\266\002\276\271\220\370?\214\242\237?t\267\'\277\346\346\233\274ha:?&7\314?|\017W=\002\2732?\016\027\000?\033-\305?:]V=dx\034>\277p\253?\177N\317?\256\267\355\275D\0274\276C\323\224?U\372\273?\204\361\033?\335\357\034?^\373\345>\007\354\326?B\262H?\037\020\350\273.\033&?\005\214\334?Sz\006\276\001\031\006?E;\010?\350k\312?\265\213\221\276\216;\021\277\256\344`?\225\014\334?\334F\273>r4\307\274v\306\231?\265\376\306?Rd\031?\277D<=\301]\271>z\343\264?\261\336(\274\353\376%?d\032*?J\265\341?\257D\350\276\"T\311=\341\300\322?\201 \274?1#\304\276oc\223\275\334s\277?\217\035\246?\037\021\273>\241\021\254>U\265\256>\000\306\363?\330~\252\276*8(\277\017u\223?\357\001\236?\2761\354>q9\236>6\247\245?\207k\267?W?.?\225\231\232\276v\253\372?\366}\316?\367>\255\276\225}\327\274\232\215S?\341\264\234?_\013\342>\227s9\276\337YF?%\226\314?\006\r\265>\345~\357\276D\031&?c\263\321?\264\345L>\205\353\221>Isf?k\362\324?\263\356\327>\005\335.>\"\201\320?}\314\275?\362\'\262\276\335A\264>\302\346F?\021\342\252?\362D\270\276\326S\033\276%Fq?\330}\325?^\236N\274\365\365\244>\027\215\301?\365\326\354?Ec\355\274\313\020\007\277\256\335Y?h\226\302?q\0032?\367\260\337>\230\222\207?\264V\316?.\003:?\320a\276\276\001\305\363>\302\245\231?2\307\362=\203\373\035?\315\014\241?\016\242\313?\n\023F>;\307\000;TX\200?v\032\235?\326\251\372\276l\351-?&#\233?\253\224\336?R\177}=\003\013\020\276\2731\220?\030\007\341?=E\032?\270\224\003>\347\004\310?\005\340\345?\203\027-\276\006f\005?\346\t\247?0\327\332?/\303\217\276\0261\244>\357\021#?\"\376\335?/\276\000\277T\036\r>\035\273\315?5y\302?\337\033\303\275\002\327\225=\177\313\320?\253\"\342?\237\314\207>\314\320\200\276`N\274?Z\275\251?\210\205\232>D5\025\277S\237R?^\240\244?\205>P\277s\330\255\276\002#\277?\367\035\323?\353\247\377\275\347:\035>\371\224\005?\3707\330?_aq\276\254\346\331\275Ec\263?t\262\316?\340+:\277\243#1?\036\255\375>\016\277\265?\265\207-?\0259\224>\016\202\037?\351\232\245?\350.\t\274\246\326\353>q\346\003?\017\355\341?\253\260Y>\260\002<\275t\217:?\265\031\353?5\324\300\276\003\224\036?V\014\315?\215*\247?\303*\336>\266J\010?\214yG?\025\000\325?>\317\247>\376G\346>\350\260\376?~t\272?\261\026??\256*\013>D\002\355?hA\310?|,==\r\252)?\252\304\247?9\325\312?\355\323\361<\337\031\r\276\220S\317?\032n\332?\020\351\377\276\262.\376>K\020\374?\267\234\261?E\365\016\277F\014\013?f\275p?\204\330\341?\020\262\014?\367\311\371>K\031Q?\037\362\334?\360\370\326\276\373t\304>\247\366\254?\014w\310?\014\002\223>\024\224\272>a\376j?\261P\315?i\035\275\276_\no>zu\373?\214\367\315?\310y\037\276\244\340\341>\300\372q?\217R\305?\262+\031\277\361\235x\276\322\007\"?\342\257\253?\375\372\301=f\025\256>\367G\314?yv\207?H7\302\275\377\257\342>_\241\352>7\031\301?Rc\032\277\326\216\342;\323|\211?p|\355?;:\316>\370\306\000>\254n\222?\231\200\305?\030z\030\277[$\355=\324\357\266?\266\024\252?\230N\353\275\007|~\275\340_\313?\204)\370?{\237Z\276\022\210/\277\343w\254?\210/\233?\225,\'\276\177\371t\276>S\226?\300\350\324?\2067\213\276\275Vb\276a\370\267?Va\307?b\2040?\313\235!\277\311\245\230?\273\322\314?\322\3437\276\37083\276Rh\204?R(\313?\274\010\033\277\347\337\376\276\207\330\237?,\021\254?<\334\356\275\376(\272>\376\024\316?t\323\320?nk\253\275\274\225\305>\206!\207?\032n\274?\274=0\277\371d\215>\236\215\"?h\260\373?.\343\356>\260t\036?\210\003R>\326\311\343?\314c\365>/\027\221=0\303\207?\256\017\333?q8\033?\345a\361>\367\357\212?\271O\230?\014Y1?\250\307\026\276\217\206\264?\243\217\355?NF\001\277\004\252\217\276\230\345\212?\245h\375?\307\r\337\275Q\365\203>\314f!?\205]\276?\275n\241>\307\201\367\276J\360R?\265\246\343?aR|>;\212\323=\347\365\307?\033+\345?\235\236\347\276\204.\031?\'c\261>\250\214\261?\363\000V\276H\211\355\276l\002U?\3373\304?\037\365\247\276\215`\243=\351\320z?\023\357\270?\t\377\006?\377\037\207>%Z\266?\367\005\270?\351\3218?>\347\236\276\262\362\353>\344\330\254?\017\235\226\276\257?%\277\334\204\365?\363V\327?\232\351\036=\320{\263>^\271\316?E\325\301?\307\200\244\276\353\342\256\276WZ\326?|\272\312?\216 \005?\315 \236=\323\242\n?l\010\260?T\214\017\277a\251N\2762\027}?Y\246\267?\214\276R\276\246GS\276%\315\225?c\320\357? c:?\341D\324>\270\227\327>\'\021\321?\310\262 \277\177\300\243\275\361\310&?r\244\247?-]\361>c\263\333\276\035\350\361>\366$\316?`\005\260>\373\003\365\276\247#\\?\347\035\277?\272\202\035\277\002\362\205\276\006\333\215?\377\261\244?W[\021?\353n\306\276\356\365\364>\256\237\302?\336\256\027=\007E\263\276`u\024?\270Y\003@\354iW\276}\316\r?@\377x>\256d\313?\331{\025?\200\361(?)\303R>\324c\311?\1771\243>0.\245>\266\216\216?\2035\334?\323\3676\277R\200,\277\276O\205>4h\274?c\230\313\276\227\213\024?E\t\367?\035=\336?#\240\372>\245M\375>\203\'\346>\302\246\210?\323\240\350=B\007\365\276k\252\255>\000\376\275?A\233\234\274<J\005?@z\364>a\031\243?\374S\332\276\334\274\261\276\267\313\243?6\225\311?[|:>\322\306\021\275\251\202\356?\212?\326?y\312j\276\014\261\232>\346\257\260>\265\336\245?H\243\n?\267yc\275\230\003\315?\333\213\312?\013}\024?\007\322\335>>x\203?\3123\311?\356\353\270\276?r\323\276\027\314\000@#\203\266?GU\263\275\340\016\024>\"\266\225>\010!\276?\204\234\207>\177\205 ?X\305\211?}\346\354?\316\246/\277\346\\J\276\017&\367?T\031\354?R\361\277\276)>&\2778#\324>\275\215\361?\354\246\224<\321\223\322=\031r\342?\224j\253?*\375\324>\323\365 \277B^\235?\017\234\307?\331\\\215\276\261\336$?0\272\304?\204c\322?\370R(?\300Z\315>\235\357\246?:\224\353?\3478\377>\0223\373\276\tN\303?l\261\251?\241\204\221\276V\362\261\274\235\213\352?\321\220\273?HS\215\276\332Y\014\277\212\3152?\224\300\250?/\024@?\304\264\327\276\312\330\221?\227X\333?[\006\344>\"\212)?J\255\304>\177\336\330?\301\001!?C\307\306>\266\340\214?\211\317\257?E\204\377\275\256\016\340\276\263\3751?\342\347\331?huB\277p%{>\333\251X?>z\315?t\352&?$E\364\276\001w\037?r\337\330?\200D??\t8\344=\346\035\274?F\355\262?\272I\374\276\230O\326\275\275\210{>T6\250?q\216Z>\017\270\316\275\367\351k?\367r\305?5\323\t?N\235\317\276\207\273[?[\'\320?\247\226\365\276\364\301\252\276\322Z\354>W=\276?\007`\363\276bh\365\275\227\230\365>Wy\312?\320\r\215=\030\264\320=\212\002\225>\277\327\242?9\234\361\276\204Fp\275t\022d?\214\327\270?\334/7?\345c\'\277#\255\255?\023\270\263?\003C\356\276xC\016?\224z\334?2\311\332?\032\373\006?P\032z>\252\356\353?\245J\304?a\034,?\263E\n\277\322\305\314?{\021\303?\022\370??\370\372&\277\023D-?\220\244\310?Z~<\277\003w\310>\220\245.?\273&\266?\267z\356>\004 \356\275\nq\361?\"\213\330?\363\311\252>\254;\026>Z\036e>&\213\235?\246E\005\277\266G+\2777\311\210?D\030\233?K\345\325\276\262\022\027?r\327W>\311\257\355?e5!\277s\365\343\276\314\317\341?\320\t\363?<K\014\277A-\266\276\366\222\243?\226\350\320?\241\203&\277\354\275\220>\264\264\342?zS\007@\232B\227\276\\>\016\277j\t\225?\274z\253?0\273\'\277\225\234\003\276\250\244\177?\266\366\376?\257\"\203\275\330\014\024?\262\311[?,.\330?\204.!>1\263\347\276?\304b?\312\336\266?\024^2\276C\346\022?\306)\320?\t\372\267?l#\016?\331\314\261>\327\344\034?\310\007\301?\260\034\001>I.\177<\330\246??\323\367\266?V}^>\355\013h\276\177\336\370?lB\326?\233<\335>\260\256\026?\264\360G?\373\005\307?\270!\246=,\361(?\377\006E?\243\347\362?\262\240\310>5\177,?\026)\036?\235-\216?\305\310\n\277\311\220\013\277\202\3603?`\313\267?\027e\022\277`\"^<\247\244x>\250V\313?\257w\247>\375\330\304\276\237\n\345?a\341\352?o\201\274>I\271\333\2752\314H?\215\226\233?\334\237\253=\337\371\355\276\310\204\260?\310\262\320?\2303K>7\214\"?\366h\315>3\342\370?\236|\036?\3066\221\276\210\340\372?\317K\261?]\212\263>W\223\347=\240\316\273?\346 \000@\3373\002\276E\362u>\372(\375?1\356\356?\'3>\276\033\205,?\343\343\300?\214H\306?\327k:\275\340\242\363=<za?\242b\001@\323\2448\277\307H*?\311\004\002@W\227\341?Y\370\026\277&\375\275\273a\240\360?:\226\307?G\221\265\273\031\214Q\276\350D\307?$\267\300?n\206{>\237\310\373>P\301\276?\261\304\303?Bz\372>&\217\033?\027:\216?\217n\336?\020u\237<\256\233\222=\240\345\312?\250\251\331?oG\370\275s\237\224\276\370\364\323?\240Q\320?\324\nS\276\202q \276\006\327\\?L\307\310?\204\020\310>\347\375\013?S6\341>\277\362\356?nj\240\275zq\312\276\0206\246?O\220\232?\003\'\323\276.\306\004\2774\003\023?\026/\322?(\231\234<\233\306\376>}\317\340>\362\261\327?\213\207\277\276\225\235\206\276Yf\362?!X\327?#\363\330\276\335y\212\276\0079\373?\316\340\247?\2648\253>~\031<\276%|\334?\366\n\303?\260s\003?\273\356\345\276\334\343\217?\303\232\274?\235-p\276\204\232)?\021\342\362?\206X\301?O\314&\277\374\211\272\276uw\241?\333\244\342?j\333P\276w\276\357>\337\331\337?0G\327?J\320\267>r\025\037?\221\025*?\365,\320?\237s\377>\013\tX\275\333\276\252?.\222\314?\027\177\253\276/1\226\276\243,:?\336u\376?\365.2\277k\202\004\277\030\\\253>\224L\254?.p)\277Ow.>w\320\334?\313\202\267?\315\310\240<\317\242\033?7\273\257>l%\320?\373x$\277\214\205\025?\227\275\364?\316\246\247?c\016*?H\304\030?\352\231\201?\302\243\267?\273\324H=\315\\\240\276|\342\317?t\355\361?\233\344\347\275\177\277\340\2762\320\246?\375\372\333?\371N\354=ep\304>c\026\320?\372\355\351?0J >\366\263\014\277\301Xv?\030\351\261?\316S]=`\311%>\217!\003?\233U\373?\221\3618\276\306mD\276\226\340^>\350L\274?v4\256>\237W(\277[\3469?L\251\265?qr\177\275\254\221\275>\331l\234?\356\356\303?\240\341\345>\325w\236\275\212\274\205?w\241\325?<O\010\277(\324\027\277\003\307\207>\3606\257?\031\3103\276|\'\"\277\205\037\000@\031\342\326?8KI=\272\272\203\275\236\003`?\256-\330?r\026\266=)Z\311\276\364\316\201?\2546\245?*\312U\276\221,\220\276\300\344\353?{\333\314?\r\305\035\277\202\037\025\276>\367d>9\227\340?\233U\247\276@j\203>C\332\332?\200\330\312?\224i\314\276\362#.\277>M\342?S\257\241?\362@\030\277.\307[\276\245\002\241?\203\245\220?\225\234\023\277<\204\341\276\353\340\344?\036\243\254?x|\037?:\347\027\277\305\354\340>\371\240\305?8\274\230>\'J\312\276\023\034x>\025\253\346?N\266\035?\374\001o>K7\242?L\027\272?\205\013\t?K>v\276\003J\245?o\234\336?\323g\317>\236{\247>\271\221\305?\n\332\252?\000W\362\275M\202\007?B\017T?j1\316?E\233\027?\210\330`=r\360\220?a6\313?\271\032\005?\223\217\375=\304\271\321>\247\037\310?aU\031?%\347\304>r\303\333?\"\031\250?\253\262?>\371,\357=\272\341\334?t#\362?\243\221\'\277r\025\037\277\334\332^?5\361\264?J\322\205>\374\216\311\276\034\223:?\363>\310?V\325[\276\272i\303>=b\212?d\\\305?\r\246\351>\335\013\020?zw\027?\331!\324?\302K\004\277\031W\254\276\246\266\262?\244\210\304?\2071y>P\214\364\276\031\300\245?\237\035\350?,c\027?=\200\375>\202\035\321??6\271?\345\324\346\276\242\270\223\276\234+\254>%\255\272?\365\270\207>\033H\027=c\340\215?\360P\314?\356C.>\367\0023>>\nb?}\352\250?\r\306(\277lv\010?\364\313\016?\2717\317?\224\021\037?2:\270\276\213u\021?\240o\265?Q\241z=\314)\021>4\203\366?\023\202\237?)\353;?\361E\353>=x\236?\347\211\271?\014;\020?9\200~\275\255\374\355?\332\217\322?\025SI>t\007\211>\325\254\034?\022\331\313?T\217\354\276\014#\335\276\325\217\362?cE\335?\261\250X\276A\267W\276\3600\310?\327L\224?\345\320\016?\234\243\336>\365+\327?\213\336\313?\010\310\023\2773\244\002\277(\252]?\272\371\306?\340+:>\004\217\177\276\001\\\241?b\371\341?\274W1?@h\031?\275E\331?\035<\271?]\212#\277P\252=\276*\324\257?\001\332\332?\344e->\017\3245?+Rl?\203\247\322?\275n!\277\303\271\006?%\374\004?\343\342\310?\n\330\246\276\247\354\304>\204\375\321?\361G\367?\313\202\031\277\025\213\037\275\316\201_?\244\304\344?(H\314=\275\253\236=\244\336\017?\337\342\317?\261\336\010\277\t\303\310\276\200\204\214?\2660\327?\277\3238\277\253\317u>qbr?\221\r\316?\231\273\226\272K\254\034\277\021n\264?\225~\302?\215\'\002?\366\226\"?\034\007B?\307-\304??r/\277\342\004f\275\324\211\312?H6\337?\225Hr>\270\007\r\277\322\323\305?5\360\345?\375\020\313\276\r\000\305>Id\027?\216\255\255?Z\360\312>_\320\036\277\001Q\357?\225\020\302?e\035\022?\374\304\001\275\013\031~>\262e\255?\027\364\276\276#\277\246\276\'\355\347?v4\270?\353\2537?\347P\236\276\t)\221?pB\315?\253?\n\277\305Y\005\277\320\033\020?9\361\263?R\272\020?\007AG\275\014\336i?\247\257\345?\216=\023\277gH\305>\233\227\"?\267\262\302?\277\230\355\276\212\006\001?+\331R?=\013\302?\326\346+\277\221\270\327\276\277\337^>\231)\311?\364\301\242><3-?\303\031\324?E\202\275?\260\253!?\245\244\207<\376q\324>\212\256\315?\373[\022\277\235\273]\276\210\270\227?$%\331?\313\020\007\276\346[/\276\037\003\204?l]\322?\335\007\004\277\207\242\360>w+\357?\200\363\344?\0257*?\346\036\262>;\020\377?\273~\255?B\005/\277\310x\364=\303\3140?\331Z\231?\266\332\243>\214\333\030\276\223-\222?\340\021\271?\"n\032\277\032n\270>\346\220\317?4\201\306?\206v\356>ZI[\276\002\217\201?\007\266\334?hX\204>z\342\331\275rH\364>\350/\272?\271\306\017\277\034\231\217\276\213\256Z?og\341?\331y\333=1\007\331>\224\275=?_(\344?\263#\355\276o\202/\277l2\005?8\371\341?V\014\367=\026h\013\277,\t\265>\250\303\302?\002+\007\277\237\224\031\277w\341\242?\376\363\234?\346\346\233=\262\240\000\276\000\026\274?;\307\006@\341~@>2Y\344\276i\177\360?:\311\310?\231,\006?o\233\361>\367&]?\322q\327?`\312\000>\262\237\235>0\375\355?\262-\313?G\344\323>\264\347\322=V\306\307?\260T\315?\352%F<\213N\366\275\231n\206?\236\266\336?\325Ym=\346\314\356\276\343\337\277>\344\364\257?Cu7?O\004A\276\250[\321?!\311\250?\330\201?\277J\226C>\344\212\202?\022\025\302?Y\243\006?\341`\037\277+\201m?\235\204\342?6\2220?\336\345*?\313\320\005?\264\255\252?F\357\254>\270:\270>\371 \212>\tT\251?\020\221\232=ca \277T\253_>\255P\244?vl\004\276\226\260\266\276D\324\234?\024#\267?\rS[\276\352\005_>\356:\030?F\320\336?\364\027\332\276;\374u=\354?\364?\252\357\204?N~\213;\022\205\026>op$?\274\226\320?\300\262\332\276\315>\357\275\214\243\362>;\246\344?\264u\360>]\212\003?F\372\337?\336\034\240?Q\274\n\276\"\000\210\276D\207\374?\003\010\317?\230\246\004?\001\333q>j\020;?\373\352\246?\177\277D\277kc\234\276\261\024\263?\240\207\310?\364\301\">\333\375\332>\276\206l?P\033\315?D\303.?%@\001?\351)\322>\002-\263?\021o\225>\257\230\211\276=H\353?\016\364\320?\375\237\'\277\332V\203>b\202R?\256.\361?\206\004\224>\244\336\223>\000\226\330>6u\314?-\315\365\276\223\216\272>\346\016\025?!\225\322?\031\306\335\271\037i\340\276$\020\252>w\201\274?M\332$\276\023`\200\276\304\022\217?)B\314?\351\267\033?o\021\360\276\255\363\274>\022\027\274?\363\035\204\276V\325\363>\253\320\250>$\267\264?\377Z\002?8\330\037\2772 \343>\377?\340?\243\316\274\275\336\3117\276\224Z\002?\262d\320?\304\"*\277bI\371=\326\226\340?\205B\354?\223\215\217\276\177\277x>\316r\336?\022\330\274?\224\027I\276\024\227\373>\272\356\327>\271\034\277?\324\327\007?\201\230\204<.?K?3\251\303?\257\261\353=\255O\241>\245\236\336?\202\215\321?\227\376\245>)B\202>^^\305?\244\246\253?\2507\007\277\315\225\001>\226\334N?w\367\244?8\021\r?\036\373%\277|\360N?\3647\277?\016\243\000\276m\305\036?$p\000@%<\327?\001\242\030\277\346\\\252=\252O\377?\r\032\266?p\261\252\276\270\351/\276\314\242\366>=\234\266?\366\360\315\276\323\366\347>}3\333?\032\334\270?w\0216?d\222\261\275\324Z\345>\177/\307?\2133\246\276\226C\323\276\311n\313>[C\363?\304Z\024?\362\316)\277B\211\230?\362\323\334?T\303\022\277`\220\274\276\255:\326>\250\344\270?_\322\370>U\275\034?X\234H?\324\360\253?\177\301\346>\204\274\346\276\\\315e>\202\256\303?Y\243\036\276B\\\331>rS\350?p\230\322?\352xL;\224/\350\275f\335/?!s\243? \320\311>\010v\264\276;\202\341?\243\222\262?8\3278\277\375O\306>(.\360?\350\275\251?!\007\r?^,$\277\377Z\316>\264\347\330?\006\237\n?\226\264\302>\t\330\273>\361h\255?\201\257\300>Z\326\235=\272\223\216?\006c\276?^\017f\276\324\014\351=\226\230\317?\330\235\266?\020\3163?@P\356>\237\337 ?*\310\275?\272\334\004?\031\377\036\277\253\017\352>\313\234\336?\177\207\002\276\245\327\306\276\314j\306?\203\303\317?\035\257\350\276\256(\275>,r\242?\375J\337?\337k\300>m\311\032?y\023\222?@\030\322?<\210\235\274\3536(=\233\237\370?l\261\307?z\2518\2761\230\277\274\240\273\t?9\t\277?$\265\024?\361*[\276\243\230\363?;o\345?\240n\000\277\212\004\353>\300j\262?\253\005\332?\223\220H\275\32661\277\370\'\234?\261\370\313?\340\021%\2770e\010\277\247\223\274>\331\223\330?\3750\312\276 \320)\277h\346\336>\326s\244?L\252\032\277M\207\356=\2378\275>\001\300\255?\271Q\010?d\036\371\276\020\\\327?\003^\310?\357\034\036\277\3679~=\021\307\242>>\320\320?zo8?\r\344i\276y(=?\357;\336?\025;\322>\224\373)?_\227-?\352=\265?\344\021\334\276\324F\225=O\264\032?\310\262\326?\224.\t\277r\305\005>\332\270\314>&\254\367?~\213.?\202o\342>\206e\t?>\005\270?&\213K\276\002+\237>\330\374\346>\374\033\346?\367?0>\2072\344\276\245x\346?\317\201\327?\215C}\276c%\266\276\032l\372>\200c\321?\037\242-?^\022\003\277=Z\311>\350\237\340?n\334b\276\240\336\010?\312\334\322?:W\232?{\025\261\276\233X`=\323\317\251?\263\232\314?l\352\224>=\r \277<e\220?\r\303\321?L\026/\277\003`\034>\006\251Z>5\231\307?\376\271\370\276\373\254&?we\235?\017\326\325?2;\017\277\355\326.\277V\0023?\343n\346?G\036\010=\226^\243>1\261\366>\335[\247?u\312S\276TU\250\275Q\207\211?\272\272\217?\340\023\263>f\203\034>\313UZ?\262\233\235?\007\013\'>\277\013\013\276\320\360\300?w\274\241?T\340\324>\266\365\343>\257\330\205>\337\031\265?\277F\242\276\277\200\256>m\324\215?\227\215\370?\362\2631\2770\201+\277&`\272>I\272\232?\227\310\365\276\211\\\200\276\231\315P?0/\356??\254;?p\n\037?b\324\346?6\253\326?\314]\213=\335\262\303\276Q\000\210?\300\316\365?\363\344\342\276G\347l>\313\323\240?\024 \360?\345\266\035\276\005\244\021?6\017\336>L\375\246?S#\030\277\206;\227=\214\250P?\355a\267?\351\363\341\276\206\003\t\277\035\237\316?\252\231\363?\364\251\223\276|\323\364=\333e\230?/O\313?9\232+?\234\277\005\2771I(?\373\314\253?*\000\306=\266-2?`\324p?L\246\320?U\241\035\277@\207\301\276\021W\321>vR\323?9c\230>\336\377\037?\231\324\020?B%\370?\342\312\341>\265\207->\315\370\276?\264w\262?^\275\032\277\250\033\360\276+\333G?Z\022\302?\\\037\"?t\267K>\204\331\353?\2445\340?\331\231\n\277O\220X\276\253\307:?q\216\270?L\336\200<g\323q\276\250M\311>\304?\340?]\303\304>(|\356>\323[\205?\0359\322?\222\312\374\276\367s\362>\021v\303?\322\345\221?x\233\037?\nH\273\276\247G6?`\352\307?\004\312\"?\266e$\277\225\252\263?\231F\275?w\331;?\240oK\276s\334x?F\354\317??rK>\211B\017?\033\033\246?\351(\277?\333\337\025?\334F3?\210\'8?\320\177\301?\034x\225\276\255h\007?\257\246\316?\322\344\272?Y\340K\276\375i\323\276J\216\351?\275\304\256?\255\336\261>Y\371\265>\020\335\t?\360\276\002@\311\343\031>\372\013=\276\027\"\035?\320\360\354?\020u\237<\216!(\277\030\273g?:\220\347?\032Q\032>e\035\346>\334\316t?\310\263\217?\304\317\277\275\311\000P>\027\343\344?\370\027\303?\014\350\t?\344\241\'\277aK\226?\201B\337?\311s\365\276Ku\001\276\252\'4?\005\304\254?\227\3105?\0365&\276,\313Y?\3644\222?\304\231\023\277\243\313\013\277\303\000\333>\324\235\305?5\013\244\276\305\310\032?\300\260\306?o\330\314?F\352\225>\014\036\006\276<o\236>1$\301?J\3161?P\250\007>\335\310\217?\2505\221?\277\230\031\277)\2223?\247\213\324?\006h\317?\214\326\241\276DN\337\276t\014\312?\263\014\321?\350\367\235\276\246C\'>\002 \300>\343S\254?\016j\033?\024\227\027\277V\254\'?\212\344\331?\314\227\267\275J~\364>\365G\367?1\225\316?\016\206\026\277\254\032\244\276<>p?\361,\247?h$\302=\202\311]\276\212\016K?F{\232?DnF?:$\315>\274I\224?\214j\255?\271\374\227>w\333U>\201\371\261?\227\216\223?\262F\r>\346v\317\275\236\236r>Z/\252?\224\210p<\003C\336\276m\206\270>\325\226\332?\270Y<\277s\235.?C=\213?\002)\311?\331\321\210\276s\361G\276:#\354?w\326\266?\341\t\315\276G\377K=\034\211\334?\377\354\303?6\004;\277Pr\'\276-{^?\321\225\322?!XE>\225(\233\275\037\234\220?\233\257\276?\'\366\000?\321Zq\276\346\t\177?\337\303\251?\313\236\324>J|\226\276z\274\212?\307\016\354?:\353\353\276W\226$\277*F\366?X\037\315?\004U\333>V,~\275@\310\242?O\002\351?%\314\314>\017&!\277\267_\214?XS\267?\201$\314=\005\305\367\276\320\333\271?\226\n\320?\273\227\273>)#\206\276\204\322\256?\201!\277?\262*\202\276\216\006\220\275\313\333\211>\035\346\315?G=\314>\335_\021?\234\313c>\350\243\312?V*\250>7T\314>\343\344\301?3\300\353?K<\300\276\333\276G\276\215]\375?\247\352\252?v\213\310>/\340\225\276\301A\305?DN\347?\355+\037\277\000<\002\276\354\356O?\250:\310?D\025\376<m\221\024?n\034\234>\321y\317?\215`\003?SA\325\276[^\257?d\347\323?\343\244\024?\'L\220>l7\245?\3268\325?=\265>?\201\2240\277c\001\335>\240\250\310?U\212!?\201\350\211=N\320\214?p\321\361?\245\022\022\277y\220\206\276\333T\332?\373\351\363?\022\206\241=\325 \354>\227q\361?\373\003\313?B\007\345\276\372\267+\276\215\301\263?\023\267\352?d?\363\276\272\335;>,\371g?\035\343\322?\253\263\n>\356>\023\277\377\016\362?\306\206\376?\330\232!?!>\020?\023\257\324?\241\241\233?\216\311\242\275>\315\341>\373\325\376?\037/\310?\037\236\245\275R\3223\276\231C\251?t\233\340?\367t\245>\000\250\232\276q,\271?9*\251?\203\027\335>\222]\221>\234\003\250?*\346\300?=\266\005\277*\247\235\276\302\366\205?\306\207\265?\270\256X=\374\376-\276\317\271\260?\202\003\260?\210G\n?\\\001\345\275@\243D?u\037\230?\234\333\024\277\231,\256=\024-\277?\263\321\221?p\232\346>\025\254\241\276b\371\373>\021\035\270?\023\272\233>bj\027\277\233pd>\364\206\305?\010v\020\277BZ\203\276\375M\220>\212<\301?\370S\203=\r\212\026>\"\266U?\024\227\241?t^\363>\236B>>-\355\314?\333Q\314?x\013\344\276\202\3120\277\302\357\264?\226\n\340?\215\226\253\276C\222\231\276\226\003\352?\345\235\277?\224L&\277bN\010?\317\243\303?\372\227\270?\323\203\022?i\341\022>\024\271o?\027\274\346?B\262\350\276\273\325\363>Z\337\300?\036\377\333?\271\246\200\276\201?\234\276\201\023\232?M\205\362?\013\t\250>py\010\277}\363\r?\266,\233?\340\202l>\034\262\201\273^C=?\010>\256?(\323\310\275,G\210\276\222%\204?\3478\275?\276\331:\277\rT\246\275\301-\255?\347\340\321?\231\325+\276\232\353\364>_\343\314?\243\352\351?.\377\025?\212\034*?v\227\310?\021\306\275?W\350\003\277\227\032A\276>\267\351?\203\303\277?M,4\277,)\347>$\262\224>@\367\325?_\014\225\276\035\217\261>\232\\\214?\334J\275?\227\037\300>\353\344\010\277\325\017\335>\247\224\265?\234\250!\277N`\006\277\351\254$?\337\375\247?\tn\224>\007\226\003?d\027\322?\235\275\221?\232>\363>\354\300%\277>2\327>\377Z\306?\372%\232\2765$\256>kM\224?5]\241?\221\323W\274\271R\367>\362:\235?\013\266\277?\203\242\301>\220g\317\276,J\224>\303(\334?hu\002>!\2247=R\322\253?.\000\315?\224Jx\275\246{\235\276\226\204\274?\254\346\235?\327\370\020\277P\305]>\265T\322?\336w\372?/\336\357\276d\254\206\276wN\006?\270\225\300?VG\346>\325?h>\340A\205?\262\324\312?\301U\356\276\0366A\276\031\332\374?\211{\340?dw\361>\242}\000\277I\2135?\364\304\271?r\334!?|B\356\276\026+s?\001\211\326?\205\010\310\276\214\327\024?K\\\326?\360\277\257?%\311\243>\363q=>Q\364\275>,\330\346?\017\235\276\276\267E\241\276\237\010A?\354\367\266?\317\024\n\277\367v\353\276\027\274\013?x\266\307?\230\333\265\276b\242\241=\345\313\330?\334J\231?\236?\305\276\376\270!?\003mH?\007\265\235?5~1\277\246\272\030\277\374#\007?\312Q\322?\341\317H\277\204~V\276f\246\203?\207R\243?\202p\355\276\346\316\224\276\3379_?^\203\256?\024{\360\276\330I\245\276+\236\017?\n1\321?\310(\357>F\n\205=\310\253\265?\231\267\310?\326:\371>\357\222x>`L\274>Gv\333?R\362\342\276?\304F>E\374)?\032\032\211?\\\3078=M\300/\274\027\253\255?\216\002\270?\375.\354=\030_,?\347V\253>\212u\260?\022M ;\201&\342=\301k\324?y\006\335?\014?\240\276\003\320\030\277\017:\232?\262/\327?\352\010\360\276s\200\004?\251YN?\027I\333?\000\214G\276\313\365\026>o\360\362?\374p\252?\327\336g\276\206\035\216>\237L}>\346\223\301?|\271\347\276\'\211\335>,Z\262?5*\370?\223\035\003\277\3172K=\274gw?1\264\274?6!5?\325\354a\276\311\002>?7\307\265?\006\203\003\277P\031/\276\275\032\202?\216\217\302? \177Y>N\321\021<\017\270\260?`>\345?: 9>\231.D\275\254\243\377>[a\270?\366\007:?\226^K\276\310!\257?\261\335\311?j\244\355>\233\216\270>\2658v?8M\275?\377\3135\273\356\356%\277\023\266\347?\217l\356?\030%8\276\260\307T>0\306\350?\226\351\315?v\372-\277T\000\014\274\346\274\005?2\036\317?*\345\255>Z*\237>\303.\314?)\350\252?C \217>\r\374\250=\231V\356?+5\253?\304A\242=A.\005?j\365\215>D\030\323?v\305$?\326:\331>\006\341\240>\\\000\336?g`\214>\014\3124=\341\177\274?+\241\347?\224\2039\277\363rH>\251\365\037?\221\356\357?GW\221\276\334,\036\275\366\212(?\324\013\304?+\206\323>w,\316\276\356eM?\375\202\323?\331\"\251>rO\207>\366\020\240?\312\376\255?\246a\034\277\225\231\332\276\326\333W?\205y\337?\202\003\342>\'\237\376\276\273<S?_C\342?\037\024\004\277\250V\013\277\304-\247?4\206\271?\302\024\345\274>\227\251\275z\271\201>Q\204\276?EI\030?\r\027\371\275\321k\375?\373W\372?\217p\232>\202T\202\276\007\267e>\202X\316?\300\260\204\276\365f\204\276\273bZ?\3746\274?\377\262;?;8\034?\025P\263?\270x\346?\263\322\344>\205\321l\275j\360\'?\300\350\356?\250W\022?33\'?\237\026i?\306\303\263?\007C\205>\220/\001?\177\332\222?\374V\327?\271\341\007>\r\213\021>\236#o?\330\202\356?\270>\334>6\311\217=[\211\355?\205&\275?y\007\240\276\347\341\010\277\262\205\023?\211\321\327?\342\\\003\277iq\306<3\346\321>X\253\320?\223\036:\277\377\320l\276\252\356\230?.;\272?\265\306\010\277p@\313>,&\007?\252\014\315?F\227\013?V\324\024\277\273\231m?>\222\300?\"4\342>J\321\026\277\225r\200>|*\305?D\337\215>2\222-?GZ\225>b\272\316?\322o\017\276\234\303\005?1\252\036??r\267?\031\254\250>G!\231>$Y\216?\227\346\330?\024\316\216>\031\253\235\276\235\321\363?\312\304\255?\217o\037\276\323\366\257\275\301\227X>v\335\325?\205>x>\035\222\252\276b\'\227?<\244\344?\010\253\261;\023Id\276\235\332\264>\210d\354?\200`\256=\237\257\341>\374>\333?A\016\300?-_\337\276\250\212\035\277@\371\267?$~\341?s\205G\276?\0010?\\\316\334?\007\322\323?\356!\025\277&5\020?\031\010\241?\263z\247?m\311\362>\\>\n\277\264\372l?\1773\257?\217\3723\277\202\375w\276\223\337G?LO\312?s\202F\276\201Z\010?\274\236\256>w\020\317?\200\361\244\276s\330]>&\372\307?\263\232\316?\343\027\306\276\3167\242\2755dK?(\325\254?<\022\217\275\202\343\362=m\235\333?\231\r\316?\271O\246>L\376\317\276\231=\002?\343m\257?\352@\326\274\343lj>u\000\324>\223q\306?VJ\033?r\024\000>\267|\010?\354\243\273?\223\340)\277\021\2203\277\014\225\344?bf\317??\375\377>a\3740?\210X\234?\375\202\253?\240\340\"\277\354k\r\276\340%\320?~W\362?\377#\203>$\270!?a\007\210?\237\345\271?s\241B\276\263\230\260>\215ct>\377\262\311?\n\206\323\275M.\206\276\370\026\016?\246\265\311?Yj\235\275\214\237\366\276\022H\266>\245N\354?\005\027\013\277 \320\231\275C\312\327?\331\353\255?k\364B\277&7\212\276\353Uh?\021\306\325?+\246\262>M\366\377>\217\325C?~\036\337?\237\002\030?\375\330\354>\032\307\007?lz\266?\361\326\221\276\376E\210\276\301\357\263?\341E\265?E\360\337>G\037#\276*m\276>\2343\316?\346\261.\277\370\375\353>W\215^?8\367\277?\202r\263\276t\322\203\276\\\223\236?\315\035\367?\036n\347=\255\301\303\276\036m\350?\231G\240?)\230\035?\t\247\025>Z]\013?\251K\344?\253>\227\275\310B\324=\027\242\274?h\"\344?z\373\263\276\nIf>\250\201 ?{\331\326?\316\250\231\276\205\007M<a\260\343?\365L\253?\250\340\000\277\203k6?D\341n>\021\306\233?V\236p>\300w\033\274\001\274\222?s\362\270?\221\271\242>M\020\315\276\004_\037?_A\372?\016\371\337>!\313\332\276(\327o>\222=\350?FB#\277k\231\364\276\345\250\263?K\224\237?\372\263+?\236&#\276\320\226\320>\205\227\266?\366\'q\275\225\265\035?tJ\357?a\303\357?\231\274\r\277vQt;Xx\352?\361\271\371?\261\3034\277\265\250\237>\304}\347>=\272\333?\307\362\266\276\306\243\304\276\202\274\260?\262\362\313?\364\247\255\276\024!\025>tz\232?n3\267?\'3\036\275\370\213Y<\230\267x?\274\223\351?\325\\\016? ]l\275,$A?y\"\374?\303\202\'?\r\374\034?\334w\342?{\331\264?\351\361\037?K\315\276\276\317!\327?g\017\304?;o\253>K\221\264\276\324\257\006?uU\256?\251\366i;\227T=\276.\230s>\324)\273?N}\240=F\320\240>M\364\313?h>\245?\007\233\222\276\272\240\226>\re\n?\0051\304?\343\0263\275\323gG=\323\225\201?S\003\271?\370\376\346>\312\301\234\2763QL?\231-\321?\031\035\360\276\254V\306\2760v<?)\"\231?zl?\277\202\251\206>\267\010|>n\206\321?<-O\276\013F\031\277\224[\371>\366`\264?\244\213!\277\340\236\003\277L|\232?EH\353?&q&?9\233\0169\237\211\325>\223\251\306?\330\266\350\275\2344M=\347*\361?\230l\232?\261\242\316\276\002+\327>\252\327\030?\265\212\246?\246\232\351>\205\356\022?\331[\000@\\X\353?\257\"+?\343\337W\276q\371\337?\014Z\272?2\347\031?\252\177\340>5\375\373?CV\261?-\356+?,\271*\277\207\'\255>\325?\002@\r\246\241\276`\346\223\276A\343\222?\373\254\276?\232D\275\272l\354\362=~^\013?\200\357\310?\307\r;\277\004V\316=\':\271>\222\262\317?V\021\316\275u\002\232<\177F\000@\337\304\310?f\300\005?n\211\244>\017i\361?6\311\315?\232B#?\361b\341\274\0222d?0\200\304?z\253\016?\240\210%\2760\311\177?E\240\346?\020\260&?t\267\313>`\"Z?\227\002\300?\000q\257>\003\352=\276\316\323\236?R\233\302?\355\322\266\276\037+\360>\031\335.?\251O\254?wHA\276)\010\346>t\006+?\253\010\255?w\2749?0\201\333>\344\352\375?\021\376\277?\353s\245\276\312\025&?C\361\237?\371L\276?76\333>7\027\277=Q\026:?\034]\265?o,\030>\007#\366=w\023\246?\266\333\001@\315X\364>8\273\r\277|\006\377?\216\311\346?\262\275\022\277v\026\205\276\224\224\005?\353t\262?V}\246>\237!\264>\276\226\377?\356!\261?\345\270\223\275\307\200\274\276,=L?~\343\345?9\321\356=\327O\007\277\332\3273?\027\201\205?\253\006\025?3\244\"\277\250R\261?\311\217\312?*\340\226>L\341\211\2765\271\233>\\\253\255?\366\263\230\276\031\034\305>\004\305\014?\227\033\256?zVB>\305q\270\276\224\016\357?9B\314?,+\265>\311s\375\274\026\r\256?\360\026\322?]\305\006?\037\236)\277Z\261\241>\265\300\266?n\241+?[\356L\274\020\010\245?.\310\330?\267^\223=O\311\201\276\311\210T?!;\343?\312jJ>\276\203\347\276\224\035\213?og\263?\017F,\276v\210\367>\276\352\016?\212\256\267?k\330\037>\260\254t\275d\204\254?cD\250?b\365\003\277\256)\320\276\243)B?5E\300?}\255\'?~:\316>VT\211?\331\265\233?\252\014\303>5&\020?\231\325\337?oE\262?\3711:\277VF\013?\307@\367?,\237\261?U\211B?\272\242\024\275\325\036\303>\334H\251?\205\317&\276&s|>\014\277i?\245\205\n@\375\332\252>sH\352\276\204\251\224>:\\\345?Ii\032\277\301\221\020>\224\021\377>&\216\332?\270\004`\275\271p4?\377\004\317?-\006\307?[\321\206>\3747\003\277\353\001\225?\332\003\325?\025\213\337=\202\304\226\276\340*\251?\334\233\321?\2301\335>*\220Y\276q\277\243?6\344\311?\331B\024\277\265\303\237\275\n\334\216?a\304\272?\265\244\323\276\275\035\211\276\342\177\251>\226\225\354?I\237\n?\264\001\360>\034E\304?,\020\265?Y\277\025\277\310(\017>\335\253\363>\344\363\003@\004\033+?bL\242\276\263\231\347?|\271\321?\332S\362\276\236\264\320>\003\264i?;\216\271?\316\3751?M\236.?\306\355\201?\221\n\361?\233\350;\2779\227\006\277\200\210t?\304$\330?\245\332\337>\'\333P>9\340\301?\025\032\324?~U\206>\035\035\377\276$\370\340?\240\376\261?\320\357\333>\232\0070\276y*\226>\264\311\311?\032\303\010\277\275:\307\273\350i\332?\021Q\262?\2513\247>/k\002\2764\363\226?\266f\307?F\261<>S\3517>k\261\210?B\223\276?\310\263\253\275nN\001?H&\272?c~\312?\376,&\276\022\024\'\277\212\274\022?\373\226\371?\023\323\205\275\"\337U>\030Pi>c\234\257?\236y\331\275\211D\331>\272\312\215?:\316\253?\303f\340\275\252F/\275\206\261\030?,\363\234?`\253(?<\025\000?\274\026\326>\206\251\271?TS\232>\234\027W>\352y\211?\220\240\262?:X\033?o\327\323>\366\275\245?Y\375\271?\245\335\310=\022\371\n?!#\255?\020\257\341?\253w\014\277\022\203\200>\372q\245>\361\325\336?s\325<\276\264\004\031?\002\013\327?\002\204\313?g\322.\277\346X\376\275\373\352\302?pz\303?\207\245\201>;\030\241>\264H\355?8\330\345?{\204\322>\346u\030?\374D\254?U\373\276?\230\366\021?\377\312\372>L\365\331?\261\341\345?\014\003\346\276\2303[>\336\034\205?h\004\247?_\264+?d\350\330\276E\353}?\222]\225?}\263\355>4\271\370>W\362\344>ga\243?\216\036o>9\177S\275\222\336\367?![\316?\025U\177>i\217\367\275@S\240?v\337\357?\371\202\026?aR\374<t\345\330?\307\272\332?\362\264\374:\302\336\004\275r\217\336?\014<\255?\343\305&?\372)N\276\234Gz?FC\364?j\211\225=\273\232\254\276\255~j?\366E\232?\032i\241\276\035\000%\277\267\3750?c\320\271?\0215\021?8H\350\276\316\327\206>\014#\247?\\\004\"?=\020\331\274\001f7?j\205\303?\nh\302=\214\236\233\275\017&\026?\217\251\345?S>(?\271\030\203\274\224V\275?BZ\315?\200,\004\277\030\260,\277\273R\273?\001\276\265?\022\245-\276~n\250\276\007\034\227?NE\314?#K\366>\013c+\277\264]\324>\314|\315?\223n\037\277\214\243b>\216\224\203?\313\273\260?=*.\277+\212\247>H\223\000@\355\266\313?\377\261\320=#\277\316>\203\213\336?\212u\336?\276\026\314\276-\355\264=\342gq?\300zx?\217\000n=\227p\250>|\262/?\254T\276?\375\367\330>\252\013\230\276\377\221\216?R\016\376?\335]w\276d\351\033?\365\375\304?jN\340?\001nV>5ca\276\225w\361?|(\237?\3440\370>\373\225\276>8\342\364??\213\235?\242\323;\277cC\013\277d\306H?l\355\325?\276\025=?\304\'\365\276\350\375\262?\247t\304?\215\356 ?f\276\253>\010\214\036?\250\376\321?#\370_\274\362\230\261\276\371\353\317?\224N\246?!\0365?$\2641\277\337\'\252?\325\006\327?\367x!\277Ii\022?\360\221\243?\306\337\274?\003\013`>\256\235\014\277\377\003%?>\353\252?q\223\261>\217\252f\276\271\222\020?\030@\330?iQ#\277\372\r\333\2760z\331?\202\311\273?\223\035\333>\356\257*\277\000\216\315>\226\262\320?\260\254\224>\t\340\376>\037\224U?\010Z\337?}\261\377>P\376\356\276\312\257R?u\003\315?k\235@?\031\220->\342G\257?-\263\302?\216\256.?v\306\317>\000y\260?\2451\346?\t\030m>|\323\004\276\345\2477?\276\336\253?\247\315\200\276v2(\277\251\010M?\231\022\341?\235\275\223\276n\335\035\277\255\252\202>\244\373\227?+5\273=\270\346\016\275\035\321\232?\370\371\371?\332 G\277C\032\005?2\253\337>\002\177\310?+\241\363\276\245/\004=\210\216\353?gE\270?\'\334\303\276vPY>y\202\241?\017\271\271?\207\374#?\014\222\346\2766\245v>\216\311\276?\001\336:\277<\330\242\276\023\266{?*\035\214?\337O=>\262\203\006?cz\302?\267z\276?\214+>>\352\226\245>\375\264\313?\371\334\333?\271m/\276\362z\034\277,\240{>\214d\335?\276ho>\327\333\306=\330\271\311?W>\365?\307eD\277\343\301\376>\370\237\371?\346Y\337?\245\2421\276\226\223\210>\010\317\333?\272\330\004@\363\310\217>\210F\327\276P\312\247>@Q\307?\211\357\004\275\310\n\376\276\374?\204?-\321\311?X\2142\277N\320&\277\271\204\256?\324,\360?\351\324)\277\230j\032\277\226\337\337?\367\217\347?*\344J\276\216w\013?\320\312\026?\177j\312?\330\016\306\275\326X\032?\345\325\364?\301\304\325?\223\311-\277\303\360!\277I\361\240?pC\344?z\251\300\276}\003#\277e\233\255?\0047\314?\371h\r?\206\254>>qF\007?\317\207\357?d\223$?\360l\013?\242\230\220?\302P\305?\365\204\265\276c\t\213>\232\027\361>\215B\246?\007{\033\277\246{\265>\231&\315?\'\245\352?\3646\022\277?\375\007>0\311\274?\005m\262?5\'\367\276\307\273\323>+\001\246?s\204\354?\001\244v>\245\0253?\033C\217?\037\016\320?\322\030\355>\t2\312\276\265\334\341?%\226\002@M\237\355\276\027\331\376\276,\r\342?\'\275\255?\307\331\244\276\225\360\244>$\271\\>y\005\322?M1g>\033\332\230>Dp\247>\302\211\342?J\360\226\276\262*R>\352\216:?\214\366\234?[\\c\276\211\t\352=FhV?\000r\364?\35790\276\245\365\033?w\314\262?}\227\234?\363\216\363\276\334\332\322>\317\nI?0/\340?}#\016?\240p\026?\276\355\341?\330\202\254?GZ\352\275K\312\025?\307\002\255?9\232\355?Wx\327\276\257\0055?\231\246\207?\362\357\277?\017\013\021?\261\334B>\255S\222?\\\350\320?\307F\270>?\216\206\275\251h\274>\235\017\365?\177\3003\276\216\2571\277\323\322&?2\220\271?\303\271\016?p\354\351>\2443\322?\r\341\310?5\3534?\266\327\242\276\314n\236?\302\246\240?n\340>\277\250\306\013\276\226\217\347?O$\354?\212w\300\276\343\027\276\275`\245$?e\343\275?Um\327\276\205\261\245\276\035\364\'?vq\313?\256~\304>W#;\275\343-\202?\3577\344?c\323\002?\033\330j=|\350\247?\203\332\301?r\246\031?)\313\360\276\200?\257?\0258\321?\353\344\020?\302\204\351\276\026\316\357>\'i\254?r2\211>\336T\004?\336\325\227?\207\333\325?\255\333,?\321\256r>\0141\020?\236\010\242?n\205\220\275uZ7>C5\334?\020u\321?M\020\031\277\273\227\303\276\177l\264?Dm\305?\331zB\277\234\340\233\276\250\\g>2\377\272?\330\273;?\235\234!<?\203\241?\351\363\347?\342\345\371\276\320\264\204\2763.]?\0262\303?\363;\025\277\023\016\275\276u\353\236?\330.\301?\374\250\016?V\357\360\276\300\376\375>)#\312?\006J\212\276\376,\022?\365\367\345>\201{\360?\304\\2?\325\"\016\277\326\342\033?\237\311\354?W\007\020?\326R\034?R\226\300?\244\374\302?A\271\025\277\201\006+?d\214X?\367r\353?\036\027U>d\314%\277\236\305|>\220e\253?()\370>\370\210\210\276\356,\250?g\017\366?\311\001\223>\251\026A\277\014\014\010?\000\001\301?v\305<?@\023!?\236\001\270?\320\267\321?\026\241\250>u\222\001?2\202\357>\321\255\235?\013\016o>\230\207\224>\234\032\313?\323\210\231?\236\010B>e\251\005\276\304Z\237?\244\251\270?:xV\276ap\t?*2\037?\336\005\272?.\001(\277=\271\376>\230\341\266?\345\013\310?6 \342>\031\312\251=\347J\344?\316\303\271?\375M\270>\346\345\350>\356A\330?\266d\271?\211\231M\2769%0?\216\357\266>\270V\313?\t\306\201>\261\277\344\276Pd[?\301\346\374?\001\333\021\276\372\tW\276O54?\224\240\253?\355\357\214=caX>\323\002\000@a5\252?\025WU\276]R\265<&\357J?\236|\344?;\343\'?J\265o>B\327y>\255\276\322?f\202\271\276\rU\331>\261\257\301?\324,\364?\301\306\225\276\022N\007\277\260\365\256?Qi\316?#\2034?.:\t>\037+\261?Y\026\334?\267\177\235\276\003{\204>\322\026\376?\027\272\320?\216[\214>\311qg=\356\2259?\324\236\262?.r\217\275_\322\310>\246a\332?<P\327?\337\026l\276\316\247\006?\010\033\345?\004\217\343?\351\321\010\277\010\257\345>}h\203?us\311?\241\333{>\303\324\216\276\016\247\213?\364N\233?\222\313\337\275\225b7?\256\007H?\207\340\304?\374\211J>j3\006?k*\373>;R\245?\376E\340\276\330D\276>q\235\r?S\223\250?N\234\020?\231\327\371>\\\t\220>\374\212\357?\372\263o>5\267\036\277\345\373\352?\025\341\276?\375\334\240\276\261\372\203\275b\252\227?\030\226\321?t\014\240\276\325&\276>^\243\324?\272\365\320?5\231\005\277\213\375\225> \314\336?vk\331?,\202+\277\257\007\323>|\202{?|\200\342?\226$\217>\314b\362>\264\310&?\210\271\302?\304\006\313\276\376b\036\277\341\237\201?iW\303?\234\374\226\275\014\004\341\276t\316(?\320\360\316?\340,u>\215\t\261\276\271\245\325>!;\331?\332\215\236\275\260U\002\277\354K\246?u\345\355?\'\023\017\277\360\025\035>\237t\254?\372\232\000@\314%\t\277\2201\327\275\222\241\271?\334~\301?\344\327\037?\021U\370\274I\315\350>\020<\274?A\365\217=\261\304\037\277\246s\255?I/\350?\324\201,<\323\364\021\277\345J\364?2\036\323?\255\302\036?\ne\021?\347\261\246? \'\266?hY\377\276\332\036\305\276\032E\212?\363\036\337?]\245\007?\037\366B\2752\307#?\227r\300?\024\t&\274R\231b=I1\243>U\243\277?\2654\377>\365J\251>\253\001\253?\250\216\275?\007\354j=\276\372\240\276\234e\345?\213\304\302?4\367$\277\2616\306\276_h\242?u\217\332?\2076\330>\263`\322\276\235G\263?\274$\272?b\277\007?~7-?\261\356\211?\352?\315?%\352)\277\'.\277\276\343W\007?\242z\351?\003}:\277\216={=B\314\"?Y\212\316?\225\273\257=t\353\355>\201\2647?\366$\320?\374\343\275\275\364\2063\277X&\337?\306\212\252?\273^\242>\3748\252>\3066\375?\036\376\324?\010u1>9G\031?\265\327\320?\'\205\271?\312\030/\277Ym\036\277\277s\231?r\024\234?\356]\013?\303\237\271\276L\t\317>,F\335?\200d.?\275\377\377>\262\260\357?\312\342\364?+\024y>(\325\276>L+\377?\236y\261?Tr6?VE\220\276\307lP?\252I\260?\366A.\277V}\026?\025\263\321>(,\311?r\303\'?\n\200!>9\331\311>,\232\324?\270V{\276s\237\324>7\330\355>\214\201\263?\\T;\277\215}I<\221,O?\210\023\326?\273\200w\276\244\032\216>|\255\325?\353\251\343?#\332\356=\032\245\263>\t\365\251>\227W\310?\003\005\036\277\023\rb\276\355\255\212?\'\370\266?s\273w>Y\374v>\300\352\226?\006\325\312?d\352\366>d\312\007\276Ex5?\3374\301?\350\242\031\2770\241\006?P\013\034?\311\220\331?\266g\226\276J$Q\276Q\371\201?\037f\325?\311\312?\2763j.\276\226O\270?\035\"\272?\330\014\310\276\322m\371>U\nO?\324E\310?\013\014\241\276\3333K\276\224\244\237?\315\\\362?F\352\265>\200\327+?\322x\373?\273{\344?\0048\235>Y\367\257>Tn_?\340\203\002@\212\260\211\276\307\366j>\244\314\273?\236\317\340?\027\200&\277\211\t\222>\302q\306?)Z\301?\205\"\005?\261\027\n>\363\'\231?a\335\260?\350\334-\276F\007\004>\263\246\251?!\347\345?\360\301\203><\210\265>dE\320?E\020\255?@1&?((u>c)\346?Yl\245?\333\031\"?e\245\211\276t\334\321?\2648\323?7\246\307\276:$1?\347q\372?\036O\327?R\265\r>J\007k\274\334E\237?>\351\330?\322\252\306>D\277\036\277\342\013F?\014[\307?t#\254\276\326\250\017?\373;\314?\340\024\304?\260\215\370\274\377#\223\276o;\220?;Q\306?\233\002!?@\366j>\376v\246?\244U\325?\271\306\267\276\342\350J\276\346\000\256?\251\026\307?W\350\213>r\2443=\232\243Y?h\223\311?\225eH\275\214\022\224\275V_\240?\017\232\241?&\342\215=,\234\004?Ty\246>\322\032\247?)\347k>\024\256\357\276\311S\231?\230\244\262?/\250o=Bv\016\276\240\371\244?\3476\213?\367;\354\276\261\243\261>\302\311\240?*T\335?\357\035\001\277@\276\354\276\201\325\216?\317H\324?\376bv\275\010<\260\276\341\220G?\001\303\320?\217\032\223>:\351\305>n\000\231>\2343\330?J\007\243>i\001\036\277\032\215\265?\027\200\324?\270Y<\275kc\214>\r\312\221?\251\366\321?~\220\315\276\343m\355>\022\344\364?\363\343\315?\037/\314\276\031\350\242>\227y\n?<\240\312?\265\2139?\030{O\276\'$[?H\337\260?t\354\220>\341\0146?\236\017\314?\226\225\260?\365\203\022\277\026/\006\277\221h=?\023\014\233?;\211x>\335\"@\276\030\243\234>mS\326?\307\332\237\276\340L$\277\203\371\323??S\335?%\347$>6\350\223\276\272Z\326?f/\275?\263&\376>\254\345\316\273\002\026\264>\216\224\307?\tP3\276\364l\336>Fz\321>\315\310\364?\356?\302\276\n\017\352\276\330\253\337?Ec\305?\346\007~>-y\244\276n\270|?=\017\354?;n\010\276\355\364C\276\374\334\211?\177O\330?B#\270=\231\331\237\276\374\027\300?\211\265\304?\277e^>\235H0\276]\303|?\330\203\223?ULe>\3330\342\276\243\204\'?V\361\310?\n\332\304\2761~\202\276\032\333S?O@\277?#0\326>\326\375\037\277\355h\243?\n\332\322?c\356\272\276\013{\272=\002=\376?\r\245\300?\362\260 \276D3+\277Z\342\243?\261R\313?\357\307M>\243y\310\276\274h\336>4\366\253?\\\313\234\276\217\247u\276-\252\242>;\307\300?\277\r\311\276\350f\007?C\343a?\3164\343?\203O\313\276<\244X\275z<\010?\207\337\261?<\022\277\276O\037Q>\201!\372?\207\333\363?\0362\255>\216\310/?\'\262\334?\273\234\334?\202\221\003\277z\343d>i\362\254?X\214\326?m\214-?\205%&\277\372%\223?\362%\264?\024\256\023?\275\306N\276\321\202\236>\335\323\361?\204\200\234\275\035\001\024\277d+\240?\313M\356?\341(\331\275\\\253\215>=\177\022?\236\265\313?\002\324\264>\301\033\036?\362\031\256?\256\364\272?\276\336\205>\370\372\032\2777:\230?\231\236\254?\017b\237>\373!\226\275\360\016\342?\226\004\340?K\314\003\277D\031*<\366\267\217>\255\205\327?u;;\275g\327\001\277\215@\347?)\350\342?#\243\203\276\242$$\275j\301\333>\023\017\312?N\233\261>(\234\325\276m$\004?\320&\237?c\231\036?\366\177\266>\031\324I?\223V\272?\364k7\277\336\254A\276\357\247\277?\2444\305?\237\346\344=\226C\203>77\320?\334\362\247?\266\362\222\275\275q\">XS\212?\"7\341?\326\250\377\276\350\300\362>\304\335\206?>#\323?\361H|\276[z\354\276\366s\277>~S\242?d\317\366\276\230\241)?\342\214\256>\336>\317?\020\224\'\277\212<\t\276\271\374??\366\014\265?L\376\013\277\375\372\341\276a\264%?#\371\304?\034(\360<}\3121\276\254\214\336?\242\014\353?[\'\016>\311\253\223\2767\305w?\033d\234?\320\232\347\276\006\3312;\030\366\246?\205\007\227?\217\307\014\275\277\201\201>\033\211\241?\333R\277?\304y\340>h\010G\274\n\220+?\325\t\222?\270\\\325>+\030%?\223\274\266?\330\201\277?\241\243\025>$\233\013?wbK?\206Y\320?<\336\264\276\220\202\377\2760k\225>\252\n\351?\225\236i\275\010u\021\276\023\024v?\000\252\276?\360n\005\277x\t\316<\214\225\264?\362\315\354?\\\222\353\276\230\340\354>ij\234?c|\336?U\245\t\277\250\214\367\276\262P\366?\211\352\317?K\347\353>\031\002\330>lX\264?V\r\306?]O\030\277\005\375\345>\202cU>\236\316\323?\201^\010\276w-\201\275\377\242\363?\r\337\274?_\270\323\276\031Y\232>\036T\310?\210\275\250?a\303\033?\"P\355>\257?\225?\357\035\307?z\340\037?9\267\351\275\236\276d>\227\002\322?\300\\\213\275@k\376=\265\307\362?\354\276\331?[#>?\320\323`\276t\360\375?\317\201\245?_\\Z>b\242)\2777\337\232?\317K\313?^\201\250\2753\371\246\276@\202\261?\376b\316?Y\247\222\276/\303\337=ec\373?@\277\311?\313\275<?\002\240\n\276\316n\261?\007x\300?i;\276\276\334\327\351\276\204\376\244?\303\267\306?\017~\332\276W`\310=\310\016U>0c\304?\026O\205\276\302\332\004?\277\306\234?\300]\322?\253A\300\276\374\000T\2765X\353?\377\350\255?\346=.>k)0\276\366\227\235>U\204\321?%\226\224=0)\376\276\235\335}?H\032\314?\314\355\366>\356\224\306>\223\375\303?\205C\277?\036\301\001?n\335\t?l\246\344>\207\337\243?\2132\333>v\250\346\275\276\311e?\336v\271?\325z\267\276M\3650\277\n^\341>\243#\263?Z\2675?o\014q\276\031\202m>\321\037\274?\255\336a\276\021\217\204=\220\231\341?\201&\340?\0318 =T\037\310\276\333oM?\030#\352?\335\224r\274\275SA\275\331\014\241?\336\311\255?\361\202\000?\033\241\267>\027\303\373?d\313\260?\273\361\346>0\233\024\277\031a\330?H\335\346?\003\260\221>\221\361\310=\224\006M>\216\006\316?\267(\037\277\203\024\334\276J\356\024?\344\365\220?gc\001\277\330\362\006\277\200s\224?\273{\316?\222\007&\277\235\272\362\275\310&i>nM\306?\257\231\334\276\207\305\034\277\251\231\000@K\313\236?W\227\263=\220L\207>`x\371?EK\330?\356[A\277\'\237\"?\375A\006?\347\344\263?#\203\344>9&\003?\302\264)?\315\037\341?\207m\223>\002\365&\275\036\271\177?\345\231\325?L\211\014?\300v\350>\2324\353?!\222\335?[\354\356\276PT\256>\332\006\243?&5\310?|\321\216\276\220\335\345=\25077?\277b\307??\034\030\277\362\315\376>\271v\257?\341\007\371?U\204\007\277\207\305(\276\277\033\350?\223\254\273?\n\240\210\276y\037\003?\273)\215>\214\275\315?SYD\276\017E\341\276k\264\247?\360\245\326?lx\362\276\006\016(>Su\223?\362$\273?og\317>\245\363\261\276h\375\311?9\231\314?\316\376\240=6\344\317>\273\273\213?\333\031\350?\202oJ\276\342\035(?\002\205\343?\322\211\340?\021\3404\276\254\034\372=\364\213\244?\303\330\330?\337\3751\277\000\252\340>\210\203\216?&\305\341?`\001(?C\342\032\277\004\325\r?q\346\263?@\205\203>\211\'\263\276c!\027?\331>\326?\234\207s\2766>S>4\301\313?\365\326\332?\235\2336\275z\307\021?\332\334\372>\300v\326?\333\302\363\273\260 \025?\204\326k?}\256\264?\022\275P?\237\224\031\277\236\374\363?\356\005\376?\216X\013\274\262I>\276\321+\364?\311\003\271?:\313\034\277\345`\316\276\352\244\264?\031 \257?<\241G>ao\222\276\212\336\323>\337O\317?\177\275\242\276\210\367\234\274{iz>Xs\336?\252\361>\277\246\356\252=5)\231?\\=\317?\245\274\276\276\003\266\233>\354\221\034?\246\227\272?\341\265\023?\300[0>P\235x?K\350\246?.s\272\274S#\324\276V{\251?\016\204\304?\202\343\022?__\007?~;\234?B\225\334?\024\005\252\276\341~\210>\346\307\370?j\373\341?f\204w\275\032\373B>W\316\314?pC\350?\331\t\317=\270\260\"\277Y\016\367?\"\337\277?\026h\023?y\255\000\277\001\007\364?\256+\276?\2137\262\2755\r\n>?\2534?\177\333\235?\024\313}\276\305<\353>\265\322=?\\\254\276?\237\313\034?\270\313\006?\212\300\246?\\u\307?=\177\232\275\256\020\326\274/\301\243?\177\241\257?\351\322#?\003\t\036\2776\323\243>q\256\331?\321<\034?eS\n\277Y\034\371?\366F\351?\302m\275\276\266\364\200>n\312\033?\024>\307?\355-e<#\025\246>\346f\340?\234\305\243?\030\354\306>\377=8=\"\\\277>\232\013\336?\0216\214\276\236#\002\276cM\324?Ac\326?\231\201\312\273\3328\202>\3637J?\215\325\266?\326\213\241\276\334\241\251>9\256\243?\231\327\323?Mi%?\001\277\326\276\273\301>?\2075\233?\205z\372>\014<\033?\037U\001@\001\277\374?/\341\320<9\017\367\276[kV?\260<\244?$\r6\277\334K\372\276\3625\357?\\;\353?d\351\203\276\030\\\303\276\006/\245>m<\332?x\354\027\277\343k\307\276\225\234\325?\026\337\300?0\235V=\367\257\024?\265\371\256?\335x\251?t&m>\375\370\353\276O\266(?\266/\272?\303.\006?\337\027\367>{\377\335?\010V\267?HP\364>FC\366>\255\n\242?\250V\321?\216\345\035=\203\212\252\275Vl+??9\314?\006\365-=\270\315\324\274\337 \014?\317\203\325?\232\223/\277(\235\330>\355L\204>%\255\330?uU(?\234\026<>\352Yq?\361-\314?\231a\023\276\214\204\266\274\341i\352?\307\234\261?\027b\375\276\252\267\326>\316_\205?M\276\243?\373@R\277\223\253\230\275k\220\243?i\304\266?0\021\377>\333n\022\277\037\214\272?\370\213\317? a\024\277e\027\304>\265\013\227>\222\225\367?\362A\027\277\317\277\205\276\215\315\003?Kr\326?\366E\002\275\252\177\320\275\220\354??Kr\344?\257\317\244>\366|\235\276\341d\336>Y4\235?\331\224\363>\363t\256\273\200C\215>\025\216\322?\305\344\315\275\004\346\001>\246y\262?\244\246\333?N&\036\277\211&\004\277\264C#?\364\210\325?\365\366\307=\342\347\377\275\320\371\233?d#\276?\374\212!\277\225\271\361>ME\363?\212\006\255?#j\"\276\t\247-?\227\234i?\324\363\346?\212\006\311\276\2031\022?\237\231g?\177\302\347?T\377\270\276\314\227\247>G&\243?Y\334\265?n5\313=c\013\321\276\313\037Q?\315:\307?\243\007\036\277\243\036\202=\003\007\236?\314z\273?WA\020?\005\340\037>u\260N?@\027\311?\001\302\277\276\213\341\026?\317W/?t\356\340?Pp=\277/\301\351=\322\313\333?AF\260?K\314/\277\247\316\033?\007@\351>\353r\342?\207N\317\276\0259\274\276\204\010\237?v8\250?\306\340\341\276\002*\014>;c\201><.\324?9D\024\277\225\324\351\275,\330\350?D1\305?aR4?k\177\023?\2163g?TV\257?;\340z\275\204-\266\275\n<\321?\346[\331?\352?3?\002~\035?0\3532?O\222\336?\312\375\022?\342\315\"\277\313\247&?B|\230?\237\347O>0\331\340\276!\310b?A.\335?\343\212\263\276.t\215>l\320W?Y\245\310?\n\023\n\277\361*\203\276)\334\t?$\355\332?\\\004\032?q\222\n?y\263\031?\326n\277?\374\336\246=#\330\200\276\244\260u?\340.\375?\254\220\026?\rl\355>\227\021\330>D2\236?9\n\024?\204I\261\275\\\036\227?_\225\325?\205]\020?\270\217\204\276\343\367\337?%\351\344?bhu>\010\256\322\276\247\227\225?\226C\323?\261\247\275>|d\213>\177\221v>I\203\267?\217Ri>~\307\004\277$\301V?W\317\327?\326\251r\2746t#\277\312\221\223?\'\277\301?\334g\215>ut\334=\024\325^?\321v\314?\267&]=\261\374\361\276\r+\216>+\206\275?\251g\301<]\334\016\277\303\017&?\3641\265?cF\270\276\2200\344\276\330\335\355?I\364\246?T\253\257\276\347\031\323\276\262\266\002?\264u\322?\371\326\'\277v6\344\274^\250b?\002J\313?\304\006#\277g\n\275>\377qS?(\266\346?&\376\260>0G\217<F\324_>n\337\335?a\252\251>L\027\262\276n\320 ?\0009\273?\237\0051?\261\335\035?\225\177\243?N\013\212?\005\031\241\276\317\331\322\276q\363\323?f\372\263?(\0160?=\267\000\277\025\331\030?n\334\316?\261\2101\277\207\372]=\375\275\334>\234Q\275?&\217\357\276\256\202\230\274\324\327\316>\214+\330?\243\352w\276\267\010,?W\255\375?\212\002\305?\004\001b\276\264\257\224>\333\325\374?\332\255\335?\322\254\364>\314*L\276L\006\246>\0216\262?\371\334\035?\247 \337=.N\254?U\277\242?\307\330I>\265\245\006?h\361\251?\226x\242?\314}\202\276\302\331\365\276!r7?\345\265\376?1\224\303\276\235\3321?D\352h?\223\220\324?\n\200q\273F{|\276\372\020\275?0+\220?\257\227\306\275\225\2312?W\004\314>\205{\335??;\340<\032i\251<\320\230\303?\211E\306?\216\315\032\277\350\023\371\276\265*\253?\301\217\302?\014\007R\2769\231\270\275\037\375\376?\257!\302?I\021\311\276\034}<>\t,R?:\010\300?\250:\354\276Y\372\260=$\032\373>l\351\257?\212\312\326>R\177\375=\257_\342?xC\250?\216\007\313\276\037\276\374\27636\336?\366(\274?Eb*?x\234\"<\312\356\301?\263\226\326?4G\"?b\3662<\203\255\265>\030[\242?J\266\022?\025\306\276>)@\316?/\372\336?\264:\211\276\277,\031\277\007\324\364?\300Z\301?J\007\373>\000\345o\276\000\377\314?\372_\320?/1\316\276\250\220{\276\013\336\314?\244\252\353?\212\221e=6<=\2768\355\226?\222\255\330?\017\n\322\276\307d\371>\252O\273?\354P\311?\303*^\275\nj8\275\023\355\331?Q\372\250?\256\021\221\276Z\201\241<\355\263\251?\030\013\345?\264\037\031\277\305\343*\277\261\327\322?\007\233\200? |\350\275\343R\265=A\377\353?\226\010\270?\353\341\353\276bH\266>\260\355L?\304&\254?,\203\312\276\310\321\264\276\316\250\327?:\317\304?\030\265\037?r\372\212\276\261\375\274?N{\244?\274\\\314\276t\324\021\276\204O\022?\004X\266?hZb\276\022\336\"?\327\267\340>\364\212\277?\002+\267\276\030\226#\277\232d\017?\002\014\355?\260\350\026>\367</?\367\002\345?\326\307\271?W\320\214\276\372%R>\230\375\321?\257\356\344?E\365\356\276\375\273\036\277\353\332\366?fk\333?\371,O\276\277\200^\276\207=\363>\211\263\262?eT1\277+\303\000?\275\253\264?Z\r\347?1\t\367=\331\230\023\277\234\347\207?o\326\334?\006\0206?|\326!?\332\304\246>(\267\263?=\265\002?v\306w>\210\020\257?Gv\315?\346  ?\232\262\017\277\267\332j?\361\200\372?A\363\251\276\371\020\274\276=\236\035?\354\243\265?\260\257\001\277\260\035\214:\221_\325?\262\274\251?v\340|> \r\'>M\332 ?2X\341?\221)\003?\350\245\002>I\200\311?\341\320\311?y\347\320<\315[\375>\n\240\270?\221}\244?\236`\007\277VH\311>c\201\232?\316P\254?\275\030&\277\021\337\021?\r\212\036?\235d\273?\345a9\277\333\335C\276|r\016?X\341\242?J\354\332\2739b\235\276\272\301\377?\364j\332?;\214\301\276r\206&?\301\262\215?$\356\345?x\r\312\276\023+3\276q\226\325>\244\377\317?\226\007\301>\310(\257=\206\227\341?\346\226\304?\226\315\224\276U\023\244\275\374|f?7\304\306?Jym\2751\007\231>\212\351z?\226\230\307?\234\333\024\276\367\035#\276fc\262?\023\233\323?\243!3\277\304[\207=\314\023S?EJ\315?\254V\022\277f\331\223;\301\233 ?\224\244\305?\231g%\277\330a\344\276\2118\317>\010Y\310?\217U\362\276\205\231\336\276\014\304\277>\352$\265?\371\272l\276\317e\272\276J\237\221?`r\263?\224K\273>\251h\030\277=j[?W\263\352?\212v\205\276\'\241\364\275\321\330\335>\241\020\333?l\313\350>\314\263\222\274p<|?\373[\272?\326\376\256\276\323L\367=L\214\215?\236\322\313?\214M#?\222=\202=\240\004\354>t\317\352?\270<\246>w\332\232\275\250\020\351>jL\266?\363X\323\276\t\305\216\276T\020\233?1\263\313?\010\3156\277W\317\t?\226\037\323?b\017\351?\265\243\320\276\r\253(\276\215p\264>\305;\001@}\347\237>\352X\205=L\344i?\305\254\337?\300<,?\022P\341>qQ\222><\025\272?\005Q\227\276\303b$\277\323]G?\226\222\373?\376D\215>UN\203>j7\211?\320\320\307?\005P\034>{\274@>NjB?\322\247\327?XY[\273U\243\'\277aOw?\037\271\323?\0014\212>\254SU>7\'\306?\200\272\317?\350\245\212>R\231\342<r\344\316?^0\314?>\312\250=\251.\240=\243\355\203?;V\275?>\\\"?\220\332\244\276\311J\215?\005\211\361?\220O\350\276\010\034\271>\356\254\202?{f\273?\037\241f>,f\304\275\305\031\334?\264[\325?\310D\002?\202\036*\277\310P\324>\320\355\205?\017a\014>\216\007\233=(\354#?\022\335\357?\254\221\275>h\263:\276\321\217[>\004\001\256?\346\351,\277U\370c\276\310\331o>\271P\267?@\023\201\2755%\021\277\306t\245?Q\273\245?\346\255\016\277\324\202\023?\324\253^?v\341\245?\264\252=\277${\204;\224A\347?\3437\343?\363;\225\276\302\027\316\276B\314\232>\223\212\242?M\023\016\277K\005\031\277-\334X?x\230\264?\3436.\277\210\276K\276\351c\354?\010\313\250?\224\277\303\276\203\367\031\277g\201\251?\2178\340?\\\310;?\214\331\222\274aL\037?F\264\271?\365\205P>\256\020\026=P\203\367?\222\010\265?\347P\002?F~\305>\327\014\210?\037-\300? \266\004?\314\3240?\352$\361?\325\264\277?\266\326g\276\3578\275>\223\t\204?\024&\310?\'M\363>\003\3574>\203\020\207?\240k\223?{\3316\276\306\211o\276aWN?>\224\324?\202\035\247\276\035\"\266>\263\337\221>\035\217\271?L\377\272\276\310\315\200\276=k\244?\231E\244?\310\232\371>*t\002?\317\236\356?\266-\316?\342\310C>\231d,?\250\"d?\206\035\260?\317\274\334>\025\306\026>\210!\357?\213\207\307?\313\200\223\276\027\177\'?$\375|>\253\222\274?\320\326-?T\002R\276\036E;?_\353\320?\206 \007\277\255\333\240\275\225\013\250?\313\331\323?N\177\366>\375\2754\276\361I\223?\366\010\331?\260XS\276\251\302\237\276\263\335\353?#J\321?V*H\276\351\'\324>\251\224X>\010\037\312?\313\3271?\230\276\227=\013\271A?\230\373\322??\344\315=\003\317\345\276\342g\202>\216\314\273?\211z\341>\033K\230>B\343\253?\330\017\317?\24113>\307+\210\276Aga?\322n\322?\\\220\035\276\035\037\355=j\342\204?\307\364\270?\252\236\000\277.\305\315>v\334\265?Z\326\273?\251\301\034?,D\003\277\352(\364?\272\020\253?\261\300W\2756\346\265\276\026\371\321?\306\340\335?+\210\361\27631\035=\r\244\336?F&\002@\021m\007>\323M\"\276\247@\362?;\342\364?Z\236\033?\024vQ=\304\252b?\274<\367?F$\242\276\212\221%\275\0074\257?5F\265?\361\364\332\276\216\223\026\277\323\010\317?)y\271?\324\273\220>\3265\"\277Z\317\235?\363:\330?\361\200\352\276\351\3245>\333C\214>\265\336\333?&U\233\275\326V\354>@e\243?\360\370\216?)\004\202\276f0F\275l\236\377?a\027\233?\361\270\250>\267D\326>\326\332\226?X\310\232?\326S\027?o\325\375>\023\354\336?L\246\356?#\244.\277\314\231\265>\017\353v?\031\310\275?\260\2540?\226\347\r\277\242Z\337?\255\370\254?\233\254\021\276H\247\016?\263RV?\333\334\320?\220\331Y\276\377\225\355\276\263J\302?\316\034\274?\253%\375>\327\204\224=\372\320U?\227t\276?\220\301:?b\2040\277\302&\262?\304\264\363?/\373\365>d\316\263=\022\325\334?;4\316?\227W&?)\3506>t\367\007?\307/\310?\224\240\227\276B\351#?\254y\267?\231\201\312?\025X\270>\260uY\276\026\177\220>\252e\353?\030\356\234\275\205\354<\276\252\214\377? F\360?\370\032\372>|B\036?\213\371\223?\033\205\264?\005\026\020?\371,\367>\352W3?\030@\256?\330\235\356>\252\3257?w\024O?\244\304\001@\206\252H?Cu\223\275\270\300\373?0L\332?\342<|\276\313h\344\274@\366\302?*\253\303?\220\366+\277\316\213\233\276o\034C?\316P\260?]k\007\277\204\274\002\277k\316\344?\203Q\221?:\317X>\314\'\017?\330\024\341?6V\304?\023\017\370>,\233)\277\004\225\306?\343\343\345?\317\203\373>S\225\326\275~*\325?\276\300\304?\000X]=3\027(>\0313\222?\262\332\274?2\343\021\277\336\035)>\252\226e?#\335\323?\217\034\251\276`u$\275\221\367I?\350\203\317?\n\243-\277\200\271\226=X\332\303>\032\243\301?\203\242\221\276A\327\276=&\335\253?\237\314\273?\032\340\202\275\232\005:>.\335y?L\026\361?T\343\205\276\007`#?\327\267\265>@\334\271?y\347\310\276\005\305\277>\253\331\211>\334\204\367?\217\215\340>\320+\016?\235\262\266?\356\\\270?\316\0324\277\367\254\353>iL6?\005\373\337?\322\0350\277\207\0269\276\014\362E?\242\014\307?\335\007\030\277\261\250\030\276\370S\243>D4\266?\331\316\033?<\370I\275#\033\273?\375\240\306?\272\020\273\276\013\231\033>*\223\263?\006\240\307?\306\026\026?C\347E\276\225U\013?\r\214\370?\342u9\277\034\316,\276\323wT?$d\334?\224\3722?\374\212\035\277\350\"\244?\372z\304?6\316f>d\037 \277<\311\270?\247\006\252?M\023v\276\342\344>=0\355p>\320\264\316?P\035\333>\222\225\007?\272\'5?\2100\316?0.\r?_B\365>\344\326\376?\313\326\320?\252\271\010?\276\203\207>\276\344\262?\314\265\272?qq\000?\221\356\317\276\251\336\273?\372\232\257?\013\t\200\276\017}\367<\232\000\034?ur\324?\007\357\313\276\031\3052\275\001\223\252?\356\257\272?\374\376\215\276\364\214\035\277\0241F?\310\227\320?f\277\276>r6\235\275\274V\313?\003&\234?\202\250\303>\367\221\343\276^<\307?\356@\261?\320a>\274\251\211\276<AS)?\036T\366?0\332\333>~\030\331\276]\342\331?b\275\275?\331\262 ?@\336\253>\335^F?\rR\324?bf\007\277f0\016\277\307o\226?d<\254?>A.\277\377\221\031>\024\215R?\026l\265?\200\325Q\276\261m1?\r\275\362?x^\244?|\325&?\020@\212>\330\204\237>\325[\373?\342\037V>\342>b>KG\331?\245\244\275?\320EC\277\373y\007\277\335/U>k\236\313?S\317\372>\317\020\246>=\rh?\271\251\345?\330\365\003\277/\206&\277\364\362\316?\222\317\331?\031t:\277\363\220I>\013\3036?5\266\325?\271\210\277\276\224\275%=\325$X>\211\232\262?H\243B\276\340\235\264>\277\365\314>\264\"\300?\267\233\200\27531\225>\366\242\252?\354\277\326?\006\177o\276\324\0172?\241N\200?\233s\300?\353\252\240>\355c\345\2768\374u?n\213\376?p\352\243\276y\007\024\277\3147\276?\271\211\316?c\013\301<\311!\202\275a\206\'?IK\325?=C\034\277\221\t\250\276\231\360\034?\317\205\325? \323\006?/\024`>\271n\200?\003\321\261?\365**?\200\356\353\276\3561\257?\n\333\265?\303\200\245\276A\267\337\276\257\213\234>\304#\335?\225\'\260>\3605$?\353\037\204?\376\013\360?\226%\312>\263\225\027\275\003y\212?\025\340\353?\002\274A?\033\273\304\274\213\356\016?\r\035\267?\346\005\230\275,I*?\246\372\364?\002\331\301?\351&\261<\217\336\370>\200\200)?\374\307\334?\347\027\025>y!\335\276\221\243\337>\362\226\253?BB4\276a\032*?\006p=?\330f\345?\354NO\277!\221V\276OR\367?\347\305\307?Z\330\363\275:\311\226=\212q\351?\225\r\317?\364\337\027?F\317-\275I\376\342?\035;\254?<J%?\300\010&\277\207\002\261?u\224\257?\216\217\306>\027\201\021\277\030H\315?Q\023\001@o\177n=\355GJ\275\253\371\275?\226\005\301?0\324!\276\2507\273\276\335\265\340?e\306\271?\357\313\201\276\264\000%\277 \256\315?\265n\271?Q\210\014\277\327Q\275>\003d\343?4\235\251?\344\370\241;\220\024\321\275\025\227\366>\005\336\263?\005\247\n\277\351c\276\275\017\372\352?\346!\271?\270x\350\276B#\320>\217e_?\233r\255?\347r\233\276<\244\230\275l\0025?\352x\312?\224\372\352>\266\273\367>f\325\324>K9\353?\226\010\010\277\005Q\027\277$\277\213?\241\365\240?C\305\010\277u9\245>s\325\373?\014\007\264?\316\251,?/\247\274\276\335:\216?1\266\324?\214\3642>\214\330\007\277\335\253\233?w\333\251?\350\276\004\277\305\000\t\276\377D\254?\355\200\335?\032\367\346\275\255\023\367>\267L!?Y\206\270?\214d\'?\006\272\366=)\027\222?\300\223\326?\020>T\276\004\002\325\276\237\211\257?\354\030\315?\212:3\275\033\200\215>)Y\265?m\376\351?\253\321\023?\330D\256\276\363\022\245?\200\236\302?\204\330\351>M\364\271\275\3121~>\352\312\303?\375.\334\276^\362\347>\224\330v?\352\007\271?\265\2075?<\243]>o\031\346?j\240\311?0H\032\276\246\201\037\275R\300t?\213\251\316?\304[+?\361\240Y\276\335\377M?\275\250\375?\332q3>#ga=\310g\300?\327\030\320?\253\347\014\277\242}\364\276S\024J?\031\220\277?c)\232>&\373\013?\242\254\237?\305\214\202?\234\341.?5\177\354=<\274\354?,\234\242?HS\r\276\002\270=\277\213\363\270?\311\344\244?\313\274\035\277\224\274\372\275\207\236\035?vP\305?s*\t>36\224>\034\266\205>\374\307\260?A\363\371\275zUG\276\304\260\250?Z\330\367?\272\371\002?\345&\362\276\300\264x>\373\256\332?\303\364]\276\216\345\235>w\336\371?e6\314?F\231\355\275d\260\002>\302\366\004?0\324\271?\222\315\025?\365,,\277\315F\001?\226\223\276?\036\304N?\277\272\006\277\235\344a?@\301\271?\311\346z\276u\311\020?h\021\302?\240\336\340?o\275\002\277-[#\277\036:\250>Y5\346?S\t\277>\007(\335\276\025\222\311?\264v\251?B\3214?\371\333^>du\263?6\257\332?l?\035\277\035\312 \277\217\234\352?\013\230\314?\310\321\374>\260\305\356>\203\022{>\335(\234?\020\317\222\276\337\342a\275\2327H?L7\305?6\036\354\275z\031\205>\267\207\013?wL\323?`\346\233\275\307H\366\274\206r\"?\300?\305?N\232&>\330\323\256\2756x??-?\326?$\356)?m\2513?\244\206c?\024\316\310?\257\321\222>^f\030\277\351\301\327?\215A\305?V\177\004>z\304\370>\302\351\371?\335\226\306?Z*7?\257Bj>pai?y\220\256?\227\254\212\273\246\200\254\276\241\211\323?$\270\311?*\032+=TT\001\277\325\322\007?\255\212\324?\3171`\2756\037\347>\325\277\255? )\260?<N\301>\341C\021?\353C\001?\332\216\353?j\300\004\277\255m:>NW\207?<.\250?\360\213\013?\000r\242\2753\332\211?uu\357?\364j\270\276\370m\000\277\010\274\"?\310\231\254?\210d\034\277\017\013\031?\303\212A?\030\320\221?\222\007\242=C\001/?\310=\314?\352y\261?\251\365\376\276HO\021?\217\211\227?G\223\315?4\325\027\277\331\356\006\277)_\333>\333\371\300?\254\250=?|\266\n\2779,\250?j4\223?\267C\023\277`\006\243>xl\372?\364\304\337?9\320\037?\255\026X\275\314\253\264>\346\036\310?\031t\002?u\255%?\tw]?\244\302\374?\316\027\333\275\377 \332>\270\246\002?\300\317\310?\342u)?\222\221\013?+[\336?I\205\365?\303\202\023\277\205\006B\276WU\344>\203k\306?\351\rG\276\003}\">\257\230\263?f\022\371?\243x\215>\3268\007?\320\252\330>F\354\305?\007)8= \266\214>\364:\205?\206 \323?7\337\020?\377Z\256\276\310\271,?\027\r\303?U\366\305\276\240\306\035\276\356\034\307?N)\315?\037\023)\277\032\367F>\373\002\027?w/\313?\\<\034\2769B&\276\342\375\347?^M\340?\001\373\310\275\211}6?>9+?\335\014\267?\307\272\270>\200\271\366\275\374\364\367?^\241\301?Q\203\311\276\\!\374\276\034Be>\336\036\334?\225\2668<\320B\006\277\3367\313>\010U\276?\357\311\037\277T;\373>|\330B?\215\317\364?m\034\261\274\373\353\315\276\272\'\345?\216v\322?\210\2016\277F(\226\275\227\320\221?\302/\307?\302\301\366>e\214+?\236~4?\002\363\366?m\252\036?\372b\'\277`\355\343?\202s\276?\327\207\035\277=\360\211>\355\313\237?\205%\254?\236\261\217>KV\025?=\226\213>\354\211\344?U\244\006?\242\354\255\274\277\030\366?n\340\316?2\350\204\272]\303\000?\310;\346?\262\020\305?\007%L;\325\317#?6\323\313?\247\261\251?\237\222\017\277\332\002\272>\224\357\017?\253\006\341?3\214\243\276\216y\035?\345\246\344>Y\303\277?\264\034$?\237\000Z\276\\\246C?hB\347?\016gn\2767\212\034>*?\352?\377\t\262?\310\013\271\276\260\343\317>P\275+?\237s\305?\001\373h=\3272\t>J\275>?\214\276\262?\371j\033\277\027\330\363\276\210%\"?\350\026\270?\306N ?\022/\007?\237\367\202?\247?\251?\t\030\025\277b\020\230>\326,\223?\362\n\352?=_#>\235\205\345\276\221e\264?\216v\310?Kr\024?\342\345\035?n\3256?\335\351\266?3\251!?\307\363\371\276\'\302=?s\274\276?$\265\024?J\267\345=fU\312>]\334\310?\026\332%\277o\177\036?\226$\375?\336\252\303?\242\356\203\276\217\245O>\346\021\364?\031\257\245?\332\222%\277\217\337\333\273\275\337\321?\312Q\356?E\202\251;M\274\223\276\253\036\267?\240\211\254?|\230\021\2775\177\314\275u\216\236>m\032\311?\277\n\260\276\036\212\352>\240\254_?:w\331?\0216\274<rp\341\276\'\231\326>w\237\313?\376\017\350>\222\346\207>\273\200\'?\230\027\302?B\225\272>\204-\226\276>j\026?(\325\300?\340\275#\277p{.?E#\303?\264\"\254?\t\026\207\274\231K\342\276\342c\336?t\265\263?wL\235>\000\256\000?\223\216:?9\235\220?\241\271\306>S\226\301>\302\026\301?\0358\261?w,V\276Wv\r?\331\344\313?<\204\317?\352@F>ms\213>\274\342\316>\363\255\341?\364\026\377>\335x\377\276\0046\206?\273a\307?\335\2632?\031;1>z.\360>\021Q\246?\204\020\330\276\276\372,\277\252\257\260?\260\310\303?\354P]\276e\215*\276$*\266?\267\324\365?\033+\331>\317\024\252\276@\215\340?\002\235\343?n\026\003?&\000\327\276\030\341\247>\235\020\322?\200\235{>|(1>5Ld?&9\252?{\276\316>0d%>\252?\037?:u\333?o\273<\277k\270\010\276\240Zs>\013\267\330?}?u\276e\035\016>{\303\024?L\336\276?=~\037>2\000\234>Q\272\367?\265\027\331?\271\251\001=~\247\211\275\t\223\330>\226z\316?\036n\277\276Q/\230>\365\240\310?\207o\343?\366#\275\276\346\313\263>\216\026\301>\"\034\331?\327Oo\276p\231#?\204\223\256>-\315\311?\350\276\004\277\024\320\020\277"
      }
    }
  }
}
node {
  name: "num_parallel_calls_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "batch_size_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 32
      }
    }
  }
}
node {
  name: "Iterator"
  op: "Iterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 240
          }
          dim {
            size: 320
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorToStringHandle"
  op: "IteratorToStringHandle"
  input: "Iterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "IteratorGetNext"
  op: "IteratorGetNext"
  input: "Iterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 240
          }
          dim {
            size: 320
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 240
          }
          dim {
            size: 320
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "TensorSliceDataset"
  op: "TensorSliceDataset"
  input: "Const"
  input: "tensors/component_1"
  device: "/device:CPU:0"
  attr {
    key: "Toutput_types"
    value {
      list {
        type: DT_STRING
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Iterator"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ParallelMapDataset"
  op: "ParallelMapDataset"
  input: "TensorSliceDataset"
  input: "num_parallel_calls"
  device: "/device:CPU:0"
  attr {
    key: "Targuments"
    value {
      list {
      }
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Iterator"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "tf_map_func_bc3912a3"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 240
          }
          dim {
            size: 320
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "BatchDataset"
  op: "BatchDataset"
  input: "ParallelMapDataset"
  input: "batch_size"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Iterator"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 240
          }
          dim {
            size: 320
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "make_initializer"
  op: "MakeIterator"
  input: "BatchDataset"
  input: "Iterator"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Iterator"
      }
    }
  }
}
node {
  name: "TensorSliceDataset_1"
  op: "TensorSliceDataset"
  input: "Const_1"
  input: "tensors_1/component_1"
  device: "/device:CPU:0"
  attr {
    key: "Toutput_types"
    value {
      list {
        type: DT_STRING
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Iterator"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ParallelMapDataset_1"
  op: "ParallelMapDataset"
  input: "TensorSliceDataset_1"
  input: "num_parallel_calls_1"
  device: "/device:CPU:0"
  attr {
    key: "Targuments"
    value {
      list {
      }
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Iterator"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "tf_map_func_bc3912a3"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 240
          }
          dim {
            size: 320
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "BatchDataset_1"
  op: "BatchDataset"
  input: "ParallelMapDataset_1"
  input: "batch_size_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Iterator"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 240
          }
          dim {
            size: 320
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "make_initializer_1"
  op: "MakeIterator"
  input: "BatchDataset_1"
  input: "Iterator"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Iterator"
      }
    }
  }
}
node {
  name: "CNN/conv2d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "CNN/conv2d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0828078687191
      }
    }
  }
}
node {
  name: "CNN/conv2d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0828078687191
      }
    }
  }
}
node {
  name: "CNN/conv2d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "CNN/conv2d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 30
    }
  }
}
node {
  name: "CNN/conv2d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "CNN/conv2d/kernel/Initializer/random_uniform/max"
  input: "CNN/conv2d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "CNN/conv2d/kernel/Initializer/random_uniform/RandomUniform"
  input: "CNN/conv2d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "CNN/conv2d/kernel/Initializer/random_uniform/mul"
  input: "CNN/conv2d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d/kernel/Assign"
  op: "Assign"
  input: "CNN/conv2d/kernel"
  input: "CNN/conv2d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d/kernel/read"
  op: "Identity"
  input: "CNN/conv2d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "CNN/conv2d/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d/bias/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d/bias/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d/bias/Assign"
  op: "Assign"
  input: "CNN/conv2d/bias"
  input: "CNN/conv2d/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d/bias/read"
  op: "Identity"
  input: "CNN/conv2d/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/conv2d/Conv2D"
  op: "Conv2D"
  input: "IteratorGetNext"
  input: "CNN/conv2d/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 120
          }
          dim {
            size: 160
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "pose_prediction/CNN/conv2d/BiasAdd"
  op: "BiasAdd"
  input: "pose_prediction/CNN/conv2d/Conv2D"
  input: "CNN/conv2d/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 120
          }
          dim {
            size: 160
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "pose_prediction/CNN/max_pooling2d/MaxPool"
  op: "MaxPool"
  input: "pose_prediction/CNN/conv2d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
          dim {
            size: 80
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/LeakyRelu/mul"
  op: "Mul"
  input: "pose_prediction/CNN/LeakyRelu/alpha"
  input: "pose_prediction/CNN/max_pooling2d/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
          dim {
            size: 80
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/LeakyRelu/Maximum"
  op: "Maximum"
  input: "pose_prediction/CNN/LeakyRelu/mul"
  input: "pose_prediction/CNN/max_pooling2d/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
          dim {
            size: 80
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "CNN/conv2d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10206207633
      }
    }
  }
}
node {
  name: "CNN/conv2d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633
      }
    }
  }
}
node {
  name: "CNN/conv2d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "CNN/conv2d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 53
    }
  }
}
node {
  name: "CNN/conv2d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "CNN/conv2d_1/kernel/Initializer/random_uniform/max"
  input: "CNN/conv2d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "CNN/conv2d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "CNN/conv2d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "CNN/conv2d_1/kernel/Initializer/random_uniform/mul"
  input: "CNN/conv2d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_1/kernel/Assign"
  op: "Assign"
  input: "CNN/conv2d_1/kernel"
  input: "CNN/conv2d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_1/kernel/read"
  op: "Identity"
  input: "CNN/conv2d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_1/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "CNN/conv2d_1/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_1/bias/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_1/bias/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_1/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_1/bias/Assign"
  op: "Assign"
  input: "CNN/conv2d_1/bias"
  input: "CNN/conv2d_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_1/bias/read"
  op: "Identity"
  input: "CNN/conv2d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/conv2d_1/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/conv2d_1/Conv2D"
  op: "Conv2D"
  input: "pose_prediction/CNN/LeakyRelu/Maximum"
  input: "CNN/conv2d_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
          dim {
            size: 40
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "pose_prediction/CNN/conv2d_1/BiasAdd"
  op: "BiasAdd"
  input: "pose_prediction/CNN/conv2d_1/Conv2D"
  input: "CNN/conv2d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
          dim {
            size: 40
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "CNN/conv2d_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "CNN/conv2d_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10206207633
      }
    }
  }
}
node {
  name: "CNN/conv2d_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633
      }
    }
  }
}
node {
  name: "CNN/conv2d_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "CNN/conv2d_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 72
    }
  }
}
node {
  name: "CNN/conv2d_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "CNN/conv2d_2/kernel/Initializer/random_uniform/max"
  input: "CNN/conv2d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "CNN/conv2d_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "CNN/conv2d_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "CNN/conv2d_2/kernel/Initializer/random_uniform/mul"
  input: "CNN/conv2d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_2/kernel/Assign"
  op: "Assign"
  input: "CNN/conv2d_2/kernel"
  input: "CNN/conv2d_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_2/kernel/read"
  op: "Identity"
  input: "CNN/conv2d_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_2/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "CNN/conv2d_2/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_2/bias/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_2/bias/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_2/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_2/bias/Assign"
  op: "Assign"
  input: "CNN/conv2d_2/bias"
  input: "CNN/conv2d_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_2/bias/read"
  op: "Identity"
  input: "CNN/conv2d_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/conv2d_2/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/conv2d_2/Conv2D"
  op: "Conv2D"
  input: "pose_prediction/CNN/conv2d_1/BiasAdd"
  input: "CNN/conv2d_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
          dim {
            size: 40
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "pose_prediction/CNN/conv2d_2/BiasAdd"
  op: "BiasAdd"
  input: "pose_prediction/CNN/conv2d_2/Conv2D"
  input: "CNN/conv2d_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
          dim {
            size: 40
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "CNN/conv2d_3/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "CNN/conv2d_3/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.306186228991
      }
    }
  }
}
node {
  name: "CNN/conv2d_3/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.306186228991
      }
    }
  }
}
node {
  name: "CNN/conv2d_3/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "CNN/conv2d_3/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 91
    }
  }
}
node {
  name: "CNN/conv2d_3/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "CNN/conv2d_3/kernel/Initializer/random_uniform/max"
  input: "CNN/conv2d_3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_3/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "CNN/conv2d_3/kernel/Initializer/random_uniform/RandomUniform"
  input: "CNN/conv2d_3/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_3/kernel/Initializer/random_uniform"
  op: "Add"
  input: "CNN/conv2d_3/kernel/Initializer/random_uniform/mul"
  input: "CNN/conv2d_3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_3/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_3/kernel/Assign"
  op: "Assign"
  input: "CNN/conv2d_3/kernel"
  input: "CNN/conv2d_3/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_3/kernel/read"
  op: "Identity"
  input: "CNN/conv2d_3/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_3/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "CNN/conv2d_3/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_3/bias/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_3/bias/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_3/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_3/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_3/bias/Assign"
  op: "Assign"
  input: "CNN/conv2d_3/bias"
  input: "CNN/conv2d_3/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_3/bias/read"
  op: "Identity"
  input: "CNN/conv2d_3/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/conv2d_3/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/conv2d_3/Conv2D"
  op: "Conv2D"
  input: "pose_prediction/CNN/max_pooling2d/MaxPool"
  input: "CNN/conv2d_3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
          dim {
            size: 40
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "pose_prediction/CNN/conv2d_3/BiasAdd"
  op: "BiasAdd"
  input: "pose_prediction/CNN/conv2d_3/Conv2D"
  input: "CNN/conv2d_3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
          dim {
            size: 40
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "pose_prediction/CNN/add"
  op: "Add"
  input: "pose_prediction/CNN/conv2d_2/BiasAdd"
  input: "pose_prediction/CNN/conv2d_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
          dim {
            size: 40
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/LeakyRelu_1/alpha"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/LeakyRelu_1/mul"
  op: "Mul"
  input: "pose_prediction/CNN/LeakyRelu_1/alpha"
  input: "pose_prediction/CNN/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
          dim {
            size: 40
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/LeakyRelu_1/Maximum"
  op: "Maximum"
  input: "pose_prediction/CNN/LeakyRelu_1/mul"
  input: "pose_prediction/CNN/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
          dim {
            size: 40
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_4/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "CNN/conv2d_4/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0833333358169
      }
    }
  }
}
node {
  name: "CNN/conv2d_4/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358169
      }
    }
  }
}
node {
  name: "CNN/conv2d_4/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "CNN/conv2d_4/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 114
    }
  }
}
node {
  name: "CNN/conv2d_4/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "CNN/conv2d_4/kernel/Initializer/random_uniform/max"
  input: "CNN/conv2d_4/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_4/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "CNN/conv2d_4/kernel/Initializer/random_uniform/RandomUniform"
  input: "CNN/conv2d_4/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_4/kernel/Initializer/random_uniform"
  op: "Add"
  input: "CNN/conv2d_4/kernel/Initializer/random_uniform/mul"
  input: "CNN/conv2d_4/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_4/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_4/kernel/Assign"
  op: "Assign"
  input: "CNN/conv2d_4/kernel"
  input: "CNN/conv2d_4/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_4/kernel/read"
  op: "Identity"
  input: "CNN/conv2d_4/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_4/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "CNN/conv2d_4/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_4/bias/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_4/bias/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_4/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_4/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_4/bias/Assign"
  op: "Assign"
  input: "CNN/conv2d_4/bias"
  input: "CNN/conv2d_4/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_4/bias/read"
  op: "Identity"
  input: "CNN/conv2d_4/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/conv2d_4/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/conv2d_4/Conv2D"
  op: "Conv2D"
  input: "pose_prediction/CNN/LeakyRelu_1/Maximum"
  input: "CNN/conv2d_4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
          dim {
            size: 20
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "pose_prediction/CNN/conv2d_4/BiasAdd"
  op: "BiasAdd"
  input: "pose_prediction/CNN/conv2d_4/Conv2D"
  input: "CNN/conv2d_4/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
          dim {
            size: 20
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "CNN/conv2d_5/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "CNN/conv2d_5/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0721687823534
      }
    }
  }
}
node {
  name: "CNN/conv2d_5/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0721687823534
      }
    }
  }
}
node {
  name: "CNN/conv2d_5/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "CNN/conv2d_5/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 133
    }
  }
}
node {
  name: "CNN/conv2d_5/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "CNN/conv2d_5/kernel/Initializer/random_uniform/max"
  input: "CNN/conv2d_5/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_5/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "CNN/conv2d_5/kernel/Initializer/random_uniform/RandomUniform"
  input: "CNN/conv2d_5/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_5/kernel/Initializer/random_uniform"
  op: "Add"
  input: "CNN/conv2d_5/kernel/Initializer/random_uniform/mul"
  input: "CNN/conv2d_5/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_5/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_5/kernel/Assign"
  op: "Assign"
  input: "CNN/conv2d_5/kernel"
  input: "CNN/conv2d_5/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_5/kernel/read"
  op: "Identity"
  input: "CNN/conv2d_5/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_5/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "CNN/conv2d_5/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_5/bias/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_5/bias/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_5/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_5/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_5/bias/Assign"
  op: "Assign"
  input: "CNN/conv2d_5/bias"
  input: "CNN/conv2d_5/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_5/bias/read"
  op: "Identity"
  input: "CNN/conv2d_5/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/conv2d_5/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/conv2d_5/Conv2D"
  op: "Conv2D"
  input: "pose_prediction/CNN/conv2d_4/BiasAdd"
  input: "CNN/conv2d_5/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
          dim {
            size: 20
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "pose_prediction/CNN/conv2d_5/BiasAdd"
  op: "BiasAdd"
  input: "pose_prediction/CNN/conv2d_5/Conv2D"
  input: "CNN/conv2d_5/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
          dim {
            size: 20
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "CNN/conv2d_6/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "CNN/conv2d_6/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.25
      }
    }
  }
}
node {
  name: "CNN/conv2d_6/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "CNN/conv2d_6/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "CNN/conv2d_6/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 152
    }
  }
}
node {
  name: "CNN/conv2d_6/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "CNN/conv2d_6/kernel/Initializer/random_uniform/max"
  input: "CNN/conv2d_6/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_6/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "CNN/conv2d_6/kernel/Initializer/random_uniform/RandomUniform"
  input: "CNN/conv2d_6/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_6/kernel/Initializer/random_uniform"
  op: "Add"
  input: "CNN/conv2d_6/kernel/Initializer/random_uniform/mul"
  input: "CNN/conv2d_6/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_6/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_6/kernel/Assign"
  op: "Assign"
  input: "CNN/conv2d_6/kernel"
  input: "CNN/conv2d_6/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_6/kernel/read"
  op: "Identity"
  input: "CNN/conv2d_6/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_6/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "CNN/conv2d_6/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_6/bias/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_6/bias/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_6/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_6/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_6/bias/Assign"
  op: "Assign"
  input: "CNN/conv2d_6/bias"
  input: "CNN/conv2d_6/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_6/bias/read"
  op: "Identity"
  input: "CNN/conv2d_6/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/conv2d_6/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/conv2d_6/Conv2D"
  op: "Conv2D"
  input: "pose_prediction/CNN/add"
  input: "CNN/conv2d_6/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
          dim {
            size: 20
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "pose_prediction/CNN/conv2d_6/BiasAdd"
  op: "BiasAdd"
  input: "pose_prediction/CNN/conv2d_6/Conv2D"
  input: "CNN/conv2d_6/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
          dim {
            size: 20
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "pose_prediction/CNN/add_1"
  op: "Add"
  input: "pose_prediction/CNN/conv2d_5/BiasAdd"
  input: "pose_prediction/CNN/conv2d_6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
          dim {
            size: 20
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/LeakyRelu_2/alpha"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/LeakyRelu_2/mul"
  op: "Mul"
  input: "pose_prediction/CNN/LeakyRelu_2/alpha"
  input: "pose_prediction/CNN/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
          dim {
            size: 20
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/LeakyRelu_2/Maximum"
  op: "Maximum"
  input: "pose_prediction/CNN/LeakyRelu_2/mul"
  input: "pose_prediction/CNN/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
          dim {
            size: 20
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_7/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "CNN/conv2d_7/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0721687823534
      }
    }
  }
}
node {
  name: "CNN/conv2d_7/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0721687823534
      }
    }
  }
}
node {
  name: "CNN/conv2d_7/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "CNN/conv2d_7/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 175
    }
  }
}
node {
  name: "CNN/conv2d_7/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "CNN/conv2d_7/kernel/Initializer/random_uniform/max"
  input: "CNN/conv2d_7/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_7/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "CNN/conv2d_7/kernel/Initializer/random_uniform/RandomUniform"
  input: "CNN/conv2d_7/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_7/kernel/Initializer/random_uniform"
  op: "Add"
  input: "CNN/conv2d_7/kernel/Initializer/random_uniform/mul"
  input: "CNN/conv2d_7/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_7/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_7/kernel/Assign"
  op: "Assign"
  input: "CNN/conv2d_7/kernel"
  input: "CNN/conv2d_7/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_7/kernel/read"
  op: "Identity"
  input: "CNN/conv2d_7/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_7/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "CNN/conv2d_7/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_7/bias/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_7/bias/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_7/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_7/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_7/bias/Assign"
  op: "Assign"
  input: "CNN/conv2d_7/bias"
  input: "CNN/conv2d_7/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_7/bias/read"
  op: "Identity"
  input: "CNN/conv2d_7/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/conv2d_7/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/conv2d_7/Conv2D"
  op: "Conv2D"
  input: "pose_prediction/CNN/LeakyRelu_2/Maximum"
  input: "CNN/conv2d_7/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "pose_prediction/CNN/conv2d_7/BiasAdd"
  op: "BiasAdd"
  input: "pose_prediction/CNN/conv2d_7/Conv2D"
  input: "CNN/conv2d_7/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "CNN/conv2d_8/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "CNN/conv2d_8/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0721687823534
      }
    }
  }
}
node {
  name: "CNN/conv2d_8/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0721687823534
      }
    }
  }
}
node {
  name: "CNN/conv2d_8/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "CNN/conv2d_8/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 194
    }
  }
}
node {
  name: "CNN/conv2d_8/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "CNN/conv2d_8/kernel/Initializer/random_uniform/max"
  input: "CNN/conv2d_8/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_8/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "CNN/conv2d_8/kernel/Initializer/random_uniform/RandomUniform"
  input: "CNN/conv2d_8/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_8/kernel/Initializer/random_uniform"
  op: "Add"
  input: "CNN/conv2d_8/kernel/Initializer/random_uniform/mul"
  input: "CNN/conv2d_8/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_8/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_8/kernel/Assign"
  op: "Assign"
  input: "CNN/conv2d_8/kernel"
  input: "CNN/conv2d_8/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_8/kernel/read"
  op: "Identity"
  input: "CNN/conv2d_8/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_8/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "CNN/conv2d_8/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_8/bias/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_8/bias/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_8/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_8/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_8/bias/Assign"
  op: "Assign"
  input: "CNN/conv2d_8/bias"
  input: "CNN/conv2d_8/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_8/bias/read"
  op: "Identity"
  input: "CNN/conv2d_8/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/conv2d_8/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/conv2d_8/Conv2D"
  op: "Conv2D"
  input: "pose_prediction/CNN/conv2d_7/BiasAdd"
  input: "CNN/conv2d_8/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "pose_prediction/CNN/conv2d_8/BiasAdd"
  op: "BiasAdd"
  input: "pose_prediction/CNN/conv2d_8/Conv2D"
  input: "CNN/conv2d_8/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "CNN/conv2d_9/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "CNN/conv2d_9/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706
      }
    }
  }
}
node {
  name: "CNN/conv2d_9/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706
      }
    }
  }
}
node {
  name: "CNN/conv2d_9/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "CNN/conv2d_9/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 213
    }
  }
}
node {
  name: "CNN/conv2d_9/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "CNN/conv2d_9/kernel/Initializer/random_uniform/max"
  input: "CNN/conv2d_9/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_9/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "CNN/conv2d_9/kernel/Initializer/random_uniform/RandomUniform"
  input: "CNN/conv2d_9/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_9/kernel/Initializer/random_uniform"
  op: "Add"
  input: "CNN/conv2d_9/kernel/Initializer/random_uniform/mul"
  input: "CNN/conv2d_9/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_9/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_9/kernel/Assign"
  op: "Assign"
  input: "CNN/conv2d_9/kernel"
  input: "CNN/conv2d_9/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_9/kernel/read"
  op: "Identity"
  input: "CNN/conv2d_9/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_9/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "CNN/conv2d_9/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_9/bias/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_9/bias/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_9/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_9/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_9/bias/Assign"
  op: "Assign"
  input: "CNN/conv2d_9/bias"
  input: "CNN/conv2d_9/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_9/bias/read"
  op: "Identity"
  input: "CNN/conv2d_9/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/conv2d_9/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/conv2d_9/Conv2D"
  op: "Conv2D"
  input: "pose_prediction/CNN/add_1"
  input: "CNN/conv2d_9/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "pose_prediction/CNN/conv2d_9/BiasAdd"
  op: "BiasAdd"
  input: "pose_prediction/CNN/conv2d_9/Conv2D"
  input: "CNN/conv2d_9/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "pose_prediction/CNN/add_2"
  op: "Add"
  input: "pose_prediction/CNN/conv2d_8/BiasAdd"
  input: "pose_prediction/CNN/conv2d_9/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/LeakyRelu_3/alpha"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/LeakyRelu_3/mul"
  op: "Mul"
  input: "pose_prediction/CNN/LeakyRelu_3/alpha"
  input: "pose_prediction/CNN/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/LeakyRelu_3/Maximum"
  op: "Maximum"
  input: "pose_prediction/CNN/LeakyRelu_3/mul"
  input: "pose_prediction/CNN/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/flatten/Shape"
  op: "Shape"
  input: "pose_prediction/CNN/LeakyRelu_3/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pose_prediction/CNN/flatten/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/flatten/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/flatten/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/flatten/strided_slice"
  op: "StridedSlice"
  input: "pose_prediction/CNN/flatten/Shape"
  input: "pose_prediction/CNN/flatten/strided_slice/stack"
  input: "pose_prediction/CNN/flatten/strided_slice/stack_1"
  input: "pose_prediction/CNN/flatten/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "pose_prediction/CNN/flatten/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "pose_prediction/CNN/flatten/Reshape/shape"
  op: "Pack"
  input: "pose_prediction/CNN/flatten/strided_slice"
  input: "pose_prediction/CNN/flatten/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "pose_prediction/CNN/flatten/Reshape"
  op: "Reshape"
  input: "pose_prediction/CNN/LeakyRelu_3/Maximum"
  input: "pose_prediction/CNN/flatten/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5120
          }
        }
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\024\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0338126122952
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0338126122952
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Mean_Prediction/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 244
    }
  }
}
node {
  name: "Mean_Prediction/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Mean_Prediction/dense/kernel/Initializer/random_uniform/max"
  input: "Mean_Prediction/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Mean_Prediction/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "Mean_Prediction/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Mean_Prediction/dense/kernel/Initializer/random_uniform/mul"
  input: "Mean_Prediction/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5120
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Mean_Prediction/dense/kernel/Assign"
  op: "Assign"
  input: "Mean_Prediction/dense/kernel"
  input: "Mean_Prediction/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Mean_Prediction/dense/kernel/read"
  op: "Identity"
  input: "Mean_Prediction/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense/bias/Initializer/zeros"
  op: "Fill"
  input: "Mean_Prediction/dense/bias/Initializer/zeros/shape_as_tensor"
  input: "Mean_Prediction/dense/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Mean_Prediction/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Mean_Prediction/dense/bias/Assign"
  op: "Assign"
  input: "Mean_Prediction/dense/bias"
  input: "Mean_Prediction/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Mean_Prediction/dense/bias/read"
  op: "Identity"
  input: "Mean_Prediction/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dense/MatMul"
  op: "MatMul"
  input: "pose_prediction/CNN/flatten/Reshape"
  input: "Mean_Prediction/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dense/BiasAdd"
  op: "BiasAdd"
  input: "pose_prediction/Mean_Prediction/dense/MatMul"
  input: "Mean_Prediction/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout/cond/Switch"
  op: "Switch"
  input: "is_training"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout/cond/switch_t"
  op: "Identity"
  input: "pose_prediction/Mean_Prediction/dropout/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout/cond/switch_f"
  op: "Identity"
  input: "pose_prediction/Mean_Prediction/dropout/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout/cond/pred_id"
  op: "Identity"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout/cond/dropout/keep_prob"
  op: "Const"
  input: "^pose_prediction/Mean_Prediction/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout/cond/dropout/Shape"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "pose_prediction/Mean_Prediction/dense/BiasAdd"
  input: "pose_prediction/Mean_Prediction/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose_prediction/Mean_Prediction/dense/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^pose_prediction/Mean_Prediction/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^pose_prediction/Mean_Prediction/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "pose_prediction/Mean_Prediction/dropout/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 268
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "pose_prediction/Mean_Prediction/dropout/cond/dropout/random_uniform/max"
  input: "pose_prediction/Mean_Prediction/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "pose_prediction/Mean_Prediction/dropout/cond/dropout/random_uniform/RandomUniform"
  input: "pose_prediction/Mean_Prediction/dropout/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout/cond/dropout/random_uniform"
  op: "Add"
  input: "pose_prediction/Mean_Prediction/dropout/cond/dropout/random_uniform/mul"
  input: "pose_prediction/Mean_Prediction/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout/cond/dropout/add"
  op: "Add"
  input: "pose_prediction/Mean_Prediction/dropout/cond/dropout/keep_prob"
  input: "pose_prediction/Mean_Prediction/dropout/cond/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout/cond/dropout/Floor"
  op: "Floor"
  input: "pose_prediction/Mean_Prediction/dropout/cond/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout/cond/dropout/div"
  op: "RealDiv"
  input: "pose_prediction/Mean_Prediction/dropout/cond/dropout/Shape/Switch:1"
  input: "pose_prediction/Mean_Prediction/dropout/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout/cond/dropout/mul"
  op: "Mul"
  input: "pose_prediction/Mean_Prediction/dropout/cond/dropout/div"
  input: "pose_prediction/Mean_Prediction/dropout/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout/cond/Identity"
  op: "Identity"
  input: "pose_prediction/Mean_Prediction/dropout/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout/cond/Identity/Switch"
  op: "Switch"
  input: "pose_prediction/Mean_Prediction/dense/BiasAdd"
  input: "pose_prediction/Mean_Prediction/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose_prediction/Mean_Prediction/dense/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout/cond/Merge"
  op: "Merge"
  input: "pose_prediction/Mean_Prediction/dropout/cond/Identity"
  input: "pose_prediction/Mean_Prediction/dropout/cond/dropout/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/LeakyRelu/mul"
  op: "Mul"
  input: "pose_prediction/Mean_Prediction/LeakyRelu/alpha"
  input: "pose_prediction/Mean_Prediction/dropout/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/LeakyRelu/Maximum"
  op: "Maximum"
  input: "pose_prediction/Mean_Prediction/LeakyRelu/mul"
  input: "pose_prediction/Mean_Prediction/dropout/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.176776692271
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.176776692271
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Mean_Prediction/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 285
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Mean_Prediction/dense_1/kernel/Initializer/random_uniform/max"
  input: "Mean_Prediction/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Mean_Prediction/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "Mean_Prediction/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Mean_Prediction/dense_1/kernel/Initializer/random_uniform/mul"
  input: "Mean_Prediction/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/kernel/Assign"
  op: "Assign"
  input: "Mean_Prediction/dense_1/kernel"
  input: "Mean_Prediction/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/kernel/read"
  op: "Identity"
  input: "Mean_Prediction/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/bias/Initializer/zeros"
  op: "Fill"
  input: "Mean_Prediction/dense_1/bias/Initializer/zeros/shape_as_tensor"
  input: "Mean_Prediction/dense_1/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/bias/Assign"
  op: "Assign"
  input: "Mean_Prediction/dense_1/bias"
  input: "Mean_Prediction/dense_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/bias/read"
  op: "Identity"
  input: "Mean_Prediction/dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dense_1/MatMul"
  op: "MatMul"
  input: "pose_prediction/Mean_Prediction/LeakyRelu/Maximum"
  input: "Mean_Prediction/dense_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dense_1/BiasAdd"
  op: "BiasAdd"
  input: "pose_prediction/Mean_Prediction/dense_1/MatMul"
  input: "Mean_Prediction/dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_1/cond/Switch"
  op: "Switch"
  input: "is_training"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_1/cond/switch_t"
  op: "Identity"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_1/cond/switch_f"
  op: "Identity"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_1/cond/pred_id"
  op: "Identity"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/keep_prob"
  op: "Const"
  input: "^pose_prediction/Mean_Prediction/dropout_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/Shape"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "pose_prediction/Mean_Prediction/dense_1/BiasAdd"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose_prediction/Mean_Prediction/dense_1/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^pose_prediction/Mean_Prediction/dropout_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^pose_prediction/Mean_Prediction/dropout_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 309
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/random_uniform/max"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/random_uniform/RandomUniform"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/random_uniform"
  op: "Add"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/random_uniform/mul"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/add"
  op: "Add"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/keep_prob"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/Floor"
  op: "Floor"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div"
  op: "RealDiv"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/Shape/Switch:1"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul"
  op: "Mul"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_1/cond/Identity"
  op: "Identity"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_1/cond/Identity/Switch"
  op: "Switch"
  input: "pose_prediction/Mean_Prediction/dense_1/BiasAdd"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose_prediction/Mean_Prediction/dense_1/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_1/cond/Merge"
  op: "Merge"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/Identity"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/LeakyRelu_1/alpha"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/LeakyRelu_1/mul"
  op: "Mul"
  input: "pose_prediction/Mean_Prediction/LeakyRelu_1/alpha"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum"
  op: "Maximum"
  input: "pose_prediction/Mean_Prediction/LeakyRelu_1/mul"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.25
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Mean_Prediction/dense_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 326
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Mean_Prediction/dense_2/kernel/Initializer/random_uniform/max"
  input: "Mean_Prediction/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Mean_Prediction/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "Mean_Prediction/dense_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Mean_Prediction/dense_2/kernel/Initializer/random_uniform/mul"
  input: "Mean_Prediction/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/kernel/Assign"
  op: "Assign"
  input: "Mean_Prediction/dense_2/kernel"
  input: "Mean_Prediction/dense_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/kernel/read"
  op: "Identity"
  input: "Mean_Prediction/dense_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/bias/Initializer/zeros"
  op: "Fill"
  input: "Mean_Prediction/dense_2/bias/Initializer/zeros/shape_as_tensor"
  input: "Mean_Prediction/dense_2/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/bias/Assign"
  op: "Assign"
  input: "Mean_Prediction/dense_2/bias"
  input: "Mean_Prediction/dense_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/bias/read"
  op: "Identity"
  input: "Mean_Prediction/dense_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dense_2/MatMul"
  op: "MatMul"
  input: "pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum"
  input: "Mean_Prediction/dense_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dense_2/BiasAdd"
  op: "BiasAdd"
  input: "pose_prediction/Mean_Prediction/dense_2/MatMul"
  input: "Mean_Prediction/dense_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_2/cond/Switch"
  op: "Switch"
  input: "is_training"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_2/cond/switch_t"
  op: "Identity"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_2/cond/switch_f"
  op: "Identity"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_2/cond/pred_id"
  op: "Identity"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/keep_prob"
  op: "Const"
  input: "^pose_prediction/Mean_Prediction/dropout_2/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/Shape"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "pose_prediction/Mean_Prediction/dense_2/BiasAdd"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose_prediction/Mean_Prediction/dense_2/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^pose_prediction/Mean_Prediction/dropout_2/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^pose_prediction/Mean_Prediction/dropout_2/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 350
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/random_uniform/max"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/random_uniform/RandomUniform"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/random_uniform"
  op: "Add"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/random_uniform/mul"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/add"
  op: "Add"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/keep_prob"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/Floor"
  op: "Floor"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div"
  op: "RealDiv"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/Shape/Switch:1"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul"
  op: "Mul"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_2/cond/Identity"
  op: "Identity"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_2/cond/Identity/Switch"
  op: "Switch"
  input: "pose_prediction/Mean_Prediction/dense_2/BiasAdd"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose_prediction/Mean_Prediction/dense_2/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dropout_2/cond/Merge"
  op: "Merge"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/Identity"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.408248305321
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.408248305321
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Mean_Prediction/dense_3/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 364
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Mean_Prediction/dense_3/kernel/Initializer/random_uniform/max"
  input: "Mean_Prediction/dense_3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Mean_Prediction/dense_3/kernel/Initializer/random_uniform/RandomUniform"
  input: "Mean_Prediction/dense_3/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Mean_Prediction/dense_3/kernel/Initializer/random_uniform/mul"
  input: "Mean_Prediction/dense_3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/kernel/Assign"
  op: "Assign"
  input: "Mean_Prediction/dense_3/kernel"
  input: "Mean_Prediction/dense_3/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/kernel/read"
  op: "Identity"
  input: "Mean_Prediction/dense_3/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/bias/Initializer/zeros"
  op: "Fill"
  input: "Mean_Prediction/dense_3/bias/Initializer/zeros/shape_as_tensor"
  input: "Mean_Prediction/dense_3/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/bias/Assign"
  op: "Assign"
  input: "Mean_Prediction/dense_3/bias"
  input: "Mean_Prediction/dense_3/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/bias/read"
  op: "Identity"
  input: "Mean_Prediction/dense_3/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dense_3/MatMul"
  op: "MatMul"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/Merge"
  input: "Mean_Prediction/dense_3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "pose_prediction/Mean_Prediction/dense_3/BiasAdd"
  op: "BiasAdd"
  input: "pose_prediction/Mean_Prediction/dense_3/MatMul"
  input: "Mean_Prediction/dense_3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Variance_Prediction/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\024\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0338126122952
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0338126122952
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Variance_Prediction/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 382
    }
  }
}
node {
  name: "Variance_Prediction/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Variance_Prediction/dense/kernel/Initializer/random_uniform/max"
  input: "Variance_Prediction/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Variance_Prediction/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "Variance_Prediction/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Variance_Prediction/dense/kernel/Initializer/random_uniform/mul"
  input: "Variance_Prediction/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5120
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variance_Prediction/dense/kernel/Assign"
  op: "Assign"
  input: "Variance_Prediction/dense/kernel"
  input: "Variance_Prediction/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variance_Prediction/dense/kernel/read"
  op: "Identity"
  input: "Variance_Prediction/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense/bias/Initializer/zeros"
  op: "Fill"
  input: "Variance_Prediction/dense/bias/Initializer/zeros/shape_as_tensor"
  input: "Variance_Prediction/dense/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variance_Prediction/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variance_Prediction/dense/bias/Assign"
  op: "Assign"
  input: "Variance_Prediction/dense/bias"
  input: "Variance_Prediction/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variance_Prediction/dense/bias/read"
  op: "Identity"
  input: "Variance_Prediction/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dense/MatMul"
  op: "MatMul"
  input: "pose_prediction/CNN/flatten/Reshape"
  input: "Variance_Prediction/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dense/BiasAdd"
  op: "BiasAdd"
  input: "pose_prediction/Variance_Prediction/dense/MatMul"
  input: "Variance_Prediction/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout/cond/Switch"
  op: "Switch"
  input: "is_training"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout/cond/switch_t"
  op: "Identity"
  input: "pose_prediction/Variance_Prediction/dropout/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout/cond/switch_f"
  op: "Identity"
  input: "pose_prediction/Variance_Prediction/dropout/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout/cond/pred_id"
  op: "Identity"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout/cond/dropout/keep_prob"
  op: "Const"
  input: "^pose_prediction/Variance_Prediction/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout/cond/dropout/Shape"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "pose_prediction/Variance_Prediction/dense/BiasAdd"
  input: "pose_prediction/Variance_Prediction/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose_prediction/Variance_Prediction/dense/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^pose_prediction/Variance_Prediction/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^pose_prediction/Variance_Prediction/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "pose_prediction/Variance_Prediction/dropout/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 406
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "pose_prediction/Variance_Prediction/dropout/cond/dropout/random_uniform/max"
  input: "pose_prediction/Variance_Prediction/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "pose_prediction/Variance_Prediction/dropout/cond/dropout/random_uniform/RandomUniform"
  input: "pose_prediction/Variance_Prediction/dropout/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout/cond/dropout/random_uniform"
  op: "Add"
  input: "pose_prediction/Variance_Prediction/dropout/cond/dropout/random_uniform/mul"
  input: "pose_prediction/Variance_Prediction/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout/cond/dropout/add"
  op: "Add"
  input: "pose_prediction/Variance_Prediction/dropout/cond/dropout/keep_prob"
  input: "pose_prediction/Variance_Prediction/dropout/cond/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout/cond/dropout/Floor"
  op: "Floor"
  input: "pose_prediction/Variance_Prediction/dropout/cond/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout/cond/dropout/div"
  op: "RealDiv"
  input: "pose_prediction/Variance_Prediction/dropout/cond/dropout/Shape/Switch:1"
  input: "pose_prediction/Variance_Prediction/dropout/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout/cond/dropout/mul"
  op: "Mul"
  input: "pose_prediction/Variance_Prediction/dropout/cond/dropout/div"
  input: "pose_prediction/Variance_Prediction/dropout/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout/cond/Identity"
  op: "Identity"
  input: "pose_prediction/Variance_Prediction/dropout/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout/cond/Identity/Switch"
  op: "Switch"
  input: "pose_prediction/Variance_Prediction/dense/BiasAdd"
  input: "pose_prediction/Variance_Prediction/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose_prediction/Variance_Prediction/dense/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout/cond/Merge"
  op: "Merge"
  input: "pose_prediction/Variance_Prediction/dropout/cond/Identity"
  input: "pose_prediction/Variance_Prediction/dropout/cond/dropout/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/LeakyRelu/alpha"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/LeakyRelu/mul"
  op: "Mul"
  input: "pose_prediction/Variance_Prediction/LeakyRelu/alpha"
  input: "pose_prediction/Variance_Prediction/dropout/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/LeakyRelu/Maximum"
  op: "Maximum"
  input: "pose_prediction/Variance_Prediction/LeakyRelu/mul"
  input: "pose_prediction/Variance_Prediction/dropout/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.176776692271
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.176776692271
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Variance_Prediction/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 423
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Variance_Prediction/dense_1/kernel/Initializer/random_uniform/max"
  input: "Variance_Prediction/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Variance_Prediction/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "Variance_Prediction/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Variance_Prediction/dense_1/kernel/Initializer/random_uniform/mul"
  input: "Variance_Prediction/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/kernel/Assign"
  op: "Assign"
  input: "Variance_Prediction/dense_1/kernel"
  input: "Variance_Prediction/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/kernel/read"
  op: "Identity"
  input: "Variance_Prediction/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/bias/Initializer/zeros"
  op: "Fill"
  input: "Variance_Prediction/dense_1/bias/Initializer/zeros/shape_as_tensor"
  input: "Variance_Prediction/dense_1/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/bias/Assign"
  op: "Assign"
  input: "Variance_Prediction/dense_1/bias"
  input: "Variance_Prediction/dense_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/bias/read"
  op: "Identity"
  input: "Variance_Prediction/dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dense_1/MatMul"
  op: "MatMul"
  input: "pose_prediction/Variance_Prediction/LeakyRelu/Maximum"
  input: "Variance_Prediction/dense_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dense_1/BiasAdd"
  op: "BiasAdd"
  input: "pose_prediction/Variance_Prediction/dense_1/MatMul"
  input: "Variance_Prediction/dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_1/cond/Switch"
  op: "Switch"
  input: "is_training"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_1/cond/switch_t"
  op: "Identity"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_1/cond/switch_f"
  op: "Identity"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_1/cond/pred_id"
  op: "Identity"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/keep_prob"
  op: "Const"
  input: "^pose_prediction/Variance_Prediction/dropout_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/Shape"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "pose_prediction/Variance_Prediction/dense_1/BiasAdd"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose_prediction/Variance_Prediction/dense_1/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^pose_prediction/Variance_Prediction/dropout_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^pose_prediction/Variance_Prediction/dropout_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 447
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/random_uniform/max"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/random_uniform/RandomUniform"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/random_uniform"
  op: "Add"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/random_uniform/mul"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/add"
  op: "Add"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/keep_prob"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/Floor"
  op: "Floor"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div"
  op: "RealDiv"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/Shape/Switch:1"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul"
  op: "Mul"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_1/cond/Identity"
  op: "Identity"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_1/cond/Identity/Switch"
  op: "Switch"
  input: "pose_prediction/Variance_Prediction/dense_1/BiasAdd"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose_prediction/Variance_Prediction/dense_1/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_1/cond/Merge"
  op: "Merge"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/Identity"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/LeakyRelu_1/alpha"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/LeakyRelu_1/mul"
  op: "Mul"
  input: "pose_prediction/Variance_Prediction/LeakyRelu_1/alpha"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum"
  op: "Maximum"
  input: "pose_prediction/Variance_Prediction/LeakyRelu_1/mul"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.25
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Variance_Prediction/dense_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 464
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Variance_Prediction/dense_2/kernel/Initializer/random_uniform/max"
  input: "Variance_Prediction/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Variance_Prediction/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "Variance_Prediction/dense_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Variance_Prediction/dense_2/kernel/Initializer/random_uniform/mul"
  input: "Variance_Prediction/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/kernel/Assign"
  op: "Assign"
  input: "Variance_Prediction/dense_2/kernel"
  input: "Variance_Prediction/dense_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/kernel/read"
  op: "Identity"
  input: "Variance_Prediction/dense_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/bias/Initializer/zeros"
  op: "Fill"
  input: "Variance_Prediction/dense_2/bias/Initializer/zeros/shape_as_tensor"
  input: "Variance_Prediction/dense_2/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/bias/Assign"
  op: "Assign"
  input: "Variance_Prediction/dense_2/bias"
  input: "Variance_Prediction/dense_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/bias/read"
  op: "Identity"
  input: "Variance_Prediction/dense_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dense_2/MatMul"
  op: "MatMul"
  input: "pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum"
  input: "Variance_Prediction/dense_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dense_2/BiasAdd"
  op: "BiasAdd"
  input: "pose_prediction/Variance_Prediction/dense_2/MatMul"
  input: "Variance_Prediction/dense_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_2/cond/Switch"
  op: "Switch"
  input: "is_training"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_2/cond/switch_t"
  op: "Identity"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_2/cond/switch_f"
  op: "Identity"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_2/cond/pred_id"
  op: "Identity"
  input: "is_training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/keep_prob"
  op: "Const"
  input: "^pose_prediction/Variance_Prediction/dropout_2/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/Shape"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "pose_prediction/Variance_Prediction/dense_2/BiasAdd"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose_prediction/Variance_Prediction/dense_2/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^pose_prediction/Variance_Prediction/dropout_2/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^pose_prediction/Variance_Prediction/dropout_2/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 488
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/random_uniform/max"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/random_uniform/RandomUniform"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/random_uniform"
  op: "Add"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/random_uniform/mul"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/add"
  op: "Add"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/keep_prob"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/Floor"
  op: "Floor"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div"
  op: "RealDiv"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/Shape/Switch:1"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul"
  op: "Mul"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_2/cond/Identity"
  op: "Identity"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_2/cond/Identity/Switch"
  op: "Switch"
  input: "pose_prediction/Variance_Prediction/dense_2/BiasAdd"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose_prediction/Variance_Prediction/dense_2/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dropout_2/cond/Merge"
  op: "Merge"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/Identity"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.408248305321
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.408248305321
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Variance_Prediction/dense_3/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 8964
    }
  }
  attr {
    key: "seed2"
    value {
      i: 502
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Variance_Prediction/dense_3/kernel/Initializer/random_uniform/max"
  input: "Variance_Prediction/dense_3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Variance_Prediction/dense_3/kernel/Initializer/random_uniform/RandomUniform"
  input: "Variance_Prediction/dense_3/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Variance_Prediction/dense_3/kernel/Initializer/random_uniform/mul"
  input: "Variance_Prediction/dense_3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/kernel/Assign"
  op: "Assign"
  input: "Variance_Prediction/dense_3/kernel"
  input: "Variance_Prediction/dense_3/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/kernel/read"
  op: "Identity"
  input: "Variance_Prediction/dense_3/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/bias/Initializer/zeros"
  op: "Fill"
  input: "Variance_Prediction/dense_3/bias/Initializer/zeros/shape_as_tensor"
  input: "Variance_Prediction/dense_3/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/bias/Assign"
  op: "Assign"
  input: "Variance_Prediction/dense_3/bias"
  input: "Variance_Prediction/dense_3/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/bias/read"
  op: "Identity"
  input: "Variance_Prediction/dense_3/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dense_3/MatMul"
  op: "MatMul"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/Merge"
  input: "Variance_Prediction/dense_3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/dense_3/BiasAdd"
  op: "BiasAdd"
  input: "pose_prediction/Variance_Prediction/dense_3/MatMul"
  input: "Variance_Prediction/dense_3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/Exp"
  op: "Exp"
  input: "pose_prediction/Variance_Prediction/dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/Shape"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/strided_slice"
  op: "StridedSlice"
  input: "pose_prediction/Variance_Prediction/Shape"
  input: "pose_prediction/Variance_Prediction/strided_slice/stack"
  input: "pose_prediction/Variance_Prediction/strided_slice/stack_1"
  input: "pose_prediction/Variance_Prediction/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/Slice/size/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/Slice/size"
  op: "Pack"
  input: "pose_prediction/Variance_Prediction/strided_slice"
  input: "pose_prediction/Variance_Prediction/Slice/size/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/Slice"
  op: "Slice"
  input: "pose_prediction/Variance_Prediction/Exp"
  input: "pose_prediction/Variance_Prediction/Slice/begin"
  input: "pose_prediction/Variance_Prediction/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/Shape_1"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/strided_slice_1"
  op: "StridedSlice"
  input: "pose_prediction/Variance_Prediction/Shape_1"
  input: "pose_prediction/Variance_Prediction/strided_slice_1/stack"
  input: "pose_prediction/Variance_Prediction/strided_slice_1/stack_1"
  input: "pose_prediction/Variance_Prediction/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/Slice_1/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/Slice_1/size/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/Slice_1/size"
  op: "Pack"
  input: "pose_prediction/Variance_Prediction/strided_slice_1"
  input: "pose_prediction/Variance_Prediction/Slice_1/size/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/Slice_1"
  op: "Slice"
  input: "pose_prediction/Variance_Prediction/Exp"
  input: "pose_prediction/Variance_Prediction/Slice_1/begin"
  input: "pose_prediction/Variance_Prediction/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/Shape_2"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/strided_slice_2"
  op: "StridedSlice"
  input: "pose_prediction/Variance_Prediction/Shape_2"
  input: "pose_prediction/Variance_Prediction/strided_slice_2/stack"
  input: "pose_prediction/Variance_Prediction/strided_slice_2/stack_1"
  input: "pose_prediction/Variance_Prediction/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/Slice_2/size/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/Slice_2/size"
  op: "Pack"
  input: "pose_prediction/Variance_Prediction/strided_slice_2"
  input: "pose_prediction/Variance_Prediction/Slice_2/size/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/Slice_2"
  op: "Slice"
  input: "pose_prediction/Variance_Prediction/Exp"
  input: "pose_prediction/Variance_Prediction/Slice_2/begin"
  input: "pose_prediction/Variance_Prediction/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/Shape_3"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00499999988824
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/Fill"
  op: "Fill"
  input: "pose_prediction/Variance_Prediction/Shape_3"
  input: "pose_prediction/Variance_Prediction/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/Shape_4"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/Fill_1/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/Fill_1"
  op: "Fill"
  input: "pose_prediction/Variance_Prediction/Shape_4"
  input: "pose_prediction/Variance_Prediction/Fill_1/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/Shape_5"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/Fill_2/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.170000001788
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/Fill_2"
  op: "Fill"
  input: "pose_prediction/Variance_Prediction/Shape_5"
  input: "pose_prediction/Variance_Prediction/Fill_2/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/add"
  op: "Add"
  input: "pose_prediction/Variance_Prediction/Slice"
  input: "pose_prediction/Variance_Prediction/Fill"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/add_1"
  op: "Add"
  input: "pose_prediction/Variance_Prediction/Slice_1"
  input: "pose_prediction/Variance_Prediction/Fill_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/add_2"
  op: "Add"
  input: "pose_prediction/Variance_Prediction/Slice_2"
  input: "pose_prediction/Variance_Prediction/Fill_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose_prediction/Variance_Prediction/concat"
  op: "ConcatV2"
  input: "pose_prediction/Variance_Prediction/add"
  input: "pose_prediction/Variance_Prediction/add_1"
  input: "pose_prediction/Variance_Prediction/add_2"
  input: "pose_prediction/Variance_Prediction/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose_prediction/concat"
  op: "ConcatV2"
  input: "pose_prediction/Mean_Prediction/dense_3/BiasAdd"
  input: "pose_prediction/Variance_Prediction/concat"
  input: "pose_prediction/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "pose_prediction/final_prediction"
  op: "Identity"
  input: "pose_prediction/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice"
  op: "StridedSlice"
  input: "pose_prediction/final_prediction"
  input: "compute_loss/strided_slice/stack"
  input: "compute_loss/strided_slice/stack_1"
  input: "compute_loss/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "compute_loss/assert_greater/Greater"
  op: "Greater"
  input: "compute_loss/strided_slice"
  input: "compute_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/assert_greater/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/assert_greater/All"
  op: "All"
  input: "compute_loss/assert_greater/Greater"
  input: "compute_loss/assert_greater/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "compute_loss/assert_greater/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "compute_loss/assert_greater/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x > y did not hold element-wise:x (compute_loss/strided_slice:0) = "
      }
    }
  }
}
node {
  name: "compute_loss/assert_greater/Assert/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (compute_loss/Const:0) = "
      }
    }
  }
}
node {
  name: "compute_loss/assert_greater/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "compute_loss/assert_greater/All"
  input: "compute_loss/assert_greater/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "compute_loss/assert_greater/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "compute_loss/assert_greater/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "compute_loss/assert_greater/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "compute_loss/assert_greater/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "compute_loss/assert_greater/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "compute_loss/assert_greater/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "compute_loss/assert_greater/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^compute_loss/assert_greater/Assert/AssertGuard/switch_t"
}
node {
  name: "compute_loss/assert_greater/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "compute_loss/assert_greater/Assert/AssertGuard/switch_t"
  input: "^compute_loss/assert_greater/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@compute_loss/assert_greater/Assert/AssertGuard/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "compute_loss/assert_greater/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^compute_loss/assert_greater/Assert/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "compute_loss/assert_greater/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^compute_loss/assert_greater/Assert/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x > y did not hold element-wise:x (compute_loss/strided_slice:0) = "
      }
    }
  }
}
node {
  name: "compute_loss/assert_greater/Assert/AssertGuard/Assert/data_3"
  op: "Const"
  input: "^compute_loss/assert_greater/Assert/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (compute_loss/Const:0) = "
      }
    }
  }
}
node {
  name: "compute_loss/assert_greater/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "compute_loss/assert_greater/Assert/AssertGuard/Assert/Switch"
  input: "compute_loss/assert_greater/Assert/AssertGuard/Assert/data_0"
  input: "compute_loss/assert_greater/Assert/AssertGuard/Assert/data_1"
  input: "compute_loss/assert_greater/Assert/AssertGuard/Assert/Switch_1"
  input: "compute_loss/assert_greater/Assert/AssertGuard/Assert/data_3"
  input: "compute_loss/assert_greater/Assert/AssertGuard/Assert/Switch_2"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_FLOAT
        type: DT_STRING
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "compute_loss/assert_greater/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "compute_loss/assert_greater/All"
  input: "compute_loss/assert_greater/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@compute_loss/assert_greater/All"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "compute_loss/assert_greater/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "compute_loss/strided_slice"
  input: "compute_loss/assert_greater/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@compute_loss/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/assert_greater/Assert/AssertGuard/Assert/Switch_2"
  op: "Switch"
  input: "compute_loss/Const"
  input: "compute_loss/assert_greater/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@compute_loss/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/assert_greater/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "compute_loss/assert_greater/Assert/AssertGuard/switch_f"
  input: "^compute_loss/assert_greater/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@compute_loss/assert_greater/Assert/AssertGuard/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "compute_loss/assert_greater/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "compute_loss/assert_greater/Assert/AssertGuard/control_dependency_1"
  input: "compute_loss/assert_greater/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_1"
  op: "StridedSlice"
  input: "pose_prediction/final_prediction"
  input: "compute_loss/strided_slice_1/stack"
  input: "compute_loss/strided_slice_1/stack_1"
  input: "compute_loss/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "compute_loss/Log"
  op: "Log"
  input: "compute_loss/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/sub"
  op: "Sub"
  input: "IteratorGetNext:1"
  input: "compute_loss/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/Square"
  op: "Square"
  input: "compute_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/div"
  op: "RealDiv"
  input: "compute_loss/Square"
  input: "compute_loss/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/add"
  op: "Add"
  input: "compute_loss/Log"
  input: "compute_loss/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/Sum"
  op: "Sum"
  input: "compute_loss/add"
  input: "compute_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/SquaredDifference"
  op: "SquaredDifference"
  input: "compute_loss/strided_slice_1"
  input: "IteratorGetNext:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/assert_broadcastable/values/shape"
  op: "Shape"
  input: "compute_loss/mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "compute_loss/mean_squared_error/ToFloat_3/x"
  op: "Const"
  input: "^compute_loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/Mul"
  op: "Mul"
  input: "compute_loss/mean_squared_error/SquaredDifference"
  input: "compute_loss/mean_squared_error/ToFloat_3/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/Const"
  op: "Const"
  input: "^compute_loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/Sum"
  op: "Sum"
  input: "compute_loss/mean_squared_error/Mul"
  input: "compute_loss/mean_squared_error/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/num_present/Equal/y"
  op: "Const"
  input: "^compute_loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/num_present/Equal"
  op: "Equal"
  input: "compute_loss/mean_squared_error/ToFloat_3/x"
  input: "compute_loss/mean_squared_error/num_present/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/num_present/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^compute_loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/num_present/zeros_like/Const"
  op: "Const"
  input: "^compute_loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/num_present/zeros_like"
  op: "Fill"
  input: "compute_loss/mean_squared_error/num_present/zeros_like/shape_as_tensor"
  input: "compute_loss/mean_squared_error/num_present/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/num_present/ones_like/Shape"
  op: "Const"
  input: "^compute_loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/num_present/ones_like/Const"
  op: "Const"
  input: "^compute_loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/num_present/ones_like"
  op: "Fill"
  input: "compute_loss/mean_squared_error/num_present/ones_like/Shape"
  input: "compute_loss/mean_squared_error/num_present/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/num_present/Select"
  op: "Select"
  input: "compute_loss/mean_squared_error/num_present/Equal"
  input: "compute_loss/mean_squared_error/num_present/zeros_like"
  input: "compute_loss/mean_squared_error/num_present/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^compute_loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^compute_loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/num_present/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "compute_loss/mean_squared_error/SquaredDifference"
  input: "^compute_loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/num_present/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^compute_loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^compute_loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
}
node {
  name: "compute_loss/mean_squared_error/num_present/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "compute_loss/mean_squared_error/SquaredDifference"
  input: "^compute_loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  input: "^compute_loss/mean_squared_error/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/num_present/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^compute_loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  input: "^compute_loss/mean_squared_error/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/num_present/broadcast_weights/ones_like"
  op: "Fill"
  input: "compute_loss/mean_squared_error/num_present/broadcast_weights/ones_like/Shape"
  input: "compute_loss/mean_squared_error/num_present/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/num_present/broadcast_weights"
  op: "Mul"
  input: "compute_loss/mean_squared_error/num_present/Select"
  input: "compute_loss/mean_squared_error/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/num_present/Const"
  op: "Const"
  input: "^compute_loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/num_present"
  op: "Sum"
  input: "compute_loss/mean_squared_error/num_present/broadcast_weights"
  input: "compute_loss/mean_squared_error/num_present/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/Const_1"
  op: "Const"
  input: "^compute_loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/Sum_1"
  op: "Sum"
  input: "compute_loss/mean_squared_error/Sum"
  input: "compute_loss/mean_squared_error/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/Greater/y"
  op: "Const"
  input: "^compute_loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/Greater"
  op: "Greater"
  input: "compute_loss/mean_squared_error/num_present"
  input: "compute_loss/mean_squared_error/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/Equal/y"
  op: "Const"
  input: "^compute_loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/Equal"
  op: "Equal"
  input: "compute_loss/mean_squared_error/num_present"
  input: "compute_loss/mean_squared_error/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/ones_like/Shape"
  op: "Const"
  input: "^compute_loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/ones_like/Const"
  op: "Const"
  input: "^compute_loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/ones_like"
  op: "Fill"
  input: "compute_loss/mean_squared_error/ones_like/Shape"
  input: "compute_loss/mean_squared_error/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/Select"
  op: "Select"
  input: "compute_loss/mean_squared_error/Equal"
  input: "compute_loss/mean_squared_error/ones_like"
  input: "compute_loss/mean_squared_error/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/div"
  op: "RealDiv"
  input: "compute_loss/mean_squared_error/Sum_1"
  input: "compute_loss/mean_squared_error/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^compute_loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/zeros_like/Const"
  op: "Const"
  input: "^compute_loss/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/zeros_like"
  op: "Fill"
  input: "compute_loss/mean_squared_error/zeros_like/shape_as_tensor"
  input: "compute_loss/mean_squared_error/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "compute_loss/mean_squared_error/value"
  op: "Select"
  input: "compute_loss/mean_squared_error/Greater"
  input: "compute_loss/mean_squared_error/div"
  input: "compute_loss/mean_squared_error/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/strided_slice_2"
  op: "StridedSlice"
  input: "compute_loss/strided_slice"
  input: "compute_loss/strided_slice_2/stack"
  input: "compute_loss/strided_slice_2/stack_1"
  input: "compute_loss/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "compute_loss/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "compute_loss/Sum_1"
  op: "Sum"
  input: "compute_loss/strided_slice_2"
  input: "compute_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "train_op/gradients/Fill"
  op: "Fill"
  input: "train_op/gradients/Shape"
  input: "train_op/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/value_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/value_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/value_grad/zeros_like"
  op: "Fill"
  input: "train_op/gradients/compute_loss/mean_squared_error/value_grad/zeros_like/shape_as_tensor"
  input: "train_op/gradients/compute_loss/mean_squared_error/value_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/value_grad/Select"
  op: "Select"
  input: "compute_loss/mean_squared_error/Greater"
  input: "train_op/gradients/Fill"
  input: "train_op/gradients/compute_loss/mean_squared_error/value_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/value_grad/Select_1"
  op: "Select"
  input: "compute_loss/mean_squared_error/Greater"
  input: "train_op/gradients/compute_loss/mean_squared_error/value_grad/zeros_like"
  input: "train_op/gradients/Fill"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/mean_squared_error/value_grad/Select"
  input: "^train_op/gradients/compute_loss/mean_squared_error/value_grad/Select_1"
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/mean_squared_error/value_grad/Select"
  input: "^train_op/gradients/compute_loss/mean_squared_error/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mean_squared_error/value_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/mean_squared_error/value_grad/Select_1"
  input: "^train_op/gradients/compute_loss/mean_squared_error/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mean_squared_error/value_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/div_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/compute_loss/mean_squared_error/div_grad/Shape"
  input: "train_op/gradients/compute_loss/mean_squared_error/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/div_grad/RealDiv"
  op: "RealDiv"
  input: "train_op/gradients/compute_loss/mean_squared_error/value_grad/tuple/control_dependency"
  input: "compute_loss/mean_squared_error/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/div_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/compute_loss/mean_squared_error/div_grad/RealDiv"
  input: "train_op/gradients/compute_loss/mean_squared_error/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/div_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/compute_loss/mean_squared_error/div_grad/Sum"
  input: "train_op/gradients/compute_loss/mean_squared_error/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/div_grad/Neg"
  op: "Neg"
  input: "compute_loss/mean_squared_error/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "train_op/gradients/compute_loss/mean_squared_error/div_grad/Neg"
  input: "compute_loss/mean_squared_error/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "train_op/gradients/compute_loss/mean_squared_error/div_grad/RealDiv_1"
  input: "compute_loss/mean_squared_error/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/div_grad/mul"
  op: "Mul"
  input: "train_op/gradients/compute_loss/mean_squared_error/value_grad/tuple/control_dependency"
  input: "train_op/gradients/compute_loss/mean_squared_error/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/div_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/compute_loss/mean_squared_error/div_grad/mul"
  input: "train_op/gradients/compute_loss/mean_squared_error/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/div_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/compute_loss/mean_squared_error/div_grad/Sum_1"
  input: "train_op/gradients/compute_loss/mean_squared_error/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/mean_squared_error/div_grad/Reshape"
  input: "^train_op/gradients/compute_loss/mean_squared_error/div_grad/Reshape_1"
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/mean_squared_error/div_grad/Reshape"
  input: "^train_op/gradients/compute_loss/mean_squared_error/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mean_squared_error/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/mean_squared_error/div_grad/Reshape_1"
  input: "^train_op/gradients/compute_loss/mean_squared_error/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mean_squared_error/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/compute_loss/mean_squared_error/div_grad/tuple/control_dependency"
  input: "train_op/gradients/compute_loss/mean_squared_error/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/Sum_1_grad/Tile"
  op: "Tile"
  input: "train_op/gradients/compute_loss/mean_squared_error/Sum_1_grad/Reshape"
  input: "train_op/gradients/compute_loss/mean_squared_error/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/Select_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/Select_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/Select_grad/zeros_like"
  op: "Fill"
  input: "train_op/gradients/compute_loss/mean_squared_error/Select_grad/zeros_like/shape_as_tensor"
  input: "train_op/gradients/compute_loss/mean_squared_error/Select_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/Select_grad/Select"
  op: "Select"
  input: "compute_loss/mean_squared_error/Equal"
  input: "train_op/gradients/compute_loss/mean_squared_error/div_grad/tuple/control_dependency_1"
  input: "train_op/gradients/compute_loss/mean_squared_error/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/Select_grad/Select_1"
  op: "Select"
  input: "compute_loss/mean_squared_error/Equal"
  input: "train_op/gradients/compute_loss/mean_squared_error/Select_grad/zeros_like"
  input: "train_op/gradients/compute_loss/mean_squared_error/div_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/mean_squared_error/Select_grad/Select"
  input: "^train_op/gradients/compute_loss/mean_squared_error/Select_grad/Select_1"
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/mean_squared_error/Select_grad/Select"
  input: "^train_op/gradients/compute_loss/mean_squared_error/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mean_squared_error/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/mean_squared_error/Select_grad/Select_1"
  input: "^train_op/gradients/compute_loss/mean_squared_error/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mean_squared_error/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/Sum_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/compute_loss/mean_squared_error/Sum_1_grad/Tile"
  input: "train_op/gradients/compute_loss/mean_squared_error/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/Sum_grad/Shape"
  op: "Shape"
  input: "compute_loss/mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/Sum_grad/Tile"
  op: "Tile"
  input: "train_op/gradients/compute_loss/mean_squared_error/Sum_grad/Reshape"
  input: "train_op/gradients/compute_loss/mean_squared_error/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/Mul_grad/Shape"
  op: "Shape"
  input: "compute_loss/mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/compute_loss/mean_squared_error/Mul_grad/Shape"
  input: "train_op/gradients/compute_loss/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/Mul_grad/Mul"
  op: "Mul"
  input: "train_op/gradients/compute_loss/mean_squared_error/Sum_grad/Tile"
  input: "compute_loss/mean_squared_error/ToFloat_3/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/Mul_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/compute_loss/mean_squared_error/Mul_grad/Mul"
  input: "train_op/gradients/compute_loss/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/Mul_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/compute_loss/mean_squared_error/Mul_grad/Sum"
  input: "train_op/gradients/compute_loss/mean_squared_error/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/Mul_grad/Mul_1"
  op: "Mul"
  input: "compute_loss/mean_squared_error/SquaredDifference"
  input: "train_op/gradients/compute_loss/mean_squared_error/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/Mul_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/compute_loss/mean_squared_error/Mul_grad/Mul_1"
  input: "train_op/gradients/compute_loss/mean_squared_error/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/compute_loss/mean_squared_error/Mul_grad/Sum_1"
  input: "train_op/gradients/compute_loss/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/mean_squared_error/Mul_grad/Reshape"
  input: "^train_op/gradients/compute_loss/mean_squared_error/Mul_grad/Reshape_1"
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/mean_squared_error/Mul_grad/Reshape"
  input: "^train_op/gradients/compute_loss/mean_squared_error/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mean_squared_error/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/mean_squared_error/Mul_grad/Reshape_1"
  input: "^train_op/gradients/compute_loss/mean_squared_error/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mean_squared_error/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/num_present_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/num_present_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/compute_loss/mean_squared_error/Select_grad/tuple/control_dependency_1"
  input: "train_op/gradients/compute_loss/mean_squared_error/num_present_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/num_present_grad/Shape"
  op: "Shape"
  input: "compute_loss/mean_squared_error/num_present/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/num_present_grad/Tile"
  op: "Tile"
  input: "train_op/gradients/compute_loss/mean_squared_error/num_present_grad/Reshape"
  input: "train_op/gradients/compute_loss/mean_squared_error/num_present_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Shape_1"
  op: "Shape"
  input: "compute_loss/mean_squared_error/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Shape"
  input: "train_op/gradients/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Mul"
  op: "Mul"
  input: "train_op/gradients/compute_loss/mean_squared_error/num_present_grad/Tile"
  input: "compute_loss/mean_squared_error/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Mul"
  input: "train_op/gradients/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Sum"
  input: "train_op/gradients/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Mul_1"
  op: "Mul"
  input: "compute_loss/mean_squared_error/num_present/Select"
  input: "train_op/gradients/compute_loss/mean_squared_error/num_present_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Mul_1"
  input: "train_op/gradients/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Sum_1"
  input: "train_op/gradients/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Reshape"
  input: "^train_op/gradients/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Reshape_1"
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Reshape"
  input: "^train_op/gradients/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Reshape_1"
  input: "^train_op/gradients/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/num_present/broadcast_weights/ones_like_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/num_present/broadcast_weights/ones_like_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/tuple/control_dependency_1"
  input: "train_op/gradients/compute_loss/mean_squared_error/num_present/broadcast_weights/ones_like_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "compute_loss/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "IteratorGetNext:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/Shape"
  input: "train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^train_op/gradients/compute_loss/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/mul"
  op: "Mul"
  input: "train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/scalar"
  input: "train_op/gradients/compute_loss/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/sub"
  op: "Sub"
  input: "compute_loss/strided_slice_1"
  input: "IteratorGetNext:1"
  input: "^train_op/gradients/compute_loss/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/mul"
  input: "train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/Sum"
  input: "train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/Sum_1"
  input: "train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/Reshape"
  input: "^train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/Neg"
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/Reshape"
  input: "^train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/Neg"
  input: "^train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_1_grad/Shape"
  op: "Shape"
  input: "pose_prediction/final_prediction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/compute_loss/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients/compute_loss/strided_slice_1_grad/Shape"
  input: "compute_loss/strided_slice_1/stack"
  input: "compute_loss/strided_slice_1/stack_1"
  input: "compute_loss/strided_slice_1/stack_2"
  input: "train_op/gradients/compute_loss/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/concat_grad/mod"
  op: "FloorMod"
  input: "pose_prediction/concat/axis"
  input: "train_op/gradients/pose_prediction/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/concat_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/concat_grad/ShapeN"
  op: "ShapeN"
  input: "pose_prediction/Mean_Prediction/dense_3/BiasAdd"
  input: "pose_prediction/Variance_Prediction/concat"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train_op/gradients/pose_prediction/concat_grad/mod"
  input: "train_op/gradients/pose_prediction/concat_grad/ShapeN"
  input: "train_op/gradients/pose_prediction/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/concat_grad/Slice"
  op: "Slice"
  input: "train_op/gradients/compute_loss/strided_slice_1_grad/StridedSliceGrad"
  input: "train_op/gradients/pose_prediction/concat_grad/ConcatOffset"
  input: "train_op/gradients/pose_prediction/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/concat_grad/Slice_1"
  op: "Slice"
  input: "train_op/gradients/compute_loss/strided_slice_1_grad/StridedSliceGrad"
  input: "train_op/gradients/pose_prediction/concat_grad/ConcatOffset:1"
  input: "train_op/gradients/pose_prediction/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/concat_grad/Slice"
  input: "^train_op/gradients/pose_prediction/concat_grad/Slice_1"
}
node {
  name: "train_op/gradients/pose_prediction/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/concat_grad/Slice"
  input: "^train_op/gradients/pose_prediction/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/concat_grad/Slice_1"
  input: "^train_op/gradients/pose_prediction/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense_3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/pose_prediction/concat_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense_3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/concat_grad/tuple/control_dependency"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dense_3/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense_3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/concat_grad/tuple/control_dependency"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dense_3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense_3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dense_3/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dense_3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/dense_3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/mod"
  op: "FloorMod"
  input: "pose_prediction/Variance_Prediction/concat/axis"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/ShapeN"
  op: "ShapeN"
  input: "pose_prediction/Variance_Prediction/add"
  input: "pose_prediction/Variance_Prediction/add_1"
  input: "pose_prediction/Variance_Prediction/add_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/mod"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/ShapeN"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/ShapeN:1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/ShapeN:2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/Slice"
  op: "Slice"
  input: "train_op/gradients/pose_prediction/concat_grad/tuple/control_dependency_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/ConcatOffset"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/Slice_1"
  op: "Slice"
  input: "train_op/gradients/pose_prediction/concat_grad/tuple/control_dependency_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/ConcatOffset:1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/Slice_2"
  op: "Slice"
  input: "train_op/gradients/pose_prediction/concat_grad/tuple/control_dependency_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/ConcatOffset:2"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/ShapeN:2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/Slice"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/Slice_1"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/Slice_2"
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/Slice"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/Slice_1"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/Slice_2"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/Slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense_3/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dense_3/BiasAdd_grad/tuple/control_dependency"
  input: "Mean_Prediction/dense_3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense_3/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/Merge"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dense_3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense_3/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dense_3/MatMul_grad/MatMul"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dense_3/MatMul_grad/MatMul_1"
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense_3/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dense_3/MatMul_grad/MatMul"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dense_3/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/dense_3/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense_3/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dense_3/MatMul_grad/MatMul_1"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dense_3/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/dense_3/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/add_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/add_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/Fill"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_grad/Shape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/add_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/tuple/control_dependency"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/add_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_grad/Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/add_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/tuple/control_dependency"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/add_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_grad/Sum_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/add_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/add_grad/Reshape_1"
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_grad/Reshape_1"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/add_1_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/add_1_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/Fill_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_1_grad/Shape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/add_1_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/tuple/control_dependency_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/add_1_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_1_grad/Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/add_1_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/tuple/control_dependency_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_1_grad/Sum_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/add_1_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/add_1_grad/Reshape_1"
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_1_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_1_grad/Reshape_1"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/add_2_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/add_2_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/Fill_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_2_grad/Shape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/add_2_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/tuple/control_dependency_2"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/add_2_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_2_grad/Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/add_2_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/concat_grad/tuple/control_dependency_2"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_2_grad/Sum_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/add_2_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/add_2_grad/Reshape_1"
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_2_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/add_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_2_grad/Reshape_1"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/add_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dense_3/MatMul_grad/tuple/control_dependency"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/dense_3/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/Merge_grad/cond_grad"
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/Merge_grad/cond_grad"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/dense_3/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/Merge_grad/cond_grad:1"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/dense_3/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Fill_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Fill_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_grad/tuple/control_dependency_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Fill_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Fill_1_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Fill_1_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_1_grad/tuple/control_dependency_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Fill_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Fill_2_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Fill_2_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_2_grad/tuple/control_dependency_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Fill_2_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Shape"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/Merge_grad/tuple/control_dependency_1"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Mul"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Sum"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Mul_1"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Sum_1"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Reshape_1"
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Reshape_1"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/Switch"
  op: "Switch"
  input: "pose_prediction/Mean_Prediction/dense_2/BiasAdd"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/Shape_1"
  op: "Shape"
  input: "train_op/gradients/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients/zeros"
  op: "Fill"
  input: "train_op/gradients/Shape_1"
  input: "train_op/gradients/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/Merge_grad/tuple/control_dependency"
  input: "train_op/gradients/zeros"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Shape"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/tuple/control_dependency"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/RealDiv"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Sum"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Neg"
  op: "Neg"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Neg"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/RealDiv_1"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/mul"
  op: "Mul"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/tuple/control_dependency"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/mul"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Sum_1"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Reshape_1"
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Reshape_1"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_grad/stack"
  op: "Pack"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_grad/Rank"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_grad/Reshape"
  op: "Reshape"
  input: "pose_prediction/Variance_Prediction/Slice/begin"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_grad/sub"
  op: "Sub"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_grad/Shape_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_grad/sub_1"
  op: "Sub"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_grad/sub"
  input: "pose_prediction/Variance_Prediction/Slice/begin"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_grad/sub_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_grad/concat"
  op: "ConcatV2"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_grad/Reshape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_grad/Reshape_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_grad/Pad"
  op: "Pad"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_grad/tuple/control_dependency"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_1_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_1_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_1_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_1_grad/stack"
  op: "Pack"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_1_grad/Rank"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_1_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_1_grad/Reshape"
  op: "Reshape"
  input: "pose_prediction/Variance_Prediction/Slice_1/begin"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_1_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_1_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_1_grad/sub"
  op: "Sub"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_1_grad/Shape_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_1_grad/sub_1"
  op: "Sub"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_1_grad/sub"
  input: "pose_prediction/Variance_Prediction/Slice_1/begin"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_1_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_1_grad/sub_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_1_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_1_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_1_grad/concat"
  op: "ConcatV2"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_1_grad/Reshape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_1_grad/Reshape_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_1_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_1_grad/Pad"
  op: "Pad"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_1_grad/tuple/control_dependency"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_2_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_2_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_2_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_2_grad/stack"
  op: "Pack"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_2_grad/Rank"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_2_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_2_grad/Reshape"
  op: "Reshape"
  input: "pose_prediction/Variance_Prediction/Slice_2/begin"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_2_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_2_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_2_grad/sub"
  op: "Sub"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_2_grad/Shape_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_2_grad/sub_1"
  op: "Sub"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_2_grad/sub"
  input: "pose_prediction/Variance_Prediction/Slice_2/begin"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_2_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_2_grad/sub_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_2_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_2_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_2_grad/concat"
  op: "ConcatV2"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_2_grad/Reshape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_2_grad/Reshape_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_2_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_2_grad/Pad"
  op: "Pad"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/add_2_grad/tuple/control_dependency"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_2_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/AddN"
  op: "AddN"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_grad/Pad"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_1_grad/Pad"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Slice_2_grad/Pad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/Slice_grad/Pad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/Exp_grad/mul"
  op: "Mul"
  input: "train_op/gradients/AddN"
  input: "pose_prediction/Variance_Prediction/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense_3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Exp_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense_3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/Exp_grad/mul"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dense_3/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense_3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/Exp_grad/mul"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dense_3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/Exp_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense_3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dense_3/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dense_3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/dense_3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense_3/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dense_3/BiasAdd_grad/tuple/control_dependency"
  input: "Variance_Prediction/dense_3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense_3/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/Merge"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dense_3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense_3/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dense_3/MatMul_grad/MatMul"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dense_3/MatMul_grad/MatMul_1"
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense_3/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dense_3/MatMul_grad/MatMul"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dense_3/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/dense_3/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense_3/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dense_3/MatMul_grad/MatMul_1"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dense_3/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/dense_3/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/Switch_1"
  op: "Switch"
  input: "pose_prediction/Mean_Prediction/dense_2/BiasAdd"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/Shape_2"
  op: "Shape"
  input: "train_op/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients/zeros_1"
  op: "Fill"
  input: "train_op/gradients/Shape_2"
  input: "train_op/gradients/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "train_op/gradients/zeros_1"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dense_3/MatMul_grad/tuple/control_dependency"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/dense_3/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/Merge_grad/cond_grad"
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/Merge_grad/cond_grad"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/dense_3/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/Merge_grad/cond_grad:1"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/dense_3/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/AddN_1"
  op: "AddN"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/Identity/Switch_grad/cond_grad"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/AddN_1"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dense_2/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/AddN_1"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dense_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/dropout_2/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dense_2/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dense_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/dense_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Shape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/Merge_grad/tuple/control_dependency_1"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Mul"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Mul_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Sum_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Reshape_1"
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Reshape_1"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dense_2/BiasAdd_grad/tuple/control_dependency"
  input: "Mean_Prediction/dense_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dense_2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense_2/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dense_2/MatMul_grad/MatMul"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dense_2/MatMul_grad/MatMul_1"
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense_2/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dense_2/MatMul_grad/MatMul"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dense_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/dense_2/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense_2/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dense_2/MatMul_grad/MatMul_1"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dense_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/dense_2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/Switch_2"
  op: "Switch"
  input: "pose_prediction/Variance_Prediction/dense_2/BiasAdd"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/Shape_3"
  op: "Shape"
  input: "train_op/gradients/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/zeros_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients/zeros_2"
  op: "Fill"
  input: "train_op/gradients/Shape_3"
  input: "train_op/gradients/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/Merge_grad/tuple/control_dependency"
  input: "train_op/gradients/zeros_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Shape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/tuple/control_dependency"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/RealDiv"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Neg"
  op: "Neg"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Neg"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/RealDiv_1"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/mul"
  op: "Mul"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/tuple/control_dependency"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/mul"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Sum_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Reshape_1"
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Reshape_1"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/LeakyRelu_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Shape_2"
  op: "Shape"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dense_2/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/zeros"
  op: "Fill"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Shape_2"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "pose_prediction/Mean_Prediction/LeakyRelu_1/mul"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Shape"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Select"
  op: "Select"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/GreaterEqual"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dense_2/MatMul_grad/tuple/control_dependency"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Select_1"
  op: "Select"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/GreaterEqual"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/zeros"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dense_2/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Select"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Sum"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Select_1"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Sum_1"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Reshape_1"
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Reshape_1"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Shape"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Mul"
  op: "Mul"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/tuple/control_dependency"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Mul"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Sum"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Mul_1"
  op: "Mul"
  input: "pose_prediction/Mean_Prediction/LeakyRelu_1/alpha"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Mul_1"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Sum_1"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Reshape_1"
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Reshape_1"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/AddN_2"
  op: "AddN"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/tuple/control_dependency_1"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train_op/gradients/AddN_2"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/Merge_grad/cond_grad"
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/Merge_grad/cond_grad"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/Merge_grad/cond_grad:1"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Shape"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/Merge_grad/tuple/control_dependency_1"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Mul"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Sum"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Mul_1"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Sum_1"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Reshape_1"
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Reshape_1"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/Switch_3"
  op: "Switch"
  input: "pose_prediction/Mean_Prediction/dense_1/BiasAdd"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/Shape_4"
  op: "Shape"
  input: "train_op/gradients/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/zeros_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients/zeros_3"
  op: "Fill"
  input: "train_op/gradients/Shape_4"
  input: "train_op/gradients/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/Merge_grad/tuple/control_dependency"
  input: "train_op/gradients/zeros_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Shape"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/tuple/control_dependency"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/RealDiv"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Sum"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Neg"
  op: "Neg"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Neg"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/RealDiv_1"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/mul"
  op: "Mul"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/tuple/control_dependency"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/mul"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Sum_1"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Reshape_1"
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Reshape_1"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/Switch_4"
  op: "Switch"
  input: "pose_prediction/Variance_Prediction/dense_2/BiasAdd"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/Shape_5"
  op: "Shape"
  input: "train_op/gradients/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/zeros_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients/zeros_4"
  op: "Fill"
  input: "train_op/gradients/Shape_5"
  input: "train_op/gradients/zeros_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "train_op/gradients/zeros_4"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/AddN_3"
  op: "AddN"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/Identity/Switch_grad/cond_grad"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/AddN_3"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dense_2/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/AddN_3"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dense_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/dropout_2/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dense_2/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dense_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/dense_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dense_2/BiasAdd_grad/tuple/control_dependency"
  input: "Variance_Prediction/dense_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dense_2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense_2/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dense_2/MatMul_grad/MatMul"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dense_2/MatMul_grad/MatMul_1"
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense_2/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dense_2/MatMul_grad/MatMul"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dense_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/dense_2/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense_2/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dense_2/MatMul_grad/MatMul_1"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dense_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/dense_2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/LeakyRelu_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Shape_2"
  op: "Shape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dense_2/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/zeros"
  op: "Fill"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Shape_2"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "pose_prediction/Variance_Prediction/LeakyRelu_1/mul"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Shape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Select"
  op: "Select"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/GreaterEqual"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dense_2/MatMul_grad/tuple/control_dependency"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Select_1"
  op: "Select"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/GreaterEqual"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/zeros"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dense_2/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Select"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Select_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Sum_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Reshape_1"
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Reshape_1"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Shape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Mul"
  op: "Mul"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/tuple/control_dependency"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Mul"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Mul_1"
  op: "Mul"
  input: "pose_prediction/Variance_Prediction/LeakyRelu_1/alpha"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Mul_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Sum_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Reshape_1"
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Reshape_1"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/Switch_5"
  op: "Switch"
  input: "pose_prediction/Mean_Prediction/dense_1/BiasAdd"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/Shape_6"
  op: "Shape"
  input: "train_op/gradients/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/zeros_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients/zeros_5"
  op: "Fill"
  input: "train_op/gradients/Shape_6"
  input: "train_op/gradients/zeros_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "train_op/gradients/zeros_5"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/AddN_4"
  op: "AddN"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/tuple/control_dependency_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train_op/gradients/AddN_4"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/Merge_grad/cond_grad"
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/Merge_grad/cond_grad"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/Merge_grad/cond_grad:1"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/AddN_5"
  op: "AddN"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/Identity/Switch_grad/cond_grad"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/AddN_5"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dense_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/AddN_5"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dense_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/dropout_1/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dense_1/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dense_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/dense_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Shape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/Merge_grad/tuple/control_dependency_1"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Mul"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Mul_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Sum_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Reshape_1"
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Reshape_1"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dense_1/BiasAdd_grad/tuple/control_dependency"
  input: "Mean_Prediction/dense_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "pose_prediction/Mean_Prediction/LeakyRelu/Maximum"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dense_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dense_1/MatMul_grad/MatMul"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dense_1/MatMul_grad/MatMul_1"
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dense_1/MatMul_grad/MatMul"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dense_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/dense_1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dense_1/MatMul_grad/MatMul_1"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dense_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/dense_1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/Switch_6"
  op: "Switch"
  input: "pose_prediction/Variance_Prediction/dense_1/BiasAdd"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/Shape_7"
  op: "Shape"
  input: "train_op/gradients/Switch_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/zeros_6/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients/zeros_6"
  op: "Fill"
  input: "train_op/gradients/Shape_7"
  input: "train_op/gradients/zeros_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/Merge_grad/tuple/control_dependency"
  input: "train_op/gradients/zeros_6"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Shape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/tuple/control_dependency"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/RealDiv"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Neg"
  op: "Neg"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Neg"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/RealDiv_1"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/mul"
  op: "Mul"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/tuple/control_dependency"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/mul"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Sum_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Reshape_1"
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Reshape_1"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/LeakyRelu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/dropout/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Shape_2"
  op: "Shape"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dense_1/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/zeros"
  op: "Fill"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Shape_2"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "pose_prediction/Mean_Prediction/LeakyRelu/mul"
  input: "pose_prediction/Mean_Prediction/dropout/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Shape"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Select"
  op: "Select"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/GreaterEqual"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dense_1/MatMul_grad/tuple/control_dependency"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Select_1"
  op: "Select"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/GreaterEqual"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/zeros"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dense_1/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Select"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Sum"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Select_1"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Sum_1"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Reshape_1"
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Reshape_1"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/dropout/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Shape"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Mul"
  op: "Mul"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/tuple/control_dependency"
  input: "pose_prediction/Mean_Prediction/dropout/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Mul"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Sum"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Mul_1"
  op: "Mul"
  input: "pose_prediction/Mean_Prediction/LeakyRelu/alpha"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Mul_1"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Sum_1"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Reshape_1"
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Reshape_1"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/AddN_6"
  op: "AddN"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/tuple/control_dependency_1"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train_op/gradients/AddN_6"
  input: "pose_prediction/Mean_Prediction/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/Merge_grad/cond_grad"
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/Merge_grad/cond_grad"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/Merge_grad/cond_grad:1"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/dropout/cond/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/dropout/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Shape"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/Merge_grad/tuple/control_dependency_1"
  input: "pose_prediction/Mean_Prediction/dropout/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Mul"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Sum"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "pose_prediction/Mean_Prediction/dropout/cond/dropout/div"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Mul_1"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Sum_1"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Reshape_1"
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Reshape_1"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/Switch_7"
  op: "Switch"
  input: "pose_prediction/Mean_Prediction/dense/BiasAdd"
  input: "pose_prediction/Mean_Prediction/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/Shape_8"
  op: "Shape"
  input: "train_op/gradients/Switch_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/zeros_7/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients/zeros_7"
  op: "Fill"
  input: "train_op/gradients/Shape_8"
  input: "train_op/gradients/zeros_7/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/Merge_grad/tuple/control_dependency"
  input: "train_op/gradients/zeros_7"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Shape"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  input: "pose_prediction/Mean_Prediction/dropout/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/RealDiv"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Sum"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Neg"
  op: "Neg"
  input: "pose_prediction/Mean_Prediction/dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Neg"
  input: "pose_prediction/Mean_Prediction/dropout/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/RealDiv_1"
  input: "pose_prediction/Mean_Prediction/dropout/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/mul"
  op: "Mul"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/mul"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Sum_1"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Reshape_1"
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Reshape_1"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/Switch_8"
  op: "Switch"
  input: "pose_prediction/Variance_Prediction/dense_1/BiasAdd"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/Shape_9"
  op: "Shape"
  input: "train_op/gradients/Switch_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/zeros_8/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients/zeros_8"
  op: "Fill"
  input: "train_op/gradients/Shape_9"
  input: "train_op/gradients/zeros_8/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "train_op/gradients/zeros_8"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/AddN_7"
  op: "AddN"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/Identity/Switch_grad/cond_grad"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/AddN_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/AddN_7"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dense_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/AddN_7"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dense_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/dropout_1/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dense_1/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dense_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/dense_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dense_1/BiasAdd_grad/tuple/control_dependency"
  input: "Variance_Prediction/dense_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "pose_prediction/Variance_Prediction/LeakyRelu/Maximum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dense_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dense_1/MatMul_grad/MatMul"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dense_1/MatMul_grad/MatMul_1"
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dense_1/MatMul_grad/MatMul"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dense_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/dense_1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dense_1/MatMul_grad/MatMul_1"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dense_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/dense_1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/LeakyRelu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/dropout/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Shape_2"
  op: "Shape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dense_1/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/zeros"
  op: "Fill"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Shape_2"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "pose_prediction/Variance_Prediction/LeakyRelu/mul"
  input: "pose_prediction/Variance_Prediction/dropout/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Shape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Select"
  op: "Select"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/GreaterEqual"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dense_1/MatMul_grad/tuple/control_dependency"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Select_1"
  op: "Select"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/GreaterEqual"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/zeros"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dense_1/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Select"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Select_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Sum_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Reshape_1"
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Reshape_1"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/dropout/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Shape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Mul"
  op: "Mul"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/tuple/control_dependency"
  input: "pose_prediction/Variance_Prediction/dropout/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Mul"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Mul_1"
  op: "Mul"
  input: "pose_prediction/Variance_Prediction/LeakyRelu/alpha"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Mul_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Sum_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Reshape_1"
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Reshape_1"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/Switch_9"
  op: "Switch"
  input: "pose_prediction/Mean_Prediction/dense/BiasAdd"
  input: "pose_prediction/Mean_Prediction/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/Shape_10"
  op: "Shape"
  input: "train_op/gradients/Switch_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/zeros_9/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients/zeros_9"
  op: "Fill"
  input: "train_op/gradients/Shape_10"
  input: "train_op/gradients/zeros_9/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "train_op/gradients/zeros_9"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/AddN_8"
  op: "AddN"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/tuple/control_dependency_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train_op/gradients/AddN_8"
  input: "pose_prediction/Variance_Prediction/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/Merge_grad/cond_grad"
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/Merge_grad/cond_grad"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/Merge_grad/cond_grad:1"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/AddN_9"
  op: "AddN"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/Identity/Switch_grad/cond_grad"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/AddN_9"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dense/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/AddN_9"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/dropout/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dense/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/dropout/cond/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/dropout/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Shape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/Merge_grad/tuple/control_dependency_1"
  input: "pose_prediction/Variance_Prediction/dropout/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Mul"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "pose_prediction/Variance_Prediction/dropout/cond/dropout/div"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Mul_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Sum_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Reshape_1"
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Reshape_1"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dense/BiasAdd_grad/tuple/control_dependency"
  input: "Mean_Prediction/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5120
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "pose_prediction/CNN/flatten/Reshape"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dense/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dense/MatMul_grad/MatMul"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dense/MatMul_grad/MatMul_1"
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dense/MatMul_grad/MatMul"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5120
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Mean_Prediction/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dense/MatMul_grad/MatMul_1"
  input: "^train_op/gradients/pose_prediction/Mean_Prediction/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/Switch_10"
  op: "Switch"
  input: "pose_prediction/Variance_Prediction/dense/BiasAdd"
  input: "pose_prediction/Variance_Prediction/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/Shape_11"
  op: "Shape"
  input: "train_op/gradients/Switch_10:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/zeros_10/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients/zeros_10"
  op: "Fill"
  input: "train_op/gradients/Shape_11"
  input: "train_op/gradients/zeros_10/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/Merge_grad/tuple/control_dependency"
  input: "train_op/gradients/zeros_10"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Shape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  input: "pose_prediction/Variance_Prediction/dropout/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/RealDiv"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Neg"
  op: "Neg"
  input: "pose_prediction/Variance_Prediction/dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Neg"
  input: "pose_prediction/Variance_Prediction/dropout/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/RealDiv_1"
  input: "pose_prediction/Variance_Prediction/dropout/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/mul"
  op: "Mul"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/mul"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Sum_1"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Reshape_1"
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Reshape_1"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/Switch_11"
  op: "Switch"
  input: "pose_prediction/Variance_Prediction/dense/BiasAdd"
  input: "pose_prediction/Variance_Prediction/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/Shape_12"
  op: "Shape"
  input: "train_op/gradients/Switch_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/zeros_11/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients/zeros_11"
  op: "Fill"
  input: "train_op/gradients/Shape_12"
  input: "train_op/gradients/zeros_11/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "train_op/gradients/zeros_11"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/AddN_10"
  op: "AddN"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/Identity/Switch_grad/cond_grad"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/AddN_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/AddN_10"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dense/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/AddN_10"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/dropout/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dense/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dense/BiasAdd_grad/tuple/control_dependency"
  input: "Variance_Prediction/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5120
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "pose_prediction/CNN/flatten/Reshape"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dense/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dense/MatMul_grad/MatMul"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dense/MatMul_grad/MatMul_1"
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dense/MatMul_grad/MatMul"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5120
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/Variance_Prediction/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dense/MatMul_grad/MatMul_1"
  input: "^train_op/gradients/pose_prediction/Variance_Prediction/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Variance_Prediction/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/AddN_11"
  op: "AddN"
  input: "train_op/gradients/pose_prediction/Mean_Prediction/dense/MatMul_grad/tuple/control_dependency"
  input: "train_op/gradients/pose_prediction/Variance_Prediction/dense/MatMul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/Mean_Prediction/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5120
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/flatten/Reshape_grad/Shape"
  op: "Shape"
  input: "pose_prediction/CNN/LeakyRelu_3/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/flatten/Reshape_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/AddN_11"
  input: "train_op/gradients/pose_prediction/CNN/flatten/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/Shape"
  op: "Shape"
  input: "pose_prediction/CNN/LeakyRelu_3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/CNN/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/Shape_2"
  op: "Shape"
  input: "train_op/gradients/pose_prediction/CNN/flatten/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/zeros"
  op: "Fill"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/Shape_2"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "pose_prediction/CNN/LeakyRelu_3/mul"
  input: "pose_prediction/CNN/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/Shape"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/Select"
  op: "Select"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/GreaterEqual"
  input: "train_op/gradients/pose_prediction/CNN/flatten/Reshape_grad/Reshape"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/Select_1"
  op: "Select"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/GreaterEqual"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/zeros"
  input: "train_op/gradients/pose_prediction/CNN/flatten/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/Select"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/Sum"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/Select_1"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/Sum_1"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/Reshape_1"
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/Reshape_1"
  input: "^train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/mul_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/CNN/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/mul_grad/Shape"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/mul_grad/Mul"
  op: "Mul"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/tuple/control_dependency"
  input: "pose_prediction/CNN/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/mul_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/mul_grad/Mul"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/mul_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/mul_grad/Sum"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/mul_grad/Mul_1"
  op: "Mul"
  input: "pose_prediction/CNN/LeakyRelu_3/alpha"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/mul_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/mul_grad/Mul_1"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/mul_grad/Sum_1"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/CNN/LeakyRelu_3/mul_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/CNN/LeakyRelu_3/mul_grad/Reshape_1"
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/mul_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/CNN/LeakyRelu_3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/LeakyRelu_3/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/mul_grad/Reshape_1"
  input: "^train_op/gradients/pose_prediction/CNN/LeakyRelu_3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/LeakyRelu_3/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/AddN_12"
  op: "AddN"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/tuple/control_dependency_1"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_3/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/LeakyRelu_3/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/add_2_grad/Shape"
  op: "Shape"
  input: "pose_prediction/CNN/conv2d_8/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/add_2_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/CNN/conv2d_9/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/pose_prediction/CNN/add_2_grad/Shape"
  input: "train_op/gradients/pose_prediction/CNN/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/add_2_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/AddN_12"
  input: "train_op/gradients/pose_prediction/CNN/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/add_2_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/CNN/add_2_grad/Sum"
  input: "train_op/gradients/pose_prediction/CNN/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/add_2_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/AddN_12"
  input: "train_op/gradients/pose_prediction/CNN/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/CNN/add_2_grad/Sum_1"
  input: "train_op/gradients/pose_prediction/CNN/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/CNN/add_2_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/CNN/add_2_grad/Reshape_1"
}
node {
  name: "train_op/gradients/pose_prediction/CNN/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/add_2_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/CNN/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/add_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/add_2_grad/Reshape_1"
  input: "^train_op/gradients/pose_prediction/CNN/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/add_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_8/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/pose_prediction/CNN/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_8/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/CNN/add_2_grad/tuple/control_dependency"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_8/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_8/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/add_2_grad/tuple/control_dependency"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_8/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/add_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_8/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_8/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_8/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d_8/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_9/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/pose_prediction/CNN/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_9/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/CNN/add_2_grad/tuple/control_dependency_1"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_9/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_9/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/add_2_grad/tuple/control_dependency_1"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_9/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/add_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_9/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_9/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_9/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d_9/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_8/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "pose_prediction/CNN/conv2d_7/BiasAdd"
  input: "CNN/conv2d_8/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_8/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_8/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_8/Conv2D_grad/ShapeN"
  input: "CNN/conv2d_8/kernel/read"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_8/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_8/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "pose_prediction/CNN/conv2d_7/BiasAdd"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_8/Conv2D_grad/Const"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_8/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_8/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_8/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_8/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_8/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_8/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_8/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d_8/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_8/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_8/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_8/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d_8/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_9/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "pose_prediction/CNN/add_1"
  input: "CNN/conv2d_9/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_9/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_9/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_9/Conv2D_grad/ShapeN"
  input: "CNN/conv2d_9/kernel/read"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_9/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_9/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "pose_prediction/CNN/add_1"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_9/Conv2D_grad/Const"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_9/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_9/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_9/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_9/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_9/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_9/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_9/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d_9/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
          dim {
            size: 20
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_9/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_9/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_9/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d_9/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_7/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_8/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_7/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_8/Conv2D_grad/tuple/control_dependency"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_7/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_7/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_8/Conv2D_grad/tuple/control_dependency"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_7/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d_8/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_7/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_7/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_7/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d_7/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_7/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "pose_prediction/CNN/LeakyRelu_2/Maximum"
  input: "CNN/conv2d_7/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_7/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_7/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_7/Conv2D_grad/ShapeN"
  input: "CNN/conv2d_7/kernel/read"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_7/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_7/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "pose_prediction/CNN/LeakyRelu_2/Maximum"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_7/Conv2D_grad/Const"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_7/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_7/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_7/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_7/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_7/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_7/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_7/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d_7/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
          dim {
            size: 20
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_7/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_7/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_7/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d_7/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/Shape"
  op: "Shape"
  input: "pose_prediction/CNN/LeakyRelu_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/CNN/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/Shape_2"
  op: "Shape"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_7/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/zeros"
  op: "Fill"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/Shape_2"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
          dim {
            size: 20
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "pose_prediction/CNN/LeakyRelu_2/mul"
  input: "pose_prediction/CNN/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
          dim {
            size: 20
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/Shape"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/Select"
  op: "Select"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/GreaterEqual"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_7/Conv2D_grad/tuple/control_dependency"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
          dim {
            size: 20
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/Select_1"
  op: "Select"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/GreaterEqual"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/zeros"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_7/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
          dim {
            size: 20
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/Select"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/Sum"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
          dim {
            size: 20
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/Select_1"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/Sum_1"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
          dim {
            size: 20
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/Reshape_1"
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
          dim {
            size: 20
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/Reshape_1"
  input: "^train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
          dim {
            size: 20
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/mul_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/CNN/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/mul_grad/Shape"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/mul_grad/Mul"
  op: "Mul"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/tuple/control_dependency"
  input: "pose_prediction/CNN/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
          dim {
            size: 20
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/mul_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/mul_grad/Mul"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/mul_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/mul_grad/Sum"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/mul_grad/Mul_1"
  op: "Mul"
  input: "pose_prediction/CNN/LeakyRelu_2/alpha"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
          dim {
            size: 20
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/mul_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/mul_grad/Mul_1"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/mul_grad/Sum_1"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
          dim {
            size: 20
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/CNN/LeakyRelu_2/mul_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/CNN/LeakyRelu_2/mul_grad/Reshape_1"
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/mul_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/CNN/LeakyRelu_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/LeakyRelu_2/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/mul_grad/Reshape_1"
  input: "^train_op/gradients/pose_prediction/CNN/LeakyRelu_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/LeakyRelu_2/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
          dim {
            size: 20
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/AddN_13"
  op: "AddN"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_9/Conv2D_grad/tuple/control_dependency"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/Maximum_grad/tuple/control_dependency_1"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_2/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d_9/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
          dim {
            size: 20
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/add_1_grad/Shape"
  op: "Shape"
  input: "pose_prediction/CNN/conv2d_5/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/add_1_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/CNN/conv2d_6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/pose_prediction/CNN/add_1_grad/Shape"
  input: "train_op/gradients/pose_prediction/CNN/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/add_1_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/AddN_13"
  input: "train_op/gradients/pose_prediction/CNN/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/add_1_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/CNN/add_1_grad/Sum"
  input: "train_op/gradients/pose_prediction/CNN/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
          dim {
            size: 20
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/add_1_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/AddN_13"
  input: "train_op/gradients/pose_prediction/CNN/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/CNN/add_1_grad/Sum_1"
  input: "train_op/gradients/pose_prediction/CNN/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
          dim {
            size: 20
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/CNN/add_1_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/CNN/add_1_grad/Reshape_1"
}
node {
  name: "train_op/gradients/pose_prediction/CNN/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/add_1_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/CNN/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
          dim {
            size: 20
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/add_1_grad/Reshape_1"
  input: "^train_op/gradients/pose_prediction/CNN/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
          dim {
            size: 20
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_5/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/pose_prediction/CNN/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_5/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/CNN/add_1_grad/tuple/control_dependency"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_5/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_5/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/add_1_grad/tuple/control_dependency"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_5/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
          dim {
            size: 20
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_5/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_5/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_5/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d_5/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_6/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/pose_prediction/CNN/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_6/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/CNN/add_1_grad/tuple/control_dependency_1"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_6/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_6/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/add_1_grad/tuple/control_dependency_1"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_6/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
          dim {
            size: 20
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_6/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_6/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_6/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d_6/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_5/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "pose_prediction/CNN/conv2d_4/BiasAdd"
  input: "CNN/conv2d_5/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_5/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_5/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_5/Conv2D_grad/ShapeN"
  input: "CNN/conv2d_5/kernel/read"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_5/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_5/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "pose_prediction/CNN/conv2d_4/BiasAdd"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_5/Conv2D_grad/Const"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_5/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_5/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_5/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_5/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_5/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_5/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_5/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d_5/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
          dim {
            size: 20
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_5/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_5/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_5/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d_5/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_6/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "pose_prediction/CNN/add"
  input: "CNN/conv2d_6/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_6/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_6/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_6/Conv2D_grad/ShapeN"
  input: "CNN/conv2d_6/kernel/read"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_6/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_6/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "pose_prediction/CNN/add"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_6/Conv2D_grad/Const"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_6/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_6/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_6/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_6/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_6/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_6/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_6/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d_6/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
          dim {
            size: 40
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_6/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_6/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_6/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d_6/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_4/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_5/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_4/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_5/Conv2D_grad/tuple/control_dependency"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_4/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_4/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_5/Conv2D_grad/tuple/control_dependency"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d_5/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 15
          }
          dim {
            size: 20
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_4/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_4/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d_4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_4/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "pose_prediction/CNN/LeakyRelu_1/Maximum"
  input: "CNN/conv2d_4/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_4/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_4/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_4/Conv2D_grad/ShapeN"
  input: "CNN/conv2d_4/kernel/read"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_4/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_4/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "pose_prediction/CNN/LeakyRelu_1/Maximum"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_4/Conv2D_grad/Const"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_4/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_4/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_4/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_4/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_4/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_4/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_4/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d_4/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
          dim {
            size: 40
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_4/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_4/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_4/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d_4/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/Shape"
  op: "Shape"
  input: "pose_prediction/CNN/LeakyRelu_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/CNN/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/Shape_2"
  op: "Shape"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_4/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/zeros"
  op: "Fill"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/Shape_2"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
          dim {
            size: 40
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "pose_prediction/CNN/LeakyRelu_1/mul"
  input: "pose_prediction/CNN/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
          dim {
            size: 40
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/Shape"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/Select"
  op: "Select"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/GreaterEqual"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_4/Conv2D_grad/tuple/control_dependency"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
          dim {
            size: 40
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/Select_1"
  op: "Select"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/GreaterEqual"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/zeros"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_4/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
          dim {
            size: 40
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/Select"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/Sum"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
          dim {
            size: 40
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/Select_1"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/Sum_1"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
          dim {
            size: 40
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/Reshape_1"
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
          dim {
            size: 40
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/Reshape_1"
  input: "^train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
          dim {
            size: 40
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/mul_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/CNN/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/mul_grad/Shape"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/mul_grad/Mul"
  op: "Mul"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/tuple/control_dependency"
  input: "pose_prediction/CNN/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
          dim {
            size: 40
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/mul_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/mul_grad/Mul"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/mul_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/mul_grad/Sum"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/mul_grad/Mul_1"
  op: "Mul"
  input: "pose_prediction/CNN/LeakyRelu_1/alpha"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
          dim {
            size: 40
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/mul_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/mul_grad/Mul_1"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/mul_grad/Sum_1"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
          dim {
            size: 40
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/CNN/LeakyRelu_1/mul_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/CNN/LeakyRelu_1/mul_grad/Reshape_1"
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/mul_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/CNN/LeakyRelu_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/LeakyRelu_1/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/mul_grad/Reshape_1"
  input: "^train_op/gradients/pose_prediction/CNN/LeakyRelu_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/LeakyRelu_1/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
          dim {
            size: 40
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/AddN_14"
  op: "AddN"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_6/Conv2D_grad/tuple/control_dependency"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/Maximum_grad/tuple/control_dependency_1"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu_1/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d_6/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
          dim {
            size: 40
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/add_grad/Shape"
  op: "Shape"
  input: "pose_prediction/CNN/conv2d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/add_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/CNN/conv2d_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/pose_prediction/CNN/add_grad/Shape"
  input: "train_op/gradients/pose_prediction/CNN/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/add_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/AddN_14"
  input: "train_op/gradients/pose_prediction/CNN/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/add_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/CNN/add_grad/Sum"
  input: "train_op/gradients/pose_prediction/CNN/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
          dim {
            size: 40
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/add_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/AddN_14"
  input: "train_op/gradients/pose_prediction/CNN/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/add_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/CNN/add_grad/Sum_1"
  input: "train_op/gradients/pose_prediction/CNN/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
          dim {
            size: 40
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/CNN/add_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/CNN/add_grad/Reshape_1"
}
node {
  name: "train_op/gradients/pose_prediction/CNN/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/add_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/CNN/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
          dim {
            size: 40
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/add_grad/Reshape_1"
  input: "^train_op/gradients/pose_prediction/CNN/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
          dim {
            size: 40
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/pose_prediction/CNN/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/CNN/add_grad/tuple/control_dependency"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_2/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/add_grad/tuple/control_dependency"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
          dim {
            size: 40
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_2/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/pose_prediction/CNN/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/CNN/add_grad/tuple/control_dependency_1"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_3/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/add_grad/tuple/control_dependency_1"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
          dim {
            size: 40
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_3/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d_3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "pose_prediction/CNN/conv2d_1/BiasAdd"
  input: "CNN/conv2d_2/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_2/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_2/Conv2D_grad/ShapeN"
  input: "CNN/conv2d_2/kernel/read"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "pose_prediction/CNN/conv2d_1/BiasAdd"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_2/Conv2D_grad/Const"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_2/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_2/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_2/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d_2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
          dim {
            size: 40
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d_2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "pose_prediction/CNN/max_pooling2d/MaxPool"
  input: "CNN/conv2d_3/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_3/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_3/Conv2D_grad/ShapeN"
  input: "CNN/conv2d_3/kernel/read"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "pose_prediction/CNN/max_pooling2d/MaxPool"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_3/Conv2D_grad/Const"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_3/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_3/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_3/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d_3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
          dim {
            size: 80
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d_3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_2/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_2/Conv2D_grad/tuple/control_dependency"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_2/Conv2D_grad/tuple/control_dependency"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d_2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
          dim {
            size: 40
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_1/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "pose_prediction/CNN/LeakyRelu/Maximum"
  input: "CNN/conv2d_1/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_1/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_1/Conv2D_grad/ShapeN"
  input: "CNN/conv2d_1/kernel/read"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "pose_prediction/CNN/LeakyRelu/Maximum"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_1/Conv2D_grad/Const"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_1/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
          dim {
            size: 80
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/Shape"
  op: "Shape"
  input: "pose_prediction/CNN/LeakyRelu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/CNN/max_pooling2d/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/Shape_2"
  op: "Shape"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/zeros"
  op: "Fill"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/Shape_2"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
          dim {
            size: 80
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "pose_prediction/CNN/LeakyRelu/mul"
  input: "pose_prediction/CNN/max_pooling2d/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
          dim {
            size: 80
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/Shape"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/Select"
  op: "Select"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/GreaterEqual"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_1/Conv2D_grad/tuple/control_dependency"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
          dim {
            size: 80
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/Select_1"
  op: "Select"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/GreaterEqual"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/zeros"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
          dim {
            size: 80
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/Select"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/Sum"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
          dim {
            size: 80
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/Select_1"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/Sum_1"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
          dim {
            size: 80
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/Reshape_1"
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
          dim {
            size: 80
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/Reshape_1"
  input: "^train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
          dim {
            size: 80
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu/mul_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/CNN/max_pooling2d/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu/mul_grad/Shape"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu/mul_grad/Mul"
  op: "Mul"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/tuple/control_dependency"
  input: "pose_prediction/CNN/max_pooling2d/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
          dim {
            size: 80
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu/mul_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu/mul_grad/Mul"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu/mul_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu/mul_grad/Sum"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu/mul_grad/Mul_1"
  op: "Mul"
  input: "pose_prediction/CNN/LeakyRelu/alpha"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
          dim {
            size: 80
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu/mul_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu/mul_grad/Mul_1"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu/mul_grad/Sum_1"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
          dim {
            size: 80
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/CNN/LeakyRelu/mul_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/CNN/LeakyRelu/mul_grad/Reshape_1"
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu/mul_grad/Reshape"
  input: "^train_op/gradients/pose_prediction/CNN/LeakyRelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/LeakyRelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/LeakyRelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu/mul_grad/Reshape_1"
  input: "^train_op/gradients/pose_prediction/CNN/LeakyRelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/LeakyRelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
          dim {
            size: 80
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/AddN_15"
  op: "AddN"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_3/Conv2D_grad/tuple/control_dependency"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu/Maximum_grad/tuple/control_dependency_1"
  input: "train_op/gradients/pose_prediction/CNN/LeakyRelu/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d_3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
          dim {
            size: 80
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/max_pooling2d/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "pose_prediction/CNN/conv2d/BiasAdd"
  input: "pose_prediction/CNN/max_pooling2d/MaxPool"
  input: "train_op/gradients/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 120
          }
          dim {
            size: 160
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/pose_prediction/CNN/max_pooling2d/MaxPool_grad/MaxPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/CNN/max_pooling2d/MaxPool_grad/MaxPoolGrad"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/max_pooling2d/MaxPool_grad/MaxPoolGrad"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/max_pooling2d/MaxPool_grad/MaxPoolGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 120
          }
          dim {
            size: 160
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/conv2d/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "IteratorGetNext"
  input: "CNN/conv2d/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train_op/gradients/pose_prediction/CNN/conv2d/Conv2D_grad/ShapeN"
  input: "CNN/conv2d/kernel/read"
  input: "train_op/gradients/pose_prediction/CNN/conv2d/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "IteratorGetNext"
  input: "train_op/gradients/pose_prediction/CNN/conv2d/Conv2D_grad/Const"
  input: "train_op/gradients/pose_prediction/CNN/conv2d/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/conv2d/Conv2D_grad/Conv2DBackpropInput"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 240
          }
          dim {
            size: 320
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/pose_prediction/CNN/conv2d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients/pose_prediction/CNN/conv2d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train_op/gradients/pose_prediction/CNN/conv2d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients/pose_prediction/CNN/conv2d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "train_op/gradients_1/Fill"
  op: "Fill"
  input: "train_op/gradients_1/Shape"
  input: "train_op/gradients_1/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/value_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/value_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/value_grad/zeros_like"
  op: "Fill"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/value_grad/zeros_like/shape_as_tensor"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/value_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/value_grad/Select"
  op: "Select"
  input: "compute_loss/mean_squared_error/Greater"
  input: "train_op/gradients_1/Fill"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/value_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/value_grad/Select_1"
  op: "Select"
  input: "compute_loss/mean_squared_error/Greater"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/value_grad/zeros_like"
  input: "train_op/gradients_1/Fill"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_1/compute_loss/mean_squared_error/value_grad/Select"
  input: "^train_op/gradients_1/compute_loss/mean_squared_error/value_grad/Select_1"
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/value_grad/Select"
  input: "^train_op/gradients_1/compute_loss/mean_squared_error/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/compute_loss/mean_squared_error/value_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/value_grad/Select_1"
  input: "^train_op/gradients_1/compute_loss/mean_squared_error/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/compute_loss/mean_squared_error/value_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/div_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/div_grad/Shape"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/div_grad/RealDiv"
  op: "RealDiv"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/value_grad/tuple/control_dependency"
  input: "compute_loss/mean_squared_error/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/div_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/div_grad/RealDiv"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/div_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/div_grad/Sum"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/div_grad/Neg"
  op: "Neg"
  input: "compute_loss/mean_squared_error/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/div_grad/Neg"
  input: "compute_loss/mean_squared_error/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/div_grad/RealDiv_1"
  input: "compute_loss/mean_squared_error/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/div_grad/mul"
  op: "Mul"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/value_grad/tuple/control_dependency"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/div_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/div_grad/mul"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/div_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/div_grad/Sum_1"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_1/compute_loss/mean_squared_error/div_grad/Reshape"
  input: "^train_op/gradients_1/compute_loss/mean_squared_error/div_grad/Reshape_1"
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/div_grad/Reshape"
  input: "^train_op/gradients_1/compute_loss/mean_squared_error/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/compute_loss/mean_squared_error/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/div_grad/Reshape_1"
  input: "^train_op/gradients_1/compute_loss/mean_squared_error/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/compute_loss/mean_squared_error/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/div_grad/tuple/control_dependency"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/Sum_1_grad/Tile"
  op: "Tile"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/Sum_1_grad/Reshape"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/Select_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/Select_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/Select_grad/zeros_like"
  op: "Fill"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/Select_grad/zeros_like/shape_as_tensor"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/Select_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/Select_grad/Select"
  op: "Select"
  input: "compute_loss/mean_squared_error/Equal"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/div_grad/tuple/control_dependency_1"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/Select_grad/Select_1"
  op: "Select"
  input: "compute_loss/mean_squared_error/Equal"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/Select_grad/zeros_like"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/div_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_1/compute_loss/mean_squared_error/Select_grad/Select"
  input: "^train_op/gradients_1/compute_loss/mean_squared_error/Select_grad/Select_1"
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/Select_grad/Select"
  input: "^train_op/gradients_1/compute_loss/mean_squared_error/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/compute_loss/mean_squared_error/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/Select_grad/Select_1"
  input: "^train_op/gradients_1/compute_loss/mean_squared_error/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/compute_loss/mean_squared_error/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/Sum_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/Sum_1_grad/Tile"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/Sum_grad/Shape"
  op: "Shape"
  input: "compute_loss/mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/Sum_grad/Tile"
  op: "Tile"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/Sum_grad/Reshape"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/Mul_grad/Shape"
  op: "Shape"
  input: "compute_loss/mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/Mul_grad/Shape"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/Mul_grad/Mul"
  op: "Mul"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/Sum_grad/Tile"
  input: "compute_loss/mean_squared_error/ToFloat_3/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/Mul_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/Mul_grad/Mul"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/Mul_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/Mul_grad/Sum"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/Mul_grad/Mul_1"
  op: "Mul"
  input: "compute_loss/mean_squared_error/SquaredDifference"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/Mul_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/Mul_grad/Mul_1"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/Mul_grad/Sum_1"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_1/compute_loss/mean_squared_error/Mul_grad/Reshape"
  input: "^train_op/gradients_1/compute_loss/mean_squared_error/Mul_grad/Reshape_1"
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/Mul_grad/Reshape"
  input: "^train_op/gradients_1/compute_loss/mean_squared_error/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/compute_loss/mean_squared_error/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/Mul_grad/Reshape_1"
  input: "^train_op/gradients_1/compute_loss/mean_squared_error/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/compute_loss/mean_squared_error/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/num_present_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/num_present_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/Select_grad/tuple/control_dependency_1"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/num_present_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/num_present_grad/Shape"
  op: "Shape"
  input: "compute_loss/mean_squared_error/num_present/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/num_present_grad/Tile"
  op: "Tile"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/num_present_grad/Reshape"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/num_present_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Shape_1"
  op: "Shape"
  input: "compute_loss/mean_squared_error/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Shape"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Mul"
  op: "Mul"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/num_present_grad/Tile"
  input: "compute_loss/mean_squared_error/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Mul"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Sum"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Mul_1"
  op: "Mul"
  input: "compute_loss/mean_squared_error/num_present/Select"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/num_present_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Mul_1"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Sum_1"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_1/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Reshape"
  input: "^train_op/gradients_1/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Reshape_1"
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Reshape"
  input: "^train_op/gradients_1/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Reshape_1"
  input: "^train_op/gradients_1/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/num_present/broadcast_weights/ones_like_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/num_present/broadcast_weights/ones_like_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/tuple/control_dependency_1"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/num_present/broadcast_weights/ones_like_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "compute_loss/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "IteratorGetNext:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/Shape"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^train_op/gradients_1/compute_loss/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/mul"
  op: "Mul"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/scalar"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/sub"
  op: "Sub"
  input: "compute_loss/strided_slice_1"
  input: "IteratorGetNext:1"
  input: "^train_op/gradients_1/compute_loss/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/mul"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/Sum"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/Sum_1"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/Reshape"
  input: "^train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/Neg"
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/Reshape"
  input: "^train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/Neg"
  input: "^train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/strided_slice_1_grad/Shape"
  op: "Shape"
  input: "pose_prediction/final_prediction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/compute_loss/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients_1/compute_loss/strided_slice_1_grad/Shape"
  input: "compute_loss/strided_slice_1/stack"
  input: "compute_loss/strided_slice_1/stack_1"
  input: "compute_loss/strided_slice_1/stack_2"
  input: "train_op/gradients_1/compute_loss/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/concat_grad/mod"
  op: "FloorMod"
  input: "pose_prediction/concat/axis"
  input: "train_op/gradients_1/pose_prediction/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/concat_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/concat_grad/ShapeN"
  op: "ShapeN"
  input: "pose_prediction/Mean_Prediction/dense_3/BiasAdd"
  input: "pose_prediction/Variance_Prediction/concat"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train_op/gradients_1/pose_prediction/concat_grad/mod"
  input: "train_op/gradients_1/pose_prediction/concat_grad/ShapeN"
  input: "train_op/gradients_1/pose_prediction/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/concat_grad/Slice"
  op: "Slice"
  input: "train_op/gradients_1/compute_loss/strided_slice_1_grad/StridedSliceGrad"
  input: "train_op/gradients_1/pose_prediction/concat_grad/ConcatOffset"
  input: "train_op/gradients_1/pose_prediction/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/concat_grad/Slice_1"
  op: "Slice"
  input: "train_op/gradients_1/compute_loss/strided_slice_1_grad/StridedSliceGrad"
  input: "train_op/gradients_1/pose_prediction/concat_grad/ConcatOffset:1"
  input: "train_op/gradients_1/pose_prediction/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_1/pose_prediction/concat_grad/Slice"
  input: "^train_op/gradients_1/pose_prediction/concat_grad/Slice_1"
}
node {
  name: "train_op/gradients_1/pose_prediction/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/concat_grad/Slice"
  input: "^train_op/gradients_1/pose_prediction/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/concat_grad/Slice_1"
  input: "^train_op/gradients_1/pose_prediction/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/mod"
  op: "FloorMod"
  input: "pose_prediction/Variance_Prediction/concat/axis"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/ShapeN"
  op: "ShapeN"
  input: "pose_prediction/Variance_Prediction/add"
  input: "pose_prediction/Variance_Prediction/add_1"
  input: "pose_prediction/Variance_Prediction/add_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/mod"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/ShapeN"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/ShapeN:1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/ShapeN:2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/Slice"
  op: "Slice"
  input: "train_op/gradients_1/pose_prediction/concat_grad/tuple/control_dependency_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/ConcatOffset"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/Slice_1"
  op: "Slice"
  input: "train_op/gradients_1/pose_prediction/concat_grad/tuple/control_dependency_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/ConcatOffset:1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/Slice_2"
  op: "Slice"
  input: "train_op/gradients_1/pose_prediction/concat_grad/tuple/control_dependency_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/ConcatOffset:2"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/ShapeN:2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/Slice"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/Slice_1"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/Slice_2"
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/Slice"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/Slice_1"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/Slice_2"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/Slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/Fill"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_grad/Shape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/tuple/control_dependency"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_grad/Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/tuple/control_dependency"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_grad/Sum_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/add_grad/Reshape"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/add_grad/Reshape_1"
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_grad/Reshape"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_grad/Reshape_1"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_1_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_1_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/Fill_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_1_grad/Shape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_1_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/tuple/control_dependency_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_1_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_1_grad/Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_1_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/tuple/control_dependency_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_1_grad/Sum_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/add_1_grad/Reshape"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/add_1_grad/Reshape_1"
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_1_grad/Reshape"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_1_grad/Reshape_1"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_2_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_2_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/Fill_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_2_grad/Shape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_2_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/tuple/control_dependency_2"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_2_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_2_grad/Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_2_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/concat_grad/tuple/control_dependency_2"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_2_grad/Sum_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/add_2_grad/Reshape"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/add_2_grad/Reshape_1"
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_2_grad/Reshape"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/add_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_2_grad/Reshape_1"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/add_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Fill_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Fill_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_grad/tuple/control_dependency_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Fill_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Fill_1_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Fill_1_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_1_grad/tuple/control_dependency_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Fill_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Fill_2_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Fill_2_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_2_grad/tuple/control_dependency_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Fill_2_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_grad/stack"
  op: "Pack"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_grad/Rank"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_grad/Reshape"
  op: "Reshape"
  input: "pose_prediction/Variance_Prediction/Slice/begin"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_grad/sub"
  op: "Sub"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_grad/Shape_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_grad/sub_1"
  op: "Sub"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_grad/sub"
  input: "pose_prediction/Variance_Prediction/Slice/begin"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_grad/sub_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_grad/concat"
  op: "ConcatV2"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_grad/Reshape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_grad/Reshape_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_grad/Pad"
  op: "Pad"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_grad/tuple/control_dependency"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_1_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_1_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_1_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_1_grad/stack"
  op: "Pack"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_1_grad/Rank"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_1_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_1_grad/Reshape"
  op: "Reshape"
  input: "pose_prediction/Variance_Prediction/Slice_1/begin"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_1_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_1_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_1_grad/sub"
  op: "Sub"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_1_grad/Shape_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_1_grad/sub_1"
  op: "Sub"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_1_grad/sub"
  input: "pose_prediction/Variance_Prediction/Slice_1/begin"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_1_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_1_grad/sub_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_1_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_1_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_1_grad/concat"
  op: "ConcatV2"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_1_grad/Reshape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_1_grad/Reshape_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_1_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_1_grad/Pad"
  op: "Pad"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_1_grad/tuple/control_dependency"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_2_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_2_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_2_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_2_grad/stack"
  op: "Pack"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_2_grad/Rank"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_2_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_2_grad/Reshape"
  op: "Reshape"
  input: "pose_prediction/Variance_Prediction/Slice_2/begin"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_2_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_2_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_2_grad/sub"
  op: "Sub"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_2_grad/Shape_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_2_grad/sub_1"
  op: "Sub"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_2_grad/sub"
  input: "pose_prediction/Variance_Prediction/Slice_2/begin"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_2_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_2_grad/sub_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_2_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_2_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_2_grad/concat"
  op: "ConcatV2"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_2_grad/Reshape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_2_grad/Reshape_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_2_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_2_grad/Pad"
  op: "Pad"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/add_2_grad/tuple/control_dependency"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_2_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/AddN"
  op: "AddN"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_grad/Pad"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_1_grad/Pad"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_2_grad/Pad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/Slice_grad/Pad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/Exp_grad/mul"
  op: "Mul"
  input: "train_op/gradients_1/AddN"
  input: "pose_prediction/Variance_Prediction/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Exp_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/Exp_grad/mul"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dense_3/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/Exp_grad/mul"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dense_3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/Exp_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_3/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dense_3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/dense_3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_3/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_3/BiasAdd_grad/tuple/control_dependency"
  input: "Variance_Prediction/dense_3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_3/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/Merge"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_3/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dense_3/MatMul_grad/MatMul"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dense_3/MatMul_grad/MatMul_1"
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_3/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_3/MatMul_grad/MatMul"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dense_3/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/dense_3/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_3/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_3/MatMul_grad/MatMul_1"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dense_3/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/dense_3/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_3/MatMul_grad/tuple/control_dependency"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/dense_3/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/Merge_grad/cond_grad"
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/Merge_grad/cond_grad"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/dense_3/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/Merge_grad/cond_grad:1"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/dense_3/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Shape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/Merge_grad/tuple/control_dependency_1"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Mul"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Mul_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Sum_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Reshape"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Reshape_1"
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Reshape"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Reshape_1"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/Switch"
  op: "Switch"
  input: "pose_prediction/Variance_Prediction/dense_2/BiasAdd"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/Shape_1"
  op: "Shape"
  input: "train_op/gradients_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients_1/zeros"
  op: "Fill"
  input: "train_op/gradients_1/Shape_1"
  input: "train_op/gradients_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/Merge_grad/tuple/control_dependency"
  input: "train_op/gradients_1/zeros"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Shape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/tuple/control_dependency"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/RealDiv"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Neg"
  op: "Neg"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Neg"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/RealDiv_1"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/mul"
  op: "Mul"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/mul_grad/tuple/control_dependency"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/mul"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Sum_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Reshape"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Reshape_1"
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Reshape"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Reshape_1"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/Switch_1"
  op: "Switch"
  input: "pose_prediction/Variance_Prediction/dense_2/BiasAdd"
  input: "pose_prediction/Variance_Prediction/dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/Shape_2"
  op: "Shape"
  input: "train_op/gradients_1/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients_1/zeros_1"
  op: "Fill"
  input: "train_op/gradients_1/Shape_2"
  input: "train_op/gradients_1/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "train_op/gradients_1/zeros_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/div_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/AddN_1"
  op: "AddN"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/Identity/Switch_grad/cond_grad"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients_1/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_1/AddN_1"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dense_2/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_1/AddN_1"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dense_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_2/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_2/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dense_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/dense_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_2/BiasAdd_grad/tuple/control_dependency"
  input: "Variance_Prediction/dense_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_2/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dense_2/MatMul_grad/MatMul"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dense_2/MatMul_grad/MatMul_1"
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_2/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_2/MatMul_grad/MatMul"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dense_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/dense_2/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_2/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_2/MatMul_grad/MatMul_1"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dense_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/dense_2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/LeakyRelu_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Shape_2"
  op: "Shape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_2/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/zeros"
  op: "Fill"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Shape_2"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "pose_prediction/Variance_Prediction/LeakyRelu_1/mul"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Shape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Select"
  op: "Select"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/GreaterEqual"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_2/MatMul_grad/tuple/control_dependency"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Select_1"
  op: "Select"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/GreaterEqual"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/zeros"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_2/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Select"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Select_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Sum_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Reshape"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Reshape_1"
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Reshape"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Reshape_1"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Shape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Mul"
  op: "Mul"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/tuple/control_dependency"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Mul"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Mul_1"
  op: "Mul"
  input: "pose_prediction/Variance_Prediction/LeakyRelu_1/alpha"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Mul_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Sum_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Reshape"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Reshape_1"
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Reshape"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Reshape_1"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/AddN_2"
  op: "AddN"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/tuple/control_dependency_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train_op/gradients_1/AddN_2"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/Merge_grad/cond_grad"
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/Merge_grad/cond_grad"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/Merge_grad/cond_grad:1"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu_1/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Shape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/Merge_grad/tuple/control_dependency_1"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Mul"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Mul_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Sum_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Reshape"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Reshape_1"
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Reshape"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Reshape_1"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/Switch_2"
  op: "Switch"
  input: "pose_prediction/Variance_Prediction/dense_1/BiasAdd"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/Shape_3"
  op: "Shape"
  input: "train_op/gradients_1/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/zeros_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients_1/zeros_2"
  op: "Fill"
  input: "train_op/gradients_1/Shape_3"
  input: "train_op/gradients_1/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/Merge_grad/tuple/control_dependency"
  input: "train_op/gradients_1/zeros_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Shape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/tuple/control_dependency"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/RealDiv"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Neg"
  op: "Neg"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Neg"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/RealDiv_1"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/mul"
  op: "Mul"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/mul_grad/tuple/control_dependency"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/mul"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Sum_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Reshape"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Reshape_1"
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Reshape"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Reshape_1"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/Switch_3"
  op: "Switch"
  input: "pose_prediction/Variance_Prediction/dense_1/BiasAdd"
  input: "pose_prediction/Variance_Prediction/dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/Shape_4"
  op: "Shape"
  input: "train_op/gradients_1/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/zeros_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients_1/zeros_3"
  op: "Fill"
  input: "train_op/gradients_1/Shape_4"
  input: "train_op/gradients_1/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "train_op/gradients_1/zeros_3"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/div_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/AddN_3"
  op: "AddN"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/Identity/Switch_grad/cond_grad"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients_1/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_1/AddN_3"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dense_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_1/AddN_3"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dense_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/dropout_1/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_1/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dense_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/dense_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_1/BiasAdd_grad/tuple/control_dependency"
  input: "Variance_Prediction/dense_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "pose_prediction/Variance_Prediction/LeakyRelu/Maximum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dense_1/MatMul_grad/MatMul"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dense_1/MatMul_grad/MatMul_1"
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_1/MatMul_grad/MatMul"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dense_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/dense_1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_1/MatMul_grad/MatMul_1"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dense_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/dense_1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/LeakyRelu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/dropout/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Shape_2"
  op: "Shape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_1/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/zeros"
  op: "Fill"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Shape_2"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "pose_prediction/Variance_Prediction/LeakyRelu/mul"
  input: "pose_prediction/Variance_Prediction/dropout/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Shape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Select"
  op: "Select"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/GreaterEqual"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_1/MatMul_grad/tuple/control_dependency"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Select_1"
  op: "Select"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/GreaterEqual"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/zeros"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_1/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Select"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Select_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Sum_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Reshape"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Reshape_1"
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Reshape"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Reshape_1"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/dropout/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Shape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Mul"
  op: "Mul"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/tuple/control_dependency"
  input: "pose_prediction/Variance_Prediction/dropout/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Mul"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Mul_1"
  op: "Mul"
  input: "pose_prediction/Variance_Prediction/LeakyRelu/alpha"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Mul_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Sum_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Reshape"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Reshape_1"
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Reshape"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Reshape_1"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/AddN_4"
  op: "AddN"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/tuple/control_dependency_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train_op/gradients_1/AddN_4"
  input: "pose_prediction/Variance_Prediction/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/Merge_grad/cond_grad"
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/Merge_grad/cond_grad"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/Merge_grad/cond_grad:1"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/LeakyRelu/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/dropout/cond/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/dropout/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Shape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/Merge_grad/tuple/control_dependency_1"
  input: "pose_prediction/Variance_Prediction/dropout/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Mul"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "pose_prediction/Variance_Prediction/dropout/cond/dropout/div"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Mul_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Sum_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Reshape"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Reshape_1"
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Reshape"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Reshape_1"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/Switch_4"
  op: "Switch"
  input: "pose_prediction/Variance_Prediction/dense/BiasAdd"
  input: "pose_prediction/Variance_Prediction/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/Shape_5"
  op: "Shape"
  input: "train_op/gradients_1/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/zeros_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients_1/zeros_4"
  op: "Fill"
  input: "train_op/gradients_1/Shape_5"
  input: "train_op/gradients_1/zeros_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/Merge_grad/tuple/control_dependency"
  input: "train_op/gradients_1/zeros_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Variance_Prediction/dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Shape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  input: "pose_prediction/Variance_Prediction/dropout/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/RealDiv"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Neg"
  op: "Neg"
  input: "pose_prediction/Variance_Prediction/dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Neg"
  input: "pose_prediction/Variance_Prediction/dropout/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/RealDiv_1"
  input: "pose_prediction/Variance_Prediction/dropout/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/mul"
  op: "Mul"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/mul"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Sum_1"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Reshape"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Reshape_1"
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Reshape"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Reshape_1"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/Switch_5"
  op: "Switch"
  input: "pose_prediction/Variance_Prediction/dense/BiasAdd"
  input: "pose_prediction/Variance_Prediction/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/Shape_6"
  op: "Shape"
  input: "train_op/gradients_1/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/zeros_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients_1/zeros_5"
  op: "Fill"
  input: "train_op/gradients_1/Shape_6"
  input: "train_op/gradients_1/zeros_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "train_op/gradients_1/zeros_5"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/div_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/AddN_5"
  op: "AddN"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/Identity/Switch_grad/cond_grad"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients_1/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_1/AddN_5"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dense/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_1/AddN_5"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/dropout/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense/BiasAdd_grad/tuple/control_dependency"
  input: "Variance_Prediction/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5120
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "pose_prediction/CNN/flatten/Reshape"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dense/MatMul_grad/MatMul"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dense/MatMul_grad/MatMul_1"
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense/MatMul_grad/MatMul"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5120
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense/MatMul_grad/MatMul_1"
  input: "^train_op/gradients_1/pose_prediction/Variance_Prediction/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_1/pose_prediction/Variance_Prediction/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "train_op/gradients_2/Fill"
  op: "Fill"
  input: "train_op/gradients_2/Shape"
  input: "train_op/gradients_2/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/value_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/value_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/value_grad/zeros_like"
  op: "Fill"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/value_grad/zeros_like/shape_as_tensor"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/value_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/value_grad/Select"
  op: "Select"
  input: "compute_loss/mean_squared_error/Greater"
  input: "train_op/gradients_2/Fill"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/value_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/value_grad/Select_1"
  op: "Select"
  input: "compute_loss/mean_squared_error/Greater"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/value_grad/zeros_like"
  input: "train_op/gradients_2/Fill"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_2/compute_loss/mean_squared_error/value_grad/Select"
  input: "^train_op/gradients_2/compute_loss/mean_squared_error/value_grad/Select_1"
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/value_grad/Select"
  input: "^train_op/gradients_2/compute_loss/mean_squared_error/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/compute_loss/mean_squared_error/value_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/value_grad/Select_1"
  input: "^train_op/gradients_2/compute_loss/mean_squared_error/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/compute_loss/mean_squared_error/value_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/div_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/div_grad/Shape"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/div_grad/RealDiv"
  op: "RealDiv"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/value_grad/tuple/control_dependency"
  input: "compute_loss/mean_squared_error/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/div_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/div_grad/RealDiv"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/div_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/div_grad/Sum"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/div_grad/Neg"
  op: "Neg"
  input: "compute_loss/mean_squared_error/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/div_grad/Neg"
  input: "compute_loss/mean_squared_error/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/div_grad/RealDiv_1"
  input: "compute_loss/mean_squared_error/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/div_grad/mul"
  op: "Mul"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/value_grad/tuple/control_dependency"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/div_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/div_grad/mul"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/div_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/div_grad/Sum_1"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_2/compute_loss/mean_squared_error/div_grad/Reshape"
  input: "^train_op/gradients_2/compute_loss/mean_squared_error/div_grad/Reshape_1"
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/div_grad/Reshape"
  input: "^train_op/gradients_2/compute_loss/mean_squared_error/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/compute_loss/mean_squared_error/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/div_grad/Reshape_1"
  input: "^train_op/gradients_2/compute_loss/mean_squared_error/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/compute_loss/mean_squared_error/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/div_grad/tuple/control_dependency"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/Sum_1_grad/Tile"
  op: "Tile"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/Sum_1_grad/Reshape"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/Select_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/Select_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/Select_grad/zeros_like"
  op: "Fill"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/Select_grad/zeros_like/shape_as_tensor"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/Select_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/Select_grad/Select"
  op: "Select"
  input: "compute_loss/mean_squared_error/Equal"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/div_grad/tuple/control_dependency_1"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/Select_grad/Select_1"
  op: "Select"
  input: "compute_loss/mean_squared_error/Equal"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/Select_grad/zeros_like"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/div_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_2/compute_loss/mean_squared_error/Select_grad/Select"
  input: "^train_op/gradients_2/compute_loss/mean_squared_error/Select_grad/Select_1"
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/Select_grad/Select"
  input: "^train_op/gradients_2/compute_loss/mean_squared_error/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/compute_loss/mean_squared_error/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/Select_grad/Select_1"
  input: "^train_op/gradients_2/compute_loss/mean_squared_error/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/compute_loss/mean_squared_error/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/Sum_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/Sum_1_grad/Tile"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/Sum_grad/Shape"
  op: "Shape"
  input: "compute_loss/mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/Sum_grad/Tile"
  op: "Tile"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/Sum_grad/Reshape"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/Mul_grad/Shape"
  op: "Shape"
  input: "compute_loss/mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/Mul_grad/Shape"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/Mul_grad/Mul"
  op: "Mul"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/Sum_grad/Tile"
  input: "compute_loss/mean_squared_error/ToFloat_3/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/Mul_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/Mul_grad/Mul"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/Mul_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/Mul_grad/Sum"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/Mul_grad/Mul_1"
  op: "Mul"
  input: "compute_loss/mean_squared_error/SquaredDifference"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/Mul_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/Mul_grad/Mul_1"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/Mul_grad/Sum_1"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_2/compute_loss/mean_squared_error/Mul_grad/Reshape"
  input: "^train_op/gradients_2/compute_loss/mean_squared_error/Mul_grad/Reshape_1"
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/Mul_grad/Reshape"
  input: "^train_op/gradients_2/compute_loss/mean_squared_error/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/compute_loss/mean_squared_error/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/Mul_grad/Reshape_1"
  input: "^train_op/gradients_2/compute_loss/mean_squared_error/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/compute_loss/mean_squared_error/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/num_present_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/num_present_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/Select_grad/tuple/control_dependency_1"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/num_present_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/num_present_grad/Shape"
  op: "Shape"
  input: "compute_loss/mean_squared_error/num_present/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/num_present_grad/Tile"
  op: "Tile"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/num_present_grad/Reshape"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/num_present_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Shape_1"
  op: "Shape"
  input: "compute_loss/mean_squared_error/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Shape"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Mul"
  op: "Mul"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/num_present_grad/Tile"
  input: "compute_loss/mean_squared_error/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Mul"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Sum"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Mul_1"
  op: "Mul"
  input: "compute_loss/mean_squared_error/num_present/Select"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/num_present_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Mul_1"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Sum_1"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_2/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Reshape"
  input: "^train_op/gradients_2/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Reshape_1"
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Reshape"
  input: "^train_op/gradients_2/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Reshape_1"
  input: "^train_op/gradients_2/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/num_present/broadcast_weights/ones_like_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/num_present/broadcast_weights/ones_like_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/num_present/broadcast_weights_grad/tuple/control_dependency_1"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/num_present/broadcast_weights/ones_like_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "compute_loss/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "IteratorGetNext:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/Shape"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^train_op/gradients_2/compute_loss/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/mul"
  op: "Mul"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/scalar"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/sub"
  op: "Sub"
  input: "compute_loss/strided_slice_1"
  input: "IteratorGetNext:1"
  input: "^train_op/gradients_2/compute_loss/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/mul"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/Sum"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/Sum_1"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/Reshape"
  input: "^train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/Neg"
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/Reshape"
  input: "^train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/Neg"
  input: "^train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/strided_slice_1_grad/Shape"
  op: "Shape"
  input: "pose_prediction/final_prediction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/compute_loss/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "train_op/gradients_2/compute_loss/strided_slice_1_grad/Shape"
  input: "compute_loss/strided_slice_1/stack"
  input: "compute_loss/strided_slice_1/stack_1"
  input: "compute_loss/strided_slice_1/stack_2"
  input: "train_op/gradients_2/compute_loss/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/concat_grad/mod"
  op: "FloorMod"
  input: "pose_prediction/concat/axis"
  input: "train_op/gradients_2/pose_prediction/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/concat_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/concat_grad/ShapeN"
  op: "ShapeN"
  input: "pose_prediction/Mean_Prediction/dense_3/BiasAdd"
  input: "pose_prediction/Variance_Prediction/concat"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train_op/gradients_2/pose_prediction/concat_grad/mod"
  input: "train_op/gradients_2/pose_prediction/concat_grad/ShapeN"
  input: "train_op/gradients_2/pose_prediction/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/concat_grad/Slice"
  op: "Slice"
  input: "train_op/gradients_2/compute_loss/strided_slice_1_grad/StridedSliceGrad"
  input: "train_op/gradients_2/pose_prediction/concat_grad/ConcatOffset"
  input: "train_op/gradients_2/pose_prediction/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/concat_grad/Slice_1"
  op: "Slice"
  input: "train_op/gradients_2/compute_loss/strided_slice_1_grad/StridedSliceGrad"
  input: "train_op/gradients_2/pose_prediction/concat_grad/ConcatOffset:1"
  input: "train_op/gradients_2/pose_prediction/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_2/pose_prediction/concat_grad/Slice"
  input: "^train_op/gradients_2/pose_prediction/concat_grad/Slice_1"
}
node {
  name: "train_op/gradients_2/pose_prediction/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/concat_grad/Slice"
  input: "^train_op/gradients_2/pose_prediction/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/concat_grad/Slice_1"
  input: "^train_op/gradients_2/pose_prediction/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients_2/pose_prediction/concat_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_2/pose_prediction/concat_grad/tuple/control_dependency"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dense_3/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/concat_grad/tuple/control_dependency"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dense_3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_3/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dense_3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/dense_3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_3/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_3/BiasAdd_grad/tuple/control_dependency"
  input: "Mean_Prediction/dense_3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_3/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/Merge"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_3/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dense_3/MatMul_grad/MatMul"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dense_3/MatMul_grad/MatMul_1"
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_3/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_3/MatMul_grad/MatMul"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dense_3/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/dense_3/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_3/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_3/MatMul_grad/MatMul_1"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dense_3/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/dense_3/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_3/MatMul_grad/tuple/control_dependency"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/dense_3/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/Merge_grad/cond_grad"
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/Merge_grad/cond_grad"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/dense_3/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/Merge_grad/cond_grad:1"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/dense_3/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Shape"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/Merge_grad/tuple/control_dependency_1"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Mul"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Sum"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Mul_1"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Sum_1"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Reshape"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Reshape_1"
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Reshape"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Reshape_1"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/Switch"
  op: "Switch"
  input: "pose_prediction/Mean_Prediction/dense_2/BiasAdd"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/Shape_1"
  op: "Shape"
  input: "train_op/gradients_2/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients_2/zeros"
  op: "Fill"
  input: "train_op/gradients_2/Shape_1"
  input: "train_op/gradients_2/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/Merge_grad/tuple/control_dependency"
  input: "train_op/gradients_2/zeros"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Shape"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/tuple/control_dependency"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/RealDiv"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Sum"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Neg"
  op: "Neg"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Neg"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/RealDiv_1"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/mul"
  op: "Mul"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/mul_grad/tuple/control_dependency"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/mul"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Sum_1"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Reshape"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Reshape_1"
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Reshape"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Reshape_1"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/Switch_1"
  op: "Switch"
  input: "pose_prediction/Mean_Prediction/dense_2/BiasAdd"
  input: "pose_prediction/Mean_Prediction/dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/Shape_2"
  op: "Shape"
  input: "train_op/gradients_2/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients_2/zeros_1"
  op: "Fill"
  input: "train_op/gradients_2/Shape_2"
  input: "train_op/gradients_2/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "train_op/gradients_2/zeros_1"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/div_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/AddN"
  op: "AddN"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/Identity/Switch_grad/cond_grad"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients_2/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_2/AddN"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dense_2/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_2/AddN"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dense_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_2/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_2/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dense_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/dense_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_2/BiasAdd_grad/tuple/control_dependency"
  input: "Mean_Prediction/dense_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_2/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dense_2/MatMul_grad/MatMul"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dense_2/MatMul_grad/MatMul_1"
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_2/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_2/MatMul_grad/MatMul"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dense_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/dense_2/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_2/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_2/MatMul_grad/MatMul_1"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dense_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/dense_2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/LeakyRelu_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Shape_2"
  op: "Shape"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_2/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/zeros"
  op: "Fill"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Shape_2"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "pose_prediction/Mean_Prediction/LeakyRelu_1/mul"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Shape"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Select"
  op: "Select"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/GreaterEqual"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_2/MatMul_grad/tuple/control_dependency"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Select_1"
  op: "Select"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/GreaterEqual"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/zeros"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_2/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Select"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Sum"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Select_1"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Sum_1"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Reshape"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Reshape_1"
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Reshape"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Reshape_1"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Shape"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Mul"
  op: "Mul"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/tuple/control_dependency"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Mul"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Sum"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Mul_1"
  op: "Mul"
  input: "pose_prediction/Mean_Prediction/LeakyRelu_1/alpha"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Mul_1"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Sum_1"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Reshape"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Reshape_1"
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Reshape"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Reshape_1"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/AddN_1"
  op: "AddN"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/tuple/control_dependency_1"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train_op/gradients_2/AddN_1"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/Merge_grad/cond_grad"
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/Merge_grad/cond_grad"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/Merge_grad/cond_grad:1"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu_1/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Shape"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/Merge_grad/tuple/control_dependency_1"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Mul"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Sum"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Mul_1"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Sum_1"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Reshape"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Reshape_1"
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Reshape"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Reshape_1"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/Switch_2"
  op: "Switch"
  input: "pose_prediction/Mean_Prediction/dense_1/BiasAdd"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/Shape_3"
  op: "Shape"
  input: "train_op/gradients_2/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/zeros_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients_2/zeros_2"
  op: "Fill"
  input: "train_op/gradients_2/Shape_3"
  input: "train_op/gradients_2/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/Merge_grad/tuple/control_dependency"
  input: "train_op/gradients_2/zeros_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Shape"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/tuple/control_dependency"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/RealDiv"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Sum"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Neg"
  op: "Neg"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Neg"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/RealDiv_1"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/mul"
  op: "Mul"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/mul_grad/tuple/control_dependency"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/mul"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Sum_1"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Reshape"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Reshape_1"
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Reshape"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Reshape_1"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/Switch_3"
  op: "Switch"
  input: "pose_prediction/Mean_Prediction/dense_1/BiasAdd"
  input: "pose_prediction/Mean_Prediction/dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/Shape_4"
  op: "Shape"
  input: "train_op/gradients_2/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/zeros_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients_2/zeros_3"
  op: "Fill"
  input: "train_op/gradients_2/Shape_4"
  input: "train_op/gradients_2/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "train_op/gradients_2/zeros_3"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/div_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/AddN_2"
  op: "AddN"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/Identity/Switch_grad/cond_grad"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients_2/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_2/AddN_2"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dense_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_2/AddN_2"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dense_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/dropout_1/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_1/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dense_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/dense_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_1/BiasAdd_grad/tuple/control_dependency"
  input: "Mean_Prediction/dense_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "pose_prediction/Mean_Prediction/LeakyRelu/Maximum"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dense_1/MatMul_grad/MatMul"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dense_1/MatMul_grad/MatMul_1"
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_1/MatMul_grad/MatMul"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dense_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/dense_1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_1/MatMul_grad/MatMul_1"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dense_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/dense_1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/LeakyRelu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/dropout/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Shape_2"
  op: "Shape"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_1/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/zeros"
  op: "Fill"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Shape_2"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "pose_prediction/Mean_Prediction/LeakyRelu/mul"
  input: "pose_prediction/Mean_Prediction/dropout/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Shape"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Select"
  op: "Select"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/GreaterEqual"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_1/MatMul_grad/tuple/control_dependency"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Select_1"
  op: "Select"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/GreaterEqual"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/zeros"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_1/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Select"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Sum"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Select_1"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Sum_1"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Reshape"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Reshape_1"
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Reshape"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Reshape_1"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/dropout/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Shape"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Mul"
  op: "Mul"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/tuple/control_dependency"
  input: "pose_prediction/Mean_Prediction/dropout/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Mul"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Sum"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Mul_1"
  op: "Mul"
  input: "pose_prediction/Mean_Prediction/LeakyRelu/alpha"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Mul_1"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Sum_1"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Reshape"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Reshape_1"
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Reshape"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Reshape_1"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/AddN_3"
  op: "AddN"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/tuple/control_dependency_1"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train_op/gradients_2/AddN_3"
  input: "pose_prediction/Mean_Prediction/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/Merge_grad/cond_grad"
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/Merge_grad/cond_grad"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/Merge_grad/cond_grad:1"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/LeakyRelu/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/dropout/cond/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/dropout/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Shape"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/Merge_grad/tuple/control_dependency_1"
  input: "pose_prediction/Mean_Prediction/dropout/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Mul"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Sum"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "pose_prediction/Mean_Prediction/dropout/cond/dropout/div"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Mul_1"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Sum_1"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Reshape"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Reshape_1"
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Reshape"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Reshape_1"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/Switch_4"
  op: "Switch"
  input: "pose_prediction/Mean_Prediction/dense/BiasAdd"
  input: "pose_prediction/Mean_Prediction/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/Shape_5"
  op: "Shape"
  input: "train_op/gradients_2/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/zeros_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients_2/zeros_4"
  op: "Fill"
  input: "train_op/gradients_2/Shape_5"
  input: "train_op/gradients_2/zeros_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/Merge_grad/tuple/control_dependency"
  input: "train_op/gradients_2/zeros_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Shape"
  op: "Shape"
  input: "pose_prediction/Mean_Prediction/dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Shape"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  input: "pose_prediction/Mean_Prediction/dropout/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Sum"
  op: "Sum"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/RealDiv"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Sum"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Neg"
  op: "Neg"
  input: "pose_prediction/Mean_Prediction/dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Neg"
  input: "pose_prediction/Mean_Prediction/dropout/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/RealDiv_1"
  input: "pose_prediction/Mean_Prediction/dropout/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/mul"
  op: "Mul"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/mul"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Sum_1"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Reshape"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Reshape_1"
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Reshape"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Reshape_1"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/Switch_5"
  op: "Switch"
  input: "pose_prediction/Mean_Prediction/dense/BiasAdd"
  input: "pose_prediction/Mean_Prediction/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/Shape_6"
  op: "Shape"
  input: "train_op/gradients_2/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/zeros_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train_op/gradients_2/zeros_5"
  op: "Fill"
  input: "train_op/gradients_2/Shape_6"
  input: "train_op/gradients_2/zeros_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "train_op/gradients_2/zeros_5"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/div_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/AddN_4"
  op: "AddN"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/Identity/Switch_grad/cond_grad"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients_2/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_2/AddN_4"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dense/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_2/AddN_4"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/dropout/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense/BiasAdd_grad/tuple/control_dependency"
  input: "Mean_Prediction/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5120
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "pose_prediction/CNN/flatten/Reshape"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dense/MatMul_grad/MatMul"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dense/MatMul_grad/MatMul_1"
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense/MatMul_grad/MatMul"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5120
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense/MatMul_grad/MatMul_1"
  input: "^train_op/gradients_2/pose_prediction/Mean_Prediction/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/gradients_2/pose_prediction/Mean_Prediction/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train_op/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_op/beta1_power/Assign"
  op: "Assign"
  input: "train_op/beta1_power"
  input: "train_op/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/beta1_power/read"
  op: "Identity"
  input: "train_op/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train_op/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_op/beta2_power/Assign"
  op: "Assign"
  input: "train_op/beta2_power"
  input: "train_op/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/beta2_power/read"
  op: "Identity"
  input: "train_op/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "CNN/conv2d/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d/kernel/Adam/Assign"
  op: "Assign"
  input: "CNN/conv2d/kernel/Adam"
  input: "CNN/conv2d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d/kernel/Adam/read"
  op: "Identity"
  input: "CNN/conv2d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "CNN/conv2d/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "CNN/conv2d/kernel/Adam_1"
  input: "CNN/conv2d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d/kernel/Adam_1/read"
  op: "Identity"
  input: "CNN/conv2d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "CNN/conv2d/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d/bias/Adam/Assign"
  op: "Assign"
  input: "CNN/conv2d/bias/Adam"
  input: "CNN/conv2d/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d/bias/Adam/read"
  op: "Identity"
  input: "CNN/conv2d/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "CNN/conv2d/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d/bias/Adam_1/Assign"
  op: "Assign"
  input: "CNN/conv2d/bias/Adam_1"
  input: "CNN/conv2d/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d/bias/Adam_1/read"
  op: "Identity"
  input: "CNN/conv2d/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "CNN/conv2d_1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_1/kernel/Adam/Assign"
  op: "Assign"
  input: "CNN/conv2d_1/kernel/Adam"
  input: "CNN/conv2d_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_1/kernel/Adam/read"
  op: "Identity"
  input: "CNN/conv2d_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "CNN/conv2d_1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "CNN/conv2d_1/kernel/Adam_1"
  input: "CNN/conv2d_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_1/kernel/Adam_1/read"
  op: "Identity"
  input: "CNN/conv2d_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_1/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "CNN/conv2d_1/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_1/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_1/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_1/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_1/bias/Adam/Assign"
  op: "Assign"
  input: "CNN/conv2d_1/bias/Adam"
  input: "CNN/conv2d_1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_1/bias/Adam/read"
  op: "Identity"
  input: "CNN/conv2d_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_1/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "CNN/conv2d_1/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_1/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_1/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_1/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "CNN/conv2d_1/bias/Adam_1"
  input: "CNN/conv2d_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_1/bias/Adam_1/read"
  op: "Identity"
  input: "CNN/conv2d_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "CNN/conv2d_2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_2/kernel/Adam/Assign"
  op: "Assign"
  input: "CNN/conv2d_2/kernel/Adam"
  input: "CNN/conv2d_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_2/kernel/Adam/read"
  op: "Identity"
  input: "CNN/conv2d_2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "CNN/conv2d_2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "CNN/conv2d_2/kernel/Adam_1"
  input: "CNN/conv2d_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_2/kernel/Adam_1/read"
  op: "Identity"
  input: "CNN/conv2d_2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_2/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "CNN/conv2d_2/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_2/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_2/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_2/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_2/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_2/bias/Adam/Assign"
  op: "Assign"
  input: "CNN/conv2d_2/bias/Adam"
  input: "CNN/conv2d_2/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_2/bias/Adam/read"
  op: "Identity"
  input: "CNN/conv2d_2/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_2/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "CNN/conv2d_2/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_2/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_2/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_2/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_2/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_2/bias/Adam_1/Assign"
  op: "Assign"
  input: "CNN/conv2d_2/bias/Adam_1"
  input: "CNN/conv2d_2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_2/bias/Adam_1/read"
  op: "Identity"
  input: "CNN/conv2d_2/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_3/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "CNN/conv2d_3/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_3/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_3/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_3/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_3/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_3/kernel/Adam/Assign"
  op: "Assign"
  input: "CNN/conv2d_3/kernel/Adam"
  input: "CNN/conv2d_3/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_3/kernel/Adam/read"
  op: "Identity"
  input: "CNN/conv2d_3/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_3/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "CNN/conv2d_3/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_3/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_3/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_3/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_3/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_3/kernel/Adam_1/Assign"
  op: "Assign"
  input: "CNN/conv2d_3/kernel/Adam_1"
  input: "CNN/conv2d_3/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_3/kernel/Adam_1/read"
  op: "Identity"
  input: "CNN/conv2d_3/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_3/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "CNN/conv2d_3/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_3/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_3/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_3/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_3/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_3/bias/Adam/Assign"
  op: "Assign"
  input: "CNN/conv2d_3/bias/Adam"
  input: "CNN/conv2d_3/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_3/bias/Adam/read"
  op: "Identity"
  input: "CNN/conv2d_3/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_3/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "CNN/conv2d_3/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_3/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_3/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_3/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_3/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_3/bias/Adam_1/Assign"
  op: "Assign"
  input: "CNN/conv2d_3/bias/Adam_1"
  input: "CNN/conv2d_3/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_3/bias/Adam_1/read"
  op: "Identity"
  input: "CNN/conv2d_3/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_4/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "CNN/conv2d_4/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_4/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_4/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_4/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_4/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_4/kernel/Adam/Assign"
  op: "Assign"
  input: "CNN/conv2d_4/kernel/Adam"
  input: "CNN/conv2d_4/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_4/kernel/Adam/read"
  op: "Identity"
  input: "CNN/conv2d_4/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_4/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "CNN/conv2d_4/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_4/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_4/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_4/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_4/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_4/kernel/Adam_1/Assign"
  op: "Assign"
  input: "CNN/conv2d_4/kernel/Adam_1"
  input: "CNN/conv2d_4/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_4/kernel/Adam_1/read"
  op: "Identity"
  input: "CNN/conv2d_4/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_4/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "CNN/conv2d_4/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_4/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_4/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_4/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_4/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_4/bias/Adam/Assign"
  op: "Assign"
  input: "CNN/conv2d_4/bias/Adam"
  input: "CNN/conv2d_4/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_4/bias/Adam/read"
  op: "Identity"
  input: "CNN/conv2d_4/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_4/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "CNN/conv2d_4/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_4/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_4/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_4/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_4/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_4/bias/Adam_1/Assign"
  op: "Assign"
  input: "CNN/conv2d_4/bias/Adam_1"
  input: "CNN/conv2d_4/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_4/bias/Adam_1/read"
  op: "Identity"
  input: "CNN/conv2d_4/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_5/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "CNN/conv2d_5/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_5/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_5/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_5/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_5/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_5/kernel/Adam/Assign"
  op: "Assign"
  input: "CNN/conv2d_5/kernel/Adam"
  input: "CNN/conv2d_5/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_5/kernel/Adam/read"
  op: "Identity"
  input: "CNN/conv2d_5/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_5/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "CNN/conv2d_5/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_5/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_5/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_5/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_5/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_5/kernel/Adam_1/Assign"
  op: "Assign"
  input: "CNN/conv2d_5/kernel/Adam_1"
  input: "CNN/conv2d_5/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_5/kernel/Adam_1/read"
  op: "Identity"
  input: "CNN/conv2d_5/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_5/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "CNN/conv2d_5/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_5/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_5/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_5/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_5/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_5/bias/Adam/Assign"
  op: "Assign"
  input: "CNN/conv2d_5/bias/Adam"
  input: "CNN/conv2d_5/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_5/bias/Adam/read"
  op: "Identity"
  input: "CNN/conv2d_5/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_5/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "CNN/conv2d_5/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_5/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_5/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_5/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_5/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_5/bias/Adam_1/Assign"
  op: "Assign"
  input: "CNN/conv2d_5/bias/Adam_1"
  input: "CNN/conv2d_5/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_5/bias/Adam_1/read"
  op: "Identity"
  input: "CNN/conv2d_5/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_6/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "CNN/conv2d_6/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_6/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_6/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_6/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_6/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_6/kernel/Adam/Assign"
  op: "Assign"
  input: "CNN/conv2d_6/kernel/Adam"
  input: "CNN/conv2d_6/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_6/kernel/Adam/read"
  op: "Identity"
  input: "CNN/conv2d_6/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_6/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "CNN/conv2d_6/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_6/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_6/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_6/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_6/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_6/kernel/Adam_1/Assign"
  op: "Assign"
  input: "CNN/conv2d_6/kernel/Adam_1"
  input: "CNN/conv2d_6/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_6/kernel/Adam_1/read"
  op: "Identity"
  input: "CNN/conv2d_6/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_6/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "CNN/conv2d_6/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_6/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_6/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_6/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_6/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_6/bias/Adam/Assign"
  op: "Assign"
  input: "CNN/conv2d_6/bias/Adam"
  input: "CNN/conv2d_6/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_6/bias/Adam/read"
  op: "Identity"
  input: "CNN/conv2d_6/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_6/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "CNN/conv2d_6/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_6/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_6/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_6/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_6/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_6/bias/Adam_1/Assign"
  op: "Assign"
  input: "CNN/conv2d_6/bias/Adam_1"
  input: "CNN/conv2d_6/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_6/bias/Adam_1/read"
  op: "Identity"
  input: "CNN/conv2d_6/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_7/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "CNN/conv2d_7/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_7/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_7/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_7/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_7/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_7/kernel/Adam/Assign"
  op: "Assign"
  input: "CNN/conv2d_7/kernel/Adam"
  input: "CNN/conv2d_7/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_7/kernel/Adam/read"
  op: "Identity"
  input: "CNN/conv2d_7/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_7/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "CNN/conv2d_7/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_7/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_7/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_7/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_7/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_7/kernel/Adam_1/Assign"
  op: "Assign"
  input: "CNN/conv2d_7/kernel/Adam_1"
  input: "CNN/conv2d_7/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_7/kernel/Adam_1/read"
  op: "Identity"
  input: "CNN/conv2d_7/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_7/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "CNN/conv2d_7/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_7/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_7/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_7/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_7/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_7/bias/Adam/Assign"
  op: "Assign"
  input: "CNN/conv2d_7/bias/Adam"
  input: "CNN/conv2d_7/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_7/bias/Adam/read"
  op: "Identity"
  input: "CNN/conv2d_7/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_7/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "CNN/conv2d_7/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_7/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_7/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_7/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_7/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_7/bias/Adam_1/Assign"
  op: "Assign"
  input: "CNN/conv2d_7/bias/Adam_1"
  input: "CNN/conv2d_7/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_7/bias/Adam_1/read"
  op: "Identity"
  input: "CNN/conv2d_7/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_8/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "CNN/conv2d_8/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_8/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_8/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_8/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_8/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_8/kernel/Adam/Assign"
  op: "Assign"
  input: "CNN/conv2d_8/kernel/Adam"
  input: "CNN/conv2d_8/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_8/kernel/Adam/read"
  op: "Identity"
  input: "CNN/conv2d_8/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_8/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "CNN/conv2d_8/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_8/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_8/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_8/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_8/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_8/kernel/Adam_1/Assign"
  op: "Assign"
  input: "CNN/conv2d_8/kernel/Adam_1"
  input: "CNN/conv2d_8/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_8/kernel/Adam_1/read"
  op: "Identity"
  input: "CNN/conv2d_8/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_8/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "CNN/conv2d_8/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_8/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_8/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_8/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_8/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_8/bias/Adam/Assign"
  op: "Assign"
  input: "CNN/conv2d_8/bias/Adam"
  input: "CNN/conv2d_8/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_8/bias/Adam/read"
  op: "Identity"
  input: "CNN/conv2d_8/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_8/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "CNN/conv2d_8/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_8/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_8/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_8/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_8/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_8/bias/Adam_1/Assign"
  op: "Assign"
  input: "CNN/conv2d_8/bias/Adam_1"
  input: "CNN/conv2d_8/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_8/bias/Adam_1/read"
  op: "Identity"
  input: "CNN/conv2d_8/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_9/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "CNN/conv2d_9/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_9/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_9/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_9/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_9/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_9/kernel/Adam/Assign"
  op: "Assign"
  input: "CNN/conv2d_9/kernel/Adam"
  input: "CNN/conv2d_9/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_9/kernel/Adam/read"
  op: "Identity"
  input: "CNN/conv2d_9/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_9/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "CNN/conv2d_9/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_9/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_9/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_9/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_9/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_9/kernel/Adam_1/Assign"
  op: "Assign"
  input: "CNN/conv2d_9/kernel/Adam_1"
  input: "CNN/conv2d_9/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_9/kernel/Adam_1/read"
  op: "Identity"
  input: "CNN/conv2d_9/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_9/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "CNN/conv2d_9/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_9/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_9/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_9/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_9/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_9/bias/Adam/Assign"
  op: "Assign"
  input: "CNN/conv2d_9/bias/Adam"
  input: "CNN/conv2d_9/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_9/bias/Adam/read"
  op: "Identity"
  input: "CNN/conv2d_9/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "CNN/conv2d_9/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "CNN/conv2d_9/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv2d_9/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "CNN/conv2d_9/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "CNN/conv2d_9/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv2d_9/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv2d_9/bias/Adam_1/Assign"
  op: "Assign"
  input: "CNN/conv2d_9/bias/Adam_1"
  input: "CNN/conv2d_9/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv2d_9/bias/Adam_1/read"
  op: "Identity"
  input: "CNN/conv2d_9/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/Adam/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000475
      }
    }
  }
}
node {
  name: "train_op/Adam/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train_op/Adam/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train_op/Adam/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "train_op/Adam/update_CNN/conv2d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "CNN/conv2d/kernel"
  input: "CNN/conv2d/kernel/Adam"
  input: "CNN/conv2d/kernel/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/pose_prediction/CNN/conv2d/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_CNN/conv2d/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "CNN/conv2d/bias"
  input: "CNN/conv2d/bias/Adam"
  input: "CNN/conv2d/bias/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/pose_prediction/CNN/conv2d/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_CNN/conv2d_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "CNN/conv2d_1/kernel"
  input: "CNN/conv2d_1/kernel/Adam"
  input: "CNN/conv2d_1/kernel/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_CNN/conv2d_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "CNN/conv2d_1/bias"
  input: "CNN/conv2d_1/bias/Adam"
  input: "CNN/conv2d_1/bias/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_CNN/conv2d_2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "CNN/conv2d_2/kernel"
  input: "CNN/conv2d_2/kernel/Adam"
  input: "CNN/conv2d_2/kernel/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_2/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_CNN/conv2d_2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "CNN/conv2d_2/bias"
  input: "CNN/conv2d_2/bias/Adam"
  input: "CNN/conv2d_2/bias/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_CNN/conv2d_3/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "CNN/conv2d_3/kernel"
  input: "CNN/conv2d_3/kernel/Adam"
  input: "CNN/conv2d_3/kernel/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_3/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_CNN/conv2d_3/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "CNN/conv2d_3/bias"
  input: "CNN/conv2d_3/bias/Adam"
  input: "CNN/conv2d_3/bias/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_3/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_CNN/conv2d_4/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "CNN/conv2d_4/kernel"
  input: "CNN/conv2d_4/kernel/Adam"
  input: "CNN/conv2d_4/kernel/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_4/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_CNN/conv2d_4/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "CNN/conv2d_4/bias"
  input: "CNN/conv2d_4/bias/Adam"
  input: "CNN/conv2d_4/bias/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_4/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_CNN/conv2d_5/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "CNN/conv2d_5/kernel"
  input: "CNN/conv2d_5/kernel/Adam"
  input: "CNN/conv2d_5/kernel/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_5/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_CNN/conv2d_5/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "CNN/conv2d_5/bias"
  input: "CNN/conv2d_5/bias/Adam"
  input: "CNN/conv2d_5/bias/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_5/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_CNN/conv2d_6/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "CNN/conv2d_6/kernel"
  input: "CNN/conv2d_6/kernel/Adam"
  input: "CNN/conv2d_6/kernel/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_6/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_CNN/conv2d_6/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "CNN/conv2d_6/bias"
  input: "CNN/conv2d_6/bias/Adam"
  input: "CNN/conv2d_6/bias/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_6/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_CNN/conv2d_7/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "CNN/conv2d_7/kernel"
  input: "CNN/conv2d_7/kernel/Adam"
  input: "CNN/conv2d_7/kernel/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_7/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_CNN/conv2d_7/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "CNN/conv2d_7/bias"
  input: "CNN/conv2d_7/bias/Adam"
  input: "CNN/conv2d_7/bias/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_7/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_CNN/conv2d_8/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "CNN/conv2d_8/kernel"
  input: "CNN/conv2d_8/kernel/Adam"
  input: "CNN/conv2d_8/kernel/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_8/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_CNN/conv2d_8/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "CNN/conv2d_8/bias"
  input: "CNN/conv2d_8/bias/Adam"
  input: "CNN/conv2d_8/bias/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_8/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_CNN/conv2d_9/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "CNN/conv2d_9/kernel"
  input: "CNN/conv2d_9/kernel/Adam"
  input: "CNN/conv2d_9/kernel/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_9/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_CNN/conv2d_9/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "CNN/conv2d_9/bias"
  input: "CNN/conv2d_9/bias/Adam"
  input: "CNN/conv2d_9/bias/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/pose_prediction/CNN/conv2d_9/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/mul"
  op: "Mul"
  input: "train_op/beta1_power/read"
  input: "train_op/Adam/beta1"
  input: "^train_op/Adam/update_CNN/conv2d/kernel/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d/bias/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_1/kernel/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_1/bias/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_2/kernel/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_2/bias/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_3/kernel/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_3/bias/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_4/kernel/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_4/bias/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_5/kernel/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_5/bias/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_6/kernel/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_6/bias/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_7/kernel/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_7/bias/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_8/kernel/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_8/bias/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_9/kernel/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_9/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/Adam/Assign"
  op: "Assign"
  input: "train_op/beta1_power"
  input: "train_op/Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/Adam/mul_1"
  op: "Mul"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/beta2"
  input: "^train_op/Adam/update_CNN/conv2d/kernel/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d/bias/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_1/kernel/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_1/bias/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_2/kernel/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_2/bias/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_3/kernel/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_3/bias/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_4/kernel/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_4/bias/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_5/kernel/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_5/bias/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_6/kernel/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_6/bias/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_7/kernel/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_7/bias/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_8/kernel/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_8/bias/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_9/kernel/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_9/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/Adam/Assign_1"
  op: "Assign"
  input: "train_op/beta2_power"
  input: "train_op/Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/Adam"
  op: "NoOp"
  input: "^train_op/Adam/update_CNN/conv2d/kernel/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d/bias/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_1/kernel/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_1/bias/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_2/kernel/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_2/bias/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_3/kernel/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_3/bias/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_4/kernel/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_4/bias/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_5/kernel/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_5/bias/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_6/kernel/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_6/bias/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_7/kernel/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_7/bias/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_8/kernel/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_8/bias/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_9/kernel/ApplyAdam"
  input: "^train_op/Adam/update_CNN/conv2d_9/bias/ApplyAdam"
  input: "^train_op/Adam/Assign"
  input: "^train_op/Adam/Assign_1"
}
node {
  name: "Variance_Prediction/dense/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\024\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Variance_Prediction/dense/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Variance_Prediction/dense/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variance_Prediction/dense/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5120
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variance_Prediction/dense/kernel/Adam/Assign"
  op: "Assign"
  input: "Variance_Prediction/dense/kernel/Adam"
  input: "Variance_Prediction/dense/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variance_Prediction/dense/kernel/Adam/read"
  op: "Identity"
  input: "Variance_Prediction/dense/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\024\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Variance_Prediction/dense/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Variance_Prediction/dense/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variance_Prediction/dense/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5120
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variance_Prediction/dense/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Variance_Prediction/dense/kernel/Adam_1"
  input: "Variance_Prediction/dense/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variance_Prediction/dense/kernel/Adam_1/read"
  op: "Identity"
  input: "Variance_Prediction/dense/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "Variance_Prediction/dense/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "Variance_Prediction/dense/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variance_Prediction/dense/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variance_Prediction/dense/bias/Adam/Assign"
  op: "Assign"
  input: "Variance_Prediction/dense/bias/Adam"
  input: "Variance_Prediction/dense/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variance_Prediction/dense/bias/Adam/read"
  op: "Identity"
  input: "Variance_Prediction/dense/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Variance_Prediction/dense/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Variance_Prediction/dense/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variance_Prediction/dense/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variance_Prediction/dense/bias/Adam_1/Assign"
  op: "Assign"
  input: "Variance_Prediction/dense/bias/Adam_1"
  input: "Variance_Prediction/dense/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variance_Prediction/dense/bias/Adam_1/read"
  op: "Identity"
  input: "Variance_Prediction/dense/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Variance_Prediction/dense_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Variance_Prediction/dense_1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/kernel/Adam/Assign"
  op: "Assign"
  input: "Variance_Prediction/dense_1/kernel/Adam"
  input: "Variance_Prediction/dense_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/kernel/Adam/read"
  op: "Identity"
  input: "Variance_Prediction/dense_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Variance_Prediction/dense_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Variance_Prediction/dense_1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Variance_Prediction/dense_1/kernel/Adam_1"
  input: "Variance_Prediction/dense_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/kernel/Adam_1/read"
  op: "Identity"
  input: "Variance_Prediction/dense_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "Variance_Prediction/dense_1/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "Variance_Prediction/dense_1/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/bias/Adam/Assign"
  op: "Assign"
  input: "Variance_Prediction/dense_1/bias/Adam"
  input: "Variance_Prediction/dense_1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/bias/Adam/read"
  op: "Identity"
  input: "Variance_Prediction/dense_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Variance_Prediction/dense_1/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Variance_Prediction/dense_1/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "Variance_Prediction/dense_1/bias/Adam_1"
  input: "Variance_Prediction/dense_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variance_Prediction/dense_1/bias/Adam_1/read"
  op: "Identity"
  input: "Variance_Prediction/dense_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Variance_Prediction/dense_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Variance_Prediction/dense_2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/kernel/Adam/Assign"
  op: "Assign"
  input: "Variance_Prediction/dense_2/kernel/Adam"
  input: "Variance_Prediction/dense_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/kernel/Adam/read"
  op: "Identity"
  input: "Variance_Prediction/dense_2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Variance_Prediction/dense_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Variance_Prediction/dense_2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Variance_Prediction/dense_2/kernel/Adam_1"
  input: "Variance_Prediction/dense_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/kernel/Adam_1/read"
  op: "Identity"
  input: "Variance_Prediction/dense_2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "Variance_Prediction/dense_2/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "Variance_Prediction/dense_2/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/bias/Adam/Assign"
  op: "Assign"
  input: "Variance_Prediction/dense_2/bias/Adam"
  input: "Variance_Prediction/dense_2/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/bias/Adam/read"
  op: "Identity"
  input: "Variance_Prediction/dense_2/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Variance_Prediction/dense_2/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Variance_Prediction/dense_2/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/bias/Adam_1/Assign"
  op: "Assign"
  input: "Variance_Prediction/dense_2/bias/Adam_1"
  input: "Variance_Prediction/dense_2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variance_Prediction/dense_2/bias/Adam_1/read"
  op: "Identity"
  input: "Variance_Prediction/dense_2/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Variance_Prediction/dense_3/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Variance_Prediction/dense_3/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/kernel/Adam/Assign"
  op: "Assign"
  input: "Variance_Prediction/dense_3/kernel/Adam"
  input: "Variance_Prediction/dense_3/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/kernel/Adam/read"
  op: "Identity"
  input: "Variance_Prediction/dense_3/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Variance_Prediction/dense_3/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Variance_Prediction/dense_3/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Variance_Prediction/dense_3/kernel/Adam_1"
  input: "Variance_Prediction/dense_3/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/kernel/Adam_1/read"
  op: "Identity"
  input: "Variance_Prediction/dense_3/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "Variance_Prediction/dense_3/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "Variance_Prediction/dense_3/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/bias/Adam/Assign"
  op: "Assign"
  input: "Variance_Prediction/dense_3/bias/Adam"
  input: "Variance_Prediction/dense_3/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/bias/Adam/read"
  op: "Identity"
  input: "Variance_Prediction/dense_3/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Variance_Prediction/dense_3/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Variance_Prediction/dense_3/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/bias/Adam_1/Assign"
  op: "Assign"
  input: "Variance_Prediction/dense_3/bias/Adam_1"
  input: "Variance_Prediction/dense_3/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variance_Prediction/dense_3/bias/Adam_1/read"
  op: "Identity"
  input: "Variance_Prediction/dense_3/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/Adam_1/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000475
      }
    }
  }
}
node {
  name: "train_op/Adam_1/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train_op/Adam_1/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train_op/Adam_1/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "train_op/Adam_1/update_Variance_Prediction/dense/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Variance_Prediction/dense/kernel"
  input: "Variance_Prediction/dense/kernel/Adam"
  input: "Variance_Prediction/dense/kernel/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam_1/learning_rate"
  input: "train_op/Adam_1/beta1"
  input: "train_op/Adam_1/beta2"
  input: "train_op/Adam_1/epsilon"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam_1/update_Variance_Prediction/dense/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Variance_Prediction/dense/bias"
  input: "Variance_Prediction/dense/bias/Adam"
  input: "Variance_Prediction/dense/bias/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam_1/learning_rate"
  input: "train_op/Adam_1/beta1"
  input: "train_op/Adam_1/beta2"
  input: "train_op/Adam_1/epsilon"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam_1/update_Variance_Prediction/dense_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Variance_Prediction/dense_1/kernel"
  input: "Variance_Prediction/dense_1/kernel/Adam"
  input: "Variance_Prediction/dense_1/kernel/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam_1/learning_rate"
  input: "train_op/Adam_1/beta1"
  input: "train_op/Adam_1/beta2"
  input: "train_op/Adam_1/epsilon"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam_1/update_Variance_Prediction/dense_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Variance_Prediction/dense_1/bias"
  input: "Variance_Prediction/dense_1/bias/Adam"
  input: "Variance_Prediction/dense_1/bias/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam_1/learning_rate"
  input: "train_op/Adam_1/beta1"
  input: "train_op/Adam_1/beta2"
  input: "train_op/Adam_1/epsilon"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam_1/update_Variance_Prediction/dense_2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Variance_Prediction/dense_2/kernel"
  input: "Variance_Prediction/dense_2/kernel/Adam"
  input: "Variance_Prediction/dense_2/kernel/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam_1/learning_rate"
  input: "train_op/Adam_1/beta1"
  input: "train_op/Adam_1/beta2"
  input: "train_op/Adam_1/epsilon"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_2/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam_1/update_Variance_Prediction/dense_2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Variance_Prediction/dense_2/bias"
  input: "Variance_Prediction/dense_2/bias/Adam"
  input: "Variance_Prediction/dense_2/bias/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam_1/learning_rate"
  input: "train_op/Adam_1/beta1"
  input: "train_op/Adam_1/beta2"
  input: "train_op/Adam_1/epsilon"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam_1/update_Variance_Prediction/dense_3/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Variance_Prediction/dense_3/kernel"
  input: "Variance_Prediction/dense_3/kernel/Adam"
  input: "Variance_Prediction/dense_3/kernel/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam_1/learning_rate"
  input: "train_op/Adam_1/beta1"
  input: "train_op/Adam_1/beta2"
  input: "train_op/Adam_1/epsilon"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_3/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam_1/update_Variance_Prediction/dense_3/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Variance_Prediction/dense_3/bias"
  input: "Variance_Prediction/dense_3/bias/Adam"
  input: "Variance_Prediction/dense_3/bias/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam_1/learning_rate"
  input: "train_op/Adam_1/beta1"
  input: "train_op/Adam_1/beta2"
  input: "train_op/Adam_1/epsilon"
  input: "train_op/gradients_1/pose_prediction/Variance_Prediction/dense_3/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam_1/mul"
  op: "Mul"
  input: "train_op/beta1_power/read"
  input: "train_op/Adam_1/beta1"
  input: "^train_op/Adam_1/update_Variance_Prediction/dense/kernel/ApplyAdam"
  input: "^train_op/Adam_1/update_Variance_Prediction/dense/bias/ApplyAdam"
  input: "^train_op/Adam_1/update_Variance_Prediction/dense_1/kernel/ApplyAdam"
  input: "^train_op/Adam_1/update_Variance_Prediction/dense_1/bias/ApplyAdam"
  input: "^train_op/Adam_1/update_Variance_Prediction/dense_2/kernel/ApplyAdam"
  input: "^train_op/Adam_1/update_Variance_Prediction/dense_2/bias/ApplyAdam"
  input: "^train_op/Adam_1/update_Variance_Prediction/dense_3/kernel/ApplyAdam"
  input: "^train_op/Adam_1/update_Variance_Prediction/dense_3/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/Adam_1/Assign"
  op: "Assign"
  input: "train_op/beta1_power"
  input: "train_op/Adam_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/Adam_1/mul_1"
  op: "Mul"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam_1/beta2"
  input: "^train_op/Adam_1/update_Variance_Prediction/dense/kernel/ApplyAdam"
  input: "^train_op/Adam_1/update_Variance_Prediction/dense/bias/ApplyAdam"
  input: "^train_op/Adam_1/update_Variance_Prediction/dense_1/kernel/ApplyAdam"
  input: "^train_op/Adam_1/update_Variance_Prediction/dense_1/bias/ApplyAdam"
  input: "^train_op/Adam_1/update_Variance_Prediction/dense_2/kernel/ApplyAdam"
  input: "^train_op/Adam_1/update_Variance_Prediction/dense_2/bias/ApplyAdam"
  input: "^train_op/Adam_1/update_Variance_Prediction/dense_3/kernel/ApplyAdam"
  input: "^train_op/Adam_1/update_Variance_Prediction/dense_3/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/Adam_1/Assign_1"
  op: "Assign"
  input: "train_op/beta2_power"
  input: "train_op/Adam_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/Adam_1"
  op: "NoOp"
  input: "^train_op/Adam_1/update_Variance_Prediction/dense/kernel/ApplyAdam"
  input: "^train_op/Adam_1/update_Variance_Prediction/dense/bias/ApplyAdam"
  input: "^train_op/Adam_1/update_Variance_Prediction/dense_1/kernel/ApplyAdam"
  input: "^train_op/Adam_1/update_Variance_Prediction/dense_1/bias/ApplyAdam"
  input: "^train_op/Adam_1/update_Variance_Prediction/dense_2/kernel/ApplyAdam"
  input: "^train_op/Adam_1/update_Variance_Prediction/dense_2/bias/ApplyAdam"
  input: "^train_op/Adam_1/update_Variance_Prediction/dense_3/kernel/ApplyAdam"
  input: "^train_op/Adam_1/update_Variance_Prediction/dense_3/bias/ApplyAdam"
  input: "^train_op/Adam_1/Assign"
  input: "^train_op/Adam_1/Assign_1"
}
node {
  name: "Mean_Prediction/dense/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\024\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Mean_Prediction/dense/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Mean_Prediction/dense/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Mean_Prediction/dense/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5120
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Mean_Prediction/dense/kernel/Adam/Assign"
  op: "Assign"
  input: "Mean_Prediction/dense/kernel/Adam"
  input: "Mean_Prediction/dense/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Mean_Prediction/dense/kernel/Adam/read"
  op: "Identity"
  input: "Mean_Prediction/dense/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\024\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Mean_Prediction/dense/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Mean_Prediction/dense/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Mean_Prediction/dense/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5120
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Mean_Prediction/dense/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Mean_Prediction/dense/kernel/Adam_1"
  input: "Mean_Prediction/dense/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Mean_Prediction/dense/kernel/Adam_1/read"
  op: "Identity"
  input: "Mean_Prediction/dense/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "Mean_Prediction/dense/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "Mean_Prediction/dense/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Mean_Prediction/dense/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Mean_Prediction/dense/bias/Adam/Assign"
  op: "Assign"
  input: "Mean_Prediction/dense/bias/Adam"
  input: "Mean_Prediction/dense/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Mean_Prediction/dense/bias/Adam/read"
  op: "Identity"
  input: "Mean_Prediction/dense/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Mean_Prediction/dense/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Mean_Prediction/dense/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Mean_Prediction/dense/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Mean_Prediction/dense/bias/Adam_1/Assign"
  op: "Assign"
  input: "Mean_Prediction/dense/bias/Adam_1"
  input: "Mean_Prediction/dense/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Mean_Prediction/dense/bias/Adam_1/read"
  op: "Identity"
  input: "Mean_Prediction/dense/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Mean_Prediction/dense_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Mean_Prediction/dense_1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/kernel/Adam/Assign"
  op: "Assign"
  input: "Mean_Prediction/dense_1/kernel/Adam"
  input: "Mean_Prediction/dense_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/kernel/Adam/read"
  op: "Identity"
  input: "Mean_Prediction/dense_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Mean_Prediction/dense_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Mean_Prediction/dense_1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Mean_Prediction/dense_1/kernel/Adam_1"
  input: "Mean_Prediction/dense_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/kernel/Adam_1/read"
  op: "Identity"
  input: "Mean_Prediction/dense_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "Mean_Prediction/dense_1/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "Mean_Prediction/dense_1/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/bias/Adam/Assign"
  op: "Assign"
  input: "Mean_Prediction/dense_1/bias/Adam"
  input: "Mean_Prediction/dense_1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/bias/Adam/read"
  op: "Identity"
  input: "Mean_Prediction/dense_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Mean_Prediction/dense_1/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Mean_Prediction/dense_1/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "Mean_Prediction/dense_1/bias/Adam_1"
  input: "Mean_Prediction/dense_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Mean_Prediction/dense_1/bias/Adam_1/read"
  op: "Identity"
  input: "Mean_Prediction/dense_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Mean_Prediction/dense_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Mean_Prediction/dense_2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/kernel/Adam/Assign"
  op: "Assign"
  input: "Mean_Prediction/dense_2/kernel/Adam"
  input: "Mean_Prediction/dense_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/kernel/Adam/read"
  op: "Identity"
  input: "Mean_Prediction/dense_2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Mean_Prediction/dense_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Mean_Prediction/dense_2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Mean_Prediction/dense_2/kernel/Adam_1"
  input: "Mean_Prediction/dense_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/kernel/Adam_1/read"
  op: "Identity"
  input: "Mean_Prediction/dense_2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "Mean_Prediction/dense_2/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "Mean_Prediction/dense_2/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/bias/Adam/Assign"
  op: "Assign"
  input: "Mean_Prediction/dense_2/bias/Adam"
  input: "Mean_Prediction/dense_2/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/bias/Adam/read"
  op: "Identity"
  input: "Mean_Prediction/dense_2/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Mean_Prediction/dense_2/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Mean_Prediction/dense_2/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/bias/Adam_1/Assign"
  op: "Assign"
  input: "Mean_Prediction/dense_2/bias/Adam_1"
  input: "Mean_Prediction/dense_2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Mean_Prediction/dense_2/bias/Adam_1/read"
  op: "Identity"
  input: "Mean_Prediction/dense_2/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Mean_Prediction/dense_3/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Mean_Prediction/dense_3/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/kernel/Adam/Assign"
  op: "Assign"
  input: "Mean_Prediction/dense_3/kernel/Adam"
  input: "Mean_Prediction/dense_3/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/kernel/Adam/read"
  op: "Identity"
  input: "Mean_Prediction/dense_3/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Mean_Prediction/dense_3/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Mean_Prediction/dense_3/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Mean_Prediction/dense_3/kernel/Adam_1"
  input: "Mean_Prediction/dense_3/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/kernel/Adam_1/read"
  op: "Identity"
  input: "Mean_Prediction/dense_3/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "Mean_Prediction/dense_3/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "Mean_Prediction/dense_3/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/bias/Adam/Assign"
  op: "Assign"
  input: "Mean_Prediction/dense_3/bias/Adam"
  input: "Mean_Prediction/dense_3/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/bias/Adam/read"
  op: "Identity"
  input: "Mean_Prediction/dense_3/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Mean_Prediction/dense_3/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Mean_Prediction/dense_3/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/bias/Adam_1/Assign"
  op: "Assign"
  input: "Mean_Prediction/dense_3/bias/Adam_1"
  input: "Mean_Prediction/dense_3/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Mean_Prediction/dense_3/bias/Adam_1/read"
  op: "Identity"
  input: "Mean_Prediction/dense_3/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "train_op/Adam_2/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000475
      }
    }
  }
}
node {
  name: "train_op/Adam_2/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train_op/Adam_2/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train_op/Adam_2/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "train_op/Adam_2/update_Mean_Prediction/dense/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Mean_Prediction/dense/kernel"
  input: "Mean_Prediction/dense/kernel/Adam"
  input: "Mean_Prediction/dense/kernel/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam_2/learning_rate"
  input: "train_op/Adam_2/beta1"
  input: "train_op/Adam_2/beta2"
  input: "train_op/Adam_2/epsilon"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam_2/update_Mean_Prediction/dense/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Mean_Prediction/dense/bias"
  input: "Mean_Prediction/dense/bias/Adam"
  input: "Mean_Prediction/dense/bias/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam_2/learning_rate"
  input: "train_op/Adam_2/beta1"
  input: "train_op/Adam_2/beta2"
  input: "train_op/Adam_2/epsilon"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam_2/update_Mean_Prediction/dense_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Mean_Prediction/dense_1/kernel"
  input: "Mean_Prediction/dense_1/kernel/Adam"
  input: "Mean_Prediction/dense_1/kernel/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam_2/learning_rate"
  input: "train_op/Adam_2/beta1"
  input: "train_op/Adam_2/beta2"
  input: "train_op/Adam_2/epsilon"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam_2/update_Mean_Prediction/dense_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Mean_Prediction/dense_1/bias"
  input: "Mean_Prediction/dense_1/bias/Adam"
  input: "Mean_Prediction/dense_1/bias/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam_2/learning_rate"
  input: "train_op/Adam_2/beta1"
  input: "train_op/Adam_2/beta2"
  input: "train_op/Adam_2/epsilon"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam_2/update_Mean_Prediction/dense_2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Mean_Prediction/dense_2/kernel"
  input: "Mean_Prediction/dense_2/kernel/Adam"
  input: "Mean_Prediction/dense_2/kernel/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam_2/learning_rate"
  input: "train_op/Adam_2/beta1"
  input: "train_op/Adam_2/beta2"
  input: "train_op/Adam_2/epsilon"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_2/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam_2/update_Mean_Prediction/dense_2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Mean_Prediction/dense_2/bias"
  input: "Mean_Prediction/dense_2/bias/Adam"
  input: "Mean_Prediction/dense_2/bias/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam_2/learning_rate"
  input: "train_op/Adam_2/beta1"
  input: "train_op/Adam_2/beta2"
  input: "train_op/Adam_2/epsilon"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam_2/update_Mean_Prediction/dense_3/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Mean_Prediction/dense_3/kernel"
  input: "Mean_Prediction/dense_3/kernel/Adam"
  input: "Mean_Prediction/dense_3/kernel/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam_2/learning_rate"
  input: "train_op/Adam_2/beta1"
  input: "train_op/Adam_2/beta2"
  input: "train_op/Adam_2/epsilon"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_3/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam_2/update_Mean_Prediction/dense_3/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Mean_Prediction/dense_3/bias"
  input: "Mean_Prediction/dense_3/bias/Adam"
  input: "Mean_Prediction/dense_3/bias/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam_2/learning_rate"
  input: "train_op/Adam_2/beta1"
  input: "train_op/Adam_2/beta2"
  input: "train_op/Adam_2/epsilon"
  input: "train_op/gradients_2/pose_prediction/Mean_Prediction/dense_3/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam_2/mul"
  op: "Mul"
  input: "train_op/beta1_power/read"
  input: "train_op/Adam_2/beta1"
  input: "^train_op/Adam_2/update_Mean_Prediction/dense/kernel/ApplyAdam"
  input: "^train_op/Adam_2/update_Mean_Prediction/dense/bias/ApplyAdam"
  input: "^train_op/Adam_2/update_Mean_Prediction/dense_1/kernel/ApplyAdam"
  input: "^train_op/Adam_2/update_Mean_Prediction/dense_1/bias/ApplyAdam"
  input: "^train_op/Adam_2/update_Mean_Prediction/dense_2/kernel/ApplyAdam"
  input: "^train_op/Adam_2/update_Mean_Prediction/dense_2/bias/ApplyAdam"
  input: "^train_op/Adam_2/update_Mean_Prediction/dense_3/kernel/ApplyAdam"
  input: "^train_op/Adam_2/update_Mean_Prediction/dense_3/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/Adam_2/Assign"
  op: "Assign"
  input: "train_op/beta1_power"
  input: "train_op/Adam_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/Adam_2/mul_1"
  op: "Mul"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam_2/beta2"
  input: "^train_op/Adam_2/update_Mean_Prediction/dense/kernel/ApplyAdam"
  input: "^train_op/Adam_2/update_Mean_Prediction/dense/bias/ApplyAdam"
  input: "^train_op/Adam_2/update_Mean_Prediction/dense_1/kernel/ApplyAdam"
  input: "^train_op/Adam_2/update_Mean_Prediction/dense_1/bias/ApplyAdam"
  input: "^train_op/Adam_2/update_Mean_Prediction/dense_2/kernel/ApplyAdam"
  input: "^train_op/Adam_2/update_Mean_Prediction/dense_2/bias/ApplyAdam"
  input: "^train_op/Adam_2/update_Mean_Prediction/dense_3/kernel/ApplyAdam"
  input: "^train_op/Adam_2/update_Mean_Prediction/dense_3/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/Adam_2/Assign_1"
  op: "Assign"
  input: "train_op/beta2_power"
  input: "train_op/Adam_2/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/Adam_2"
  op: "NoOp"
  input: "^train_op/Adam_2/update_Mean_Prediction/dense/kernel/ApplyAdam"
  input: "^train_op/Adam_2/update_Mean_Prediction/dense/bias/ApplyAdam"
  input: "^train_op/Adam_2/update_Mean_Prediction/dense_1/kernel/ApplyAdam"
  input: "^train_op/Adam_2/update_Mean_Prediction/dense_1/bias/ApplyAdam"
  input: "^train_op/Adam_2/update_Mean_Prediction/dense_2/kernel/ApplyAdam"
  input: "^train_op/Adam_2/update_Mean_Prediction/dense_2/bias/ApplyAdam"
  input: "^train_op/Adam_2/update_Mean_Prediction/dense_3/kernel/ApplyAdam"
  input: "^train_op/Adam_2/update_Mean_Prediction/dense_3/bias/ApplyAdam"
  input: "^train_op/Adam_2/Assign"
  input: "^train_op/Adam_2/Assign_1"
}
node {
  name: "train_loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_loss"
      }
    }
  }
}
node {
  name: "train_loss"
  op: "ScalarSummary"
  input: "train_loss/tags"
  input: "compute_loss/mean_squared_error/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mean_loss"
      }
    }
  }
}
node {
  name: "mean_loss"
  op: "ScalarSummary"
  input: "mean_loss/tags"
  input: "compute_loss/mean_squared_error/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "log_loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "log_loss"
      }
    }
  }
}
node {
  name: "log_loss"
  op: "ScalarSummary"
  input: "log_loss/tags"
  input: "compute_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "variance_norm/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "variance_norm"
      }
    }
  }
}
node {
  name: "variance_norm"
  op: "ScalarSummary"
  input: "variance_norm/tags"
  input: "compute_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "train_loss"
  input: "mean_loss"
  input: "log_loss"
  input: "variance_norm"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "validation_loss"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "Validation_Error/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Validation_Error"
      }
    }
  }
}
node {
  name: "Validation_Error"
  op: "ScalarSummary"
  input: "Validation_Error/tags"
  input: "validation_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "parameter_count/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod"
  op: "Prod"
  input: "parameter_count/Shape"
  input: "parameter_count/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "parameter_count/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_1"
  op: "Prod"
  input: "parameter_count/Shape_1"
  input: "parameter_count/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_2"
  op: "Prod"
  input: "parameter_count/Shape_2"
  input: "parameter_count/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "parameter_count/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_3"
  op: "Prod"
  input: "parameter_count/Shape_3"
  input: "parameter_count/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_4"
  op: "Prod"
  input: "parameter_count/Shape_4"
  input: "parameter_count/Const_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "parameter_count/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_5"
  op: "Prod"
  input: "parameter_count/Shape_5"
  input: "parameter_count/Const_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_6"
  op: "Prod"
  input: "parameter_count/Shape_6"
  input: "parameter_count/Const_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "parameter_count/Const_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_7"
  op: "Prod"
  input: "parameter_count/Shape_7"
  input: "parameter_count/Const_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_8"
  op: "Prod"
  input: "parameter_count/Shape_8"
  input: "parameter_count/Const_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "parameter_count/Const_9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_9"
  op: "Prod"
  input: "parameter_count/Shape_9"
  input: "parameter_count/Const_9"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_10"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_10"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_10"
  op: "Prod"
  input: "parameter_count/Shape_10"
  input: "parameter_count/Const_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_11"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "parameter_count/Const_11"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_11"
  op: "Prod"
  input: "parameter_count/Shape_11"
  input: "parameter_count/Const_11"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_12"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_12"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_12"
  op: "Prod"
  input: "parameter_count/Shape_12"
  input: "parameter_count/Const_12"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_13"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "parameter_count/Const_13"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_13"
  op: "Prod"
  input: "parameter_count/Shape_13"
  input: "parameter_count/Const_13"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_14"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_14"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_14"
  op: "Prod"
  input: "parameter_count/Shape_14"
  input: "parameter_count/Const_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_15"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "parameter_count/Const_15"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_15"
  op: "Prod"
  input: "parameter_count/Shape_15"
  input: "parameter_count/Const_15"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_16"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_16"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_16"
  op: "Prod"
  input: "parameter_count/Shape_16"
  input: "parameter_count/Const_16"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_17"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "parameter_count/Const_17"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_17"
  op: "Prod"
  input: "parameter_count/Shape_17"
  input: "parameter_count/Const_17"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_18"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_18"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_18"
  op: "Prod"
  input: "parameter_count/Shape_18"
  input: "parameter_count/Const_18"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_19"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "parameter_count/Const_19"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_19"
  op: "Prod"
  input: "parameter_count/Shape_19"
  input: "parameter_count/Const_19"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_20"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\024\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_20"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_20"
  op: "Prod"
  input: "parameter_count/Shape_20"
  input: "parameter_count/Const_20"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_21"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "parameter_count/Const_21"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_21"
  op: "Prod"
  input: "parameter_count/Shape_21"
  input: "parameter_count/Const_21"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_22"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_22"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_22"
  op: "Prod"
  input: "parameter_count/Shape_22"
  input: "parameter_count/Const_22"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_23"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "parameter_count/Const_23"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_23"
  op: "Prod"
  input: "parameter_count/Shape_23"
  input: "parameter_count/Const_23"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_24"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_24"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_24"
  op: "Prod"
  input: "parameter_count/Shape_24"
  input: "parameter_count/Const_24"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_25"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "parameter_count/Const_25"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_25"
  op: "Prod"
  input: "parameter_count/Shape_25"
  input: "parameter_count/Const_25"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_26"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_26"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_26"
  op: "Prod"
  input: "parameter_count/Shape_26"
  input: "parameter_count/Const_26"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_27"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "parameter_count/Const_27"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_27"
  op: "Prod"
  input: "parameter_count/Shape_27"
  input: "parameter_count/Const_27"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_28"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\024\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_28"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_28"
  op: "Prod"
  input: "parameter_count/Shape_28"
  input: "parameter_count/Const_28"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_29"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "parameter_count/Const_29"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_29"
  op: "Prod"
  input: "parameter_count/Shape_29"
  input: "parameter_count/Const_29"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_30"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_30"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_30"
  op: "Prod"
  input: "parameter_count/Shape_30"
  input: "parameter_count/Const_30"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_31"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "parameter_count/Const_31"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_31"
  op: "Prod"
  input: "parameter_count/Shape_31"
  input: "parameter_count/Const_31"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_32"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_32"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_32"
  op: "Prod"
  input: "parameter_count/Shape_32"
  input: "parameter_count/Const_32"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_33"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "parameter_count/Const_33"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_33"
  op: "Prod"
  input: "parameter_count/Shape_33"
  input: "parameter_count/Const_33"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_34"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_34"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_34"
  op: "Prod"
  input: "parameter_count/Shape_34"
  input: "parameter_count/Const_34"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_35"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "parameter_count/Const_35"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_35"
  op: "Prod"
  input: "parameter_count/Shape_35"
  input: "parameter_count/Const_35"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Rank/packed"
  op: "Pack"
  input: "parameter_count/Prod"
  input: "parameter_count/Prod_1"
  input: "parameter_count/Prod_2"
  input: "parameter_count/Prod_3"
  input: "parameter_count/Prod_4"
  input: "parameter_count/Prod_5"
  input: "parameter_count/Prod_6"
  input: "parameter_count/Prod_7"
  input: "parameter_count/Prod_8"
  input: "parameter_count/Prod_9"
  input: "parameter_count/Prod_10"
  input: "parameter_count/Prod_11"
  input: "parameter_count/Prod_12"
  input: "parameter_count/Prod_13"
  input: "parameter_count/Prod_14"
  input: "parameter_count/Prod_15"
  input: "parameter_count/Prod_16"
  input: "parameter_count/Prod_17"
  input: "parameter_count/Prod_18"
  input: "parameter_count/Prod_19"
  input: "parameter_count/Prod_20"
  input: "parameter_count/Prod_21"
  input: "parameter_count/Prod_22"
  input: "parameter_count/Prod_23"
  input: "parameter_count/Prod_24"
  input: "parameter_count/Prod_25"
  input: "parameter_count/Prod_26"
  input: "parameter_count/Prod_27"
  input: "parameter_count/Prod_28"
  input: "parameter_count/Prod_29"
  input: "parameter_count/Prod_30"
  input: "parameter_count/Prod_31"
  input: "parameter_count/Prod_32"
  input: "parameter_count/Prod_33"
  input: "parameter_count/Prod_34"
  input: "parameter_count/Prod_35"
  attr {
    key: "N"
    value {
      i: 36
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 36
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "parameter_count/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "parameter_count/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "parameter_count/range"
  op: "Range"
  input: "parameter_count/range/start"
  input: "parameter_count/Rank"
  input: "parameter_count/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "parameter_count/Sum/input"
  op: "Pack"
  input: "parameter_count/Prod"
  input: "parameter_count/Prod_1"
  input: "parameter_count/Prod_2"
  input: "parameter_count/Prod_3"
  input: "parameter_count/Prod_4"
  input: "parameter_count/Prod_5"
  input: "parameter_count/Prod_6"
  input: "parameter_count/Prod_7"
  input: "parameter_count/Prod_8"
  input: "parameter_count/Prod_9"
  input: "parameter_count/Prod_10"
  input: "parameter_count/Prod_11"
  input: "parameter_count/Prod_12"
  input: "parameter_count/Prod_13"
  input: "parameter_count/Prod_14"
  input: "parameter_count/Prod_15"
  input: "parameter_count/Prod_16"
  input: "parameter_count/Prod_17"
  input: "parameter_count/Prod_18"
  input: "parameter_count/Prod_19"
  input: "parameter_count/Prod_20"
  input: "parameter_count/Prod_21"
  input: "parameter_count/Prod_22"
  input: "parameter_count/Prod_23"
  input: "parameter_count/Prod_24"
  input: "parameter_count/Prod_25"
  input: "parameter_count/Prod_26"
  input: "parameter_count/Prod_27"
  input: "parameter_count/Prod_28"
  input: "parameter_count/Prod_29"
  input: "parameter_count/Prod_30"
  input: "parameter_count/Prod_31"
  input: "parameter_count/Prod_32"
  input: "parameter_count/Prod_33"
  input: "parameter_count/Prod_34"
  input: "parameter_count/Prod_35"
  attr {
    key: "N"
    value {
      i: 36
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 36
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "parameter_count/Sum"
  op: "Sum"
  input: "parameter_count/Sum/input"
  input: "parameter_count/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 37
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 37
          }
        }
        string_val: "CNN/conv2d/bias"
        string_val: "CNN/conv2d/kernel"
        string_val: "CNN/conv2d_1/bias"
        string_val: "CNN/conv2d_1/kernel"
        string_val: "CNN/conv2d_2/bias"
        string_val: "CNN/conv2d_2/kernel"
        string_val: "CNN/conv2d_3/bias"
        string_val: "CNN/conv2d_3/kernel"
        string_val: "CNN/conv2d_4/bias"
        string_val: "CNN/conv2d_4/kernel"
        string_val: "CNN/conv2d_5/bias"
        string_val: "CNN/conv2d_5/kernel"
        string_val: "CNN/conv2d_6/bias"
        string_val: "CNN/conv2d_6/kernel"
        string_val: "CNN/conv2d_7/bias"
        string_val: "CNN/conv2d_7/kernel"
        string_val: "CNN/conv2d_8/bias"
        string_val: "CNN/conv2d_8/kernel"
        string_val: "CNN/conv2d_9/bias"
        string_val: "CNN/conv2d_9/kernel"
        string_val: "Mean_Prediction/dense/bias"
        string_val: "Mean_Prediction/dense/kernel"
        string_val: "Mean_Prediction/dense_1/bias"
        string_val: "Mean_Prediction/dense_1/kernel"
        string_val: "Mean_Prediction/dense_2/bias"
        string_val: "Mean_Prediction/dense_2/kernel"
        string_val: "Mean_Prediction/dense_3/bias"
        string_val: "Mean_Prediction/dense_3/kernel"
        string_val: "Variance_Prediction/dense/bias"
        string_val: "Variance_Prediction/dense/kernel"
        string_val: "Variance_Prediction/dense_1/bias"
        string_val: "Variance_Prediction/dense_1/kernel"
        string_val: "Variance_Prediction/dense_2/bias"
        string_val: "Variance_Prediction/dense_2/kernel"
        string_val: "Variance_Prediction/dense_3/bias"
        string_val: "Variance_Prediction/dense_3/kernel"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 37
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 37
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "CNN/conv2d/bias"
  input: "CNN/conv2d/kernel"
  input: "CNN/conv2d_1/bias"
  input: "CNN/conv2d_1/kernel"
  input: "CNN/conv2d_2/bias"
  input: "CNN/conv2d_2/kernel"
  input: "CNN/conv2d_3/bias"
  input: "CNN/conv2d_3/kernel"
  input: "CNN/conv2d_4/bias"
  input: "CNN/conv2d_4/kernel"
  input: "CNN/conv2d_5/bias"
  input: "CNN/conv2d_5/kernel"
  input: "CNN/conv2d_6/bias"
  input: "CNN/conv2d_6/kernel"
  input: "CNN/conv2d_7/bias"
  input: "CNN/conv2d_7/kernel"
  input: "CNN/conv2d_8/bias"
  input: "CNN/conv2d_8/kernel"
  input: "CNN/conv2d_9/bias"
  input: "CNN/conv2d_9/kernel"
  input: "Mean_Prediction/dense/bias"
  input: "Mean_Prediction/dense/kernel"
  input: "Mean_Prediction/dense_1/bias"
  input: "Mean_Prediction/dense_1/kernel"
  input: "Mean_Prediction/dense_2/bias"
  input: "Mean_Prediction/dense_2/kernel"
  input: "Mean_Prediction/dense_3/bias"
  input: "Mean_Prediction/dense_3/kernel"
  input: "Variance_Prediction/dense/bias"
  input: "Variance_Prediction/dense/kernel"
  input: "Variance_Prediction/dense_1/bias"
  input: "Variance_Prediction/dense_1/kernel"
  input: "Variance_Prediction/dense_2/bias"
  input: "Variance_Prediction/dense_2/kernel"
  input: "Variance_Prediction/dense_3/bias"
  input: "Variance_Prediction/dense_3/kernel"
  input: "global_step"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 37
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 37
          }
        }
        string_val: "CNN/conv2d/bias"
        string_val: "CNN/conv2d/kernel"
        string_val: "CNN/conv2d_1/bias"
        string_val: "CNN/conv2d_1/kernel"
        string_val: "CNN/conv2d_2/bias"
        string_val: "CNN/conv2d_2/kernel"
        string_val: "CNN/conv2d_3/bias"
        string_val: "CNN/conv2d_3/kernel"
        string_val: "CNN/conv2d_4/bias"
        string_val: "CNN/conv2d_4/kernel"
        string_val: "CNN/conv2d_5/bias"
        string_val: "CNN/conv2d_5/kernel"
        string_val: "CNN/conv2d_6/bias"
        string_val: "CNN/conv2d_6/kernel"
        string_val: "CNN/conv2d_7/bias"
        string_val: "CNN/conv2d_7/kernel"
        string_val: "CNN/conv2d_8/bias"
        string_val: "CNN/conv2d_8/kernel"
        string_val: "CNN/conv2d_9/bias"
        string_val: "CNN/conv2d_9/kernel"
        string_val: "Mean_Prediction/dense/bias"
        string_val: "Mean_Prediction/dense/kernel"
        string_val: "Mean_Prediction/dense_1/bias"
        string_val: "Mean_Prediction/dense_1/kernel"
        string_val: "Mean_Prediction/dense_2/bias"
        string_val: "Mean_Prediction/dense_2/kernel"
        string_val: "Mean_Prediction/dense_3/bias"
        string_val: "Mean_Prediction/dense_3/kernel"
        string_val: "Variance_Prediction/dense/bias"
        string_val: "Variance_Prediction/dense/kernel"
        string_val: "Variance_Prediction/dense_1/bias"
        string_val: "Variance_Prediction/dense_1/kernel"
        string_val: "Variance_Prediction/dense_2/bias"
        string_val: "Variance_Prediction/dense_2/kernel"
        string_val: "Variance_Prediction/dense_3/bias"
        string_val: "Variance_Prediction/dense_3/kernel"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 37
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 37
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "CNN/conv2d/bias"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "CNN/conv2d/kernel"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "CNN/conv2d_1/bias"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "CNN/conv2d_1/kernel"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "CNN/conv2d_2/bias"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "CNN/conv2d_2/kernel"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "CNN/conv2d_3/bias"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "CNN/conv2d_3/kernel"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "CNN/conv2d_4/bias"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "CNN/conv2d_4/kernel"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "CNN/conv2d_5/bias"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "CNN/conv2d_5/kernel"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "CNN/conv2d_6/bias"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "CNN/conv2d_6/kernel"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "CNN/conv2d_7/bias"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "CNN/conv2d_7/kernel"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "CNN/conv2d_8/bias"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "CNN/conv2d_8/kernel"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "CNN/conv2d_9/bias"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "CNN/conv2d_9/kernel"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "Mean_Prediction/dense/bias"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "Mean_Prediction/dense/kernel"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "Mean_Prediction/dense_1/bias"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "Mean_Prediction/dense_1/kernel"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "Mean_Prediction/dense_2/bias"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "Mean_Prediction/dense_2/kernel"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "Mean_Prediction/dense_3/bias"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "Mean_Prediction/dense_3/kernel"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "Variance_Prediction/dense/bias"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "Variance_Prediction/dense/kernel"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5120
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "Variance_Prediction/dense_1/bias"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "Variance_Prediction/dense_1/kernel"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "Variance_Prediction/dense_2/bias"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "Variance_Prediction/dense_2/kernel"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "Variance_Prediction/dense_3/bias"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "Variance_Prediction/dense_3/kernel"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "CNN/conv2d/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "CNN/conv2d/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_3/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_3/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_4/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_4/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_5/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_5/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_6/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_6/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_7/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_7/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_8/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_8/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_9/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_9/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "Mean_Prediction/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "Mean_Prediction/dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "Mean_Prediction/dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "Mean_Prediction/dense_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "Mean_Prediction/dense_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "Mean_Prediction/dense_2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "Mean_Prediction/dense_3/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "Mean_Prediction/dense_3/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "Variance_Prediction/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "Variance_Prediction/dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "Variance_Prediction/dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "Variance_Prediction/dense_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "Variance_Prediction/dense_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "Variance_Prediction/dense_2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "Variance_Prediction/dense_3/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "Variance_Prediction/dense_3/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "train_op/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "train_op/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "CNN/conv2d/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "CNN/conv2d/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "CNN/conv2d/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "CNN/conv2d/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_3/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_3/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_3/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_3/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_4/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_4/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_4/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_4/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_5/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_5/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_5/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_5/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_6/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_6/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_6/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_6/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_7/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_7/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_7/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_7/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_8/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_8/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_8/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_8/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_9/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_9/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_9/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "CNN/conv2d_9/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv2d_9/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "Variance_Prediction/dense/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_80"
  op: "IsVariableInitialized"
  input: "Variance_Prediction/dense/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_81"
  op: "IsVariableInitialized"
  input: "Variance_Prediction/dense/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_82"
  op: "IsVariableInitialized"
  input: "Variance_Prediction/dense/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_83"
  op: "IsVariableInitialized"
  input: "Variance_Prediction/dense_1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_84"
  op: "IsVariableInitialized"
  input: "Variance_Prediction/dense_1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_85"
  op: "IsVariableInitialized"
  input: "Variance_Prediction/dense_1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_86"
  op: "IsVariableInitialized"
  input: "Variance_Prediction/dense_1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_87"
  op: "IsVariableInitialized"
  input: "Variance_Prediction/dense_2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_88"
  op: "IsVariableInitialized"
  input: "Variance_Prediction/dense_2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_89"
  op: "IsVariableInitialized"
  input: "Variance_Prediction/dense_2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_90"
  op: "IsVariableInitialized"
  input: "Variance_Prediction/dense_2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_91"
  op: "IsVariableInitialized"
  input: "Variance_Prediction/dense_3/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_92"
  op: "IsVariableInitialized"
  input: "Variance_Prediction/dense_3/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_93"
  op: "IsVariableInitialized"
  input: "Variance_Prediction/dense_3/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_94"
  op: "IsVariableInitialized"
  input: "Variance_Prediction/dense_3/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variance_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_95"
  op: "IsVariableInitialized"
  input: "Mean_Prediction/dense/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_96"
  op: "IsVariableInitialized"
  input: "Mean_Prediction/dense/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_97"
  op: "IsVariableInitialized"
  input: "Mean_Prediction/dense/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_98"
  op: "IsVariableInitialized"
  input: "Mean_Prediction/dense/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_99"
  op: "IsVariableInitialized"
  input: "Mean_Prediction/dense_1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_100"
  op: "IsVariableInitialized"
  input: "Mean_Prediction/dense_1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_101"
  op: "IsVariableInitialized"
  input: "Mean_Prediction/dense_1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_102"
  op: "IsVariableInitialized"
  input: "Mean_Prediction/dense_1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_103"
  op: "IsVariableInitialized"
  input: "Mean_Prediction/dense_2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_104"
  op: "IsVariableInitialized"
  input: "Mean_Prediction/dense_2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_105"
  op: "IsVariableInitialized"
  input: "Mean_Prediction/dense_2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_106"
  op: "IsVariableInitialized"
  input: "Mean_Prediction/dense_2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_107"
  op: "IsVariableInitialized"
  input: "Mean_Prediction/dense_3/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_108"
  op: "IsVariableInitialized"
  input: "Mean_Prediction/dense_3/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_109"
  op: "IsVariableInitialized"
  input: "Mean_Prediction/dense_3/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_110"
  op: "IsVariableInitialized"
  input: "Mean_Prediction/dense_3/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_Prediction/dense_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  input: "report_uninitialized_variables/IsVariableInitialized_27"
  input: "report_uninitialized_variables/IsVariableInitialized_28"
  input: "report_uninitialized_variables/IsVariableInitialized_29"
  input: "report_uninitialized_variables/IsVariableInitialized_30"
  input: "report_uninitialized_variables/IsVariableInitialized_31"
  input: "report_uninitialized_variables/IsVariableInitialized_32"
  input: "report_uninitialized_variables/IsVariableInitialized_33"
  input: "report_uninitialized_variables/IsVariableInitialized_34"
  input: "report_uninitialized_variables/IsVariableInitialized_35"
  input: "report_uninitialized_variables/IsVariableInitialized_36"
  input: "report_uninitialized_variables/IsVariableInitialized_37"
  input: "report_uninitialized_variables/IsVariableInitialized_38"
  input: "report_uninitialized_variables/IsVariableInitialized_39"
  input: "report_uninitialized_variables/IsVariableInitialized_40"
  input: "report_uninitialized_variables/IsVariableInitialized_41"
  input: "report_uninitialized_variables/IsVariableInitialized_42"
  input: "report_uninitialized_variables/IsVariableInitialized_43"
  input: "report_uninitialized_variables/IsVariableInitialized_44"
  input: "report_uninitialized_variables/IsVariableInitialized_45"
  input: "report_uninitialized_variables/IsVariableInitialized_46"
  input: "report_uninitialized_variables/IsVariableInitialized_47"
  input: "report_uninitialized_variables/IsVariableInitialized_48"
  input: "report_uninitialized_variables/IsVariableInitialized_49"
  input: "report_uninitialized_variables/IsVariableInitialized_50"
  input: "report_uninitialized_variables/IsVariableInitialized_51"
  input: "report_uninitialized_variables/IsVariableInitialized_52"
  input: "report_uninitialized_variables/IsVariableInitialized_53"
  input: "report_uninitialized_variables/IsVariableInitialized_54"
  input: "report_uninitialized_variables/IsVariableInitialized_55"
  input: "report_uninitialized_variables/IsVariableInitialized_56"
  input: "report_uninitialized_variables/IsVariableInitialized_57"
  input: "report_uninitialized_variables/IsVariableInitialized_58"
  input: "report_uninitialized_variables/IsVariableInitialized_59"
  input: "report_uninitialized_variables/IsVariableInitialized_60"
  input: "report_uninitialized_variables/IsVariableInitialized_61"
  input: "report_uninitialized_variables/IsVariableInitialized_62"
  input: "report_uninitialized_variables/IsVariableInitialized_63"
  input: "report_uninitialized_variables/IsVariableInitialized_64"
  input: "report_uninitialized_variables/IsVariableInitialized_65"
  input: "report_uninitialized_variables/IsVariableInitialized_66"
  input: "report_uninitialized_variables/IsVariableInitialized_67"
  input: "report_uninitialized_variables/IsVariableInitialized_68"
  input: "report_uninitialized_variables/IsVariableInitialized_69"
  input: "report_uninitialized_variables/IsVariableInitialized_70"
  input: "report_uninitialized_variables/IsVariableInitialized_71"
  input: "report_uninitialized_variables/IsVariableInitialized_72"
  input: "report_uninitialized_variables/IsVariableInitialized_73"
  input: "report_uninitialized_variables/IsVariableInitialized_74"
  input: "report_uninitialized_variables/IsVariableInitialized_75"
  input: "report_uninitialized_variables/IsVariableInitialized_76"
  input: "report_uninitialized_variables/IsVariableInitialized_77"
  input: "report_uninitialized_variables/IsVariableInitialized_78"
  input: "report_uninitialized_variables/IsVariableInitialized_79"
  input: "report_uninitialized_variables/IsVariableInitialized_80"
  input: "report_uninitialized_variables/IsVariableInitialized_81"
  input: "report_uninitialized_variables/IsVariableInitialized_82"
  input: "report_uninitialized_variables/IsVariableInitialized_83"
  input: "report_uninitialized_variables/IsVariableInitialized_84"
  input: "report_uninitialized_variables/IsVariableInitialized_85"
  input: "report_uninitialized_variables/IsVariableInitialized_86"
  input: "report_uninitialized_variables/IsVariableInitialized_87"
  input: "report_uninitialized_variables/IsVariableInitialized_88"
  input: "report_uninitialized_variables/IsVariableInitialized_89"
  input: "report_uninitialized_variables/IsVariableInitialized_90"
  input: "report_uninitialized_variables/IsVariableInitialized_91"
  input: "report_uninitialized_variables/IsVariableInitialized_92"
  input: "report_uninitialized_variables/IsVariableInitialized_93"
  input: "report_uninitialized_variables/IsVariableInitialized_94"
  input: "report_uninitialized_variables/IsVariableInitialized_95"
  input: "report_uninitialized_variables/IsVariableInitialized_96"
  input: "report_uninitialized_variables/IsVariableInitialized_97"
  input: "report_uninitialized_variables/IsVariableInitialized_98"
  input: "report_uninitialized_variables/IsVariableInitialized_99"
  input: "report_uninitialized_variables/IsVariableInitialized_100"
  input: "report_uninitialized_variables/IsVariableInitialized_101"
  input: "report_uninitialized_variables/IsVariableInitialized_102"
  input: "report_uninitialized_variables/IsVariableInitialized_103"
  input: "report_uninitialized_variables/IsVariableInitialized_104"
  input: "report_uninitialized_variables/IsVariableInitialized_105"
  input: "report_uninitialized_variables/IsVariableInitialized_106"
  input: "report_uninitialized_variables/IsVariableInitialized_107"
  input: "report_uninitialized_variables/IsVariableInitialized_108"
  input: "report_uninitialized_variables/IsVariableInitialized_109"
  input: "report_uninitialized_variables/IsVariableInitialized_110"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 111
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 111
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 111
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 111
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 111
          }
        }
        string_val: "global_step"
        string_val: "CNN/conv2d/kernel"
        string_val: "CNN/conv2d/bias"
        string_val: "CNN/conv2d_1/kernel"
        string_val: "CNN/conv2d_1/bias"
        string_val: "CNN/conv2d_2/kernel"
        string_val: "CNN/conv2d_2/bias"
        string_val: "CNN/conv2d_3/kernel"
        string_val: "CNN/conv2d_3/bias"
        string_val: "CNN/conv2d_4/kernel"
        string_val: "CNN/conv2d_4/bias"
        string_val: "CNN/conv2d_5/kernel"
        string_val: "CNN/conv2d_5/bias"
        string_val: "CNN/conv2d_6/kernel"
        string_val: "CNN/conv2d_6/bias"
        string_val: "CNN/conv2d_7/kernel"
        string_val: "CNN/conv2d_7/bias"
        string_val: "CNN/conv2d_8/kernel"
        string_val: "CNN/conv2d_8/bias"
        string_val: "CNN/conv2d_9/kernel"
        string_val: "CNN/conv2d_9/bias"
        string_val: "Mean_Prediction/dense/kernel"
        string_val: "Mean_Prediction/dense/bias"
        string_val: "Mean_Prediction/dense_1/kernel"
        string_val: "Mean_Prediction/dense_1/bias"
        string_val: "Mean_Prediction/dense_2/kernel"
        string_val: "Mean_Prediction/dense_2/bias"
        string_val: "Mean_Prediction/dense_3/kernel"
        string_val: "Mean_Prediction/dense_3/bias"
        string_val: "Variance_Prediction/dense/kernel"
        string_val: "Variance_Prediction/dense/bias"
        string_val: "Variance_Prediction/dense_1/kernel"
        string_val: "Variance_Prediction/dense_1/bias"
        string_val: "Variance_Prediction/dense_2/kernel"
        string_val: "Variance_Prediction/dense_2/bias"
        string_val: "Variance_Prediction/dense_3/kernel"
        string_val: "Variance_Prediction/dense_3/bias"
        string_val: "train_op/beta1_power"
        string_val: "train_op/beta2_power"
        string_val: "CNN/conv2d/kernel/Adam"
        string_val: "CNN/conv2d/kernel/Adam_1"
        string_val: "CNN/conv2d/bias/Adam"
        string_val: "CNN/conv2d/bias/Adam_1"
        string_val: "CNN/conv2d_1/kernel/Adam"
        string_val: "CNN/conv2d_1/kernel/Adam_1"
        string_val: "CNN/conv2d_1/bias/Adam"
        string_val: "CNN/conv2d_1/bias/Adam_1"
        string_val: "CNN/conv2d_2/kernel/Adam"
        string_val: "CNN/conv2d_2/kernel/Adam_1"
        string_val: "CNN/conv2d_2/bias/Adam"
        string_val: "CNN/conv2d_2/bias/Adam_1"
        string_val: "CNN/conv2d_3/kernel/Adam"
        string_val: "CNN/conv2d_3/kernel/Adam_1"
        string_val: "CNN/conv2d_3/bias/Adam"
        string_val: "CNN/conv2d_3/bias/Adam_1"
        string_val: "CNN/conv2d_4/kernel/Adam"
        string_val: "CNN/conv2d_4/kernel/Adam_1"
        string_val: "CNN/conv2d_4/bias/Adam"
        string_val: "CNN/conv2d_4/bias/Adam_1"
        string_val: "CNN/conv2d_5/kernel/Adam"
        string_val: "CNN/conv2d_5/kernel/Adam_1"
        string_val: "CNN/conv2d_5/bias/Adam"
        string_val: "CNN/conv2d_5/bias/Adam_1"
        string_val: "CNN/conv2d_6/kernel/Adam"
        string_val: "CNN/conv2d_6/kernel/Adam_1"
        string_val: "CNN/conv2d_6/bias/Adam"
        string_val: "CNN/conv2d_6/bias/Adam_1"
        string_val: "CNN/conv2d_7/kernel/Adam"
        string_val: "CNN/conv2d_7/kernel/Adam_1"
        string_val: "CNN/conv2d_7/bias/Adam"
        string_val: "CNN/conv2d_7/bias/Adam_1"
        string_val: "CNN/conv2d_8/kernel/Adam"
        string_val: "CNN/conv2d_8/kernel/Adam_1"
        string_val: "CNN/conv2d_8/bias/Adam"
        string_val: "CNN/conv2d_8/bias/Adam_1"
        string_val: "CNN/conv2d_9/kernel/Adam"
        string_val: "CNN/conv2d_9/kernel/Adam_1"
        string_val: "CNN/conv2d_9/bias/Adam"
        string_val: "CNN/conv2d_9/bias/Adam_1"
        string_val: "Variance_Prediction/dense/kernel/Adam"
        string_val: "Variance_Prediction/dense/kernel/Adam_1"
        string_val: "Variance_Prediction/dense/bias/Adam"
        string_val: "Variance_Prediction/dense/bias/Adam_1"
        string_val: "Variance_Prediction/dense_1/kernel/Adam"
        string_val: "Variance_Prediction/dense_1/kernel/Adam_1"
        string_val: "Variance_Prediction/dense_1/bias/Adam"
        string_val: "Variance_Prediction/dense_1/bias/Adam_1"
        string_val: "Variance_Prediction/dense_2/kernel/Adam"
        string_val: "Variance_Prediction/dense_2/kernel/Adam_1"
        string_val: "Variance_Prediction/dense_2/bias/Adam"
        string_val: "Variance_Prediction/dense_2/bias/Adam_1"
        string_val: "Variance_Prediction/dense_3/kernel/Adam"
        string_val: "Variance_Prediction/dense_3/kernel/Adam_1"
        string_val: "Variance_Prediction/dense_3/bias/Adam"
        string_val: "Variance_Prediction/dense_3/bias/Adam_1"
        string_val: "Mean_Prediction/dense/kernel/Adam"
        string_val: "Mean_Prediction/dense/kernel/Adam_1"
        string_val: "Mean_Prediction/dense/bias/Adam"
        string_val: "Mean_Prediction/dense/bias/Adam_1"
        string_val: "Mean_Prediction/dense_1/kernel/Adam"
        string_val: "Mean_Prediction/dense_1/kernel/Adam_1"
        string_val: "Mean_Prediction/dense_1/bias/Adam"
        string_val: "Mean_Prediction/dense_1/bias/Adam_1"
        string_val: "Mean_Prediction/dense_2/kernel/Adam"
        string_val: "Mean_Prediction/dense_2/kernel/Adam_1"
        string_val: "Mean_Prediction/dense_2/bias/Adam"
        string_val: "Mean_Prediction/dense_2/bias/Adam_1"
        string_val: "Mean_Prediction/dense_3/kernel/Adam"
        string_val: "Mean_Prediction/dense_3/kernel/Adam_1"
        string_val: "Mean_Prediction/dense_3/bias/Adam"
        string_val: "Mean_Prediction/dense_3/bias/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 111
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 111
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 111
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 111
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 111
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^CNN/conv2d/kernel/Assign"
  input: "^CNN/conv2d/bias/Assign"
  input: "^CNN/conv2d_1/kernel/Assign"
  input: "^CNN/conv2d_1/bias/Assign"
  input: "^CNN/conv2d_2/kernel/Assign"
  input: "^CNN/conv2d_2/bias/Assign"
  input: "^CNN/conv2d_3/kernel/Assign"
  input: "^CNN/conv2d_3/bias/Assign"
  input: "^CNN/conv2d_4/kernel/Assign"
  input: "^CNN/conv2d_4/bias/Assign"
  input: "^CNN/conv2d_5/kernel/Assign"
  input: "^CNN/conv2d_5/bias/Assign"
  input: "^CNN/conv2d_6/kernel/Assign"
  input: "^CNN/conv2d_6/bias/Assign"
  input: "^CNN/conv2d_7/kernel/Assign"
  input: "^CNN/conv2d_7/bias/Assign"
  input: "^CNN/conv2d_8/kernel/Assign"
  input: "^CNN/conv2d_8/bias/Assign"
  input: "^CNN/conv2d_9/kernel/Assign"
  input: "^CNN/conv2d_9/bias/Assign"
  input: "^Mean_Prediction/dense/kernel/Assign"
  input: "^Mean_Prediction/dense/bias/Assign"
  input: "^Mean_Prediction/dense_1/kernel/Assign"
  input: "^Mean_Prediction/dense_1/bias/Assign"
  input: "^Mean_Prediction/dense_2/kernel/Assign"
  input: "^Mean_Prediction/dense_2/bias/Assign"
  input: "^Mean_Prediction/dense_3/kernel/Assign"
  input: "^Mean_Prediction/dense_3/bias/Assign"
  input: "^Variance_Prediction/dense/kernel/Assign"
  input: "^Variance_Prediction/dense/bias/Assign"
  input: "^Variance_Prediction/dense_1/kernel/Assign"
  input: "^Variance_Prediction/dense_1/bias/Assign"
  input: "^Variance_Prediction/dense_2/kernel/Assign"
  input: "^Variance_Prediction/dense_2/bias/Assign"
  input: "^Variance_Prediction/dense_3/kernel/Assign"
  input: "^Variance_Prediction/dense_3/bias/Assign"
  input: "^train_op/beta1_power/Assign"
  input: "^train_op/beta2_power/Assign"
  input: "^CNN/conv2d/kernel/Adam/Assign"
  input: "^CNN/conv2d/kernel/Adam_1/Assign"
  input: "^CNN/conv2d/bias/Adam/Assign"
  input: "^CNN/conv2d/bias/Adam_1/Assign"
  input: "^CNN/conv2d_1/kernel/Adam/Assign"
  input: "^CNN/conv2d_1/kernel/Adam_1/Assign"
  input: "^CNN/conv2d_1/bias/Adam/Assign"
  input: "^CNN/conv2d_1/bias/Adam_1/Assign"
  input: "^CNN/conv2d_2/kernel/Adam/Assign"
  input: "^CNN/conv2d_2/kernel/Adam_1/Assign"
  input: "^CNN/conv2d_2/bias/Adam/Assign"
  input: "^CNN/conv2d_2/bias/Adam_1/Assign"
  input: "^CNN/conv2d_3/kernel/Adam/Assign"
  input: "^CNN/conv2d_3/kernel/Adam_1/Assign"
  input: "^CNN/conv2d_3/bias/Adam/Assign"
  input: "^CNN/conv2d_3/bias/Adam_1/Assign"
  input: "^CNN/conv2d_4/kernel/Adam/Assign"
  input: "^CNN/conv2d_4/kernel/Adam_1/Assign"
  input: "^CNN/conv2d_4/bias/Adam/Assign"
  input: "^CNN/conv2d_4/bias/Adam_1/Assign"
  input: "^CNN/conv2d_5/kernel/Adam/Assign"
  input: "^CNN/conv2d_5/kernel/Adam_1/Assign"
  input: "^CNN/conv2d_5/bias/Adam/Assign"
  input: "^CNN/conv2d_5/bias/Adam_1/Assign"
  input: "^CNN/conv2d_6/kernel/Adam/Assign"
  input: "^CNN/conv2d_6/kernel/Adam_1/Assign"
  input: "^CNN/conv2d_6/bias/Adam/Assign"
  input: "^CNN/conv2d_6/bias/Adam_1/Assign"
  input: "^CNN/conv2d_7/kernel/Adam/Assign"
  input: "^CNN/conv2d_7/kernel/Adam_1/Assign"
  input: "^CNN/conv2d_7/bias/Adam/Assign"
  input: "^CNN/conv2d_7/bias/Adam_1/Assign"
  input: "^CNN/conv2d_8/kernel/Adam/Assign"
  input: "^CNN/conv2d_8/kernel/Adam_1/Assign"
  input: "^CNN/conv2d_8/bias/Adam/Assign"
  input: "^CNN/conv2d_8/bias/Adam_1/Assign"
  input: "^CNN/conv2d_9/kernel/Adam/Assign"
  input: "^CNN/conv2d_9/kernel/Adam_1/Assign"
  input: "^CNN/conv2d_9/bias/Adam/Assign"
  input: "^CNN/conv2d_9/bias/Adam_1/Assign"
  input: "^Variance_Prediction/dense/kernel/Adam/Assign"
  input: "^Variance_Prediction/dense/kernel/Adam_1/Assign"
  input: "^Variance_Prediction/dense/bias/Adam/Assign"
  input: "^Variance_Prediction/dense/bias/Adam_1/Assign"
  input: "^Variance_Prediction/dense_1/kernel/Adam/Assign"
  input: "^Variance_Prediction/dense_1/kernel/Adam_1/Assign"
  input: "^Variance_Prediction/dense_1/bias/Adam/Assign"
  input: "^Variance_Prediction/dense_1/bias/Adam_1/Assign"
  input: "^Variance_Prediction/dense_2/kernel/Adam/Assign"
  input: "^Variance_Prediction/dense_2/kernel/Adam_1/Assign"
  input: "^Variance_Prediction/dense_2/bias/Adam/Assign"
  input: "^Variance_Prediction/dense_2/bias/Adam_1/Assign"
  input: "^Variance_Prediction/dense_3/kernel/Adam/Assign"
  input: "^Variance_Prediction/dense_3/kernel/Adam_1/Assign"
  input: "^Variance_Prediction/dense_3/bias/Adam/Assign"
  input: "^Variance_Prediction/dense_3/bias/Adam_1/Assign"
  input: "^Mean_Prediction/dense/kernel/Adam/Assign"
  input: "^Mean_Prediction/dense/kernel/Adam_1/Assign"
  input: "^Mean_Prediction/dense/bias/Adam/Assign"
  input: "^Mean_Prediction/dense/bias/Adam_1/Assign"
  input: "^Mean_Prediction/dense_1/kernel/Adam/Assign"
  input: "^Mean_Prediction/dense_1/kernel/Adam_1/Assign"
  input: "^Mean_Prediction/dense_1/bias/Adam/Assign"
  input: "^Mean_Prediction/dense_1/bias/Adam_1/Assign"
  input: "^Mean_Prediction/dense_2/kernel/Adam/Assign"
  input: "^Mean_Prediction/dense_2/kernel/Adam_1/Assign"
  input: "^Mean_Prediction/dense_2/bias/Adam/Assign"
  input: "^Mean_Prediction/dense_2/bias/Adam_1/Assign"
  input: "^Mean_Prediction/dense_3/kernel/Adam/Assign"
  input: "^Mean_Prediction/dense_3/kernel/Adam_1/Assign"
  input: "^Mean_Prediction/dense_3/bias/Adam/Assign"
  input: "^Mean_Prediction/dense_3/bias/Adam_1/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init_1"
  input: "^init_all_tables"
}
node {
  name: "Merge_1/MergeSummary"
  op: "MergeSummary"
  input: "train_loss"
  input: "mean_loss"
  input: "log_loss"
  input: "variance_norm"
  input: "Validation_Error"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
library {
  function {
    signature {
      name: "tf_map_func_bc3912a3"
      input_arg {
        name: "arg0"
        type: DT_STRING
      }
      input_arg {
        name: "arg1"
        type: DT_FLOAT
      }
      output_arg {
        name: "truediv"
        type: DT_FLOAT
      }
      output_arg {
        name: "arg1"
        type: DT_FLOAT
      }
      description: "A wrapper for Defun that facilitates shape inference."
    }
    node_def {
      name: "ReadFile"
      op: "ReadFile"
      input: "arg0"
    }
    node_def {
      name: "DecodePng"
      op: "DecodePng"
      input: "ReadFile:contents:0"
      attr {
        key: "channels"
        value {
          i: 3
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_UINT8
        }
      }
    }
    node_def {
      name: "resize_images/ExpandDims/dim"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "resize_images/ExpandDims"
      op: "ExpandDims"
      input: "DecodePng:image:0"
      input: "resize_images/ExpandDims/dim:output:0"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "resize_images/size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\360\000\000\000@\001\000\000"
          }
        }
      }
    }
    node_def {
      name: "resize_images/ResizeBilinear"
      op: "ResizeBilinear"
      input: "resize_images/ExpandDims:output:0"
      input: "resize_images/size:output:0"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "align_corners"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "resize_images/Squeeze"
      op: "Squeeze"
      input: "resize_images/ResizeBilinear:resized_images:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
            i: 0
          }
        }
      }
    }
    node_def {
      name: "truediv/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 255.0
          }
        }
      }
    }
    node_def {
      name: "truediv"
      op: "RealDiv"
      input: "resize_images/Squeeze:output:0"
      input: "truediv/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    ret {
      key: "arg1"
      value: "arg1"
    }
    ret {
      key: "truediv"
      value: "truediv:z:0"
    }
  }
}
versions {
  producer: 26
  min_consumer: 12
}
